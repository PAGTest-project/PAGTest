[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class BulgarianIdNumber_generateInvalidTest {\n    private BulgarianIdNumber generator;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        generator = new BulgarianIdNumber();\n        faker = mock(BaseProviders.class);\n    }\n\n    @Test\n    public void testGenerateInvalid() {\n        // Given\n        when(faker.timeAndDate().birthday()).thenReturn(java.time.LocalDate.of(1980, 3, 20));\n        when(faker.number().numberBetween(0, 5)).thenReturn(2);\n        when(faker.number().digits(2)).thenReturn(\"05\");\n\n        // When\n        String invalidIdNumber = generator.generateInvalid(faker);\n\n        // Then\n        assertEquals(\"800320053\", invalidIdNumber);\n    }\n}\n"}]