[{"strategy": "retry", "code": "\npackage net.datafaker.providers.videogame;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\nimport net.datafaker.providers.base.BaseFaker;\n\npublic class Hearthstone_standardRankTest {\n\n    private Hearthstone hearthstone;\n    private BaseFaker faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = mock(BaseFaker.class);\n        hearthstone = new Hearthstone(faker);\n    }\n\n    @Test\n    public void testStandardRankLegend() {\n        when(faker.resolve(\"games.hearthstone.rank\")).thenReturn(\"Legend\");\n        when(faker.random().nextInt(1, 65000)).thenReturn(12345);\n\n        String rank = hearthstone.standardRank();\n        assertTrue(rank.startsWith(\"Legend 12345\"));\n    }\n\n    @Test\n    public void testStandardRankNonLegend() {\n        when(faker.resolve(\"games.hearthstone.rank\")).thenReturn(\"Rank\");\n        when(faker.random().nextInt(1, 10)).thenReturn(5);\n\n        String rank = hearthstone.standardRank();\n        assertTrue(rank.startsWith(\"Rank 5\"));\n    }\n}\n"}]