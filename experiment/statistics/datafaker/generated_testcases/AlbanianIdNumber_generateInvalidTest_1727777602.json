[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class AlbanianIdNumber_generateInvalidTest {\n    private AlbanianIdNumber generator;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        generator = new AlbanianIdNumber();\n        faker = mock(BaseProviders.class);\n    }\n\n    @Test\n    void testGenerateInvalid() {\n        // Given\n        String validPin = \"1234567890\";\n        when(faker.number().numberBetween(93, 99)).thenReturn(95);\n        when(generator.generateValid(faker)).thenReturn(validPin);\n\n        // When\n        String invalidPin = generator.generateInvalid(faker);\n\n        // Then\n        assertTrue(invalidPin.startsWith(validPin.substring(0, 2)));\n        assertTrue(invalidPin.endsWith(validPin.substring(4)));\n        assertTrue(invalidPin.contains(\"95\"));\n    }\n}\n"}]