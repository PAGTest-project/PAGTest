[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.Faker;\nimport net.datafaker.idnumbers.IdNumberGenerator;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Locale;\n\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\npublic class IdNumber_invalidTest {\n\n    private IdNumber idNumber;\n    private Faker faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = new Faker(new Locale(\"en\", \"US\"));\n        idNumber = new IdNumber(faker);\n    }\n\n    @Test\n    public void testInvalidWithCountryProvider() {\n        IdNumberGenerator mockGenerator = mock(IdNumberGenerator.class);\n        when(mockGenerator.generateInvalid(faker)).thenReturn(\"invalidId\");\n        idNumber.countryProviders.put(\"US\", mockGenerator);\n\n        String result = idNumber.invalid();\n        assertNotNull(result);\n    }\n\n    @Test\n    public void testInvalidWithoutCountryProvider() {\n        Faker mockFaker = mock(Faker.class);\n        when(mockFaker.numerify(mockFaker.resolve(\"id_number.invalid\"))).thenReturn(\"invalidId\");\n        idNumber = new IdNumber(mockFaker);\n\n        String result = idNumber.invalid();\n        assertNotNull(result);\n    }\n}\n"}]