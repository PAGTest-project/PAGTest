[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.mockito.Mockito.*;\n\nimport java.nio.ByteBuffer;\nimport java.nio.MappedByteBuffer;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Nation_flagTest {\n\n    private Nation nation;\n    private BaseProviders faker;\n    private FakeValuesService fakeValuesService;\n\n    @BeforeEach\n    public void setUp() {\n        faker = mock(BaseProviders.class);\n        fakeValuesService = mock(FakeValuesService.class);\n        when(faker.fakeValuesService()).thenReturn(fakeValuesService);\n        nation = new Nation(faker);\n    }\n\n    @Test\n    public void testFlag() {\n        // Given\n        List<Integer> flagInts = Arrays.asList(72, 101, 108, 108, 111); // \"Hello\" in ASCII\n        when(fakeValuesService.fetch(\"nation.flag\", any())).thenReturn(flagInts);\n\n        // When\n        String result = nation.flag();\n\n        // Then\n        assertThat(result).isEqualTo(\"Hello\");\n    }\n}\n"}]