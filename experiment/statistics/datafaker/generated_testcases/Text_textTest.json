[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Text_textTest {\n\n    private Text text;\n\n    @BeforeEach\n    public void setUp() {\n        text = new Text(new BaseProviders() {});\n    }\n\n    @Test\n    void testTextWithAllOptions() {\n        String result = text.text(5, 10, true, true, true);\n        assertTrue(result.length() >= 5 && result.length() <= 10);\n        assertTrue(result.matches(\".*[A-Z].*\"));\n        assertTrue(result.matches(\".*[!@#$%^&*].*\"));\n        assertTrue(result.matches(\".*[0-9].*\"));\n    }\n\n    @Test\n    void testTextWithNoOptions() {\n        String result = text.text(5, 10, false, false, false);\n        assertTrue(result.length() >= 5 && result.length() <= 10);\n        assertTrue(result.matches(\"^[a-z]*$\"));\n    }\n\n    @Test\n    void testTextWithOnlyUppercase() {\n        String result = text.text(5, 10, true, false, false);\n        assertTrue(result.length() >= 5 && result.length() <= 10);\n        assertTrue(result.matches(\".*[A-Z].*\"));\n    }\n\n    @Test\n    void testTextWithOnlySpecial() {\n        String result = text.text(5, 10, false, true, false);\n        assertTrue(result.length() >= 5 && result.length() <= 10);\n        assertTrue(result.matches(\".*[!@#$%^&*].*\"));\n    }\n\n    @Test\n    void testTextWithOnlyDigit() {\n        String result = text.text(5, 10, false, false, true);\n        assertTrue(result.length() >= 5 && result.length() <= 10);\n        assertTrue(result.matches(\".*[0-9].*\"));\n    }\n}\n"}]