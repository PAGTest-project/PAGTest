[{"strategy": "retry", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Random;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.Mockito.when;\n\npublic class RandomService_nextLongTest {\n\n    private RandomService randomService;\n    private Random mockRandom;\n\n    @BeforeEach\n    public void setUp() {\n        mockRandom = Mockito.mock(Random.class);\n        randomService = new RandomService(mockRandom);\n    }\n\n    @Test\n    public void testNextLongWithPositiveBound() {\n        when(mockRandom.nextLong()).thenReturn(1234567890L);\n        long result = randomService.nextLong(100L);\n        assertEquals(90L, result);\n    }\n\n    @Test\n    public void testNextLongWithNonPositiveBound() {\n        assertThrows(IllegalArgumentException.class, () -> randomService.nextLong(0L));\n    }\n}\n"}]