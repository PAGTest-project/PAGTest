[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class File_fileNameTest {\n\n    private File file;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = mock(BaseProviders.class);\n        file = new File(faker);\n    }\n\n    @Test\n    public void testFileNameWithAllNulls() {\n        when(faker.internet().slug()).thenReturn(\"defaultDir\");\n        when(faker.lorem().word()).thenReturn(\"defaultName\");\n        when(file.extension()).thenReturn(\"defaultExt\");\n\n        String expected = \"defaultDir\" + System.getProperty(\"file.separator\") + \"defaultname.defaultExt\";\n        assertEquals(expected, file.fileName(null, null, null, null));\n    }\n\n    @Test\n    public void testFileNameWithCustomValues() {\n        String expected = \"customDir\" + System.getProperty(\"file.separator\") + \"customName.customExt\";\n        assertEquals(expected, file.fileName(\"customDir\", \"customName\", \"customExt\", null));\n    }\n\n    @Test\n    public void testFileNameWithCustomSeparator() {\n        String expected = \"customDir/customName.customExt\";\n        assertEquals(expected, file.fileName(\"customDir\", \"customName\", \"customExt\", \"/\"));\n    }\n}\n"}]