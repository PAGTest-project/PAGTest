[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport net.datafaker.service.RandomService;\nimport net.datafaker.service.FakerContext;\n\npublic class Internet_ipV6CidrTest {\n\n    @Test\n    public void testIpV6Cidr() {\n        Internet internet = new Internet(new BaseProviders() {\n            @Override\n            public RandomService random() {\n                return new RandomService() {\n                    @Override\n                    public int nextInt(int bound) {\n                        return 1; // Ensure predictable output for testing\n                    }\n                };\n            }\n\n            @Override\n            public Name name() {\n                return new Name() {\n                    @Override\n                    public String firstName() {\n                        return \"test\";\n                    }\n\n                    @Override\n                    public String lastName() {\n                        return \"user\";\n                    }\n                };\n            }\n\n            @Override\n            public String resolve(String key) {\n                return \"example.com\";\n            }\n\n            @Override\n            public FakerContext getContext() {\n                return new FakerContext() {\n                    @Override\n                    public java.util.Locale getLocale() {\n                        return java.util.Locale.getDefault();\n                    }\n                };\n            }\n        });\n\n        String result = internet.ipV6Cidr();\n        assertTrue(result.matches(\"([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}/\\\\d{1,3}\"));\n    }\n}\n"}]