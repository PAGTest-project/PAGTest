{"file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "dependencies": ["package net.datafaker.providers.base;", "import org.junit.jupiter.api.RepeatedTest;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.Arguments;", "import org.junit.jupiter.params.provider.MethodSource;", "import java.time.Duration;", "import java.time.Instant;", "import java.time.LocalDate;", "import java.time.LocalDateTime;", "import java.time.Period;", "import java.time.format.DateTimeFormatter;", "import java.time.temporal.ChronoUnit;", "import java.util.concurrent.TimeUnit;", "import java.util.stream.Stream;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.assertj.core.api.Assertions.assertThatThrownBy;"], "name": "TimeAndDateTest", "description": "Unit tests for TimeAndDate class, focusing on various date and time operations.", "class_members": {"variables": [{"name": "timeAndDate", "type": "TimeAndDate"}]}, "fixtures": [], "test_cases": [{"name": "testFutureDate", "primary_tested": ["TimeAndDate.future()"], "external_dependencies": {"modules": ["TimeAndDate"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a future date."}, {"name": "testFutureDateWithBounds", "primary_tested": ["TimeAndDate.future(int,TimeUnit,Instant)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a future date within specified bounds."}, {"name": "testFutureDateWithMinimum", "primary_tested": ["TimeAndDate.future(int,int,TimeUnit)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a future date with a minimum time range."}, {"name": "testPastDateWithMinimum", "primary_tested": ["TimeAndDate.past(int,int,TimeUnit)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a past date with a minimum time range."}, {"name": "testPastDateWithReferenceDate", "primary_tested": ["TimeAndDate.past(int,TimeUnit,Instant)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a past date with a reference date."}, {"name": "testPastDate", "primary_tested": ["TimeAndDate.past()"], "external_dependencies": {"modules": ["TimeAndDate"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a past date."}, {"name": "testPastDateWithBounds", "primary_tested": ["TimeAndDate.past(int,TimeUnit)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a past date within specified bounds."}, {"name": "testBetween", "primary_tested": ["TimeAndDate.between(Instant,Instant)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a date between two specified dates."}, {"name": "testBetweenWithMaskReturningString", "primary_tested": ["TimeAndDate.between(Instant,Instant,String)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant", "DateTimeFormatter"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a date between two specified dates with a date format mask."}, {"name": "testBetweenThenLargerThanNow", "primary_tested": ["TimeAndDate.between(Instant,Instant)"], "external_dependencies": {"modules": ["TimeAndDate", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the exception thrown when the upper bound date is before the lower bound."}, {"name": "testBirthday", "primary_tested": ["TimeAndDate.birthday()"], "external_dependencies": {"modules": ["TimeAndDate", "LocalDateTime", "LocalDate"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a birthday date within default age range."}, {"name": "testBirthdayWithAges", "primary_tested": ["TimeAndDate.birthday(int,int)"], "external_dependencies": {"modules": ["TimeAndDate", "LocalDate", "Number"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a birthday date within specified age range."}, {"name": "birthdayWithMask", "primary_tested": ["TimeAndDate.birthday(int,int,String)"], "external_dependencies": {"modules": ["TimeAndDate", "DateTimeFormatter"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a birthday date with a date format mask."}, {"name": "futureWithMask", "primary_tested": ["TimeAndDate.future(int,TimeUnit,String)", "TimeAndDate.future(int,int,TimeUnit,String)", "TimeAndDate.future(int,TimeUnit,Instant,String)"], "external_dependencies": {"modules": ["TimeAndDate", "DateTimeFormatter", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a future date with a date format mask."}, {"name": "pastWithMask", "primary_tested": ["TimeAndDate.past(int,TimeUnit,String)", "TimeAndDate.past(int,int,TimeUnit,String)", "TimeAndDate.past(int,TimeUnit,Instant,String)"], "external_dependencies": {"modules": ["TimeAndDate", "DateTimeFormatter", "Instant"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a past date with a date format mask."}, {"name": "periodTest", "primary_tested": ["TimeAndDate.period(Period,Period)"], "external_dependencies": {"modules": ["TimeAndDate", "Period"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a period within specified bounds."}, {"name": "durationTest", "primary_tested": ["TimeAndDate.duration(long,long,ChronoUnit)"], "external_dependencies": {"modules": ["TimeAndDate", "Duration", "ChronoUnit"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a duration within specified bounds."}, {"name": "durationTest", "primary_tested": ["TimeAndDate.duration(long,ChronoUnit)"], "external_dependencies": {"modules": ["TimeAndDate", "Duration", "ChronoUnit"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a duration with a maximum value."}, {"name": "maxLessThanMinPeriod", "primary_tested": ["TimeAndDate.period(Period,Period)"], "external_dependencies": {"modules": ["TimeAndDate", "Period"], "class_members": [{"name": "timeAndDate", "type": "variable"}]}, "category": "unit", "description": "Tests the exception thrown when the maximum period is less than the minimum period."}]}