{"file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "dependencies": ["package net.datafaker.providers.base;", "import net.datafaker.service.RandomService;", "import org.junit.jupiter.api.Test;", "import org.mockito.Mockito;", "import java.util.*;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.assertj.core.api.Assertions.assertThatThrownBy;", "import static org.mockito.Mockito.*;"], "name": "UniqueTest", "description": "Unit tests for the Unique class within the BaseFaker framework, focusing on the fetchFromYaml method.", "class_members": {"variables": [{"name": "faker", "type": "BaseFaker"}, {"name": "defaultValues", "type": "static final List<String>"}]}, "fixtures": [], "test_cases": [{"name": "fetchFromYaml_shouldReturnValuesInRandomOrderUsingRandomService", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "associated_methods": ["RandomService.nextInt(int,int)"], "external_dependencies": {"modules": ["BaseFaker", "RandomService", "Mockito"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "defaultValues", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method returns values in a random order using the RandomService."}, {"name": "fetchFromYaml_shouldThrowExceptionWhenAllPossibleValuesHaveBeenReturned", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method throws an exception when all possible values have been returned."}, {"name": "fetchFromYaml_shouldReturnValuesBasedOnKeyAndLocale", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method returns values based on the key and locale."}, {"name": "fetchFromYaml_shouldThrowExceptionWhenNoValuesFoundForKey", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method throws an exception when no values are found for the key."}, {"name": "fetchFromYaml_shouldThrowExceptionWhenNonListValueFoundForKey", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method throws an exception when a non-list value is found for the key."}, {"name": "fetchFromYaml_shouldThrowExceptionWhenListOfListsFoundForKey", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method throws an exception when a list of lists is found for the key."}, {"name": "fetchFromYaml_shouldNotInterfereWithValuesReturnedFromOtherFakers", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "defaultValues", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method does not interfere with values returned from other fakers."}, {"name": "fetchFromYaml_shouldConvertIntegersToStrings", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method converts integers to strings."}, {"name": "fetchFromYaml_shouldConvertDecimalsToStrings", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method converts decimals to strings."}, {"name": "fetchFromYaml_shouldConvertBooleansToStrings", "primary_tested": ["BaseFaker.unique().fetchFromYaml(String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the fetchFromYaml method converts booleans to strings."}]}