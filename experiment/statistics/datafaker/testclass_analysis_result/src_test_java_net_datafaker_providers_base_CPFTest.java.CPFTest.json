{"file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "dependencies": ["package net.datafaker.providers.base;", "import org.junit.jupiter.api.RepeatedTest;", "import java.util.regex.Pattern;", "import static net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil.isCPFValid;", "import static org.assertj.core.api.Assertions.assertThat;"], "name": "CPFTest", "description": "Tests for validating and formatting CPF numbers.", "class_members": {"variables": [{"name": "CPF_EXPRESSION", "type": "static final Pattern"}]}, "fixtures": [], "test_cases": [{"name": "isValidCPF", "primary_tested": ["IdNumberGeneratorPtBrUtil.isCPFValid(String)"], "external_dependencies": {"modules": ["net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil", "net.datafaker.providers.base.BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}]}, "category": "unit", "description": "Tests if a generated valid CPF number is considered valid."}, {"name": "isInvalidCPF", "primary_tested": ["IdNumberGeneratorPtBrUtil.isCPFValid(String)"], "external_dependencies": {"modules": ["net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil", "net.datafaker.providers.base.BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}]}, "category": "unit", "description": "Tests if a generated invalid CPF number is considered invalid."}, {"name": "formattedCPF", "primary_tested": [], "associated_methods": ["Pattern.matches(String,CharSequence)"], "external_dependencies": {"modules": ["java.util.regex.Pattern", "net.datafaker.providers.base.BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "CPF_EXPRESSION", "type": "variable"}]}, "category": "unit", "description": "Tests if the generated CPF numbers are formatted correctly."}]}