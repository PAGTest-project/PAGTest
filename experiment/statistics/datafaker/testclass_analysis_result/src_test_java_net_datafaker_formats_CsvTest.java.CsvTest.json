{"file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "dependencies": ["package net.datafaker.formats;", "import net.datafaker.AbstractFakerTest;", "import net.datafaker.providers.base.BaseFaker;", "import net.datafaker.providers.base.Name;", "import net.datafaker.sequence.FakeSequence;", "import net.datafaker.transformations.CsvTransformer;", "import net.datafaker.transformations.Schema;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.ValueSource;", "import java.util.Random;", "import static net.datafaker.transformations.Field.field;", "import static net.datafaker.transformations.Transformer.LINE_SEPARATOR;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.assertj.core.api.Assertions.assertThatThrownBy;"], "name": "CsvTest", "description": "Test suite for CSV transformation functionalities using various schemas and configurations.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "csvTestNew", "primary_tested": ["CsvTransformer.generate(Schema,int)"], "associated_methods": ["BaseFaker.name().firstName()", "BaseFaker.name().lastName()", "BaseFaker.address().streetAddress()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name", "Address"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with a specific schema and separator."}, {"name": "csvTestWithQuotesNew", "primary_tested": ["CsvTransformer.generate(Schema,int)"], "associated_methods": ["BaseFaker.expression(String)"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with quotes and a specific schema and separator."}, {"name": "testCsvWithCommaNew", "primary_tested": ["CsvTransformer.generate(Schema,int)"], "associated_methods": [], "external_dependencies": {"modules": ["CsvTransformer", "Schema"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with comma separator and specific schema."}, {"name": "testCsvWithDifferentObjects", "primary_tested": ["CsvTransformer.generate(Schema,int)"], "associated_methods": ["BaseFaker.number().randomDigit()", "BaseFaker.bool().bool()", "BaseFaker.name().firstName()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Number", "Bool", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with different object types in the schema."}, {"name": "testCsvWithDifferentObjectsFunction", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.internet().password(int,int)"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Internet"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with different object types and functions in the schema."}, {"name": "testCsvWithDifferentObjectsFunctionStream", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.internet().password(int,int)"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Internet"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with different object types and functions using a stream in the schema."}, {"name": "testCsvWithInfiniteSequence", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.number().digits(int)"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Number"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with an infinite sequence, expecting an exception."}, {"name": "testLimitForCsv", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.name()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with a specific limit."}, {"name": "testLimitForCsvNew", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.name()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with a specific limit using a new schema."}, {"name": "testLimitForCollection", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.name()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with a specific limit for a collection."}, {"name": "testLimitForCollectionNew", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.name()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with a specific limit for a collection using a new schema."}, {"name": "testInfiniteCsv", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.name()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with an infinite sequence, expecting an exception."}, {"name": "testInfiniteCsvWithLimit", "primary_tested": ["CsvTransformer.generate(FakeSequence,Schema)"], "associated_methods": ["BaseFaker.name()"], "external_dependencies": {"modules": ["BaseFaker", "CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of CSV with an infinite sequence but with a limit."}, {"name": "supplierShouldBeDefinedInCaseOfNullInput", "primary_tested": ["CsvTransformer.generate(Schema,int)"], "associated_methods": [], "external_dependencies": {"modules": ["CsvTransformer", "Schema", "Name"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that an exception is thrown if the input is null and no suppliers are defined."}]}