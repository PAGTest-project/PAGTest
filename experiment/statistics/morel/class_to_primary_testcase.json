{"Environment": [{"method_name": "bind(IdPat,Object)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}, {"method_name": "bindAll(Iterable<Object>)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}], "Sat": [{"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testTrue"}, {"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testFalse"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/util/Sat_variableTest.java", "testclass_name": "Sat_variableTest", "testcase_name": "testVariableCreation"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/util/Sat_variableTest.java", "testclass_name": "Sat_variableTest", "testcase_name": "testVariableRetrieval"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/util/Sat_variableTest.java", "testclass_name": "Sat_variableTest", "testcase_name": "testVariableIdIncrement"}, {"method_name": "not(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testTrue"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testFalse"}], "CalciteForeignValue": [{"method_name": "value()", "file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "testcase_name": "testNestedSchema"}], "Core": [{"method_name": "Exp#isConstant()", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testConstant"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testEq"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testBetween"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testBetween"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testBetween"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testSubTrue"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testSubTrue"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}], "Folder": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp>>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}], "FromBuilder": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "buildSimplify()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "OrderItem>)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}], "Extents": [{"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2c"}, {"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2d"}, {"method_name": "union(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_unionTest.java", "testclass_name": "Extents_unionTest", "testcase_name": "testUnionWithEmptyList"}, {"method_name": "union(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_unionTest.java", "testclass_name": "Extents_unionTest", "testcase_name": "testUnionWithSingleMap"}, {"method_name": "union(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_unionTest.java", "testclass_name": "Extents_unionTest", "testcase_name": "testUnionWithMultipleMaps"}], "PairList": [{"method_name": "add(T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testBuilder"}, {"method_name": "add(Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(int,Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(int,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "remove(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "clear()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "addAll(int,PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "immutable()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "set(int,Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "set(int,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(ImmutablePairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "addAll(ImmutableList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "of(Map)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOfMap"}, {"method_name": "toImmutableMap()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOfMap"}, {"method_name": "withCapacity(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListWithCapacity"}, {"method_name": "of()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOf"}, {"method_name": "copyOf(T,U,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOf"}, {"method_name": "transform(BiFunction)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "transform2(BiFunction)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "anyMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "allMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "noMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "firstMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testBuilder"}], "TailList": [{"method_name": "clear()", "file_path": "src/test/java/net/hydromatic/morel/util/TailList_clearTest.java", "testclass_name": "TailList_clearTest", "testcase_name": "testClear"}, {"method_name": "TailList", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}], "Ord": [{"method_name": "forEachIndexed(List<String>,BiConsumer<String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testOrd"}, {"method_name": "forEach(List<String>,ObjIntConsumer<String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Ord_forEachTest.java", "testclass_name": "Ord_forEachTest", "testcase_name": "testForEach"}, {"method_name": "forEachIndexed(List<String>,ObjIntConsumer<String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Ord_forEachIndexedTest.java", "testclass_name": "Ord_forEachIndexedTest", "testcase_name": "testForEachIndexed"}], "MapList": [{"method_name": "of(int,IntFunction<String>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testMapList"}], "Static": [{"method_name": "shorterThan(Iterable<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testShorterThan"}, {"method_name": "shorterThan(Iterable<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThanWithIterable"}, {"method_name": "shorterThan(Iterable<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThanWithNonPositiveN"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFind"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "testcase_name": "testFindRandomAccessList"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "testcase_name": "testFindNonRandomAccessList"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "testcase_name": "testFindNoMatch"}, {"method_name": "nextPowerOfTwo(int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPower"}, {"method_name": "transform(List<String>,Function<String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTransform"}, {"method_name": "str(StringBuilder)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_strTest.java", "testclass_name": "Static_strTest", "testcase_name": "testStr"}, {"method_name": "plus(Map<String,Integer>,String,Integer)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_plusTest.java", "testclass_name": "Static_plusTest", "testcase_name": "testPlus"}, {"method_name": "toImmutableList()", "file_path": "src/test/java/net/hydromatic/morel/util/Static_toImmutableListTest.java", "testclass_name": "Static_toImmutableListTest", "testcase_name": "testToImmutableList"}, {"method_name": "minus(List<String>,String)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_minusTest.java", "testclass_name": "Static_minusTest", "testcase_name": "testMinus_ElementPresent"}, {"method_name": "minus(List<String>,String)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_minusTest.java", "testclass_name": "Static_minusTest", "testcase_name": "testMinus_ElementNotPresent"}, {"method_name": "transformEager(Iterable<String>,Function<String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_transformEagerTest.java", "testclass_name": "Static_transformEagerTest", "testcase_name": "testTransformEagerWithEmptyIterable"}, {"method_name": "transformEager(Iterable<String>,Function<String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_transformEagerTest.java", "testclass_name": "Static_transformEagerTest", "testcase_name": "testTransformEagerWithNonEmptyIterable"}, {"method_name": "intersect(List<Integer>,Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_intersectTest.java", "testclass_name": "Static_intersectTest", "testcase_name": "testIntersect_NoCommonElements"}, {"method_name": "intersect(List<Integer>,Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_intersectTest.java", "testclass_name": "Static_intersectTest", "testcase_name": "testIntersect_WithCommonElements"}, {"method_name": "intersect(List<Integer>,Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_intersectTest.java", "testclass_name": "Static_intersectTest", "testcase_name": "testIntersect_AllCommonElements"}, {"method_name": "shorterThan(Collection<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThanWithCollection"}], "Pos": [{"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPos"}, {"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_splitTest.java", "testclass_name": "Pos_splitTest", "testcase_name": "testSplit_ValidInput"}, {"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_splitTest.java", "testclass_name": "Pos_splitTest", "testcase_name": "testSplit_InvalidInput"}, {"method_name": "plus(Pos)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_plusTest.java", "testclass_name": "Pos_plusTest", "testcase_name": "testPlus"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_equalsTest.java", "testclass_name": "Pos_equalsTest", "testcase_name": "testEquals"}, {"method_name": "sum(List<Pos>)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_sumTest.java", "testclass_name": "Pos_sumTest", "testcase_name": "testSumWithList"}, {"method_name": "sum(Iterable<Pos>)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_sumTest.java", "testclass_name": "Pos_sumTest", "testcase_name": "testSumWithIterable"}], "Codes": [{"method_name": "floatToString(float)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testToString"}, {"method_name": "isNegative(float)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFloatBit"}], "Pair": [{"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_True"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_False"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_EmptyIterables"}, {"method_name": "allMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "allMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_AllTrue"}, {"method_name": "allMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_OneFalse"}, {"method_name": "allMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_DifferentLengths"}, {"method_name": "allMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_EmptyLists"}, {"method_name": "noneMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "Entry<String,Integer>>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_rightTest.java", "testclass_name": "Pair_rightTest", "testcase_name": "testRight"}, {"method_name": "Entry<String,Integer>>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_leftTest.java", "testclass_name": "Pair_leftTest", "testcase_name": "testLeft"}, {"method_name": "zipMutable(List<Integer>,List<String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipMutableTest.java", "testclass_name": "Pair_zipMutableTest", "testcase_name": "testZipMutable"}, {"method_name": "toMap(List<Pair<String,Integer>>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_toMapTest.java", "testclass_name": "Pair_toMapTest", "testcase_name": "testToMap"}, {"method_name": "forEach(List<Integer>,List<String>,BiConsumer<Integer,String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_forEachTest.java", "testclass_name": "Pair_forEachTest", "testcase_name": "testForEach"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_SameInstance"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_DifferentInstanceSameValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_DifferentInstanceDifferentValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_NotInstanceOfMapEntry"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_Null"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_MapEntrySameValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_MapEntryDifferentValues"}, {"method_name": "firstAnd(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_firstAndTest.java", "testclass_name": "Pair_firstAndTest", "testcase_name": "testFirstAndWithNonEmptyIterable"}, {"method_name": "firstAnd(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_firstAndTest.java", "testclass_name": "Pair_firstAndTest", "testcase_name": "testFirstAndWithEmptyIterable"}, {"method_name": "adjacents(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_adjacentsTest.java", "testclass_name": "Pair_adjacentsTest", "testcase_name": "testAdjacentsWithNonEmptyIterable"}, {"method_name": "adjacents(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_adjacentsTest.java", "testclass_name": "Pair_adjacentsTest", "testcase_name": "testAdjacentsWithEmptyIterable"}, {"method_name": "compareTo(Pair)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareTo_DifferentLeft"}, {"method_name": "compareTo(Pair)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareTo_SameLeftDifferentRight"}, {"method_name": "compareTo(Pair)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareTo_SameLeftSameRight"}, {"method_name": "zip(List<Integer>,List<String>,boolean)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipTest.java", "testclass_name": "Pair_zipTest", "testcase_name": "testZipStrictEqualSizes"}, {"method_name": "zip(List<Integer>,List<String>,boolean)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipTest.java", "testclass_name": "Pair_zipTest", "testcase_name": "testZipStrictDifferentSizes"}, {"method_name": "zip(List<Integer>,List<String>,boolean)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipTest.java", "testclass_name": "Pair_zipTest", "testcase_name": "testZipNonStrict"}], "RangeExtent": [{"method_name": "RangeExtent", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testRangeExtent"}, {"method_name": "toString()", "file_path": "src/test/java/net/hydromatic/morel/type/RangeExtent_toStringTest.java", "testclass_name": "RangeExtent_toStringTest", "testcase_name": "testToStringUnbounded"}, {"method_name": "toString()", "file_path": "src/test/java/net/hydromatic/morel/type/RangeExtent_toStringTest.java", "testclass_name": "RangeExtent_toStringTest", "testcase_name": "testToStringBounded"}], "Ml": [{"method_name": "assertAnalyze(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testAnalyze"}, {"method_name": "assertPlan(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInline"}, {"method_name": "assertPlan(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFn"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFn"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFnUnit"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testLetAtomic"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineChained"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromPredicate"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromView"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testMapFilterToFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFilterMapFilterMapToFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromEmptyFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase2"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFnUnit"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testLetAtomic"}], "Shell": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testShell"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testShellNoBanner"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testOneLine"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testTwoLines"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testReal"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testEmptyLines"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testSingleLineComment"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testSingleLineCommentWithQuote"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testMultiLineLet"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUse"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testMatchWarning"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseEmpty"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseMissing"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseSelfReferential"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testStringDepth"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testPrintDepth"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testPrintLength"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testLineWidth"}, {"method_name": "create(List<String>,ByteArrayInputStream,ByteArrayOutputStream)", "file_path": "src/test/java/net/hydromatic/morel/Shell_createTest.java", "testclass_name": "Shell_createTest", "testcase_name": "testCreateShellWithDefaultConfig"}, {"method_name": "create(List<String>,ByteArrayInputStream,ByteArrayOutputStream)", "file_path": "src/test/java/net/hydromatic/morel/Shell_createTest.java", "testclass_name": "Shell_createTest", "testcase_name": "testCreateShellWithCustomConfig"}], "Main": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testRaw"}]}