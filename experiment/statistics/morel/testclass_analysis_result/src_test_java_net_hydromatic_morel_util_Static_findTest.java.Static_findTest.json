{"file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "dependencies": ["package net.hydromatic.morel.util;", "import com.google.common.collect.ImmutableList;", "import org.junit.jupiter.api.Test;", "import java.util.Collection;", "import java.util.Iterator;", "import java.util.List;", "import java.util.ListIterator;", "import java.util.function.Predicate;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "Static_findTest", "description": "Unit tests for the Static.find method, which finds the index of an element in a list based on a predicate.", "class_members": {"nested_classes": [{"name": "NonRandomAccessList", "description": "Internal class implementing List interface with non-random access behavior."}]}, "test_cases": [{"name": "testFindRandomAccessList", "primary_tested": ["Static.find(List<Integer>,Predicate<Integer>)"], "external_dependencies": {"modules": ["com.google.common.collect.ImmutableList", "java.util.function.Predicate", "net.hydromatic.morel.util.Static"]}, "category": "unit", "description": "Tests the Static.find method with a random access list."}, {"name": "testFindNonRandomAccessList", "primary_tested": ["Static.find(List<Integer>,Predicate<Integer>)"], "external_dependencies": {"modules": ["com.google.common.collect.ImmutableList", "java.util.function.Predicate", "net.hydromatic.morel.util.Static"], "class_members": [{"name": "NonRandomAccessList", "type": "nested_class"}]}, "category": "unit", "description": "Tests the Static.find method with a non-random access list."}, {"name": "testFindNoMatch", "primary_tested": ["Static.find(List<Integer>,Predicate<Integer>)"], "external_dependencies": {"modules": ["com.google.common.collect.ImmutableList", "java.util.function.Predicate", "net.hydromatic.morel.util.Static"]}, "category": "unit", "description": "Tests the Static.find method when no matching element is found."}]}