[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Ord_zipTest {\n\n    @Test\n    void testZipWithNonEmptyIterator() {\n        // Given\n        Iterator<String> inputIterator = ImmutableList.of(\"a\", \"b\", \"c\").iterator();\n\n        // When\n        Iterator<Ord<String>> resultIterator = Ord.zip(inputIterator);\n\n        // Then\n        assertTrue(resultIterator.hasNext());\n        assertEquals(new Ord<>(0, \"a\"), resultIterator.next());\n        assertTrue(resultIterator.hasNext());\n        assertEquals(new Ord<>(1, \"b\"), resultIterator.next());\n        assertTrue(resultIterator.hasNext());\n        assertEquals(new Ord<>(2, \"c\"), resultIterator.next());\n        assertFalse(resultIterator.hasNext());\n        assertThrows(NoSuchElementException.class, resultIterator::next);\n    }\n\n    @Test\n    void testZipWithEmptyIterator() {\n        // Given\n        Iterator<String> inputIterator = ImmutableList.of().iterator();\n\n        // When\n        Iterator<Ord<String>> resultIterator = Ord.zip(inputIterator);\n\n        // Then\n        assertFalse(resultIterator.hasNext());\n        assertThrows(NoSuchElementException.class, resultIterator::next);\n    }\n}\n"}]