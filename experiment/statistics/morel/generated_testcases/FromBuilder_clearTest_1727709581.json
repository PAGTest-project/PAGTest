[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.ast;\n\nimport net.hydromatic.morel.type.TypeSystem;\nimport net.hydromatic.morel.compile.Environment;\nimport net.hydromatic.morel.type.Binding;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class FromBuilder_clearTest {\n\n    private FromBuilder fromBuilder;\n    private TypeSystem typeSystem;\n    private Environment env;\n    private List<Core.FromStep> steps;\n    private List<Binding> bindings;\n\n    @BeforeEach\n    public void setUp() {\n        typeSystem = new TypeSystem();\n        env = new Environment();\n        steps = new ArrayList<>();\n        bindings = new ArrayList<>();\n        fromBuilder = new FromBuilder(typeSystem, env);\n    }\n\n    @Test\n    public void testClear() {\n        // Given\n        fromBuilder.addAll(steps);\n        fromBuilder.scan(new Core.IdPat(\"pat\"), new Core.Exp() {\n            @Override\n            public Op op() {\n                return Op.FROM;\n            }\n        });\n        fromBuilder.yield_(false, new Core.Exp() {\n            @Override\n            public Op op() {\n                return Op.ID;\n            }\n        });\n\n        // When\n        fromBuilder.clear();\n\n        // Then\n        assertEquals(0, fromBuilder.bindings().size());\n        assertEquals(Integer.MIN_VALUE, fromBuilder.removeIfNotLastIndex);\n        assertEquals(Integer.MIN_VALUE, fromBuilder.removeIfLastIndex);\n    }\n}\n"}]