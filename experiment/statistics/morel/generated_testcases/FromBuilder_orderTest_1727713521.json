[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.ast;\n\nimport com.google.common.collect.ImmutableList;\nimport net.hydromatic.morel.compile.Environment;\nimport net.hydromatic.morel.type.TypeSystem;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Collections;\n\nimport static org.junit.jupiter.api.Assertions.assertSame;\n\npublic class FromBuilder_orderTest {\n\n    private FromBuilder fromBuilder;\n\n    @BeforeEach\n    public void setUp() {\n        TypeSystem typeSystem = new TypeSystem();\n        Environment env = new Environment();\n        fromBuilder = new FromBuilder(typeSystem, env);\n    }\n\n    @Test\n    public void testOrderWithEmptyOrderItems() {\n        // Given\n        Iterable<Core.OrderItem> emptyOrderItems = Collections.emptyList();\n\n        // When\n        FromBuilder result = fromBuilder.order(emptyOrderItems);\n\n        // Then\n        assertSame(fromBuilder, result);\n    }\n\n    @Test\n    public void testOrderWithNonEmptyOrderItems() {\n        // Given\n        Iterable<Core.OrderItem> nonEmptyOrderItems = ImmutableList.of(new Core.OrderItem());\n\n        // When\n        FromBuilder result = fromBuilder.order(nonEmptyOrderItems);\n\n        // Then\n        assertSame(fromBuilder, result);\n    }\n}\n"}]