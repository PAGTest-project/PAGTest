[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.ast;\n\nimport org.apache.calcite.util.mapping.IntPair;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Pos_ofTest {\n\n    @Test\n    void testOf() {\n        // Given\n        String ml = \"abc\\ndef\\nghi\";\n        String file = \"testFile\";\n        int startOffset = 4; // Position of 'd' in \"def\"\n        int endOffset = 7;   // Position of 'g' in \"ghi\"\n\n        // When\n        Pos pos = Pos.of(ml, file, startOffset, endOffset);\n\n        // Then\n        assertEquals(file, pos.file);\n        assertEquals(2, pos.startLine);\n        assertEquals(1, pos.startColumn);\n        assertEquals(3, pos.endLine);\n        assertEquals(1, pos.endColumn);\n    }\n\n    @Test\n    void testOfWithSingleLine() {\n        // Given\n        String ml = \"abcdef\";\n        String file = \"testFile\";\n        int startOffset = 2; // Position of 'c' in \"abcdef\"\n        int endOffset = 4;   // Position of 'e' in \"abcdef\"\n\n        // When\n        Pos pos = Pos.of(ml, file, startOffset, endOffset);\n\n        // Then\n        assertEquals(file, pos.file);\n        assertEquals(1, pos.startLine);\n        assertEquals(3, pos.startColumn);\n        assertEquals(1, pos.endLine);\n        assertEquals(5, pos.endColumn);\n    }\n\n    @Test\n    void testOfWithInvalidOffset() {\n        // Given\n        String ml = \"abcdef\";\n        String file = \"testFile\";\n        int startOffset = 10; // Invalid offset\n        int endOffset = 12;   // Invalid offset\n\n        // When & Then\n        assertThrows(IllegalArgumentException.class, () -> {\n            Pos.of(ml, file, startOffset, endOffset);\n        });\n    }\n}\n"}]