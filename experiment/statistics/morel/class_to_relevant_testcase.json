{"Environment": [{"method_name": "keySet()", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}, {"method_name": "visit(Consumer<Binding>)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}], "Calcite": [{"method_name": "withDataSets(Map<String, DataSet>)", "file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "testcase_name": "testNestedSchema"}, {"method_name": "foreignValues()", "file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "testcase_name": "testNestedSchema"}], "Main": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "testcase_name": "testNestedSchema"}], "ScriptTest": [{"method_name": "findMethod(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "test"}, {"method_name": "checkRun(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "test"}, {"method_name": "checkRun(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "testScript"}], "Fixture": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testEq"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testBetween"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2c"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2d"}, {"method_name": "Exp>,String)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testSubTrue"}, {"method_name": "Exp,String,String)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}], "PairList": [{"method_name": "leftList()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "rightList()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "left(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "right(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "forEach(Consumer)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "forEach(BiConsumer)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "forEachIndexed(TriConsumer)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "isEmpty()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "size()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}], "checkShorterThan(Iterable<Integer>, int)": [{"method_name": "checkShorterThan(Iterable<Integer>, int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testShorterThan"}], "InlineTest": [{"method_name": "checkInlineChained(int)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineChained"}]}