[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport org.junit.jupiter.api.Test;\n\npublic class PatternOptionBuilder_parsePatternTest {\n\n    @Test\n    public void testParsePatternSingleOption() {\n        final String pattern = \"a\";\n        final Options options = PatternOptionBuilder.parsePattern(pattern);\n\n        assertEquals(1, options.getOptions().size());\n        assertTrue(options.hasOption(\"a\"));\n    }\n\n    @Test\n    public void testParsePatternOptionWithType() {\n        final String pattern = \"a@\";\n        final Options options = PatternOptionBuilder.parsePattern(pattern);\n\n        assertEquals(1, options.getOptions().size());\n        assertTrue(options.hasOption(\"a\"));\n        assertEquals(PatternOptionBuilder.OBJECT_VALUE, options.getOption(\"a\").getType());\n    }\n\n    @Test\n    public void testParsePatternOptionWithRequired() {\n        final String pattern = \"a!\";\n        final Options options = PatternOptionBuilder.parsePattern(pattern);\n\n        assertEquals(1, options.getOptions().size());\n        assertTrue(options.hasOption(\"a\"));\n        assertTrue(options.getOption(\"a\").isRequired());\n    }\n\n    @Test\n    public void testParsePatternMultipleOptions() {\n        final String pattern = \"ab@c!\";\n        final Options options = PatternOptionBuilder.parsePattern(pattern);\n\n        assertEquals(3, options.getOptions().size());\n        assertTrue(options.hasOption(\"a\"));\n        assertTrue(options.hasOption(\"b\"));\n        assertTrue(options.hasOption(\"c\"));\n        assertEquals(PatternOptionBuilder.OBJECT_VALUE, options.getOption(\"b\").getType());\n        assertTrue(options.getOption(\"c\").isRequired());\n    }\n}\n"}]