[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Collections;\nimport java.util.List;\n\npublic class Options_getMatchingOptionsTest {\n\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n        options.addOption(\"a\", \"apple\", false, \"description for apple\");\n        options.addOption(\"b\", \"banana\", false, \"description for banana\");\n        options.addOption(\"c\", \"cherry\", false, \"description for cherry\");\n    }\n\n    @Test\n    public void testGetMatchingOptionsExactMatch() {\n        List<String> matchingOptions = options.getMatchingOptions(\"apple\");\n        assertEquals(Collections.singletonList(\"apple\"), matchingOptions);\n    }\n\n    @Test\n    public void testGetMatchingOptionsPartialMatch() {\n        List<String> matchingOptions = options.getMatchingOptions(\"ban\");\n        assertEquals(Collections.singletonList(\"banana\"), matchingOptions);\n    }\n\n    @Test\n    public void testGetMatchingOptionsNoMatch() {\n        List<String> matchingOptions = options.getMatchingOptions(\"nonexistent\");\n        assertTrue(matchingOptions.isEmpty());\n    }\n\n    @Test\n    public void testGetMatchingOptionsLeadingHyphens() {\n        List<String> matchingOptions = options.getMatchingOptions(\"--cherry\");\n        assertEquals(Collections.singletonList(\"cherry\"), matchingOptions);\n    }\n}\n"}]