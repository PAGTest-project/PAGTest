[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Properties;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class CommandLine_getOptionPropertiesTest {\n\n    private CommandLine commandLine;\n\n    @BeforeEach\n    public void setUp() {\n        commandLine = new CommandLine();\n    }\n\n    @Test\n    public void testGetOptionProperties_OptionFound() {\n        // Given\n        Option option = Option.builder(\"D\").numberOfArgs(2).valueSeparator('=').build();\n        option.addValueForProcessing(\"param1=value1\");\n        option.addValueForProcessing(\"param2=value2\");\n        commandLine.addOption(option);\n\n        // When\n        Properties props = commandLine.getOptionProperties(option);\n\n        // Then\n        assertEquals(2, props.size());\n        assertEquals(\"value1\", props.getProperty(\"param1\"));\n        assertEquals(\"value2\", props.getProperty(\"param2\"));\n    }\n\n    @Test\n    public void testGetOptionProperties_OptionNotFound() {\n        // Given\n        Option option = Option.builder(\"D\").numberOfArgs(2).valueSeparator('=').build();\n        commandLine.addOption(option);\n\n        Option nonExistentOption = Option.builder(\"E\").numberOfArgs(2).valueSeparator('=').build();\n\n        // When\n        Properties props = commandLine.getOptionProperties(nonExistentOption);\n\n        // Then\n        assertTrue(props.isEmpty());\n    }\n\n    @Test\n    public void testGetOptionProperties_OptionWithSingleValue() {\n        // Given\n        Option option = Option.builder(\"D\").numberOfArgs(1).build();\n        option.addValueForProcessing(\"param1\");\n        commandLine.addOption(option);\n\n        // When\n        Properties props = commandLine.getOptionProperties(option);\n\n        // Then\n        assertEquals(1, props.size());\n        assertEquals(\"true\", props.getProperty(\"param1\"));\n    }\n}\n"}]