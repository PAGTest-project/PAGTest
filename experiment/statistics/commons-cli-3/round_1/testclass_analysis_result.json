[{"file_path": "src/test/java/org/apache/commons/cli/Option_hashCodeTest.java", "testclass_name": "Option_hashCodeTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "Option_hashCodeTest", "description": "Unit tests for the hashCode method of the Option class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["Option.hashCode()"], "external_dependencies": {"modules": ["Option"]}, "category": "unit", "description": "Tests the hashCode method of the Option class to ensure consistency and correctness."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Option_addValueTest.java", "testclass_name": "Option_addValueTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertThrows;"], "name": "Option_addValueTest", "description": "Unit test for the addValue method of the Option class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testAddValue", "primary_tested": ["Option.addValue(String)"], "external_dependencies": {"modules": ["Option", "UnsupportedOperationException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that calling addValue on an Option instance throws an UnsupportedOperationException."}]}, {"file_path": "src/test/java/org/apache/commons/cli/PatternOptionBuilder_getValueClassTest.java", "testclass_name": "PatternOptionBuilder_getValueClassTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "PatternOptionBuilder_getValueClassTest", "description": "Unit tests for the getValueClass method in PatternOptionBuilder.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetValueClass", "primary_tested": ["PatternOptionBuilder.getValueClass(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueClass method in PatternOptionBuilder for various characters and verifies the expected return values."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionBuilder_withDescriptionTest.java", "testclass_name": "OptionBuilder_withDescriptionTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "OptionBuilder_withDescriptionTest", "description": "Unit test for the withDescription method in OptionBuilder.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testWithDescription", "primary_tested": ["OptionBuilder.withDescription(String)"], "associated_methods": ["OptionBuilder.create(char)", "Option.getDescription()"], "external_dependencies": {"modules": ["OptionBuilder", "Option"]}, "category": "unit", "description": "Tests the functionality of setting a description using OptionBuilder and verifying it in the created Option."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionBuilder_hasArgsTest.java", "testclass_name": "OptionBuilder_hasArgsTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "OptionBuilder_hasArgsTest", "description": "Unit test for the hasArgs method of the OptionBuilder class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testHasArgs", "primary_tested": ["OptionBuilder.hasArgs()"], "associated_methods": ["OptionBuilder.create(char)", "Option.getArgs()"], "external_dependencies": {"modules": ["OptionBuilder", "Option"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hasArgs method of the OptionBuilder class to ensure it correctly sets the number of arguments to unlimited."}]}, {"file_path": "src/test/java/org/apache/commons/cli/TypeHandler_createNumberTest.java", "testclass_name": "TypeHandler_createNumberTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import org.junit.jupiter.api.Test;"], "name": "TypeHandler_createNumberTest", "description": "Unit tests for the TypeHandler.createNumber method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateNumberValid", "primary_tested": ["TypeHandler.createNumber(String)"], "external_dependencies": {"modules": ["TypeHandler", "ParseException"]}, "category": "unit", "description": "Tests the creation of a valid number using TypeHandler.createNumber."}, {"name": "testCreateNumberInvalid", "primary_tested": ["TypeHandler.createNumber(String)"], "external_dependencies": {"modules": ["TypeHandler", "ParseException"]}, "category": "unit", "description": "Tests the handling of an invalid number input in TypeHandler.createNumber, expecting a ParseException."}]}, {"file_path": "src/test/java/org/apache/commons/cli/TypeHandler_createObjectTest.java", "testclass_name": "TypeHandler_createObjectTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import org.junit.jupiter.api.Test;"], "name": "TypeHandler_createObjectTest", "description": "Unit tests for the TypeHandler.createObject method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateObjectSuccess", "primary_tested": ["TypeHandler.createObject(String)"], "external_dependencies": {"modules": ["TypeHandler", "String"]}, "category": "unit", "description": "Tests the successful creation of an object using TypeHandler.createObject."}, {"name": "testCreateObjectFailure", "primary_tested": ["TypeHandler.createObject(String)"], "external_dependencies": {"modules": ["TypeHandler", "ParseException"]}, "category": "unit", "description": "Tests the failure case of creating an object with a non-existent class using TypeHandler.createObject."}]}, {"file_path": "src/test/java/org/apache/commons/cli/HelpFormatter_getDescriptionTest.java", "testclass_name": "HelpFormatter_getDescriptionTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "HelpFormatter_getDescriptionTest", "description": "Unit tests for the HelpFormatter.getDescription method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetDescriptionWithNonNullDescription", "primary_tested": ["HelpFormatter.getDescription(Option)"], "external_dependencies": {"modules": ["Option", "HelpFormatter"]}, "category": "unit", "description": "Tests the HelpFormatter.getDescription method with a non-null description."}, {"name": "testGetDescriptionWithNullDescription", "primary_tested": ["HelpFormatter.getDescription(Option)"], "external_dependencies": {"modules": ["Option", "HelpFormatter"]}, "category": "unit", "description": "Tests the HelpFormatter.getDescription method with a null description."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionBuilder_withLongOptTest.java", "testclass_name": "OptionBuilder_withLongOptTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "OptionBuilder_withLongOptTest", "description": "Unit test for the OptionBuilder.withLongOpt method.", "class_members": {"variables": [{"name": "longOpt", "type": "String"}]}, "fixtures": [], "test_cases": [{"name": "testWithLongOpt", "primary_tested": ["OptionBuilder.withLongOpt(String)"], "associated_methods": ["OptionBuilder.create()"], "external_dependencies": {"modules": ["OptionBuilder", "Option"], "class_members": [{"name": "longOpt", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the functionality of setting a long option using OptionBuilder.withLongOpt and verifying it with Option.getLongOpt."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionBuilder_hasOptionalArgTest.java", "testclass_name": "OptionBuilder_hasOptionalArgTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;"], "name": "OptionBuilder_hasOptionalArgTest", "description": "Test for the hasOptionalArg method in OptionBuilder.", "class_members": {"variables": [{"name": "optionBuilder", "type": "OptionBuilder"}]}, "test_cases": [{"name": "testHasOptionalArg", "primary_tested": ["OptionBuilder.hasOptionalArg()"], "associated_methods": ["OptionBuilder.create(String)", "Option.hasOptionalArg()", "Option.getArgs()"], "external_dependencies": {"modules": ["OptionBuilder", "Option"], "class_members": [{"name": "optionBuilder", "type": "variable"}]}, "category": "unit", "description": "Tests the hasOptionalArg method of OptionBuilder to ensure it correctly sets the option to have an optional argument."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionBuilder_withArgNameTest.java", "testclass_name": "OptionBuilder_withArgNameTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "OptionBuilder_withArgNameTest", "description": "Unit test for the withArgName method in OptionBuilder.", "class_members": {"variables": [{"name": "argName", "type": "String"}]}, "fixtures": [], "test_cases": [{"name": "testWithArgName", "primary_tested": ["OptionBuilder.withArgName(String)"], "associated_methods": ["OptionBuilder.create(String)", "Option.getArgName()"], "external_dependencies": {"modules": ["OptionBuilder", "Option"], "class_members": [{"name": "argName", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the functionality of setting and retrieving the argument name using OptionBuilder."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionGroup_addOptionTest.java", "testclass_name": "OptionGroup_addOptionTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "OptionGroup_addOptionTest", "description": "Unit tests for the addOption method of the OptionGroup class.", "class_members": {"variables": [{"name": "optionGroup", "type": "OptionGroup"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testAddOption", "primary_tested": ["OptionGroup.addOption(Option)"], "associated_methods": ["OptionGroup.getNames()"], "external_dependencies": {"modules": ["OptionGroup", "Option"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the addition of an option to the OptionGroup and verifies the presence and count of the added option."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionGroup_getNamesTest.java", "testclass_name": "OptionGroup_getNamesTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.Collection;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "OptionGroup_getNamesTest", "description": "Unit tests for the getNames method of the OptionGroup class.", "class_members": {"variables": [{"name": "optionGroup", "type": "OptionGroup"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetNames", "primary_tested": ["OptionGroup.getNames()"], "associated_methods": ["OptionGroup.addOption(Option)"], "external_dependencies": {"modules": ["OptionGroup", "OptionBuilder"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getNames method of the OptionGroup class to ensure it returns the correct collection of option names."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionGroup_getOptionsTest.java", "testclass_name": "OptionGroup_getOptionsTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.Collection;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "OptionGroup_getOptionsTest", "description": "Unit tests for the getOptions method of the OptionGroup class.", "class_members": {"variables": [{"name": "optionGroup", "type": "OptionGroup"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetOptions", "primary_tested": ["OptionGroup.getOptions()"], "associated_methods": ["OptionGroup.isSelected()", "OptionGroup.addOption(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option", "OptionBuilder"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getOptions method of the OptionGroup class, ensuring it returns the correct collection of options."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionBuilder_createTest.java", "testclass_name": "OptionBuilder_createTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import org.junit.jupiter.api.Test;"], "name": "OptionBuilder_createTest", "description": "Unit tests for the create method in OptionBuilder class.", "test_cases": [{"name": "testCreateWithLongOpt", "primary_tested": ["OptionBuilder.create()"], "associated_methods": ["OptionBuilder.withLongOpt(String)", "OptionBuilder.withDescription(String)", "Option.getLongOpt()", "Option.getDescription()"], "external_dependencies": {"modules": ["OptionBuilder", "Option"]}, "category": "unit", "description": "Tests the creation of an Option with a long option and description."}, {"name": "testCreateWithoutLongOpt", "primary_tested": ["OptionBuilder.create()"], "external_dependencies": {"modules": ["OptionBuilder"]}, "category": "unit", "description": "Tests the creation of an Option without a long option, expecting an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/apache/commons/cli/TypeHandler_createValueTest.java", "testclass_name": "TypeHandler_createValueTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import java.net.MalformedURLException;", "import java.net.URL;", "import org.junit.jupiter.api.Test;"], "name": "TypeHandler_createValueTest", "description": "Unit tests for the TypeHandler.createValue method, specifically for handling URL creation.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateValueSuccess", "primary_tested": ["TypeHandler.createValue(String,Class)"], "external_dependencies": {"modules": ["TypeHandler", "URL", "ParseException", "MalformedURLException"]}, "category": "unit", "description": "Tests the successful creation of a URL using TypeHandler.createValue."}, {"name": "testCreateValueThrowsParseException", "primary_tested": ["TypeHandler.createValue(String,Class)"], "external_dependencies": {"modules": ["TypeHandler", "URL", "ParseException"]}, "category": "unit", "description": "Tests that TypeHandler.createValue throws a ParseException when given an invalid URL."}]}, {"file_path": "src/test/java/org/apache/commons/cli/ParseException_wrapTest.java", "testclass_name": "ParseException_wrapTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;"], "name": "ParseException_wrapTest", "description": "Unit tests for the ParseException.wrap method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testWrapWithUnsupportedOperationException", "primary_tested": ["ParseException.wrap(Exception)"], "external_dependencies": {"modules": ["UnsupportedOperationException", "ParseException"]}, "category": "unit", "description": "Tests that ParseException.wrap correctly wraps an UnsupportedOperationException."}, {"name": "testWrapWithParseException", "primary_tested": ["ParseException.wrap(Exception)"], "external_dependencies": {"modules": ["ParseException"]}, "category": "unit", "description": "Tests that ParseException.wrap returns the same ParseException instance when given a ParseException."}, {"name": "testWrapWithOtherException", "primary_tested": ["ParseException.wrap(Exception)"], "external_dependencies": {"modules": ["IllegalArgumentException", "ParseException"]}, "category": "unit", "description": "Tests that ParseException.wrap correctly wraps an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/apache/commons/cli/HelpFormatter_printUsageTest.java", "testclass_name": "HelpFormatter_printUsageTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.io.PrintWriter;", "import java.io.StringWriter;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "HelpFormatter_printUsageTest", "description": "Unit tests for the printUsage method of the HelpFormatter class.", "class_members": {"variables": [{"name": "helpFormatter", "type": "HelpFormatter"}, {"name": "stringWriter", "type": "StringWriter"}, {"name": "printWriter", "type": "PrintWriter"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testPrintUsage", "primary_tested": ["HelpFormatter.printUsage(PrintWriter,int,String)"], "external_dependencies": {"modules": ["HelpFormatter", "PrintWriter", "StringWriter"], "class_members": [{"name": "helpFormatter", "type": "variable"}, {"name": "stringWriter", "type": "variable"}, {"name": "printWriter", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the printUsage method of the HelpFormatter to ensure it correctly formats and prints the usage message."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Option_getValueTest.java", "testclass_name": "Option_getValueTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Option_getValueTest", "description": "Unit tests for the getValue method of the Option class in the Apache Commons CLI library.", "class_members": {"variables": [{"name": "option", "type": "Option"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetValueWithDefaultValue", "primary_tested": ["Option.getValue(String)"], "external_dependencies": {"modules": ["Option"], "class_members": [{"name": "option", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getValue method of the Option class when a default value is provided and no values are set."}, {"name": "testGetValueWithPopulatedValues", "primary_tested": ["Option.getValue(String)"], "associated_methods": ["Option.processValue(String)"], "external_dependencies": {"modules": ["Option"], "class_members": [{"name": "option", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getValue method of the Option class when values are already populated."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Option_setTypeTest.java", "testclass_name": "Option_setTypeTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Option_setTypeTest", "description": "Unit tests for the setType method of the Option class.", "class_members": {"variables": [{"name": "option", "type": "Option"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetTypeWithClass", "primary_tested": ["Option.setType(Class)"], "associated_methods": ["Option.getType()"], "external_dependencies": {"modules": ["Option", "Integer"], "class_members": [{"name": "option", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests setting the type of the Option using a Class object."}, {"name": "testSetTypeWithObject", "primary_tested": ["Option.setType(Object)"], "associated_methods": ["Option.getType()"], "external_dependencies": {"modules": ["Option", "Integer"], "class_members": [{"name": "option", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests setting the type of the Option using an Object."}]}, {"file_path": "src/test/java/org/apache/commons/cli/TypeHandler_getConverterTest.java", "testclass_name": "TypeHandler_getConverterTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.nio.file.Path;", "import java.util.HashMap;", "import java.util.Map;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "TypeHandler_getConverterTest", "description": "Unit tests for the TypeHandler's getConverter method.", "class_members": {"variables": [{"name": "typeHandler", "type": "TypeHandler"}, {"name": "converterMap", "type": "Map<Class<?>, Converter<?, ? extends Throwable>>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetConverterExisting", "primary_tested": ["TypeHandler.getConverter(Class<? extends Path>)"], "external_dependencies": {"modules": ["TypeHandler", "Converter", "Path"], "class_members": [{"name": "typeHandler", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the retrieval of an existing converter for the Path class."}, {"name": "testGetConverterDefault", "primary_tested": ["TypeHandler.getConverter(Class<? extends String>)"], "external_dependencies": {"modules": ["TypeHandler", "Converter", "String"], "class_members": [{"name": "typeHandler", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the retrieval of the default converter for the String class."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_addOptionsTest.java", "testclass_name": "Options_addOptionsTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Options_addOptionsTest", "description": "Unit tests for the addOptions method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testAddOptionsSuccess", "primary_tested": ["Options.addOptions(Options)"], "associated_methods": ["Options.addOption(String,String,boolean,String)", "Options.hasOption(String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the successful addition of options to the Options object."}, {"name": "testAddOptionsDuplicateKey", "primary_tested": ["Options.addOptions(Options)"], "associated_methods": ["Options.addOption(String,String,boolean,String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the handling of duplicate keys when adding options to the Options object, expecting an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/apache/commons/cli/DeprecatedAttributes_toStringTest.java", "testclass_name": "DeprecatedAttributes_toStringTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "DeprecatedAttributes_toStringTest", "description": "Unit tests for the toString method of DeprecatedAttributes class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testToStringWithAllAttributes", "primary_tested": ["DeprecatedAttributes.toString()"], "external_dependencies": {"modules": ["DeprecatedAttributes"]}, "category": "unit", "description": "Tests the toString method with all attributes set."}, {"name": "testToStringWithForRemovalOnly", "primary_tested": ["DeprecatedAttributes.toString()"], "external_dependencies": {"modules": ["DeprecatedAttributes"]}, "category": "unit", "description": "Tests the toString method with only the forRemoval attribute set."}, {"name": "testToStringWithSinceOnly", "primary_tested": ["DeprecatedAttributes.toString()"], "external_dependencies": {"modules": ["DeprecatedAttributes"]}, "category": "unit", "description": "Tests the toString method with only the since attribute set."}, {"name": "testToStringWithDescriptionOnly", "primary_tested": ["DeprecatedAttributes.toString()"], "external_dependencies": {"modules": ["DeprecatedAttributes"]}, "category": "unit", "description": "Tests the toString method with only the description attribute set."}, {"name": "testToStringWithNoAttributes", "primary_tested": ["DeprecatedAttributes.toString()"], "external_dependencies": {"modules": ["DeprecatedAttributes"]}, "category": "unit", "description": "Tests the toString method with no attributes set."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_hasShortOptionTest.java", "testclass_name": "Options_hasShortOptionTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Options_hasShortOptionTest", "description": "Unit tests for the hasShortOption method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testHasShortOption_ExistingOption", "primary_tested": ["Options.hasShortOption(String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasShortOption method for an existing short option."}, {"name": "testHasShortOption_NonExistingOption", "primary_tested": ["Options.hasShortOption(String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasShortOption method for a non-existing short option."}, {"name": "testHasShortOption_WithLeadingHyphens", "primary_tested": ["Options.hasShortOption(String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasShortOption method with leading hyphens in the option name."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_addOptionGroupTest.java", "testclass_name": "Options_addOptionGroupTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Options_addOptionGroupTest", "description": "Unit tests for adding OptionGroup to Options with required and non-required groups.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testAddOptionGroupWithRequiredGroup", "primary_tested": ["Options.addOptionGroup(OptionGroup)"], "associated_methods": ["OptionGroup.setRequired(boolean)", "OptionGroup.addOption(Option)", "Options.getRequiredOptions()", "Option.isRequired()", "Options.getOptionGroup(Option)"], "external_dependencies": {"modules": ["Options", "OptionGroup", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests adding a required OptionGroup to Options and verifies the group is marked as required and options are not individually required."}, {"name": "testAddOptionGroupWithNonRequiredGroup", "primary_tested": ["Options.addOptionGroup(OptionGroup)"], "associated_methods": ["OptionGroup.setRequired(boolean)", "OptionGroup.addOption(Option)", "Options.getRequiredOptions()", "Option.isRequired()", "Options.getOptionGroup(Option)"], "external_dependencies": {"modules": ["Options", "OptionGroup", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests adding a non-required OptionGroup to Options and verifies the group is not marked as required and options are not individually required."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_getOptionTest.java", "testclass_name": "Options_getOptionTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Options_getOptionTest", "description": "Unit tests for the getOption method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetOptionShort", "primary_tested": ["Options.getOption(String)"], "associated_methods": ["Options.addOption(String,String,boolean,String)", "Option.getOpt()"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the retrieval of a short option from the Options."}, {"name": "testGetOptionLong", "primary_tested": ["Options.getOption(String)"], "associated_methods": ["Options.addOption(String,String,boolean,String)", "Option.getLongOpt()"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the retrieval of a long option from the Options."}, {"name": "testGetOptionNonexistent", "primary_tested": ["Options.getOption(String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the retrieval of a nonexistent option from the Options, expecting a null result."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_getMatchingOptionsTest.java", "testclass_name": "Options_getMatchingOptionsTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.util.Collections;", "import java.util.List;"], "name": "Options_getMatchingOptionsTest", "description": "Unit tests for the getMatchingOptions method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetMatchingOptionsExactMatch", "primary_tested": ["Options.getMatchingOptions(String)"], "external_dependencies": {"modules": ["Options", "Collections"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getMatchingOptions method for an exact match."}, {"name": "testGetMatchingOptionsPartialMatch", "primary_tested": ["Options.getMatchingOptions(String)"], "external_dependencies": {"modules": ["Options", "Collections"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getMatchingOptions method for a partial match."}, {"name": "testGetMatchingOptionsNoMatch", "primary_tested": ["Options.getMatchingOptions(String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getMatchingOptions method for no match."}, {"name": "testGetMatchingOptionsLeadingHyphens", "primary_tested": ["Options.getMatchingOptions(String)"], "external_dependencies": {"modules": ["Options", "Collections"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getMatchingOptions method with leading hyphens."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_addRequiredOptionTest.java", "testclass_name": "Options_addRequiredOptionTest", "dependencies": ["package org.apache.commons.cli;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "Options_addRequiredOptionTest", "description": "Unit tests for the addRequiredOption method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testAddRequiredOption", "primary_tested": ["Options.addRequiredOption(String,String,boolean,String)"], "associated_methods": ["Options.hasOption(String)", "Options.hasLongOption(String)", "Options.getOption(String)", "Option.isRequired()", "Option.getDescription()"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the addition of a required option with an argument."}, {"name": "testAddRequiredOptionWithoutArgument", "primary_tested": ["Options.addRequiredOption(String,String,boolean,String)"], "associated_methods": ["Options.hasOption(String)", "Options.hasLongOption(String)", "Options.getOption(String)", "Option.isRequired()", "Option.hasArg()", "Option.getDescription()"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the addition of a required option without an argument."}, {"name": "testAddRequiredOptionWithLongOptOnly", "primary_tested": ["Options.addRequiredOption(String,String,boolean,String)"], "associated_methods": ["Options.hasOption(String)", "Options.hasLongOption(String)", "Options.getOption(String)", "Option.isRequired()", "Option.getDescription()"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the addition of a required option with only a long option."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionGroup_setSelectedTest.java", "testclass_name": "OptionGroup_setSelectedTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "OptionGroup_setSelectedTest", "description": "Unit tests for the setSelected method in the OptionGroup class.", "class_members": {"variables": [{"name": "optionGroup", "type": "OptionGroup"}, {"name": "optionA", "type": "Option"}, {"name": "optionB", "type": "Option"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetSelectedWithNullOption", "primary_tested": ["OptionGroup.setSelected(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option", "AlreadySelectedException"], "class_members": [{"name": "optionGroup", "type": "variable"}, {"name": "optionA", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setSelected method with a null option to ensure it resets the selected option."}, {"name": "testSetSelectedWithSameOption", "primary_tested": ["OptionGroup.setSelected(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option", "AlreadySelectedException"], "class_members": [{"name": "optionGroup", "type": "variable"}, {"name": "optionA", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setSelected method with the same option to ensure it does not throw an exception."}, {"name": "testSetSelectedWithDifferentOption", "primary_tested": ["OptionGroup.setSelected(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option", "AlreadySelectedException"], "class_members": [{"name": "optionGroup", "type": "variable"}, {"name": "optionA", "type": "variable"}, {"name": "optionB", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setSelected method with a different option to ensure it throws an AlreadySelectedException."}]}, {"file_path": "src/test/java/org/apache/commons/cli/OptionGroup_toStringTest.java", "testclass_name": "OptionGroup_toStringTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "OptionGroup_toStringTest", "description": "Unit tests for the toString method of the OptionGroup class.", "class_members": {"variables": [{"name": "optionGroup", "type": "OptionGroup"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testToStringWithSingleOption", "primary_tested": ["OptionGroup.toString()"], "associated_methods": ["OptionGroup.addOption(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the toString method of OptionGroup with a single option."}, {"name": "testToStringWithMultipleOptions", "primary_tested": ["OptionGroup.toString()"], "associated_methods": ["OptionGroup.addOption(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the toString method of OptionGroup with multiple options."}, {"name": "testToStringWithLongOption", "primary_tested": ["OptionGroup.toString()"], "associated_methods": ["OptionGroup.addOption(Option)"], "external_dependencies": {"modules": ["OptionGroup", "Option"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the toString method of OptionGroup with a long option."}, {"name": "testToStringWithNoOptions", "primary_tested": ["OptionGroup.toString()"], "external_dependencies": {"modules": ["OptionGroup"], "class_members": [{"name": "optionGroup", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the toString method of OptionGroup with no options."}]}, {"file_path": "src/test/java/org/apache/commons/cli/PatternOptionBuilder_parsePatternTest.java", "testclass_name": "PatternOptionBuilder_parsePatternTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.Test;"], "name": "PatternOptionBuilder_parsePatternTest", "description": "Unit tests for the parsePattern method in PatternOptionBuilder class.", "class_members": {"variables": [{"name": "pattern", "type": "String"}, {"name": "options", "type": "Options"}]}, "fixtures": [], "test_cases": [{"name": "testParsePatternSingleOption", "primary_tested": ["PatternOptionBuilder.parsePattern(String)"], "external_dependencies": {"modules": ["PatternOptionBuilder", "Options"], "class_members": [{"name": "pattern", "type": "variable"}, {"name": "options", "type": "variable"}]}, "category": "unit", "description": "Tests the parsing of a single option pattern."}, {"name": "testParsePatternOptionWithType", "primary_tested": ["PatternOptionBuilder.parsePattern(String)"], "external_dependencies": {"modules": ["PatternOptionBuilder", "Options"], "class_members": [{"name": "pattern", "type": "variable"}, {"name": "options", "type": "variable"}]}, "category": "unit", "description": "Tests the parsing of an option pattern with a specified type."}, {"name": "testParsePatternOptionWithRequired", "primary_tested": ["PatternOptionBuilder.parsePattern(String)"], "external_dependencies": {"modules": ["PatternOptionBuilder", "Options"], "class_members": [{"name": "pattern", "type": "variable"}, {"name": "options", "type": "variable"}]}, "category": "unit", "description": "Tests the parsing of an option pattern with a required flag."}, {"name": "testParsePatternMultipleOptions", "primary_tested": ["PatternOptionBuilder.parsePattern(String)"], "external_dependencies": {"modules": ["PatternOptionBuilder", "Options"], "class_members": [{"name": "pattern", "type": "variable"}, {"name": "options", "type": "variable"}]}, "category": "unit", "description": "Tests the parsing of multiple option patterns."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Option_equalsTest.java", "testclass_name": "Option_equalsTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Option_equalsTest", "description": "Unit tests for the equals method in the Option class.", "class_members": {"variables": [{"name": "option1", "type": "Option"}, {"name": "option2", "type": "Option"}, {"name": "option3", "type": "Option"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEqualsSameInstance", "primary_tested": ["Option.equals(Object)"], "external_dependencies": {"modules": ["Option"], "class_members": [{"name": "option1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing the same instance of an Option."}, {"name": "testEqualsDifferentClass", "primary_tested": ["Option.equals(Object)"], "external_dependencies": {"modules": ["Option"], "class_members": [{"name": "option1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing an Option with an object of a different class."}, {"name": "testEqualsDifferentOptions", "primary_tested": ["Option.equals(Object)"], "external_dependencies": {"modules": ["Option"], "class_members": [{"name": "option1", "type": "variable"}, {"name": "option2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing different instances of Option."}, {"name": "testEqualsSameOptions", "primary_tested": ["Option.equals(Object)"], "external_dependencies": {"modules": ["Option"], "class_members": [{"name": "option1", "type": "variable"}, {"name": "option3", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing identical instances of Option."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_hasOptionTest.java", "testclass_name": "Options_hasOptionTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Options_hasOptionTest", "description": "Unit tests for the hasOption method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testHasOptionWithShortOption", "primary_tested": ["Options.hasOption(String)"], "associated_methods": ["Options.addOption(String,String,boolean,String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasOption method with a short option."}, {"name": "testHasOptionWithLongOption", "primary_tested": ["Options.hasOption(String)"], "associated_methods": ["Options.addOption(String,String,boolean,String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasOption method with a long option."}, {"name": "testHasOptionWithNonExistentOption", "primary_tested": ["Options.hasOption(String)"], "associated_methods": ["Options.addOption(String,String,boolean,String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasOption method with a non-existent option."}, {"name": "testHasOptionWithHyphens", "primary_tested": ["Options.hasOption(String)"], "associated_methods": ["Options.addOption(String,String,boolean,String)"], "external_dependencies": {"modules": ["Options"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasOption method with options prefixed by hyphens."}]}, {"file_path": "src/test/java/org/apache/commons/cli/Options_addOptionTest.java", "testclass_name": "Options_addOptionTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "Options_addOptionTest", "description": "Unit tests for the addOption method in the Options class.", "class_members": {"variables": [{"name": "options", "type": "Options"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testAddOptionWithLongOpt", "primary_tested": ["Options.addOption(Option)"], "associated_methods": ["Options.hasOption(String)", "Options.hasLongOption(String)", "Options.getOption(String)"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests adding an option with a long option name to the Options object and verifies its presence and correctness."}, {"name": "testAddOptionWithoutLongOpt", "primary_tested": ["Options.addOption(Option)"], "associated_methods": ["Options.hasOption(String)", "Options.getOption(String)"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests adding an option without a long option name to the Options object and verifies its presence and correctness."}, {"name": "testAddRequiredOption", "primary_tested": ["Options.addOption(Option)"], "associated_methods": ["Options.hasOption(String)", "Options.hasLongOption(String)", "Options.getOption(String)", "Options.getRequiredOptions()"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests adding a required option to the Options object and verifies its presence, correctness, and requirement status."}, {"name": "testAddOptionTwice", "primary_tested": ["Options.addOption(Option)"], "associated_methods": ["Options.hasOption(String)", "Options.hasLongOption(String)", "Options.getOption(String)"], "external_dependencies": {"modules": ["Options", "Option"], "class_members": [{"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests adding the same option twice to the Options object and verifies that the last added option is the one that is stored."}]}, {"file_path": "src/test/java/org/apache/commons/cli/PatternOptionBuilder_getValueTypeTest.java", "testclass_name": "PatternOptionBuilder_getValueTypeTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import org.junit.jupiter.api.Test;"], "name": "PatternOptionBuilder_getValueTypeTest", "description": "Unit tests for the getValueType method in PatternOptionBuilder class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetValueType_Object", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning OBJECT_VALUE."}, {"name": "testGetValueType_String", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning STRING_VALUE."}, {"name": "testGetValueType_Number", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning NUMBER_VALUE."}, {"name": "testGetValueType_Class", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning CLASS_VALUE."}, {"name": "testGetValueType_Date", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning DATE_VALUE."}, {"name": "testGetValueType_ExistingFile", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning EXISTING_FILE_VALUE."}, {"name": "testGetValueType_File", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning FILE_VALUE."}, {"name": "testGetValueType_Files", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning FILES_VALUE."}, {"name": "testGetValueType_URL", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning URL_VALUE."}, {"name": "testGetValueType_Null", "primary_tested": ["PatternOptionBuilder.getValueType(char)"], "external_dependencies": {"modules": ["PatternOptionBuilder"]}, "category": "unit", "description": "Tests the getValueType method for returning null."}]}]