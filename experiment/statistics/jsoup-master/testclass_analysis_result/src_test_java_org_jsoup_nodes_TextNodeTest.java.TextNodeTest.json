{"file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "dependencies": ["package org.jsoup.nodes;", "import org.jsoup.Jsoup;", "import org.jsoup.TextUtil;", "import org.jsoup.helper.ValidationException;", "import org.jsoup.internal.StringUtil;", "import org.junit.jupiter.api.Test;", "import java.util.List;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "TextNodeTest", "description": "Unit tests for the TextNode class in the Jsoup library, focusing on various text manipulation and validation functionalities.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testBlank", "primary_tested": ["TextNode.isBlank()"], "external_dependencies": {"modules": ["TextNode"], "class_members": []}, "category": "unit", "description": "Tests the isBlank functionality of the TextNode to check if the text content is blank."}, {"name": "testTextBean", "primary_tested": ["TextNode.text()"], "associated_methods": ["TextNode.attr(String,String)", "TextNode.outerHtml()"], "external_dependencies": {"modules": ["Jsoup", "TextNode", "Element", "TextUtil"], "class_members": []}, "category": "unit", "description": "Tests the text extraction and manipulation functionalities of the TextNode within an HTML document context."}, {"name": "testSplitText", "primary_tested": ["TextNode.splitText(int)"], "associated_methods": ["TextNode.getWholeText()"], "external_dependencies": {"modules": ["Jsoup", "TextNode", "Element"], "class_members": []}, "category": "unit", "description": "Tests the splitText functionality of the TextNode to split the text content at a specified index."}, {"name": "testSplitAnEmbolden", "primary_tested": ["TextNode.splitText(int)", "TextNode.wrap(String)"], "associated_methods": ["TextNode.outerHtml()"], "external_dependencies": {"modules": ["Jsoup", "TextNode", "Element", "TextUtil"], "class_members": []}, "category": "unit", "description": "Tests the splitText and wrap functionalities of the TextNode to split and then wrap the text content with an HTML tag."}, {"name": "testSplitTextValidation", "primary_tested": ["TextNode.splitText(int)"], "external_dependencies": {"modules": ["Jsoup", "TextNode", "Element", "ValidationException"], "class_members": []}, "category": "unit", "description": "Tests the validation of the splitText functionality of the TextNode to ensure it throws exceptions for invalid split indices."}, {"name": "testWithSupplementaryCharacter", "primary_tested": ["TextNode.outerHtml()"], "external_dependencies": {"modules": ["Jsoup", "TextNode"], "class_members": []}, "category": "unit", "description": "Tests the handling of supplementary characters in the TextNode."}, {"name": "testLeadNodesHaveNoChildren", "primary_tested": ["TextNode.childNodes()"], "external_dependencies": {"modules": ["Jsoup", "TextNode", "Element"], "class_members": []}, "category": "unit", "description": "Tests that TextNode instances do not have child nodes."}, {"name": "testSpaceNormalise", "primary_tested": ["TextNode.getWholeText()", "TextNode.text()", "TextNode.outerHtml()", "TextNode.toString()"], "external_dependencies": {"modules": ["TextNode", "Element"], "class_members": []}, "category": "unit", "description": "Tests the normalization of spaces in the TextNode."}, {"name": "testClone", "primary_tested": ["TextNode.clone()"], "associated_methods": ["TextNode.text()", "TextNode.outerHtml()"], "external_dependencies": {"modules": ["TextNode"], "class_members": []}, "category": "unit", "description": "Tests the cloning functionality of the TextNode to ensure the clone is independent."}, {"name": "testCloneAfterAttributesHit", "primary_tested": ["TextNode.clone()"], "associated_methods": ["TextNode.text()", "TextNode.attributes()"], "external_dependencies": {"modules": ["TextNode"], "class_members": []}, "category": "unit", "description": "Tests the cloning functionality of the TextNode after accessing its attributes."}, {"name": "testHasTextWhenIterating", "primary_tested": ["TextNode.text()", "TextNode.getWholeText()"], "external_dependencies": {"modules": ["Jsoup", "TextNode", "Element", "StringUtil"], "class_members": []}, "category": "unit", "description": "Tests the presence of text in TextNode instances when iterating through elements."}, {"name": "createFromEncoded", "primary_tested": ["TextNode.createFromEncoded(String)"], "external_dependencies": {"modules": ["TextNode"], "class_members": []}, "category": "unit", "description": "Tests the creation of a TextNode from encoded text."}, {"name": "normaliseWhitespace", "primary_tested": ["TextNode.normaliseWhitespace(String)"], "external_dependencies": {"modules": ["TextNode"], "class_members": []}, "category": "unit", "description": "Tests the normalization of whitespace in a string."}, {"name": "stripLeadingWhitespace", "primary_tested": ["TextNode.stripLeadingWhitespace(String)"], "external_dependencies": {"modules": ["TextNode"], "class_members": []}, "category": "unit", "description": "Tests the stripping of leading whitespace from a string."}, {"name": "leafNodeAttributes", "primary_tested": ["TextNode.attr(String,String)", "TextNode.hasAttributes()", "TextNode.attributes()", "TextNode.coreValue(String)", "TextNode.hasAttr(String)", "TextNode.removeAttr(String)", "TextNode.baseUri()", "TextNode.absUrl(String)", "TextNode.childNodeSize()", "TextNode.empty()", "TextNode.ensureChildNodes()", "TextNode.hasSameValue(TextNode)", "TextNode.clone()"], "external_dependencies": {"modules": ["TextNode", "Element"], "class_members": []}, "category": "unit", "description": "Tests various attribute-related functionalities of the TextNode."}]}