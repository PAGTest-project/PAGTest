{"file_path": "src/test/java/org/jsoup/safety/Safelist_basicWithImagesTest.java", "testclass_name": "Safelist_basicWithImagesTest", "dependencies": ["package org.jsoup.safety;", "import org.jsoup.nodes.Attribute;", "import org.jsoup.nodes.Attributes;", "import org.jsoup.nodes.Element;", "import org.jsoup.parser.Tag;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "Safelist_basicWithImagesTest", "description": "Tests for the Safelist class with basic image handling.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testBasicWithImages_AddsImgTag", "primary_tested": ["Safelist.isSafeTag(String)"], "external_dependencies": {"modules": ["Safelist"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the 'img' tag is considered safe by the Safelist."}, {"name": "testBasicWithImages_AddsImgAttributes", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "associated_methods": ["Element.attributes()", "Attributes.put(String,String)", "Element.attributes().addAll(Attributes)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attributes", "Attribute", "Tag"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the 'img' tag attributes are considered safe by the Safelist."}, {"name": "testBasicWithImages_AddsImgProtocols", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "associated_methods": ["Element.attributes()", "Attributes.put(String,String)", "Element.attributes().addAll(Attributes)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attributes", "Attribute", "Tag"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the 'img' tag protocols (http, https) are considered safe by the Safelist."}, {"name": "testBasicWithImages_InvalidProtocol", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "associated_methods": ["Element.attributes()", "Attributes.put(String,String)", "Element.attributes().addAll(Attributes)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attributes", "Attribute", "Tag"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if an invalid protocol (ftp) for the 'img' tag is considered unsafe by the Safelist."}]}