{"file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "dependencies": ["package org.jsoup.parser;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "Tag_valueOfTest", "description": "Unit tests for the Tag.valueOf method in the Jsoup parser.", "class_members": {"variables": [{"name": "settings", "type": "ParseSettings"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testValueOfKnownTag", "primary_tested": ["Tag.valueOf(String,String,ParseSettings)"], "external_dependencies": {"modules": ["Tag", "ParseSettings"], "class_members": [{"name": "settings", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the valueOf method for a known tag, ensuring the tag is created and has the correct name and namespace."}, {"name": "testValueOfUnknownTag", "primary_tested": ["Tag.valueOf(String,String,ParseSettings)"], "external_dependencies": {"modules": ["Tag", "ParseSettings"], "class_members": [{"name": "settings", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the valueOf method for an unknown tag, ensuring the tag is created and has the correct name, namespace, and block status."}, {"name": "testValueOfPreserveTagCase", "primary_tested": ["Tag.valueOf(String,String,ParseSettings)"], "external_dependencies": {"modules": ["Tag", "ParseSettings"], "class_members": [{"name": "settings", "type": "variable"}]}, "category": "unit", "description": "Tests the valueOf method with settings to preserve tag case, ensuring the tag is created and has the correct name and namespace."}, {"name": "testValueOfNormalizeTag", "primary_tested": ["Tag.valueOf(String,String,ParseSettings)"], "external_dependencies": {"modules": ["Tag", "ParseSettings"], "class_members": [{"name": "settings", "type": "variable"}]}, "category": "unit", "description": "Tests the valueOf method with settings to normalize the tag, ensuring the tag is created and has the correct name and namespace."}, {"name": "testValueOfInvalidTagName", "primary_tested": ["Tag.valueOf(String,String,ParseSettings)"], "external_dependencies": {"modules": ["Tag", "ParseSettings"], "class_members": [{"name": "settings", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the valueOf method with an invalid tag name, ensuring an IllegalArgumentException is thrown."}, {"name": "testValueOfInvalidNamespace", "primary_tested": ["Tag.valueOf(String,String,ParseSettings)"], "external_dependencies": {"modules": ["Tag", "ParseSettings"], "class_members": [{"name": "settings", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the valueOf method with an invalid namespace, ensuring an IllegalArgumentException is thrown."}]}