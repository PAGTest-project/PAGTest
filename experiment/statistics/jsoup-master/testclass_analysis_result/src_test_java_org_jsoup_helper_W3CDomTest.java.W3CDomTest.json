{"file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "dependencies": ["package org.jsoup.helper;", "import org.jsoup.Jsoup;", "import org.jsoup.TextUtil;", "import org.jsoup.integration.ParseTest;", "import org.jsoup.nodes.Element;", "import org.jsoup.nodes.TextNode;", "import org.junit.jupiter.api.Test;", "import org.w3c.dom.Document;", "import org.w3c.dom.Node;", "import org.w3c.dom.NodeList;", "import org.xml.sax.InputSource;", "import javax.xml.parsers.DocumentBuilder;", "import javax.xml.parsers.DocumentBuilderFactory;", "import javax.xml.parsers.ParserConfigurationException;", "import javax.xml.transform.OutputKeys;", "import javax.xml.xpath.XPathConstants;", "import javax.xml.xpath.XPathExpression;", "import javax.xml.xpath.XPathExpressionException;", "import javax.xml.xpath.XPathFactory;", "import java.io.ByteArrayInputStream;", "import java.io.File;", "import java.io.IOException;", "import java.io.StringReader;", "import java.nio.charset.StandardCharsets;", "import java.util.Locale;", "import java.util.Map;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "W3CDomTest", "description": "Tests for the W3CDom class, which converts Jsoup documents to W3C DOM documents.", "class_members": {"variables": [], "methods": [{"name": "parseXml", "signature": "private static Document parseXml(String xml, boolean nameSpaceAware)"}, {"name": "xpath", "signature": "private NodeList xpath(Document w3cDoc, String query) throws XPathExpressionException"}, {"name": "output", "signature": "private String output(String in, boolean modeHtml)"}, {"name": "assertEqualsIgnoreCase", "signature": "private void assertEqualsIgnoreCase(String want, String have)"}], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "simpleConversion", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)", "W3CDom.asString(Document, Map<String, String>)"], "associated_methods": ["Document.getElementsByTagName(String)", "Document.normalizeDocument()", "TextUtil.stripNewlines(String)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "NodeList", "TextUtil"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the conversion of a simple HTML document from Jsoup to W3C DOM and back, ensuring the structure and content are preserved."}, {"name": "namespacePreservation", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["Node.getNamespaceURI()", "Node.getLocalName()", "Node.getNodeName()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the preservation of namespaces during the conversion of a Jsoup document to W3C DOM, ensuring namespace information is correctly maintained."}, {"name": "handlesInvalidAttributeNames", "primary_tested": ["W3CDom.convert(org.jsoup.nodes.Document)"], "associated_methods": ["Element.hasAttr(String)", "W3CDom.asString(Document, Map<String, String>)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "Element"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the handling of invalid attribute names during the conversion of a Jsoup document to W3C DOM, ensuring the conversion process does not fail."}, {"name": "htmlInputDocMaintainsHtmlAttributeNames", "primary_tested": ["W3CDom.convert(org.jsoup.nodes.Document)", "W3CDom.asString(Document, Map<String, String>)"], "associated_methods": ["TextUtil.stripNewlines(String)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "TextUtil"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that HTML attribute names are maintained correctly when converting a Jsoup document to W3C DOM and back, ensuring Unicode attribute names are preserved."}, {"name": "xmlInputDocMaintainsHtmlAttributeNames", "primary_tested": ["W3CDom.convert(org.jsoup.nodes.Document)", "W3CDom.asString(Document, Map<String, String>)"], "associated_methods": ["TextUtil.stripNewlines(String)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "TextUtil"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that HTML attribute names are maintained correctly when converting a Jsoup document to W3C DOM and back, ensuring Unicode attribute names are preserved in XML syntax."}, {"name": "handlesInvalidTagAsText", "primary_tested": ["W3CDom.convert(org.jsoup.nodes.Document)", "W3CDom.asString(Document, Map<String, String>)"], "associated_methods": [], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the handling of invalid tags during the conversion of a Jsoup document to W3C DOM, ensuring invalid tags are treated as text."}, {"name": "canConvertToCustomDocument", "primary_tested": ["W3CDom.convert(org.jsoup.nodes.Document, Document)"], "associated_methods": [], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "DocumentBuilderFactory"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ability to convert a Jsoup document to a custom W3C DOM document, ensuring the conversion process works with custom document builders."}, {"name": "treatsUndeclaredNamespaceAsLocalName", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["Node.getNamespaceURI()", "Node.getLocalName()", "Node.getNodeName()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the handling of undeclared namespaces during the conversion of a Jsoup document to W3C DOM, ensuring undeclared namespaces are treated as local names."}, {"name": "xmlnsXpathTest", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["XPathExpression.evaluate(Document, QName)", "NodeList.getLength()", "NodeList.item(int)", "Node.getLocalName()", "Node.getNamespaceURI()", "Node.getPrefix()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "XPathExpression", "NodeList", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the XPath functionality with namespace-aware documents, ensuring XPath queries work correctly with namespaces."}, {"name": "xhtmlNoNamespace", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["XPathExpression.evaluate(Document, QName)", "NodeList.getLength()", "NodeList.item(int)", "Node.getLocalName()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "XPathExpression", "NodeList", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the XPath functionality with non-namespace-aware documents, ensuring XPath queries work correctly without namespaces."}, {"name": "canDisableNamespaces", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["XPathExpression.evaluate(Document, QName)", "NodeList.getLength()", "NodeList.item(int)", "Node.getLocalName()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "XPathExpression", "NodeList", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ability to disable namespaces during the conversion of a Jsoup document to W3C DOM, ensuring XPath queries work correctly without namespaces."}, {"name": "testRoundTripDoctype", "primary_tested": ["W3CDom.convert(org.jsoup.nodes.Document)", "W3CDom.asString(Document, Map<String, String>)"], "associated_methods": ["TextUtil.normalizeSpaces(String)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "TextUtil"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the round-trip conversion of a document with different DOCTYPE declarations, ensuring the DOCTYPE is preserved correctly."}, {"name": "canOutputHtmlWithoutNamespace", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)", "W3CDom.asString(Document, Map<String, String>)"], "associated_methods": [], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ability to output HTML without namespaces, ensuring the output is correctly formatted without namespace declarations."}, {"name": "convertsElementsAndMaintainsSource", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["Node.getLocalName()", "Node.getUserData(String)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the conversion of elements from Jsoup to W3C DOM while maintaining the source information, ensuring the original Jsoup elements can be retrieved."}, {"name": "canXmlParseCdataNodes", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["XPathExpression.evaluate(Document, QName)", "NodeList.getLength()", "NodeList.item(int)", "Node.getTextContent()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "XPathExpression", "NodeList", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the parsing of CDATA nodes in XML documents, ensuring CDATA sections are correctly handled during conversion."}, {"name": "handlesEmptyDoctype", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["Document.getDoctype()", "Node.getTextContent()"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "Node"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the handling of an empty DOCTYPE during the conversion of a Jsoup document to W3C DOM, ensuring the conversion process does not fail."}, {"name": "testHtmlParseAttributesAreCaseInsensitive", "primary_tested": ["W3CDom.fromJsoup(org.jsoup.nodes.Document)"], "associated_methods": ["Document.getElementsByTagName(String)", "NodeList.getLength()", "NodeList.item(int)", "Element.getAttribute(String)"], "external_dependencies": {"modules": ["Jsoup", "W3CDom", "Document", "NodeList", "Element"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the case-insensitivity of HTML attribute names during the parsing of a Jsoup document, ensuring attribute names are correctly matched regardless of case."}]}