{"file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "dependencies": ["package org.jsoup.nodes;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "Element_hasClassTest", "description": "Unit tests for the hasClass method in the Element class.", "class_members": {"variables": [{"name": "element", "type": "Element"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testHasClass_NoAttributes", "primary_tested": ["Element.hasClass(String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method when the element has no attributes."}, {"name": "testHasClass_ExactMatch", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method when the class attribute exactly matches the provided class name."}, {"name": "testHasClass_MultipleClasses", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method when the class attribute contains multiple classes."}, {"name": "testHasClass_WhitespaceHandling", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method with various whitespace handling scenarios."}, {"name": "testHasClass_CaseInsensitivity", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method for case insensitivity."}, {"name": "testHasClass_EmptyClassAttribute", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method when the class attribute is empty."}, {"name": "testHasClass_LongerThanAttribute", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method when the provided class name is longer than the class attribute."}, {"name": "testHasClass_LastEntry", "primary_tested": ["Element.hasClass(String)"], "associated_methods": ["Element.attr(String,String)"], "external_dependencies": {"modules": ["Element"], "class_members": [{"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasClass method when the provided class name is the last entry in the class attribute."}]}