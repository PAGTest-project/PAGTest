{"file_path": "src/test/java/org/jsoup/safety/Safelist_isSafeAttributeTest.java", "testclass_name": "Safelist_isSafeAttributeTest", "dependencies": ["package org.jsoup.safety;", "import org.jsoup.nodes.Attribute;", "import org.jsoup.nodes.Element;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "Safelist_isSafeAttributeTest", "description": "Unit tests for the Safelist class's isSafeAttribute method.", "class_members": {"variables": [{"name": "safelist", "type": "Safelist"}, {"name": "element", "type": "Element"}, {"name": "validAttribute", "type": "Attribute"}, {"name": "invalidAttribute", "type": "Attribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testIsSafeAttribute_validAttribute", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attribute"], "class_members": [{"name": "safelist", "type": "variable"}, {"name": "element", "type": "variable"}, {"name": "validAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that a valid attribute is recognized as safe by the Safelist."}, {"name": "testIsSafeAttribute_invalidAttribute", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attribute"], "class_members": [{"name": "safelist", "type": "variable"}, {"name": "element", "type": "variable"}, {"name": "invalidAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that an invalid attribute is recognized as unsafe by the Safelist."}, {"name": "testIsSafeAttribute_enforcedAttribute", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "associated_methods": ["Safelist.addEnforcedAttribute(String,String,String)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attribute"], "class_members": [{"name": "safelist", "type": "variable"}, {"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that an enforced attribute is recognized as safe by the Safelist."}, {"name": "testIsSafeAttribute_noAttributesDefined", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attribute"], "class_members": [{"name": "element", "type": "variable"}, {"name": "validAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that an attribute is recognized as unsafe when no attributes are defined in the Safelist."}, {"name": "testIsSafeAttribute_allTag", "primary_tested": ["Safelist.isSafeAttribute(String,Element,Attribute)"], "associated_methods": ["Safelist.addAttributes(String,String)"], "external_dependencies": {"modules": ["Safelist", "Element", "Attribute"], "class_members": [{"name": "safelist", "type": "variable"}, {"name": "element", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that an attribute is recognized as safe when added to all tags in the Safelist."}]}