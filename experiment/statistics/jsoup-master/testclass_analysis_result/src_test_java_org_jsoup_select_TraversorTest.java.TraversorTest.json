{"file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "dependencies": ["package org.jsoup.select;", "import org.jsoup.Jsoup;", "import org.jsoup.TextUtil;", "import org.jsoup.nodes.Document;", "import org.jsoup.nodes.Element;", "import org.jsoup.nodes.Node;", "import org.jsoup.nodes.TextNode;", "import org.junit.jupiter.api.Test;", "import java.util.concurrent.atomic.AtomicBoolean;", "import java.util.concurrent.atomic.AtomicInteger;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "TraversorTest", "description": "Unit tests for the NodeTraversor class, focusing on various filtering and traversal scenarios.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "filterVisit", "primary_tested": ["NodeTraversor.filter(NodeFilter,Elements)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "Element", "TextNode", "NodeFilter", "FilterResult"]}, "category": "unit", "description": "Tests the NodeTraversor filter method to ensure it correctly visits and processes nodes, accumulating their names in a specified format."}, {"name": "filterSkipChildren", "primary_tested": ["NodeTraversor.filter(NodeFilter,Elements)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "Element", "TextNode", "NodeFilter", "FilterResult"]}, "category": "unit", "description": "Tests the NodeTraversor filter method to ensure it correctly skips the children of specified nodes (e.g., 'p' elements) while processing."}, {"name": "filterSkipEntirely", "primary_tested": ["NodeTraversor.filter(NodeFilter,Elements)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "Element", "TextNode", "NodeFilter", "FilterResult"]}, "category": "unit", "description": "Tests the NodeTraversor filter method to ensure it correctly skips entire nodes (e.g., 'p' elements) while processing."}, {"name": "filterRemove", "primary_tested": ["NodeTraversor.filter(NodeFilter,Elements)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "Element", "TextNode", "NodeFilter", "FilterResult"]}, "category": "unit", "description": "Tests the NodeTraversor filter method to ensure it correctly removes specified nodes (e.g., 'p' and 'b' elements) while processing."}, {"name": "filterStop", "primary_tested": ["NodeTraversor.filter(NodeFilter,Elements)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "Element", "TextNode", "NodeFilter", "FilterResult"]}, "category": "unit", "description": "Tests the NodeTraversor filter method to ensure it correctly stops processing after encountering a specified node (e.g., 'p' element)."}, {"name": "replaceElement", "primary_tested": ["NodeTraversor.traverse(NodeVisitor,Node)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Element", "Node", "NodeVisitor"]}, "category": "unit", "description": "Tests the NodeTraversor traverse method to ensure it correctly replaces specified elements (e.g., 'i' elements) with new elements (e.g., 'u' elements) during traversal."}, {"name": "canAddChildren", "primary_tested": ["NodeTraversor.traverse(NodeVisitor,Node)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Element", "Node", "NodeVisitor"]}, "category": "unit", "description": "Tests the NodeTraversor traverse method to ensure it correctly adds children to specified elements (e.g., 'p' elements) during traversal."}, {"name": "canSpecifyOnlyHead", "primary_tested": ["NodeTraversor.traverse(NodeVisitor,Node)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "NodeVisitor"]}, "category": "unit", "description": "Tests the NodeTraversor traverse method to ensure it correctly processes nodes when only the head method of the NodeVisitor is specified."}, {"name": "canRemoveDuringHead", "primary_tested": ["NodeTraversor.traverse(NodeVisitor,Node)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "TextNode", "NodeVisitor"]}, "category": "unit", "description": "Tests the NodeTraversor traverse method to ensure it correctly removes specified nodes (e.g., elements with 'id=1' and text nodes with text 'Three') during the head method of traversal."}, {"name": "elementFunctionalTraverse", "primary_tested": ["Element.traverse(NodeVisitor)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Element", "Node", "NodeVisitor", "AtomicInteger"]}, "category": "unit", "description": "Tests the Element traverse method to ensure it correctly processes nodes and tracks the depth of traversal."}, {"name": "seesDocRoot", "primary_tested": ["Document.traverse(NodeVisitor)"], "external_dependencies": {"modules": ["Jsoup", "Document", "Node", "NodeVisitor", "AtomicBoolean"]}, "category": "unit", "description": "Tests the Document traverse method to ensure it correctly visits the root document node during traversal."}]}