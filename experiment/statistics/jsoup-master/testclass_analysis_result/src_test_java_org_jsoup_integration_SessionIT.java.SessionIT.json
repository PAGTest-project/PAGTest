{"file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "dependencies": ["package org.jsoup.integration;", "import org.jsoup.Connection;", "import org.jsoup.Jsoup;", "import org.jsoup.integration.servlets.FileServlet;", "import org.jsoup.integration.servlets.SlowRider;", "import org.jsoup.nodes.Document;", "import org.junit.jupiter.api.BeforeAll;", "import org.junit.jupiter.api.Test;", "import java.io.IOException;", "import java.io.UncheckedIOException;", "import java.util.Set;", "import java.util.concurrent.ConcurrentHashMap;", "import java.util.concurrent.atomic.AtomicInteger;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;"], "name": "SessionIT", "description": "Integration tests for session management in Jsoup, focusing on multi-threaded scenarios.", "class_members": {"variables": [], "methods": [], "nested_classes": [{"name": "ThreadCatcher", "description": "Internal helper class to catch and handle uncaught exceptions in threads."}]}, "fixtures": ["setUp"], "test_cases": [{"name": "multiThread", "primary_tested": ["Connection.newRequest().url(String).get()"], "associated_methods": ["Document.title()"], "external_dependencies": {"modules": ["Jsoup", "Connection", "Document", "FileServlet", "ThreadCatcher"], "class_members": [{"name": "ThreadCatcher", "type": "nested_class"}], "project_specific_resources": ["FileServlet.urlTo(String)"]}, "category": "integration", "fixtures_used": ["setUp"], "description": "Tests multi-threaded execution of Jsoup session requests, ensuring each thread fetches and validates the document title."}, {"name": "multiThreadWithoutNewRequestBlowsUp", "primary_tested": ["Connection.url(String).get()"], "associated_methods": ["Document.title()"], "external_dependencies": {"modules": ["Jsoup", "Connection", "Document", "SlowRider", "ThreadCatcher"], "class_members": [{"name": "ThreadCatcher", "type": "nested_class"}], "project_specific_resources": ["SlowRider.Url", "SlowRider.MaxTimeParam"]}, "category": "integration", "fixtures_used": ["setUp"], "description": "Tests that multi-threaded execution without using .newRequest() results in a clear exception, ensuring thread safety."}, {"name": "multiThreadWithProgressListener", "primary_tested": ["Connection.newRequest().url(String).get()"], "associated_methods": [], "external_dependencies": {"modules": ["Jsoup", "Connection", "Document", "FileServlet", "ThreadCatcher"], "class_members": [{"name": "ThreadCatcher", "type": "nested_class"}], "project_specific_resources": ["FileServlet.urlTo(String)"]}, "category": "integration", "fixtures_used": ["setUp"], "description": "Tests multi-threaded execution with a progress listener, ensuring the listener handles multiple URLs and threads correctly."}]}