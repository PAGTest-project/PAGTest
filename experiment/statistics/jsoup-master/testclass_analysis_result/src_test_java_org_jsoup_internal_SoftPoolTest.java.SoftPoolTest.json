{"file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "dependencies": ["package org.jsoup.internal;", "import org.junit.jupiter.api.Test;", "import java.util.ArrayList;", "import java.util.HashSet;", "import java.util.List;", "import java.util.Set;", "import java.util.Stack;", "import java.util.concurrent.CountDownLatch;", "import java.util.concurrent.ExecutorService;", "import java.util.concurrent.Executors;", "import java.util.concurrent.atomic.AtomicInteger;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "SoftPoolTest", "description": "Unit tests for the SoftPool class, focusing on its behavior with thread-local pools and object borrowing/releasing.", "class_members": {"variables": [{"name": "BufSize", "type": "static final int"}, {"name": "NumThreads", "type": "static final int"}, {"name": "NumObjects", "type": "static final int"}]}, "test_cases": [{"name": "testSoftLocalPool", "primary_tested": ["SoftPool.borrow()", "SoftPool.release(char[])"], "associated_methods": ["SoftPool.getStack()"], "external_dependencies": {"modules": ["SoftPool", "ExecutorService", "Executors", "CountDownLatch", "HashSet", "AtomicInteger"], "class_members": [{"name": "BufSize", "type": "variable"}, {"name": "NumThreads", "type": "variable"}, {"name": "NumObjects", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of the SoftPool with thread-local pools, ensuring buffers are borrowed, released, and reused correctly within threads."}, {"name": "testSoftReferenceBehavior", "primary_tested": ["SoftPool.borrow()", "SoftPool.release(char[])"], "associated_methods": ["SoftPool.getStack()"], "external_dependencies": {"modules": ["SoftPool"], "class_members": [{"name": "BufSize", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of SoftPool when objects are borrowed, released, and then garbage collected, ensuring new objects are created after GC."}, {"name": "testBorrowFromEmptyPool", "primary_tested": ["SoftPool.borrow()"], "external_dependencies": {"modules": ["SoftPool"], "class_members": [{"name": "BufSize", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of SoftPool when borrowing from an empty pool, ensuring a new object is created."}, {"name": "testReleaseMoreThanMaxIdle", "primary_tested": ["SoftPool.borrow()", "SoftPool.release(char[])"], "associated_methods": ["SoftPool.getStack()"], "external_dependencies": {"modules": ["SoftPool", "ArrayList"], "class_members": [{"name": "BufSize", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of SoftPool when releasing more objects than the MaxIdle limit, ensuring the pool size does not exceed the limit."}]}