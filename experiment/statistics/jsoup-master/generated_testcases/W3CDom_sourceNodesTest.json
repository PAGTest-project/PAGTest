[{"strategy": "retry", "code": "\npackage org.jsoup.helper;\n\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.Test;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.NodeList;\n\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class W3CDom_sourceNodesTest {\n\n    @Test\n    public void testSourceNodes_AllNodesMatch() {\n        // Given\n        W3CDom w3cDom = new W3CDom();\n        NodeList nodeList = mock(NodeList.class);\n        Element element1 = mock(Element.class);\n        Element element2 = mock(Element.class);\n        when(nodeList.getLength()).thenReturn(2);\n        when(nodeList.item(0)).thenReturn(mockNodeWithUserData(element1));\n        when(nodeList.item(1)).thenReturn(mockNodeWithUserData(element2));\n\n        // When\n        List<Element> result = w3cDom.sourceNodes(nodeList, Element.class);\n\n        // Then\n        assertEquals(2, result.size());\n        assertEquals(element1, result.get(0));\n        assertEquals(element2, result.get(1));\n    }\n\n    @Test\n    public void testSourceNodes_NoNodesMatch() {\n        // Given\n        W3CDom w3cDom = new W3CDom();\n        NodeList nodeList = mock(NodeList.class);\n        when(nodeList.getLength()).thenReturn(1);\n        when(nodeList.item(0)).thenReturn(mockNodeWithUserData(new Object()));\n\n        // When\n        List<Element> result = w3cDom.sourceNodes(nodeList, Element.class);\n\n        // Then\n        assertEquals(0, result.size());\n    }\n\n    private org.w3c.dom.Node mockNodeWithUserData(Object userData) {\n        org.w3c.dom.Node node = mock(org.w3c.dom.Node.class);\n        when(node.getUserData(W3CDom.SourceProperty)).thenReturn(userData);\n        return node;\n    }\n}\n"}]