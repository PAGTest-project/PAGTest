[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.helper.Validate;\nimport org.jsoup.internal.Functions;\nimport org.jsoup.internal.Normalizer;\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class Safelist_addAttributesTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testAddAttributes_validAttributes() {\n        String tag = \"a\";\n        String[] attributes = {\"href\", \"class\"};\n\n        safelist.addAttributes(tag, attributes);\n\n        TagName tagName = TagName.valueOf(tag);\n        Set<AttributeKey> expectedAttributes = new HashSet<>();\n        for (String attr : attributes) {\n            expectedAttributes.add(AttributeKey.valueOf(attr));\n        }\n\n        assertEquals(expectedAttributes, safelist.attributes.get(tagName));\n    }\n\n    @Test\n    public void testAddAttributes_emptyTag() {\n        String tag = \"\";\n        String[] attributes = {\"href\", \"class\"};\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(tag, attributes);\n        });\n    }\n\n    @Test\n    public void testAddAttributes_nullAttributes() {\n        String tag = \"a\";\n        String[] attributes = null;\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(tag, attributes);\n        });\n    }\n\n    @Test\n    public void testAddAttributes_noAttributes() {\n        String tag = \"a\";\n        String[] attributes = {};\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(tag, attributes);\n        });\n    }\n\n    @Test\n    public void testAddAttributes_emptyAttribute() {\n        String tag = \"a\";\n        String[] attributes = {\"\", \"class\"};\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(tag, attributes);\n        });\n    }\n}\n"}]