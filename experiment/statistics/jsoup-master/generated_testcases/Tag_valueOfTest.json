[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Tag_valueOfTest {\n\n    private ParseSettings settings;\n\n    @BeforeEach\n    public void setUp() {\n        settings = new ParseSettings(true, true);\n    }\n\n    @Test\n    public void testValueOfKnownTag() {\n        Tag tag = Tag.valueOf(\"p\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertNotNull(tag);\n        assertEquals(\"p\", tag.getName());\n        assertEquals(\"http://www.w3.org/1999/xhtml\", tag.namespace());\n    }\n\n    @Test\n    public void testValueOfUnknownTag() {\n        Tag tag = Tag.valueOf(\"unknownTag\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertNotNull(tag);\n        assertEquals(\"unknownTag\", tag.getName());\n        assertEquals(\"http://www.w3.org/1999/xhtml\", tag.namespace());\n        assertFalse(tag.isBlock());\n    }\n\n    @Test\n    public void testValueOfPreserveTagCase() {\n        settings = new ParseSettings(true, false);\n        Tag tag = Tag.valueOf(\"P\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertNotNull(tag);\n        assertEquals(\"P\", tag.getName());\n        assertEquals(\"http://www.w3.org/1999/xhtml\", tag.namespace());\n    }\n\n    @Test\n    public void testValueOfNormalizeTag() {\n        settings = new ParseSettings(false, false);\n        Tag tag = Tag.valueOf(\"   p   \", \"http://www.w3.org/1999/xhtml\", settings);\n        assertNotNull(tag);\n        assertEquals(\"p\", tag.getName());\n        assertEquals(\"http://www.w3.org/1999/xhtml\", tag.namespace());\n    }\n\n    @Test\n    public void testValueOfInvalidTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            Tag.valueOf(\"\", \"http://www.w3.org/1999/xhtml\", settings);\n        });\n    }\n\n    @Test\n    public void testValueOfInvalidNamespace() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            Tag.valueOf(\"p\", null, settings);\n        });\n    }\n}\n"}]