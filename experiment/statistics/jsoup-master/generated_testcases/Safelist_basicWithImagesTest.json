[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_basicWithImagesTest {\n\n    @Test\n    public void testBasicWithImages_AddsImgTag() {\n        Safelist safelist = Safelist.basicWithImages();\n        assertTrue(safelist.isSafeTag(\"img\"));\n    }\n\n    @Test\n    public void testBasicWithImages_AddsImgAttributes() {\n        Safelist safelist = Safelist.basicWithImages();\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\");\n        Attributes attributes = new Attributes();\n        attributes.put(\"align\", \"left\");\n        attributes.put(\"alt\", \"image\");\n        attributes.put(\"height\", \"100\");\n        attributes.put(\"src\", \"http://example.com/image.jpg\");\n        attributes.put(\"title\", \"Example Image\");\n        attributes.put(\"width\", \"200\");\n        imgElement.attributes().addAll(attributes);\n\n        for (Attribute attr : attributes) {\n            assertTrue(safelist.isSafeAttribute(\"img\", imgElement, attr));\n        }\n    }\n\n    @Test\n    public void testBasicWithImages_AddsImgProtocols() {\n        Safelist safelist = Safelist.basicWithImages();\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\");\n        Attributes attributes = new Attributes();\n        attributes.put(\"src\", \"http://example.com/image.jpg\");\n        imgElement.attributes().addAll(attributes);\n\n        for (Attribute attr : attributes) {\n            assertTrue(safelist.isSafeAttribute(\"img\", imgElement, attr));\n        }\n\n        attributes.put(\"src\", \"https://example.com/image.jpg\");\n        imgElement.attributes().addAll(attributes);\n\n        for (Attribute attr : attributes) {\n            assertTrue(safelist.isSafeAttribute(\"img\", imgElement, attr));\n        }\n    }\n\n    @Test\n    public void testBasicWithImages_InvalidProtocol() {\n        Safelist safelist = Safelist.basicWithImages();\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\");\n        Attributes attributes = new Attributes();\n        attributes.put(\"src\", \"ftp://example.com/image.jpg\");\n        imgElement.attributes().addAll(attributes);\n\n        for (Attribute attr : attributes) {\n            assertFalse(safelist.isSafeAttribute(\"img\", imgElement, attr));\n        }\n    }\n}\n"}]