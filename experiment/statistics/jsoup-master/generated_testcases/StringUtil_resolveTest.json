[{"strategy": "generate", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_resolveTest {\n\n    @Test\n    public void testResolveWithRelativeUrl() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"../../../g\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/g\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithQueryParams() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"g?y/./x\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/b/c/g?y/./x\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithFragment() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"g#s/./x\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/b/c/g#s/./x\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithControlChars() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"g\\u0000?y/./x\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/b/c/g?y/./x\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithEmptyRelativeUrl() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/b/c/d;p?q\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithAbsolutePath() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"/g\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/g\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithDifferentProtocol() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"https://example.com/g\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"https://example.com/g\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithDifferentHost() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"//example2.com/g\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example2.com/g\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithDifferentPort() throws MalformedURLException {\n        URL base = new URL(\"http://example.com:8080/b/c/d;p?q\");\n        String relUrl = \"./g\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com:8080/b/c/g\", resolvedUrl.toExternalForm());\n    }\n\n    @Test\n    public void testResolveWithDotSegments() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/b/c/d;p?q\");\n        String relUrl = \"./../g\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/b/g\", resolvedUrl.toExternalForm());\n    }\n}\n"}]