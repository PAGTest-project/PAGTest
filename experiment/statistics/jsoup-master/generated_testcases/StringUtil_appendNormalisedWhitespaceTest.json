[{"strategy": "generate", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_appendNormalisedWhitespaceTest {\n\n    @Test\n    public void testAppendNormalisedWhitespace() {\n        StringBuilder accum = new StringBuilder();\n\n        // Test case 1: Normal string with no leading whitespace\n        StringUtil.appendNormalisedWhitespace(accum, \"Hello World\", false);\n        assertEquals(\"Hello World\", accum.toString());\n        accum.setLength(0); // Reset StringBuilder\n\n        // Test case 2: String with leading and multiple internal whitespaces\n        StringUtil.appendNormalisedWhitespace(accum, \"  Hello   World  \", false);\n        assertEquals(\" Hello World \", accum.toString());\n        accum.setLength(0); // Reset StringBuilder\n\n        // Test case 3: String with leading whitespace and stripLeading true\n        StringUtil.appendNormalisedWhitespace(accum, \"  Hello World\", true);\n        assertEquals(\"Hello World\", accum.toString());\n        accum.setLength(0); // Reset StringBuilder\n\n        // Test case 4: String with only whitespace\n        StringUtil.appendNormalisedWhitespace(accum, \"     \", false);\n        assertEquals(\" \", accum.toString());\n        accum.setLength(0); // Reset StringBuilder\n\n        // Test case 5: String with invisible characters\n        StringUtil.appendNormalisedWhitespace(accum, \"Hello\\u200BWorld\", false);\n        assertEquals(\"HelloWorld\", accum.toString());\n        accum.setLength(0); // Reset StringBuilder\n    }\n}\n"}]