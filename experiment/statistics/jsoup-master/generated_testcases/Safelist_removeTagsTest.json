[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_removeTagsTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n        safelist.addTags(\"a\", \"b\", \"blockquote\", \"br\", \"cite\", \"code\", \"dd\", \"dl\", \"dt\", \"em\", \"i\", \"li\", \"ol\", \"p\", \"pre\", \"q\", \"small\", \"span\", \"strike\", \"strong\", \"sub\", \"sup\", \"u\", \"ul\");\n    }\n\n    @Test\n    public void testRemoveTags_ValidTags() {\n        String[] tagsToRemove = {\"a\", \"b\", \"blockquote\"};\n        safelist.removeTags(tagsToRemove);\n\n        assertFalse(safelist.isSafeTag(\"a\"));\n        assertFalse(safelist.isSafeTag(\"b\"));\n        assertFalse(safelist.isSafeTag(\"blockquote\"));\n        assertTrue(safelist.isSafeTag(\"p\"));\n    }\n\n    @Test\n    public void testRemoveTags_InvalidTags() {\n        String[] tagsToRemove = {\"invalidTag\", \"anotherInvalidTag\"};\n        safelist.removeTags(tagsToRemove);\n\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"p\"));\n    }\n\n    @Test\n    public void testRemoveTags_NullTags() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeTags(null);\n        });\n    }\n\n    @Test\n    public void testRemoveTags_EmptyTags() {\n        String[] tagsToRemove = {\"\"};\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeTags(tagsToRemove);\n        });\n    }\n}\n"}]