[{"strategy": "retry", "code": "\npackage org.jsoup.helper;\n\nimport org.jsoup.parser.Parser;\nimport org.jsoup.parser.StreamParser;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.io.TempDir;\n\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DataUtil_streamParserTest {\n\n    @TempDir\n    Path tempDir;\n    private Path tempFile;\n\n    @BeforeEach\n    public void setUp() throws IOException {\n        tempFile = Files.createFile(tempDir.resolve(\"test.html\"));\n        Files.write(tempFile, \"<html><head><meta charset='UTF-8'></head><body></body></html>\".getBytes(StandardCharsets.UTF_8));\n    }\n\n    @Test\n    public void testStreamParserWithValidCharset() throws IOException {\n        StreamParser streamParser = DataUtil.streamParser(tempFile, StandardCharsets.UTF_8, \"http://example.com\", Parser.htmlParser());\n        assertNotNull(streamParser);\n        // Additional assertions can be added to verify the state of the StreamParser\n    }\n\n    @Test\n    public void testStreamParserWithNullCharset() throws IOException {\n        StreamParser streamParser = DataUtil.streamParser(tempFile, null, \"http://example.com\", Parser.htmlParser());\n        assertNotNull(streamParser);\n        // Additional assertions can be added to verify the state of the StreamParser\n    }\n\n    @Test\n    public void testStreamParserWithInvalidPath() {\n        Path invalidPath = tempDir.resolve(\"nonexistent.html\");\n        assertThrows(IOException.class, () -> DataUtil.streamParser(invalidPath, StandardCharsets.UTF_8, \"http://example.com\", Parser.htmlParser()));\n    }\n}\n"}]