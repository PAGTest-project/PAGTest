[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.NodeFilter;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class Element_filterTest {\n\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        String html = \"<body><div><p>One</p></div><div><p>Two</p></div><div>Three</div></body>\";\n        Document doc = Jsoup.parse(html);\n        element = doc.selectFirst(\"div\");\n        assertNotNull(element);\n    }\n\n    @Test\n    public void testFilter() {\n        NodeFilter nodeFilter = new NodeFilter() {\n            @Override\n            public FilterResult head(Node node, int depth) {\n                if (node instanceof Element && ((Element) node).tagName().equals(\"p\")) {\n                    return FilterResult.STOP;\n                }\n                return FilterResult.CONTINUE;\n            }\n\n            @Override\n            public FilterResult tail(Node node, int depth) {\n                return FilterResult.CONTINUE;\n            }\n        };\n\n        Element filteredElement = element.filter(nodeFilter);\n        assertNotNull(filteredElement);\n        assertEquals(\"div\", filteredElement.tagName());\n        assertEquals(\"One\", filteredElement.text());\n    }\n}\n"}]