[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class FormElement_elementsTest {\n\n    private FormElement formElement;\n\n    @BeforeEach\n    public void setUp() {\n        formElement = new FormElement(Tag.valueOf(\"form\"), null, null);\n    }\n\n    @Test\n    public void testElementsWithNoLinkedElements() {\n        // Given\n        Element childElement = new Element(Tag.valueOf(\"input\"), null);\n        formElement.appendChild(childElement);\n\n        // When\n        Elements result = formElement.elements();\n\n        // Then\n        assertEquals(1, result.size());\n        assertTrue(result.contains(childElement));\n    }\n\n    @Test\n    public void testElementsWithLinkedElements() {\n        // Given\n        Element childElement = new Element(Tag.valueOf(\"input\"), null);\n        Element linkedElement = new Element(Tag.valueOf(\"input\"), null);\n        formElement.appendChild(childElement);\n        formElement.addElement(linkedElement);\n\n        // When\n        Elements result = formElement.elements();\n\n        // Then\n        assertEquals(2, result.size());\n        assertTrue(result.contains(childElement));\n        assertTrue(result.contains(linkedElement));\n    }\n\n    @Test\n    public void testElementsWithLinkedElementsNotInDOM() {\n        // Given\n        Element childElement = new Element(Tag.valueOf(\"input\"), null);\n        Element linkedElement = new Element(Tag.valueOf(\"input\"), null);\n        formElement.appendChild(childElement);\n        formElement.addElement(linkedElement);\n        linkedElement.remove(); // Simulate removal from DOM\n\n        // When\n        Elements result = formElement.elements();\n\n        // Then\n        assertEquals(1, result.size());\n        assertTrue(result.contains(childElement));\n    }\n}\n"}]