[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_isSafeAttributeTest {\n    private Safelist safelist;\n    private Element element;\n    private Attribute validAttribute;\n    private Attribute invalidAttribute;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\");\n        safelist.addProtocols(\"a\", \"href\", \"http\", \"https\");\n\n        element = new Element(\"a\");\n        validAttribute = new Attribute(\"href\", \"http://example.com\");\n        invalidAttribute = new Attribute(\"href\", \"javascript:alert('xss')\");\n    }\n\n    @Test\n    public void testIsSafeAttribute_validAttribute() {\n        assertTrue(safelist.isSafeAttribute(\"a\", element, validAttribute));\n    }\n\n    @Test\n    public void testIsSafeAttribute_invalidAttribute() {\n        assertFalse(safelist.isSafeAttribute(\"a\", element, invalidAttribute));\n    }\n\n    @Test\n    public void testIsSafeAttribute_enforcedAttribute() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        Attribute enforcedAttribute = new Attribute(\"rel\", \"nofollow\");\n        assertTrue(safelist.isSafeAttribute(\"a\", element, enforcedAttribute));\n    }\n\n    @Test\n    public void testIsSafeAttribute_noAttributesDefined() {\n        Safelist emptySafelist = new Safelist();\n        assertFalse(emptySafelist.isSafeAttribute(\"a\", element, validAttribute));\n    }\n\n    @Test\n    public void testIsSafeAttribute_allTag() {\n        safelist.addAttributes(\":all\", \"class\");\n        Attribute classAttribute = new Attribute(\"class\", \"example\");\n        assertTrue(safelist.isSafeAttribute(\"a\", element, classAttribute));\n    }\n}\n"}]