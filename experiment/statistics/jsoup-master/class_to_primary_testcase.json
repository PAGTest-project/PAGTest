{"Jsoup": [{"method_name": "clean(String,Safelist)", "file_path": "src/test/java/org/jsoup/integration/SafelistExtensionTest.java", "testclass_name": "SafelistExtensionTest", "testcase_name": "canCustomizeSafeTests"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "blankAbsAttr"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "bookmark"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "nestedAnchorElements01"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "nestedAnchorElements02"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testWikiExpandedFromString"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testWikiFromString"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "bufferUpInAttributeVal"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleSuperLargeAttributeName"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeText"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeComment"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeCdata"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeTitle"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "cp1252Entities"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testQuotedPattern"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapesGtInXmlAttributesButNotInHtml"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "controlCharactersAreEscaped"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testCharacterReferenceInRcdata"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testBeforeTagName"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testEndTagOpen"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testRcdataLessthanSign"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testRCDATAEndTagName"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testCommentEndCoverage"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testCommentEndBangCoverage"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testPublicIdentifiersWithWhitespace"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testSystemIdentifiersWithWhitespace"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testPublicAndSystemIdentifiersWithWhitespace"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "handlesLessInTagThanAsNewTag"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "rcData"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "plaintext"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "nullInTag"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "attributeValUnquoted"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testDoesNotForceSelfClosingKnownTags"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "testHtmlParse"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesIT.java", "testclass_name": "FuzzFixesIT", "testcase_name": "testHtmlParse"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testHtml5Charset"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testXwiki"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsBOMinFiles"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsUTF8BOM"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsZippedUTF8BOM"}, {"method_name": "parse(File,String,String,Parser)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "testXmlParse"}, {"method_name": "parse(File,String,String,Parser)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesIT.java", "testclass_name": "FuzzFixesIT", "testcase_name": "testXmlParse"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "canInterruptThenJoinASpawnedThread"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "totalTimeout"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "slowReadOk"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "infiniteReadSupported"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testSupplyParserToConnection"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/parser/ParserTest.java", "testclass_name": "ParserTest", "testcase_name": "testUtf8"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testBrokenHtml5CharsetWithASingleDoubleQuote"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "noExtraNULLBytes"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsXmlCharsetDeclaration"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesChunkedInputStream"}, {"method_name": "execute()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "canInterruptBodyStringRead"}, {"method_name": "execute()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "canInterruptDocumentRead"}, {"method_name": "streamParser()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "streamParserUncheckedExceptionOnTimeoutInStream"}, {"method_name": "streamParser()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "streamParserCheckedExceptionOnTimeoutInSelect"}, {"method_name": "bodyStream()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "remainingAfterFirstRead"}, {"method_name": "bodyStream()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "noLimitAfterFirstRead"}, {"method_name": "bodyStream()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "bodyStreamConstrainedViaBufferUp"}, {"method_name": "newSession()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "newSession()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "newSession()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testLowercaseUtf8Charset"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsGzipFile"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsZGzipFile"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesFakeGzipFile"}, {"method_name": "parse(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testXwikiExpanded"}, {"method_name": "parse(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testSupplyParserToDataStream"}, {"method_name": "parse(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testDetectCharsetEncodingDeclaration"}, {"method_name": "parse(File)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testFileParseNoCharsetMethod"}, {"method_name": "parse(Path,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsGzipPath"}, {"method_name": "parse(Path,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsZGzipPath"}, {"method_name": "parse(Path,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesFakeGzipPath"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testSupplyParserToJsoupClass"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "handlesXmlDeclarationAsDeclaration"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "xmlParseDefaultsToHtmlOutputSyntax"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testDoesHandleEOFInTag"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testParseDeclarationAttributes"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testParseDeclarationWithoutAttributes"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "caseSensitiveDeclaration"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "preservesCaseByDefault"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "appendPreservesCaseByDefault"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "disablesPrettyPrintingByDefault"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "canNormalizeCase"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "normalizesDiscordantTags"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "roundTripsCdata"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "cdataPreservesWhiteSpace"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "handlesDodgyXmlDecl"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "handlesLTinScript"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "readerClosedAfterParse"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "xmlParserEnablesXmlOutputAndEscapes"}, {"method_name": "parse(String,String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "xmlSyntaxEscapesLtInAttributes"}, {"method_name": "parse(String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "xmlOutputCorrectsInvalidAttributeNames"}, {"method_name": "parse(String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "customTagsAreFlyweights"}, {"method_name": "parse(String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "rootHasXmlSettings"}, {"method_name": "parse(String,Parser)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "xmlNamespace"}], "Validate": [{"method_name": "notNull(Object)", "file_path": "src/test/java/org/jsoup/helper/ValidateTest.java", "testclass_name": "ValidateTest", "testcase_name": "testNotNull"}, {"method_name": "notNull(Object)", "file_path": "src/test/java/org/jsoup/helper/ValidateTest.java", "testclass_name": "ValidateTest", "testcase_name": "stacktraceFiltersOutValidateClass"}, {"method_name": "notNullParam(Object,String)", "file_path": "src/test/java/org/jsoup/helper/ValidateTest.java", "testclass_name": "ValidateTest", "testcase_name": "nonnullParam"}, {"method_name": "isFalse(boolean)", "file_path": "src/test/java/org/jsoup/helper/Validate_isFalseTest.java", "testclass_name": "Validate_isFalseTest", "testcase_name": "testIsFalse_withFalseValue"}, {"method_name": "isFalse(boolean)", "file_path": "src/test/java/org/jsoup/helper/Validate_isFalseTest.java", "testclass_name": "Validate_isFalseTest", "testcase_name": "testIsFalse_withTrueValue"}, {"method_name": "isTrue(boolean)", "file_path": "src/test/java/org/jsoup/helper/Validate_isTrueTest.java", "testclass_name": "Validate_isTrueTest", "testcase_name": "testIsTrue_withTrueValue"}, {"method_name": "isTrue(boolean)", "file_path": "src/test/java/org/jsoup/helper/Validate_isTrueTest.java", "testclass_name": "Validate_isTrueTest", "testcase_name": "testIsTrue_withFalseValue"}, {"method_name": "notEmpty(String)", "file_path": "src/test/java/org/jsoup/helper/Validate_notEmptyTest.java", "testclass_name": "Validate_notEmptyTest", "testcase_name": "testNotEmpty_withNonEmptyString"}, {"method_name": "notEmpty(String)", "file_path": "src/test/java/org/jsoup/helper/Validate_notEmptyTest.java", "testclass_name": "Validate_notEmptyTest", "testcase_name": "testNotEmpty_withNullString"}, {"method_name": "notEmpty(String)", "file_path": "src/test/java/org/jsoup/helper/Validate_notEmptyTest.java", "testclass_name": "Validate_notEmptyTest", "testcase_name": "testNotEmpty_withEmptyString"}, {"method_name": "ensureNotNull(Object)", "file_path": "src/test/java/org/jsoup/helper/Validate_ensureNotNullTest.java", "testclass_name": "Validate_ensureNotNullTest", "testcase_name": "testEnsureNotNull_WithNonNullObject"}, {"method_name": "ensureNotNull(Object)", "file_path": "src/test/java/org/jsoup/helper/Validate_ensureNotNullTest.java", "testclass_name": "Validate_ensureNotNullTest", "testcase_name": "testEnsureNotNull_WithNullObject"}, {"method_name": "notEmptyParam(String,String)", "file_path": "src/test/java/org/jsoup/helper/Validate_notEmptyParamTest.java", "testclass_name": "Validate_notEmptyParamTest", "testcase_name": "testNotEmptyParamValid"}, {"method_name": "notEmptyParam(String,String)", "file_path": "src/test/java/org/jsoup/helper/Validate_notEmptyParamTest.java", "testclass_name": "Validate_notEmptyParamTest", "testcase_name": "testNotEmptyParamNull"}, {"method_name": "notEmptyParam(String,String)", "file_path": "src/test/java/org/jsoup/helper/Validate_notEmptyParamTest.java", "testclass_name": "Validate_notEmptyParamTest", "testcase_name": "testNotEmptyParamEmpty"}], "Document": [{"method_name": "select(Evaluator)", "file_path": "src/test/java/org/jsoup/select/SelectorIT.java", "testclass_name": "SelectorIT", "testcase_name": "multiThreadHas"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testConsumeSubQuery"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testQuotedPattern"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "cssAndXpathEquivalents"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "firstChild"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "lastChild"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthChild_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthOfType_unknownTag"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastChild_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthOfType_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastOfType_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthChild_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthOfType_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastChild_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastOfType_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "firstOfType"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "lastOfType"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "empty"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "onlyChild"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "onlyOfType"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "root"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/Document_outerHtmlTest.java", "testclass_name": "Document_outerHtmlTest", "testcase_name": "testOuterHtml"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "hasTextNoOverflow"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "testHtmlNoPretty"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "stableIndentInBlock"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "controlCharactersAreEscaped"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/Document_outputSettingsTest.java", "testclass_name": "Document_outputSettingsTest", "testcase_name": "testOutputSettingsValid"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/Document_outputSettingsTest.java", "testclass_name": "Document_outputSettingsTest", "testcase_name": "testOutputSettingsNull"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canStream"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canStreamParallel"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canFindFirst"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canFilter"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canRemove"}, {"method_name": "stream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "elementStream"}, {"method_name": "nodeName()", "file_path": "src/test/java/org/jsoup/nodes/Document_nodeNameTest.java", "testclass_name": "Document_nodeNameTest", "testcase_name": "testNodeName"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/Document_cloneTest.java", "testclass_name": "Document_cloneTest", "testcase_name": "testClone"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "seesDocRoot"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpath"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "emptyElementsIfNoResults"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "throwsSelectException"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsLocalname"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "canDitchNamespaces"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "cssAndXpathEquivalents"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectByAttribute"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectOutsideOfElementTree"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "canSupplyAlternateFactoryImpl"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "notNamespaceAware"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsPrefixes"}, {"method_name": "selectXpath(String,Class)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "canSelectTextNodes"}, {"method_name": "outputSettings()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "outputSettings()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapesGtInXmlAttributesButNotInHtml"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/Document_textTest.java", "testclass_name": "Document_textTest", "testcase_name": "testText"}, {"method_name": "createShell(String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testCreatesValidProlog"}, {"method_name": "createShell(String)", "file_path": "src/test/java/org/jsoup/nodes/Document_createShellTest.java", "testclass_name": "Document_createShellTest", "testcase_name": "testCreateShell"}, {"method_name": "charset(Charset)", "file_path": "src/test/java/org/jsoup/nodes/Document_charsetTest.java", "testclass_name": "Document_charsetTest", "testcase_name": "testCharset"}, {"method_name": "title()", "file_path": "src/test/java/org/jsoup/nodes/Document_titleTest.java", "testclass_name": "Document_titleTest", "testcase_name": "testTitle_withTitleElement"}, {"method_name": "title()", "file_path": "src/test/java/org/jsoup/nodes/Document_titleTest.java", "testclass_name": "Document_titleTest", "testcase_name": "testTitle_withoutTitleElement"}, {"method_name": "documentType()", "file_path": "src/test/java/org/jsoup/nodes/Document_documentTypeTest.java", "testclass_name": "Document_documentTypeTest", "testcase_name": "testDocumentTypeFound"}, {"method_name": "documentType()", "file_path": "src/test/java/org/jsoup/nodes/Document_documentTypeTest.java", "testclass_name": "Document_documentTypeTest", "testcase_name": "testDocumentTypeNotFound"}, {"method_name": "documentType()", "file_path": "src/test/java/org/jsoup/nodes/Document_documentTypeTest.java", "testclass_name": "Document_documentTypeTest", "testcase_name": "testDocumentTypeFoundAfterLeafNode"}, {"method_name": "head()", "file_path": "src/test/java/org/jsoup/nodes/Document_headTest.java", "testclass_name": "Document_headTest", "testcase_name": "testHeadElementPresent"}, {"method_name": "head()", "file_path": "src/test/java/org/jsoup/nodes/Document_headTest.java", "testclass_name": "Document_headTest", "testcase_name": "testHeadElementCreated"}, {"method_name": "connection()", "file_path": "src/test/java/org/jsoup/nodes/Document_connectionTest.java", "testclass_name": "Document_connectionTest", "testcase_name": "testConnection_WhenConnectionIsNull"}, {"method_name": "connection()", "file_path": "src/test/java/org/jsoup/nodes/Document_connectionTest.java", "testclass_name": "Document_connectionTest", "testcase_name": "testConnection_WhenConnectionIsNotNull"}, {"method_name": "expectForm(String)", "file_path": "src/test/java/org/jsoup/nodes/Document_expectFormTest.java", "testclass_name": "Document_expectFormTest", "testcase_name": "testExpectFormSuccess"}, {"method_name": "expectForm(String)", "file_path": "src/test/java/org/jsoup/nodes/Document_expectFormTest.java", "testclass_name": "Document_expectFormTest", "testcase_name": "testExpectFormValidationFailed"}, {"method_name": "shallowClone()", "file_path": "src/test/java/org/jsoup/nodes/Document_shallowCloneTest.java", "testclass_name": "Document_shallowCloneTest", "testcase_name": "testShallowClone"}], "QueryParser": [{"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "exceptionOnUncloseAttribute"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testParsesSingleQuoteInContains"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "exceptOnEmptySelector"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "exceptOnNullSelector"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "okOnSpacesForeAndAft"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "structuralEvaluatorsToString"}], "Parser": [{"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "bookmark"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/ParserIT.java", "testclass_name": "ParserIT", "testcase_name": "testIssue1251"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleSuperLargeTagNames"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "cp1252EntitiesProduceError"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "canParseVeryLongBogusComment"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "canParseCdataEndingAtEdgeOfBuffer"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "dropsDuplicateAttributes"}, {"method_name": "parseBodyFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/ParserIT.java", "testclass_name": "ParserIT", "testcase_name": "handlesDeepStack"}, {"method_name": "parseBodyFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/Parser_parseBodyFragmentTest.java", "testclass_name": "Parser_parseBodyFragmentTest", "testcase_name": "testParseBodyFragment"}, {"method_name": "parseBodyFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/Parser_parseBodyFragmentTest.java", "testclass_name": "Parser_parseBodyFragmentTest", "testcase_name": "testParseBodyFragmentWithEmptyBody"}, {"method_name": "parseBodyFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/Parser_parseBodyFragmentTest.java", "testclass_name": "Parser_parseBodyFragmentTest", "testcase_name": "testParseBodyFragmentWithMultipleNodes"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/parser/ParserTest.java", "testclass_name": "ParserTest", "testcase_name": "unescapeEntities"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/parser/ParserTest.java", "testclass_name": "ParserTest", "testcase_name": "unescapeEntitiesHandlesLargeInput"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "parseHtmlEncodedEmojiMultipoint"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "parseHtmlEncodedEmoji"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/parser/Parser_unescapeEntitiesTest.java", "testclass_name": "Parser_unescapeEntitiesTest", "testcase_name": "testUnescapeEntitiesInAttribute"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/parser/Parser_unescapeEntitiesTest.java", "testclass_name": "Parser_unescapeEntitiesTest", "testcase_name": "testUnescapeEntitiesInText"}, {"method_name": "parseFragment(String,Element,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testUnconsumeAtBufferBoundary"}, {"method_name": "parseFragment(String,Element,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testUnconsumeAfterBufferUp"}, {"method_name": "parseFragment(String,Element,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testOpeningAngleBracketInsteadOfAttribute"}, {"method_name": "parseFragment(String,Element,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testMalformedSelfClosingTag"}, {"method_name": "parseFragment(String,Element,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testOpeningAngleBracketInTagName"}, {"method_name": "parseXmlFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "xmlFragment"}, {"method_name": "parseXmlFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/Parser_parseXmlFragmentTest.java", "testclass_name": "Parser_parseXmlFragmentTest", "testcase_name": "testParseXmlFragment"}, {"method_name": "setTreeBuilder(TreeBuilder)", "file_path": "src/test/java/org/jsoup/parser/Parser_setTreeBuilderTest.java", "testclass_name": "Parser_setTreeBuilderTest", "testcase_name": "testSetTreeBuilder"}, {"method_name": "parseFragment(String,Element,String)", "file_path": "src/test/java/org/jsoup/parser/Parser_parseFragmentTest.java", "testclass_name": "Parser_parseFragmentTest", "testcase_name": "testParseFragment"}, {"method_name": "parseFragment(String,Element,String)", "file_path": "src/test/java/org/jsoup/parser/Parser_parseFragmentTest.java", "testclass_name": "Parser_parseFragmentTest", "testcase_name": "testParseFragmentWithEmptyString"}, {"method_name": "settings(ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Parser_settingsTest.java", "testclass_name": "Parser_settingsTest", "testcase_name": "testSettings"}, {"method_name": "setTrackPosition(boolean)", "file_path": "src/test/java/org/jsoup/parser/Parser_setTrackPositionTest.java", "testclass_name": "Parser_setTrackPositionTest", "testcase_name": "testSetTrackPositionTrue"}, {"method_name": "setTrackPosition(boolean)", "file_path": "src/test/java/org/jsoup/parser/Parser_setTrackPositionTest.java", "testclass_name": "Parser_setTrackPositionTest", "testcase_name": "testSetTrackPositionFalse"}, {"method_name": "setTrackErrors(int)", "file_path": "src/test/java/org/jsoup/parser/Parser_setTrackErrorsTest.java", "testclass_name": "Parser_setTrackErrorsTest", "testcase_name": "testSetTrackErrorsWithPositiveMaxErrors"}, {"method_name": "setTrackErrors(int)", "file_path": "src/test/java/org/jsoup/parser/Parser_setTrackErrorsTest.java", "testclass_name": "Parser_setTrackErrorsTest", "testcase_name": "testSetTrackErrorsWithZeroMaxErrors"}], "Connection": [{"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "testcase_name": "multiThread"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "testcase_name": "multiThreadWithoutNewRequestBlowsUp"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "testcase_name": "multiThreadWithProgressListener"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "newRequest()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "newRequest()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "newRequest()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}, {"method_name": "cookies()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "parser()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}], "Element": [{"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesRoughAttributeString"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesEmptyString"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "canStartWithEq"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesBooleanAttributes"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "dropsSlashFromAttributeName"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "handlesNewLinesAndReturns"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "strictAttributeUnescapes"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "moreAttributeUnescapes"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesBooleanAttributes"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapesGtInXmlAttributesButNotInHtml"}, {"method_name": "id()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_NoAttributes"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_ExactMatch"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_MultipleClasses"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_WhitespaceHandling"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_CaseInsensitivity"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_EmptyClassAttribute"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_LongerThanAttribute"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_hasClassTest.java", "testclass_name": "Element_hasClassTest", "testcase_name": "testHasClass_LastEntry"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/select/Elements_addClassTest.java", "testclass_name": "Elements_addClassTest", "testcase_name": "testAddClass"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_addClassTest.java", "testclass_name": "Element_addClassTest", "testcase_name": "testAddClassSuccess"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_addClassTest.java", "testclass_name": "Element_addClassTest", "testcase_name": "testAddClassNull"}, {"method_name": "clearAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "insertChildren(int,List<Node>)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "testFastReparent"}, {"method_name": "insertChildren(int,List<Node>)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "testFastReparentExistingContent"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/nodes/Element_hasTextTest.java", "testclass_name": "Element_hasTextTest", "testcase_name": "testHasTextWithNonBlankText"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/nodes/Element_hasTextTest.java", "testclass_name": "Element_hasTextTest", "testcase_name": "testHasTextWithBlankText"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/nodes/Element_hasTextTest.java", "testclass_name": "Element_hasTextTest", "testcase_name": "testHasTextWithNoText"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "dataNoOverflow"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/Element_dataTest.java", "testclass_name": "Element_dataTest", "testcase_name": "testDataWithDataNode"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/Element_dataTest.java", "testclass_name": "Element_dataTest", "testcase_name": "testDataWithComment"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/Element_dataTest.java", "testclass_name": "Element_dataTest", "testcase_name": "testDataWithCDataNode"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/Element_dataTest.java", "testclass_name": "Element_dataTest", "testcase_name": "testDataWithMixedNodes"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/Element_dataTest.java", "testclass_name": "Element_dataTest", "testcase_name": "testDataWithNoSpecialNodes"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "parentsNoOverflow"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/Element_parentsTest.java", "testclass_name": "Element_parentsTest", "testcase_name": "testParents"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/Element_parentsTest.java", "testclass_name": "Element_parentsTest", "testcase_name": "testParentsWithRoot"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "wrapNoOverflow"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/select/Elements_wrapTest.java", "testclass_name": "Elements_wrapTest", "testcase_name": "testWrap"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/Element_cloneTest.java", "testclass_name": "Element_cloneTest", "testcase_name": "testClone"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "elementFunctionalTraverse"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/nodes/Element_traverseTest.java", "testclass_name": "Element_traverseTest", "testcase_name": "testTraverse"}, {"method_name": "cssSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "childNode(int)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testQuotedPattern"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpathFromElement"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectOutsideOfElementTree"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectAncestorsOnContextElement"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/Element_textTest.java", "testclass_name": "Element_textTest", "testcase_name": "testText"}, {"method_name": "attr(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Element_attrTest.java", "testclass_name": "Element_attrTest", "testcase_name": "testAttr"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_removeAttrTest.java", "testclass_name": "Element_removeAttrTest", "testcase_name": "testRemoveAttr"}, {"method_name": "childNodeSize()", "file_path": "src/test/java/org/jsoup/nodes/Element_childNodeSizeTest.java", "testclass_name": "Element_childNodeSizeTest", "testcase_name": "testChildNodeSize"}, {"method_name": "empty()", "file_path": "src/test/java/org/jsoup/nodes/Element_emptyTest.java", "testclass_name": "Element_emptyTest", "testcase_name": "testEmptyWithChildren"}, {"method_name": "empty()", "file_path": "src/test/java/org/jsoup/nodes/Element_emptyTest.java", "testclass_name": "Element_emptyTest", "testcase_name": "testEmptyWithoutChildren"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canModifyFilteredElements"}, {"method_name": "toggleClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_toggleClassTest.java", "testclass_name": "Element_toggleClassTest", "testcase_name": "testToggleClassAdd"}, {"method_name": "toggleClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_toggleClassTest.java", "testclass_name": "Element_toggleClassTest", "testcase_name": "testToggleClassRemove"}, {"method_name": "toggleClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_toggleClassTest.java", "testclass_name": "Element_toggleClassTest", "testcase_name": "testToggleClassNoChange"}, {"method_name": "removeClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_removeClassTest.java", "testclass_name": "Element_removeClassTest", "testcase_name": "testRemoveClassSuccess"}, {"method_name": "removeClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_removeClassTest.java", "testclass_name": "Element_removeClassTest", "testcase_name": "testRemoveClassNonExistent"}, {"method_name": "prepend(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_prependTest.java", "testclass_name": "Element_prependTest", "testcase_name": "testPrependValidHtml"}, {"method_name": "prepend(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_prependTest.java", "testclass_name": "Element_prependTest", "testcase_name": "testPrependNullHtml"}, {"method_name": "filter(NodeFilter)", "file_path": "src/test/java/org/jsoup/nodes/Element_filterTest.java", "testclass_name": "Element_filterTest", "testcase_name": "testFilter"}, {"method_name": "val()", "file_path": "src/test/java/org/jsoup/nodes/Element_valTest.java", "testclass_name": "Element_valTest", "testcase_name": "testVal_textarea"}, {"method_name": "val()", "file_path": "src/test/java/org/jsoup/nodes/Element_valTest.java", "testclass_name": "Element_valTest", "testcase_name": "testVal_nonTextarea"}, {"method_name": "root()", "file_path": "src/test/java/org/jsoup/nodes/Element_rootTest.java", "testclass_name": "Element_rootTest", "testcase_name": "testRoot"}, {"method_name": "getElementsMatchingText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsMatchingTextTest.java", "testclass_name": "Element_getElementsMatchingTextTest", "testcase_name": "testGetElementsMatchingText_ValidRegex"}, {"method_name": "getElementsMatchingText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsMatchingTextTest.java", "testclass_name": "Element_getElementsMatchingTextTest", "testcase_name": "testGetElementsMatchingText_InvalidRegex"}, {"method_name": "id(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_idTest.java", "testclass_name": "Element_idTest", "testcase_name": "testIdWithValidId"}, {"method_name": "id(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_idTest.java", "testclass_name": "Element_idTest", "testcase_name": "testIdWithNullId"}, {"method_name": "appendText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendTextTest.java", "testclass_name": "Element_appendTextTest", "testcase_name": "testAppendText"}, {"method_name": "appendText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendTextTest.java", "testclass_name": "Element_appendTextTest", "testcase_name": "testAppendTextNull"}, {"method_name": "closest(Evaluator)", "file_path": "src/test/java/org/jsoup/nodes/Element_closestTest.java", "testclass_name": "Element_closestTest", "testcase_name": "testClosestWithMatchingEvaluator"}, {"method_name": "closest(Evaluator)", "file_path": "src/test/java/org/jsoup/nodes/Element_closestTest.java", "testclass_name": "Element_closestTest", "testcase_name": "testClosestWithNonMatchingEvaluator"}, {"method_name": "prependText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_prependTextTest.java", "testclass_name": "Element_prependTextTest", "testcase_name": "testPrependText"}, {"method_name": "prependText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_prependTextTest.java", "testclass_name": "Element_prependTextTest", "testcase_name": "testPrependTextNull"}, {"method_name": "lastElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_lastElementSiblingTest.java", "testclass_name": "Element_lastElementSiblingTest", "testcase_name": "testLastElementSiblingWithParent"}, {"method_name": "lastElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_lastElementSiblingTest.java", "testclass_name": "Element_lastElementSiblingTest", "testcase_name": "testLastElementSiblingWithoutParent"}, {"method_name": "lastElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_firstElementSiblingTest.java", "testclass_name": "Element_firstElementSiblingTest", "testcase_name": "testLastElementSiblingWithParent"}, {"method_name": "lastElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_firstElementSiblingTest.java", "testclass_name": "Element_firstElementSiblingTest", "testcase_name": "testLastElementSiblingOrphan"}, {"method_name": "normalName()", "file_path": "src/test/java/org/jsoup/nodes/Element_normalNameTest.java", "testclass_name": "Element_normalNameTest", "testcase_name": "testNormalName"}, {"method_name": "appendChild(Node)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendChildTest.java", "testclass_name": "Element_appendChildTest", "testcase_name": "testAppendChild"}, {"method_name": "appendChild(Node)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendChildTest.java", "testclass_name": "Element_appendChildTest", "testcase_name": "testAppendChildNull"}, {"method_name": "parent()", "file_path": "src/test/java/org/jsoup/nodes/Element_parentTest.java", "testclass_name": "Element_parentTest", "testcase_name": "testParentWithParentNode"}, {"method_name": "parent()", "file_path": "src/test/java/org/jsoup/nodes/Element_parentTest.java", "testclass_name": "Element_parentTest", "testcase_name": "testParentWithoutParentNode"}, {"method_name": "forEachNode(Consumer<?superNode>)", "file_path": "src/test/java/org/jsoup/nodes/Element_forEachNodeTest.java", "testclass_name": "Element_forEachNodeTest", "testcase_name": "testForEachNode"}, {"method_name": "previousElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_previousElementSiblingTest.java", "testclass_name": "Element_previousElementSiblingTest", "testcase_name": "testPreviousElementSibling"}, {"method_name": "previousElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_previousElementSiblingTest.java", "testclass_name": "Element_previousElementSiblingTest", "testcase_name": "testPreviousElementSiblingNoSibling"}, {"method_name": "nextElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_nextElementSiblingTest.java", "testclass_name": "Element_nextElementSiblingTest", "testcase_name": "testNextElementSiblingWithNoSibling"}, {"method_name": "nextElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_nextElementSiblingTest.java", "testclass_name": "Element_nextElementSiblingTest", "testcase_name": "testNextElementSiblingWithNonElementSibling"}, {"method_name": "nextElementSibling()", "file_path": "src/test/java/org/jsoup/nodes/Element_nextElementSiblingTest.java", "testclass_name": "Element_nextElementSiblingTest", "testcase_name": "testNextElementSiblingWithElementSibling"}, {"method_name": "tagName(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Element_tagNameTest.java", "testclass_name": "Element_tagNameTest", "testcase_name": "testTagName"}, {"method_name": "tagName(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Element_tagNameTest.java", "testclass_name": "Element_tagNameTest", "testcase_name": "testTagNameWithEmptyTagName"}, {"method_name": "tagName(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Element_tagNameTest.java", "testclass_name": "Element_tagNameTest", "testcase_name": "testTagNameWithEmptyNamespace"}, {"method_name": "elementSiblingIndex()", "file_path": "src/test/java/org/jsoup/nodes/Element_elementSiblingIndexTest.java", "testclass_name": "Element_elementSiblingIndexTest", "testcase_name": "testElementSiblingIndex_NoParent"}, {"method_name": "elementSiblingIndex()", "file_path": "src/test/java/org/jsoup/nodes/Element_elementSiblingIndexTest.java", "testclass_name": "Element_elementSiblingIndexTest", "testcase_name": "testElementSiblingIndex_WithParent"}, {"method_name": "getElementsByAttribute(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByAttributeTest.java", "testclass_name": "Element_getElementsByAttributeTest", "testcase_name": "testGetElementsByAttribute"}, {"method_name": "getElementsByAttribute(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByAttributeTest.java", "testclass_name": "Element_getElementsByAttributeTest", "testcase_name": "testGetElementsByAttributeEmptyKey"}, {"method_name": "lastElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_lastElementChildTest.java", "testclass_name": "Element_lastElementChildTest", "testcase_name": "testLastElementChildWithNoChildren"}, {"method_name": "lastElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_lastElementChildTest.java", "testclass_name": "Element_lastElementChildTest", "testcase_name": "testLastElementChildWithNonElementChildren"}, {"method_name": "lastElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_lastElementChildTest.java", "testclass_name": "Element_lastElementChildTest", "testcase_name": "testLastElementChildWithElementChildren"}, {"method_name": "siblingElements()", "file_path": "src/test/java/org/jsoup/nodes/Element_siblingElementsTest.java", "testclass_name": "Element_siblingElementsTest", "testcase_name": "testSiblingElements_NoParent"}, {"method_name": "siblingElements()", "file_path": "src/test/java/org/jsoup/nodes/Element_siblingElementsTest.java", "testclass_name": "Element_siblingElementsTest", "testcase_name": "testSiblingElements_WithParent"}, {"method_name": "ownText()", "file_path": "src/test/java/org/jsoup/nodes/Element_ownTextTest.java", "testclass_name": "Element_ownTextTest", "testcase_name": "testOwnText"}, {"method_name": "ownText()", "file_path": "src/test/java/org/jsoup/nodes/Element_ownTextTest.java", "testclass_name": "Element_ownTextTest", "testcase_name": "testOwnTextWithChildElements"}, {"method_name": "ownText()", "file_path": "src/test/java/org/jsoup/nodes/Element_ownTextTest.java", "testclass_name": "Element_ownTextTest", "testcase_name": "testOwnTextWithNoText"}, {"method_name": "forEach(Consumer<?superElement>)", "file_path": "src/test/java/org/jsoup/nodes/Element_forEachTest.java", "testclass_name": "Element_forEachTest", "testcase_name": "testForEach"}, {"method_name": "appendTo(Element)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendToTest.java", "testclass_name": "Element_appendToTest", "testcase_name": "testAppendToSuccess"}, {"method_name": "appendTo(Element)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendToTest.java", "testclass_name": "Element_appendToTest", "testcase_name": "testAppendToNullParent"}, {"method_name": "appendElement(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Element_appendElementTest.java", "testclass_name": "Element_appendElementTest", "testcase_name": "testAppendElement"}, {"method_name": "getElementsMatchingOwnText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsMatchingOwnTextTest.java", "testclass_name": "Element_getElementsMatchingOwnTextTest", "testcase_name": "testGetElementsMatchingOwnText_ValidRegex"}, {"method_name": "getElementsMatchingOwnText(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsMatchingOwnTextTest.java", "testclass_name": "Element_getElementsMatchingOwnTextTest", "testcase_name": "testGetElementsMatchingOwnText_InvalidRegex"}, {"method_name": "prependChild(Node)", "file_path": "src/test/java/org/jsoup/nodes/Element_prependChildTest.java", "testclass_name": "Element_prependChildTest", "testcase_name": "testPrependChild"}, {"method_name": "prependChild(Node)", "file_path": "src/test/java/org/jsoup/nodes/Element_prependChildTest.java", "testclass_name": "Element_prependChildTest", "testcase_name": "testPrependChildNull"}, {"method_name": "getElementsByAttributeStarting(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByAttributeStartingTest.java", "testclass_name": "Element_getElementsByAttributeStartingTest", "testcase_name": "testGetElementsByAttributeStarting"}, {"method_name": "getElementsByAttributeStarting(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByAttributeStartingTest.java", "testclass_name": "Element_getElementsByAttributeStartingTest", "testcase_name": "testGetElementsByAttributeStarting_EmptyPrefix"}, {"method_name": "getElementsByAttributeStarting(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByAttributeStartingTest.java", "testclass_name": "Element_getElementsByAttributeStartingTest", "testcase_name": "testGetElementsByAttributeStarting_NullPrefix"}, {"method_name": "getElementsByClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByClassTest.java", "testclass_name": "Element_getElementsByClassTest", "testcase_name": "testGetElementsByClass"}, {"method_name": "getElementsByClass(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByClassTest.java", "testclass_name": "Element_getElementsByClassTest", "testcase_name": "testGetElementsByClass_EmptyClassName"}, {"method_name": "getElementsByAttributeValueMatching(String,Pattern)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByAttributeValueMatchingTest.java", "testclass_name": "Element_getElementsByAttributeValueMatchingTest", "testcase_name": "testGetElementsByAttributeValueMatching"}, {"method_name": "classNames()", "file_path": "src/test/java/org/jsoup/nodes/Element_classNamesTest.java", "testclass_name": "Element_classNamesTest", "testcase_name": "testClassNamesWithSingleClass"}, {"method_name": "classNames()", "file_path": "src/test/java/org/jsoup/nodes/Element_classNamesTest.java", "testclass_name": "Element_classNamesTest", "testcase_name": "testClassNamesWithMultipleClasses"}, {"method_name": "classNames()", "file_path": "src/test/java/org/jsoup/nodes/Element_classNamesTest.java", "testclass_name": "Element_classNamesTest", "testcase_name": "testClassNamesWithEmptyClass"}, {"method_name": "classNames()", "file_path": "src/test/java/org/jsoup/nodes/Element_classNamesTest.java", "testclass_name": "Element_classNamesTest", "testcase_name": "testClassNamesWithWhitespaceClass"}, {"method_name": "classNames()", "file_path": "src/test/java/org/jsoup/nodes/Element_classNamesTest.java", "testclass_name": "Element_classNamesTest", "testcase_name": "testClassNamesWithMixedClasses"}, {"method_name": "getElementsByTag(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByTagTest.java", "testclass_name": "Element_getElementsByTagTest", "testcase_name": "testGetElementsByTag"}, {"method_name": "getElementsByTag(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementsByTagTest.java", "testclass_name": "Element_getElementsByTagTest", "testcase_name": "testGetElementsByTagWithEmptyTagName"}, {"method_name": "firstElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_firstElementChildTest.java", "testclass_name": "Element_firstElementChildTest", "testcase_name": "testFirstElementChildWithElement"}, {"method_name": "firstElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_firstElementChildTest.java", "testclass_name": "Element_firstElementChildTest", "testcase_name": "testFirstElementChildWithNonElement"}, {"method_name": "firstElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_firstElementChildTest.java", "testclass_name": "Element_firstElementChildTest", "testcase_name": "testFirstElementChildWithMixedChildren"}, {"method_name": "firstElementChild()", "file_path": "src/test/java/org/jsoup/nodes/Element_firstElementChildTest.java", "testclass_name": "Element_firstElementChildTest", "testcase_name": "testFirstElementChildWithNoChildren"}, {"method_name": "getElementById(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementByIdTest.java", "testclass_name": "Element_getElementByIdTest", "testcase_name": "testGetElementById_ExistingId"}, {"method_name": "getElementById(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementByIdTest.java", "testclass_name": "Element_getElementByIdTest", "testcase_name": "testGetElementById_NonExistingId"}, {"method_name": "getElementById(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementByIdTest.java", "testclass_name": "Element_getElementByIdTest", "testcase_name": "testGetElementById_EmptyId"}, {"method_name": "getElementById(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_getElementByIdTest.java", "testclass_name": "Element_getElementByIdTest", "testcase_name": "testGetElementById_NullId"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_expectFirstTest.java", "testclass_name": "Element_expectFirstTest", "testcase_name": "testExpectFirstWithMatchingElement"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/nodes/Element_expectFirstTest.java", "testclass_name": "Element_expectFirstTest", "testcase_name": "testExpectFirstWithNoMatchingElement"}], "TextNode": [{"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testWithSupplementaryCharacter"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitAnEmbolden"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/TextNode_toStringTest.java", "testclass_name": "TextNode_toStringTest", "testcase_name": "testToString"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testClone"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testCloneAfterAttributesHit"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNode_cloneTest.java", "testclass_name": "TextNode_cloneTest", "testcase_name": "testClone"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "normaliseWhitespace"}, {"method_name": "isBlank()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testBlank"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testTextBean"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testHasTextWhenIterating"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitText"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitAnEmbolden"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitTextValidation"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNode_splitTextTest.java", "testclass_name": "TextNode_splitTextTest", "testcase_name": "testSplitTextValidOffset"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNode_splitTextTest.java", "testclass_name": "TextNode_splitTextTest", "testcase_name": "testSplitTextNegativeOffset"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNode_splitTextTest.java", "testclass_name": "TextNode_splitTextTest", "testcase_name": "testSplitTextOffsetGreaterThanLength"}, {"method_name": "childNodes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testLeadNodesHaveNoChildren"}, {"method_name": "getWholeText()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "getWholeText()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testHasTextWhenIterating"}, {"method_name": "createFromEncoded(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "createFromEncoded"}, {"method_name": "createFromEncoded(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNode_createFromEncodedTest.java", "testclass_name": "TextNode_createFromEncodedTest", "testcase_name": "testCreateFromEncoded"}, {"method_name": "stripLeadingWhitespace(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "stripLeadingWhitespace"}, {"method_name": "attr(String,String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "coreValue(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "hasAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "baseUri()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "absUrl(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "childNodeSize()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "empty()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "ensureChildNodes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "hasSameValue(TextNode)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNode_textTest.java", "testclass_name": "TextNode_textTest", "testcase_name": "testText_SetText_ReturnsSameInstance"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNode_textTest.java", "testclass_name": "TextNode_textTest", "testcase_name": "testText_SetText_UpdatesCoreValue"}], "Elements": [{"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/select/Elements_attrTest.java", "testclass_name": "Elements_attrTest", "testcase_name": "testAttrWithExistingAttribute"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/select/Elements_attrTest.java", "testclass_name": "Elements_attrTest", "testcase_name": "testAttrWithNonExistingAttribute"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/select/Elements_hasClassTest.java", "testclass_name": "Elements_hasClassTest", "testcase_name": "testHasClass_ClassExists"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/select/Elements_hasClassTest.java", "testclass_name": "Elements_hasClassTest", "testcase_name": "testHasClass_ClassDoesNotExist"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/select/Elements_hasTextTest.java", "testclass_name": "Elements_hasTextTest", "testcase_name": "testHasTextWithText"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/select/Elements_hasTextTest.java", "testclass_name": "Elements_hasTextTest", "testcase_name": "testHasTextWithoutText"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/select/Elements_hasTextTest.java", "testclass_name": "Elements_hasTextTest", "testcase_name": "testHasTextMixed"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/select/Elements_htmlTest.java", "testclass_name": "Elements_htmlTest", "testcase_name": "testHtml"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/select/Elements_toStringTest.java", "testclass_name": "Elements_toStringTest", "testcase_name": "testToString"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/select/Elements_cloneTest.java", "testclass_name": "Elements_cloneTest", "testcase_name": "testClone"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/Elements_traverseTest.java", "testclass_name": "Elements_traverseTest", "testcase_name": "testTraverse"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/select/Elements_textTest.java", "testclass_name": "Elements_textTest", "testcase_name": "testText"}, {"method_name": "hasAttr(String)", "file_path": "src/test/java/org/jsoup/select/Elements_hasAttrTest.java", "testclass_name": "Elements_hasAttrTest", "testcase_name": "testHasAttrPresent"}, {"method_name": "hasAttr(String)", "file_path": "src/test/java/org/jsoup/select/Elements_hasAttrTest.java", "testclass_name": "Elements_hasAttrTest", "testcase_name": "testHasAttrNotPresent"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/select/Elements_removeAttrTest.java", "testclass_name": "Elements_removeAttrTest", "testcase_name": "testRemoveAttr"}, {"method_name": "empty()", "file_path": "src/test/java/org/jsoup/select/Elements_emptyTest.java", "testclass_name": "Elements_emptyTest", "testcase_name": "testEmpty"}, {"method_name": "toggleClass(String)", "file_path": "src/test/java/org/jsoup/select/Elements_toggleClassTest.java", "testclass_name": "Elements_toggleClassTest", "testcase_name": "testToggleClass"}, {"method_name": "not(String)", "file_path": "src/test/java/org/jsoup/select/Elements_notTest.java", "testclass_name": "Elements_notTest", "testcase_name": "testNot"}, {"method_name": "forms()", "file_path": "src/test/java/org/jsoup/select/Elements_formsTest.java", "testclass_name": "Elements_formsTest", "testcase_name": "testForms"}, {"method_name": "removeIf(Predicate<Element>)", "file_path": "src/test/java/org/jsoup/select/Elements_removeIfTest.java", "testclass_name": "Elements_removeIfTest", "testcase_name": "testRemoveIf"}, {"method_name": "removeClass(String)", "file_path": "src/test/java/org/jsoup/select/Elements_removeClassTest.java", "testclass_name": "Elements_removeClassTest", "testcase_name": "testRemoveClass"}, {"method_name": "append(String)", "file_path": "src/test/java/org/jsoup/select/Elements_appendTest.java", "testclass_name": "Elements_appendTest", "testcase_name": "testAppend"}, {"method_name": "eachText()", "file_path": "src/test/java/org/jsoup/select/Elements_eachTextTest.java", "testclass_name": "Elements_eachTextTest", "testcase_name": "testEachText"}, {"method_name": "tagName(String)", "file_path": "src/test/java/org/jsoup/select/Elements_tagNameTest.java", "testclass_name": "Elements_tagNameTest", "testcase_name": "testTagName"}, {"method_name": "eachAttr(String)", "file_path": "src/test/java/org/jsoup/select/Elements_eachAttrTest.java", "testclass_name": "Elements_eachAttrTest", "testcase_name": "testEachAttr"}, {"method_name": "clear()", "file_path": "src/test/java/org/jsoup/select/Elements_clearTest.java", "testclass_name": "Elements_clearTest", "testcase_name": "testClear"}, {"method_name": "before(String)", "file_path": "src/test/java/org/jsoup/select/Elements_beforeTest.java", "testclass_name": "Elements_beforeTest", "testcase_name": "testBefore"}, {"method_name": "prepend(String)", "file_path": "src/test/java/org/jsoup/select/Elements_prependTest.java", "testclass_name": "Elements_prependTest", "testcase_name": "testPrepend"}, {"method_name": "filter(NodeFilter)", "file_path": "src/test/java/org/jsoup/select/Elements_filterTest.java", "testclass_name": "Elements_filterTest", "testcase_name": "testFilter"}, {"method_name": "after(String)", "file_path": "src/test/java/org/jsoup/select/Elements_afterTest.java", "testclass_name": "Elements_afterTest", "testcase_name": "testAfter"}, {"method_name": "val()", "file_path": "src/test/java/org/jsoup/select/Elements_valTest.java", "testclass_name": "Elements_valTest", "testcase_name": "testValWithElements"}, {"method_name": "val()", "file_path": "src/test/java/org/jsoup/select/Elements_valTest.java", "testclass_name": "Elements_valTest", "testcase_name": "testValWithEmptyElements"}], "EvaluatorDebug": [{"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testImmediateParentRun"}, {"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testOrGetsCorrectPrecedence"}, {"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testParsesMultiCorrectly"}, {"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "parsesOrAfterAttribute"}], "DocumentType": [{"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "outerHtmlGeneration"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "testRoundTrip"}, {"method_name": "DocumentType(String,String,String)", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "constructorValidationOkWithBlankName"}, {"method_name": "DocumentType(String,String,String)", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "constructorValidationThrowsExceptionOnNulls"}, {"method_name": "DocumentType(String,String,String)", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "constructorValidationOkWithBlankPublicAndSystemIds"}, {"method_name": "nodeName()", "file_path": "src/test/java/org/jsoup/nodes/DocumentType_nodeNameTest.java", "testclass_name": "DocumentType_nodeNameTest", "testcase_name": "testNodeName"}], "Attributes": [{"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSetKeyConsistency"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "htmlSkipsInternals"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBooleans"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanNullAttributesConsistent"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanEmptyString"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanCaseInsensitive"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_getTest.java", "testclass_name": "Attributes_getTest", "testcase_name": "testGetExistingKey"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_getTest.java", "testclass_name": "Attributes_getTest", "testcase_name": "testGetNonExistingKey"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_toStringTest.java", "testclass_name": "Attributes_toStringTest", "testcase_name": "testToString"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "equalsIsOrderInsensitive"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_cloneTest.java", "testclass_name": "Attributes_cloneTest", "testcase_name": "testClone"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSetKeyConsistency"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBoolean"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanNullAttributesConsistent"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanEmptyString"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanCaseInsensitive"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_putTest.java", "testclass_name": "Attributes_putTest", "testcase_name": "testPutNewKey"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_putTest.java", "testclass_name": "Attributes_putTest", "testcase_name": "testPutExistingKey"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_putTest.java", "testclass_name": "Attributes_putTest", "testcase_name": "testPutNullKey"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_sizeTest.java", "testclass_name": "Attributes_sizeTest", "testcase_name": "testSizeEmpty"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_sizeTest.java", "testclass_name": "Attributes_sizeTest", "testcase_name": "testSizeAfterAdd"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_sizeTest.java", "testclass_name": "Attributes_sizeTest", "testcase_name": "testSizeAfterRemove"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_sizeTest.java", "testclass_name": "Attributes_sizeTest", "testcase_name": "testSizeAfterAddAll"}, {"method_name": "hasKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "getIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "getIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_getIgnoreCaseTest.java", "testclass_name": "Attributes_getIgnoreCaseTest", "testcase_name": "testGetIgnoreCase_KeyExists"}, {"method_name": "getIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_getIgnoreCaseTest.java", "testclass_name": "Attributes_getIgnoreCaseTest", "testcase_name": "testGetIgnoreCase_KeyDoesNotExist"}, {"method_name": "dataset()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemovable"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorUpdateable"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorHasNext"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIterator"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorSkipsInternal"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "iteratorThrows"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorEmpty"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemove"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_iteratorTest.java", "testclass_name": "Attributes_iteratorTest", "testcase_name": "testIteratorHasNext"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_iteratorTest.java", "testclass_name": "Attributes_iteratorTest", "testcase_name": "testIteratorNext"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_iteratorTest.java", "testclass_name": "Attributes_iteratorTest", "testcase_name": "testIteratorNextThrowsNoSuchElementException"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_iteratorTest.java", "testclass_name": "Attributes_iteratorTest", "testcase_name": "testIteratorRemove"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_iteratorTest.java", "testclass_name": "Attributes_iteratorTest", "testcase_name": "testIteratorConcurrentModificationException"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testListSkipsInternal"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_asListTest.java", "testclass_name": "Attributes_asListTest", "testcase_name": "testAsListWithNormalKeys"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_asListTest.java", "testclass_name": "Attributes_asListTest", "testcase_name": "testAsListWithInternalKeys"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_asListTest.java", "testclass_name": "Attributes_asListTest", "testcase_name": "testAsListWithEmptyAttributes"}, {"method_name": "remove(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "remove(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_removeTest.java", "testclass_name": "Attributes_removeTest", "testcase_name": "testRemoveExistingKey"}, {"method_name": "remove(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_removeTest.java", "testclass_name": "Attributes_removeTest", "testcase_name": "testRemoveNonExistingKey"}, {"method_name": "hasDeclaredValueForKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBoolean"}, {"method_name": "hasDeclaredValueForKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_hasDeclaredValueForKeyTest.java", "testclass_name": "Attributes_hasDeclaredValueForKeyTest", "testcase_name": "testHasDeclaredValueForKey_KeyExistsWithValue"}, {"method_name": "hasDeclaredValueForKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_hasDeclaredValueForKeyTest.java", "testclass_name": "Attributes_hasDeclaredValueForKeyTest", "testcase_name": "testHasDeclaredValueForKey_KeyExistsWithoutValue"}, {"method_name": "hasDeclaredValueForKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_hasDeclaredValueForKeyTest.java", "testclass_name": "Attributes_hasDeclaredValueForKeyTest", "testcase_name": "testHasDeclaredValueForKey_KeyDoesNotExist"}, {"method_name": "hasDeclaredValueForKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBoolean"}, {"method_name": "hasDeclaredValueForKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_hasDeclaredValueForKeyIgnoreCaseTest.java", "testclass_name": "Attributes_hasDeclaredValueForKeyIgnoreCaseTest", "testcase_name": "testHasDeclaredValueForKeyIgnoreCase_ValueExists"}, {"method_name": "hasDeclaredValueForKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_hasDeclaredValueForKeyIgnoreCaseTest.java", "testclass_name": "Attributes_hasDeclaredValueForKeyIgnoreCaseTest", "testcase_name": "testHasDeclaredValueForKeyIgnoreCase_ValueDoesNotExist"}, {"method_name": "hasDeclaredValueForKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_hasDeclaredValueForKeyIgnoreCaseTest.java", "testclass_name": "Attributes_hasDeclaredValueForKeyIgnoreCaseTest", "testcase_name": "testHasDeclaredValueForKeyIgnoreCase_KeyDoesNotExist"}, {"method_name": "add(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "equalsIsOrderInsensitive"}, {"method_name": "add(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "equalsIsOrderInsensitive"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_SameObject"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_NullObject"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_DifferentClass"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_DifferentSize"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_SameKeysDifferentValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_SameKeysSameValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_equalsTest.java", "testclass_name": "Attributes_equalsTest", "testcase_name": "testEquals_DifferentKeys"}, {"method_name": "attribute(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_attributeTest.java", "testclass_name": "Attributes_attributeTest", "testcase_name": "testAttributeFound"}, {"method_name": "attribute(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_attributeTest.java", "testclass_name": "Attributes_attributeTest", "testcase_name": "testAttributeNotFound"}, {"method_name": "normalize()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_normalizeTest.java", "testclass_name": "Attributes_normalizeTest", "testcase_name": "testNormalizeWithInternalKey"}, {"method_name": "normalize()", "file_path": "src/test/java/org/jsoup/nodes/Attributes_normalizeTest.java", "testclass_name": "Attributes_normalizeTest", "testcase_name": "testNormalizeWithNonInternalKey"}, {"method_name": "addAll(Attributes)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_addAllTest.java", "testclass_name": "Attributes_addAllTest", "testcase_name": "testAddAllWithEmptyAttributes"}, {"method_name": "addAll(Attributes)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_addAllTest.java", "testclass_name": "Attributes_addAllTest", "testcase_name": "testAddAllWithNonEmptyAttributes"}, {"method_name": "addAll(Attributes)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_addAllTest.java", "testclass_name": "Attributes_addAllTest", "testcase_name": "testAddAllWithExistingAttributes"}, {"method_name": "removeIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_removeIgnoreCaseTest.java", "testclass_name": "Attributes_removeIgnoreCaseTest", "testcase_name": "testRemoveIgnoreCase_KeyExists"}, {"method_name": "removeIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_removeIgnoreCaseTest.java", "testclass_name": "Attributes_removeIgnoreCaseTest", "testcase_name": "testRemoveIgnoreCase_KeyDoesNotExist"}, {"method_name": "sourceRange(String)", "file_path": "src/test/java/org/jsoup/nodes/Attributes_sourceRangeTest.java", "testclass_name": "Attributes_sourceRangeTest", "testcase_name": "testSourceRange"}], "Node": [{"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canWrap"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRemoveViaNode"}, {"method_name": "replaceWith(Node)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canReplace"}], "HtmlTreeBuilderStateTest": [{"method_name": "findConstantArrays(Class)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "ensureSearchArraysAreSorted"}, {"method_name": "ensureSorted(List)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "ensureSearchArraysAreSorted"}], "HtmlTreeBuilder": [{"method_name": "parse(Reader,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "nonnull"}], "TreeBuilder": [{"method_name": "getDeclaredAnnotations()", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "nonnullAssertions"}], "Arrays": [{"method_name": "sort(Object[])", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "ensureArraysAreSorted"}, {"method_name": "sort(char[])", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "ensureSearchArraysAreSorted"}], "Tag": [{"method_name": "isKnownTag(String)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "ensureTagSearchesAreKnownTags"}, {"method_name": "isKnownTag(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "knownTags"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/parser/Tag_toStringTest.java", "testclass_name": "Tag_toStringTest", "testcase_name": "testToString"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "isCaseSensitive"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "trims"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "equality"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "divSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "pSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "defaultSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "valueOfChecksNotNull"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "valueOfChecksNotEmpty"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "knownSvgNamespace"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "unknownTagNamespace"}, {"method_name": "valueOf(String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "canBeInsensitive"}, {"method_name": "isBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "divSemantics"}, {"method_name": "isBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "pSemantics"}, {"method_name": "isBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "formatAsBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "divSemantics"}, {"method_name": "formatAsBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "pSemantics"}, {"method_name": "formatAsBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "defaultSemantics"}, {"method_name": "isInline()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "isInline()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "defaultSemantics"}, {"method_name": "isSelfClosing()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "namespace()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "knownSvgNamespace"}, {"method_name": "namespace()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "unknownTagNamespace"}, {"method_name": "valueOf(String,String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "testcase_name": "testValueOfKnownTag"}, {"method_name": "valueOf(String,String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "testcase_name": "testValueOfUnknownTag"}, {"method_name": "valueOf(String,String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "testcase_name": "testValueOfPreserveTagCase"}, {"method_name": "valueOf(String,String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "testcase_name": "testValueOfNormalizeTag"}, {"method_name": "valueOf(String,String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "testcase_name": "testValueOfInvalidTagName"}, {"method_name": "valueOf(String,String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/Tag_valueOfTest.java", "testclass_name": "Tag_valueOfTest", "testcase_name": "testValueOfInvalidNamespace"}], "Safelist": [{"method_name": "addTags(String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnTags"}, {"method_name": "addTags(String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "noscriptIsBlocked"}, {"method_name": "addAttributes(String,String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnAttributes"}, {"method_name": "addEnforcedAttribute(String,String,String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnEnforcedAttributes"}, {"method_name": "addProtocols(String,String,String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnProtocols"}, {"method_name": "isSafeTag(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_simpleTextTest.java", "testclass_name": "Safelist_simpleTextTest", "testcase_name": "testSimpleText"}, {"method_name": "isSafeTag(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_relaxedTest.java", "testclass_name": "Safelist_relaxedTest", "testcase_name": "testRelaxedSafelist_isSafeTag"}, {"method_name": "isSafeTag(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_basicWithImagesTest.java", "testclass_name": "Safelist_basicWithImagesTest", "testcase_name": "testBasicWithImages_AddsImgTag"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeAttributesTest.java", "testclass_name": "Safelist_removeAttributesTest", "testcase_name": "testRemoveAttributes_SingleTag"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeAttributesTest.java", "testclass_name": "Safelist_removeAttributesTest", "testcase_name": "testRemoveAttributes_AllTags"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeAttributesTest.java", "testclass_name": "Safelist_removeAttributesTest", "testcase_name": "testRemoveAttributes_TagNotAllowed"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeAttributesTest.java", "testclass_name": "Safelist_removeAttributesTest", "testcase_name": "testRemoveAttributes_NoAttributesSupplied"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeAttributesTest.java", "testclass_name": "Safelist_removeAttributesTest", "testcase_name": "testRemoveAttributes_EmptyTag"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeAttributesTest.java", "testclass_name": "Safelist_removeAttributesTest", "testcase_name": "testRemoveAttributes_NullAttributes"}, {"method_name": "getEnforcedAttributes(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_getEnforcedAttributesTest.java", "testclass_name": "Safelist_getEnforcedAttributesTest", "testcase_name": "testGetEnforcedAttributes_withEnforcedAttributes"}, {"method_name": "getEnforcedAttributes(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_getEnforcedAttributesTest.java", "testclass_name": "Safelist_getEnforcedAttributesTest", "testcase_name": "testGetEnforcedAttributes_withoutEnforcedAttributes"}, {"method_name": "getEnforcedAttributes(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_getEnforcedAttributesTest.java", "testclass_name": "Safelist_getEnforcedAttributesTest", "testcase_name": "testGetEnforcedAttributes_afterRemovingEnforcedAttribute"}, {"method_name": "getEnforcedAttributes(String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_relaxedTest.java", "testclass_name": "Safelist_relaxedTest", "testcase_name": "testRelaxedSafelist_getEnforcedAttributes"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_relaxedTest.java", "testclass_name": "Safelist_relaxedTest", "testcase_name": "testRelaxedSafelist_isSafeAttribute"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_basicWithImagesTest.java", "testclass_name": "Safelist_basicWithImagesTest", "testcase_name": "testBasicWithImages_AddsImgAttributes"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_basicWithImagesTest.java", "testclass_name": "Safelist_basicWithImagesTest", "testcase_name": "testBasicWithImages_AddsImgProtocols"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_basicWithImagesTest.java", "testclass_name": "Safelist_basicWithImagesTest", "testcase_name": "testBasicWithImages_InvalidProtocol"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_isSafeAttributeTest.java", "testclass_name": "Safelist_isSafeAttributeTest", "testcase_name": "testIsSafeAttribute_validAttribute"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_isSafeAttributeTest.java", "testclass_name": "Safelist_isSafeAttributeTest", "testcase_name": "testIsSafeAttribute_invalidAttribute"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_isSafeAttributeTest.java", "testclass_name": "Safelist_isSafeAttributeTest", "testcase_name": "testIsSafeAttribute_enforcedAttribute"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_isSafeAttributeTest.java", "testclass_name": "Safelist_isSafeAttributeTest", "testcase_name": "testIsSafeAttribute_noAttributesDefined"}, {"method_name": "isSafeAttribute(String,Element,Attribute)", "file_path": "src/test/java/org/jsoup/safety/Safelist_isSafeAttributeTest.java", "testclass_name": "Safelist_isSafeAttributeTest", "testcase_name": "testIsSafeAttribute_allTag"}, {"method_name": "addTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_addTagsTest.java", "testclass_name": "Safelist_addTagsTest", "testcase_name": "testAddTags_ValidTags"}, {"method_name": "addTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_addTagsTest.java", "testclass_name": "Safelist_addTagsTest", "testcase_name": "testAddTags_NullTags"}, {"method_name": "addTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_addTagsTest.java", "testclass_name": "Safelist_addTagsTest", "testcase_name": "testAddTags_EmptyTag"}, {"method_name": "addTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_addTagsTest.java", "testclass_name": "Safelist_addTagsTest", "testcase_name": "testAddTags_NoscriptTag"}, {"method_name": "removeTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeTagsTest.java", "testclass_name": "Safelist_removeTagsTest", "testcase_name": "testRemoveTags_ValidTags"}, {"method_name": "removeTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeTagsTest.java", "testclass_name": "Safelist_removeTagsTest", "testcase_name": "testRemoveTags_InvalidTags"}, {"method_name": "removeTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeTagsTest.java", "testclass_name": "Safelist_removeTagsTest", "testcase_name": "testRemoveTags_NullTags"}, {"method_name": "removeTags(String[])", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeTagsTest.java", "testclass_name": "Safelist_removeTagsTest", "testcase_name": "testRemoveTags_EmptyTags"}, {"method_name": "removeEnforcedAttribute(String,String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeEnforcedAttributeTest.java", "testclass_name": "Safelist_removeEnforcedAttributeTest", "testcase_name": "testRemoveEnforcedAttribute_ExistingAttribute"}, {"method_name": "removeEnforcedAttribute(String,String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeEnforcedAttributeTest.java", "testclass_name": "Safelist_removeEnforcedAttributeTest", "testcase_name": "testRemoveEnforcedAttribute_NonExistingAttribute"}, {"method_name": "removeEnforcedAttribute(String,String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeEnforcedAttributeTest.java", "testclass_name": "Safelist_removeEnforcedAttributeTest", "testcase_name": "testRemoveEnforcedAttribute_NonExistingTag"}, {"method_name": "removeEnforcedAttribute(String,String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeEnforcedAttributeTest.java", "testclass_name": "Safelist_removeEnforcedAttributeTest", "testcase_name": "testRemoveEnforcedAttribute_EmptyTagAndAttribute"}, {"method_name": "removeEnforcedAttribute(String,String)", "file_path": "src/test/java/org/jsoup/safety/Safelist_removeEnforcedAttributeTest.java", "testclass_name": "Safelist_removeEnforcedAttributeTest", "testcase_name": "testRemoveEnforcedAttribute_NullTagAndAttribute"}], "Attribute": [{"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "html"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "testWithSupplementaryCharacterInAttributeKeyAndValue"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanNullAttributesConsistent"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanEmptyString"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanCaseInsensitive"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_htmlTest.java", "testclass_name": "Attribute_htmlTest", "testcase_name": "testHtml_NormalCase"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_htmlTest.java", "testclass_name": "Attribute_htmlTest", "testcase_name": "testHtml_IOException"}, {"method_name": "<init>(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "validatesKeysNotEmpty"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "validatesKeysNotEmptyViaSet"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "settersOnOrphanAttribute"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorUpdateable"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSetKeyConsistency"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithValidKey"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithEmptyParent"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithNullKey"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithEmptyKey"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithWhitespaceKey"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithExistingKeyInParent"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setKeyTest.java", "testclass_name": "Attribute_setKeyTest", "testcase_name": "testSetKeyWithRangeTracking"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemovable"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIterator"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorSkipsInternal"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testListSkipsInternal"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_getKeyTest.java", "testclass_name": "Attribute_getKeyTest", "testcase_name": "testGetKey"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorHasNext"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIterator"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_getValueTest.java", "testclass_name": "Attribute_getValueTest", "testcase_name": "testGetValueWithNonNullValue"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_getValueTest.java", "testclass_name": "Attribute_getValueTest", "testcase_name": "testGetValueWithNullValue"}, {"method_name": "hasDeclaredValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "hasDeclaredValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "hasValue"}, {"method_name": "isBooleanAttribute(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "isBooleanAttribute(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreNotCaseSensitive"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "settersOnOrphanAttribute"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "canSetValueToNull"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorUpdateable"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setValueTest.java", "testclass_name": "Attribute_setValueTest", "testcase_name": "testSetValueWithParent"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setValueTest.java", "testclass_name": "Attribute_setValueTest", "testcase_name": "testSetValueWithoutParent"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_setValueTest.java", "testclass_name": "Attribute_setValueTest", "testcase_name": "testSetValueWithNonExistentKey"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_toStringTest.java", "testclass_name": "Attribute_toStringTest", "testcase_name": "testToString"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_cloneTest.java", "testclass_name": "Attribute_cloneTest", "testcase_name": "testClone"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_equalsTest.java", "testclass_name": "Attribute_equalsTest", "testcase_name": "testEquals_SameObject"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_equalsTest.java", "testclass_name": "Attribute_equalsTest", "testcase_name": "testEquals_NullObject"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_equalsTest.java", "testclass_name": "Attribute_equalsTest", "testcase_name": "testEquals_DifferentClass"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_equalsTest.java", "testclass_name": "Attribute_equalsTest", "testcase_name": "testEquals_DifferentKey"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_equalsTest.java", "testclass_name": "Attribute_equalsTest", "testcase_name": "testEquals_DifferentValue"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_equalsTest.java", "testclass_name": "Attribute_equalsTest", "testcase_name": "testEquals_SameKeyAndValue"}, {"method_name": "createFromEncoded(String,String)", "file_path": "src/test/java/org/jsoup/nodes/Attribute_createFromEncodedTest.java", "testclass_name": "Attribute_createFromEncodedTest", "testcase_name": "testCreateFromEncoded"}, {"method_name": "hashCode()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_hashCodeTest.java", "testclass_name": "Attribute_hashCodeTest", "testcase_name": "testHashCode"}, {"method_name": "hashCode()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_hashCodeTest.java", "testclass_name": "Attribute_hashCodeTest", "testcase_name": "testHashCodeWithNullValue"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_sourceRangeTest.java", "testclass_name": "Attribute_sourceRangeTest", "testcase_name": "testSourceRangeWithParent"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/nodes/Attribute_sourceRangeTest.java", "testclass_name": "Attribute_sourceRangeTest", "testcase_name": "testSourceRangeWithoutParent"}], "SoftPool": [{"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftLocalPool"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftReferenceBehavior"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testBorrowFromEmptyPool"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testReleaseMoreThanMaxIdle"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPool_borrowTest.java", "testclass_name": "SoftPool_borrowTest", "testcase_name": "testBorrowFromEmptyPool"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPool_borrowTest.java", "testclass_name": "SoftPool_borrowTest", "testcase_name": "testBorrowFromNonEmptyPool"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftLocalPool"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftReferenceBehavior"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testReleaseMoreThanMaxIdle"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPool_releaseTest.java", "testclass_name": "SoftPool_releaseTest", "testcase_name": "testReleaseWhenStackIsNotFull"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPool_releaseTest.java", "testclass_name": "SoftPool_releaseTest", "testcase_name": "testReleaseWhenStackIsFull"}], "DataNode": [{"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputScriptWithCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputScriptWithoutCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputStyleWithCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputStyleWithoutCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputOtherWithCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputOtherWithoutCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputOrphanWithoutCData"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/DataNode_cloneTest.java", "testclass_name": "DataNode_cloneTest", "testcase_name": "testClone"}, {"method_name": "setWholeData(String)", "file_path": "src/test/java/org/jsoup/nodes/DataNode_setWholeDataTest.java", "testclass_name": "DataNode_setWholeDataTest", "testcase_name": "testSetWholeData"}], "Comment": [{"method_name": "nodeName()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "nodeName"}, {"method_name": "getData()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "getData"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "testToString"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "testClone"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/Comment_cloneTest.java", "testclass_name": "Comment_cloneTest", "testcase_name": "testClone"}, {"method_name": "isXmlDeclaration()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "isXmlDeclaration"}, {"method_name": "isXmlDeclaration()", "file_path": "src/test/java/org/jsoup/nodes/Comment_isXmlDeclarationTest.java", "testclass_name": "Comment_isXmlDeclarationTest", "testcase_name": "testIsXmlDeclarationTrue"}, {"method_name": "isXmlDeclaration()", "file_path": "src/test/java/org/jsoup/nodes/Comment_isXmlDeclarationTest.java", "testclass_name": "Comment_isXmlDeclarationTest", "testcase_name": "testIsXmlDeclarationFalse"}, {"method_name": "asXmlDeclaration()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "asXmlDeclaration"}, {"method_name": "setData(String)", "file_path": "src/test/java/org/jsoup/nodes/Comment_setDataTest.java", "testclass_name": "Comment_setDataTest", "testcase_name": "testSetData"}], "Evaluator": [{"method_name": "toString()", "file_path": "src/test/java/org/jsoup/select/QueryParser_toStringTest.java", "testclass_name": "QueryParser_toStringTest", "testcase_name": "testToString"}], "FormElement": [{"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/FormElement_cloneTest.java", "testclass_name": "FormElement_cloneTest", "testcase_name": "testClone"}, {"method_name": "elements()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "hasAssociatedControls"}, {"method_name": "elements()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formsAddedAfterParseAreFormElements"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "createsFormData"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formDataUsesFirstAttribute"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "controlsAddedAfterParseAreLinkedWithForms"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "usesOnForCheckboxValueIfNoValueSet"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "adoptedFormsRetainInputs"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "removeFormElement"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formElementsAreLive"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElement_formDataTest.java", "testclass_name": "FormElement_formDataTest", "testcase_name": "testFormDataWithInputElements"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElement_formDataTest.java", "testclass_name": "FormElement_formDataTest", "testcase_name": "testFormDataWithSelectElement"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElement_formDataTest.java", "testclass_name": "FormElement_formDataTest", "testcase_name": "testFormDataWithCheckboxElement"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElement_formDataTest.java", "testclass_name": "FormElement_formDataTest", "testcase_name": "testFormDataWithDisabledElement"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElement_formDataTest.java", "testclass_name": "FormElement_formDataTest", "testcase_name": "testFormDataWithButtonElement"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "createsSubmitableConnection"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "actionWithNoValue"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "actionWithNoBaseUri"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formSubmissionCarriesCookiesFromSession"}], "StringUtil": [{"method_name": "join(List<String>,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "join"}, {"method_name": "padding(int)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "padding"}, {"method_name": "padding(int,int)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "padding"}, {"method_name": "padding", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "paddingInACan"}, {"method_name": "isBlank(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isBlank"}, {"method_name": "isBlank(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isBlankTest.java", "testclass_name": "StringUtil_isBlankTest", "testcase_name": "testIsBlank_NullString"}, {"method_name": "isBlank(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isBlankTest.java", "testclass_name": "StringUtil_isBlankTest", "testcase_name": "testIsBlank_EmptyString"}, {"method_name": "isBlank(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isBlankTest.java", "testclass_name": "StringUtil_isBlankTest", "testcase_name": "testIsBlank_WhitespaceString"}, {"method_name": "isBlank(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isBlankTest.java", "testclass_name": "StringUtil_isBlankTest", "testcase_name": "testIsBlank_NonWhitespaceString"}, {"method_name": "isNumeric(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isNumeric"}, {"method_name": "isNumeric(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isNumericTest.java", "testclass_name": "StringUtil_isNumericTest", "testcase_name": "testIsNumeric"}, {"method_name": "isWhitespace(char)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isWhitespace"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "normaliseWhiteSpace"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "normaliseWhiteSpaceHandlesHighSurrogates"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_normaliseWhitespaceTest.java", "testclass_name": "StringUtil_normaliseWhitespaceTest", "testcase_name": "testNormaliseWhitespace"}, {"method_name": "resolve(String,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "resolvesRelativeUrls"}, {"method_name": "resolve(String,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "stripsControlCharsFromUrls"}, {"method_name": "resolve(String,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "allowsSpaceInUrl"}, {"method_name": "isAscii(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isAscii"}, {"method_name": "isAscii(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isAsciiTest.java", "testclass_name": "StringUtil_isAsciiTest", "testcase_name": "testIsAscii_AllAsciiCharacters"}, {"method_name": "isAscii(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isAsciiTest.java", "testclass_name": "StringUtil_isAsciiTest", "testcase_name": "testIsAscii_NonAsciiCharacter"}, {"method_name": "isAscii(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isAsciiTest.java", "testclass_name": "StringUtil_isAsciiTest", "testcase_name": "testIsAscii_EmptyString"}, {"method_name": "isAscii(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isAsciiTest.java", "testclass_name": "StringUtil_isAsciiTest", "testcase_name": "testIsAscii_NullString"}, {"method_name": "isInvisibleChar(int)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isInvisibleCharTest.java", "testclass_name": "StringUtil_isInvisibleCharTest", "testcase_name": "testIsInvisibleChar"}, {"method_name": "startsWithNewline(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_startsWithNewlineTest.java", "testclass_name": "StringUtil_startsWithNewlineTest", "testcase_name": "testStartsWithNewline"}, {"method_name": "isActuallyWhitespace(char)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_isActuallyWhitespaceTest.java", "testclass_name": "StringUtil_isActuallyWhitespaceTest", "testcase_name": "testIsActuallyWhitespace"}, {"method_name": "appendNormalisedWhitespace(StringBuilder,String,boolean)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_appendNormalisedWhitespaceTest.java", "testclass_name": "StringUtil_appendNormalisedWhitespaceTest", "testcase_name": "testAppendNormalisedWhitespace"}, {"method_name": "join(Iterator<String>,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_joinTest.java", "testclass_name": "StringUtil_joinTest", "testcase_name": "testJoinEmptyIterator"}, {"method_name": "join(Iterator<String>,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_joinTest.java", "testclass_name": "StringUtil_joinTest", "testcase_name": "testJoinSingleElementIterator"}, {"method_name": "join(Iterator<String>,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_joinTest.java", "testclass_name": "StringUtil_joinTest", "testcase_name": "testJoinMultipleElementsIterator"}, {"method_name": "joining(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_joiningTest.java", "testclass_name": "StringUtil_joiningTest", "testcase_name": "testJoiningWithDelimiter"}, {"method_name": "joining(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_joiningTest.java", "testclass_name": "StringUtil_joiningTest", "testcase_name": "testJoiningWithEmptyList"}, {"method_name": "joining(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_joiningTest.java", "testclass_name": "StringUtil_joiningTest", "testcase_name": "testJoiningWithSingleElement"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithRelativeUrl"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithQueryParams"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithFragment"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithControlChars"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithEmptyRelativeUrl"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithAbsolutePath"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithDifferentProtocol"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithDifferentHost"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithDifferentPort"}, {"method_name": "resolve(URL,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtil_resolveTest.java", "testclass_name": "StringUtil_resolveTest", "testcase_name": "testResolveWithDotSegments"}], "NodeTraversor": [{"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterVisit"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterSkipChildren"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterSkipEntirely"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterRemove"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterStop"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "replaceElement"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "canAddChildren"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "canSpecifyOnlyHead"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "canRemoveDuringHead"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/NodeTraversor_traverseTest.java", "testclass_name": "NodeTraversor_traverseTest", "testcase_name": "testTraverse"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/NodeTraversor_traverseTest.java", "testclass_name": "NodeTraversor_traverseTest", "testcase_name": "testTraverseWithNullVisitor"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/NodeTraversor_traverseTest.java", "testclass_name": "NodeTraversor_traverseTest", "testcase_name": "testTraverseWithNullRoot"}, {"method_name": "filter(NodeFilter,Node)", "file_path": "src/test/java/org/jsoup/select/NodeTraversor_filterTest.java", "testclass_name": "NodeTraversor_filterTest", "testcase_name": "testFilterStop"}, {"method_name": "filter(NodeFilter,Node)", "file_path": "src/test/java/org/jsoup/select/NodeTraversor_filterTest.java", "testclass_name": "NodeTraversor_filterTest", "testcase_name": "testFilterContinue"}, {"method_name": "filter(NodeFilter,Node)", "file_path": "src/test/java/org/jsoup/select/NodeTraversor_filterTest.java", "testclass_name": "NodeTraversor_filterTest", "testcase_name": "testFilterRemove"}], "TokenQueue": [{"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalanced"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedMatchesAsMuchAsPossible"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedThrowIllegalArgumentException"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToTest.java", "testclass_name": "TokenQueue_consumeToTest", "testcase_name": "testConsumeTo_SequenceFound"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToTest.java", "testclass_name": "TokenQueue_consumeToTest", "testcase_name": "testConsumeTo_SequenceNotFound"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalanced"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedMatchesAsMuchAsPossible"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedThrowIllegalArgumentException"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedSimple"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedNested"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedUnbalanced"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedWithQuotes"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedWithEscapes"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedEmpty"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompBalancedTest.java", "testclass_name": "TokenQueue_chompBalancedTest", "testcase_name": "testChompBalancedNoMatch"}, {"method_name": "remainder()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalanced"}, {"method_name": "remainder()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "remainder()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "addFirst"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "unescape"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "unescape_2"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_unescapeTest.java", "testclass_name": "TokenQueue_unescapeTest", "testcase_name": "testUnescapeWithNoEscapes"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_unescapeTest.java", "testclass_name": "TokenQueue_unescapeTest", "testcase_name": "testUnescapeWithSingleEscape"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_unescapeTest.java", "testclass_name": "TokenQueue_unescapeTest", "testcase_name": "testUnescapeWithConsecutiveEscapes"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_unescapeTest.java", "testclass_name": "TokenQueue_unescapeTest", "testcase_name": "testUnescapeWithMixedEscapes"}, {"method_name": "escapeCssIdentifier(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "escapeCssIdentifier"}, {"method_name": "escapeCssIdentifier(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_escapeCssIdentifierTest.java", "testclass_name": "TokenQueue_escapeCssIdentifierTest", "testcase_name": "testEscapeCssIdentifier"}, {"method_name": "escapeCssIdentifier(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_escapeCssIdentifierTest.java", "testclass_name": "TokenQueue_escapeCssIdentifierTest", "testcase_name": "testEscapeCssIdentifierWithEscapedChars"}, {"method_name": "chompToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompToIgnoreCase"}, {"method_name": "chompToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeToIgnoreSecondCallTest"}, {"method_name": "consumeWord()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "addFirst"}, {"method_name": "addFirst(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "addFirst"}, {"method_name": "addFirst(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_addFirstTest.java", "testclass_name": "TokenQueue_addFirstTest", "testcase_name": "testAddFirst"}, {"method_name": "consumeElementSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedTag"}, {"method_name": "consumeWhitespace()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedTag"}, {"method_name": "consumeWhitespace()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedId"}, {"method_name": "consumeWhitespace()", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeWhitespaceTest.java", "testclass_name": "TokenQueue_consumeWhitespaceTest", "testcase_name": "testConsumeWhitespace"}, {"method_name": "consumeWhitespace()", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeWhitespaceTest.java", "testclass_name": "TokenQueue_consumeWhitespaceTest", "testcase_name": "testConsumeWhitespaceNoWhitespace"}, {"method_name": "isEmpty()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedTag"}, {"method_name": "isEmpty()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedId"}, {"method_name": "consumeCssIdentifier()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedId"}, {"method_name": "chompTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompToTest.java", "testclass_name": "TokenQueue_chompToTest", "testcase_name": "testChompToWithMatch"}, {"method_name": "chompTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_chompToTest.java", "testclass_name": "TokenQueue_chompToTest", "testcase_name": "testChompToWithoutMatch"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToAnyTest.java", "testclass_name": "TokenQueue_consumeToAnyTest", "testcase_name": "testConsumeToAnyWithMatch"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToAnyTest.java", "testclass_name": "TokenQueue_consumeToAnyTest", "testcase_name": "testConsumeToAnyWithoutMatch"}, {"method_name": ")", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToAnyTest.java", "testclass_name": "TokenQueue_consumeToAnyTest", "testcase_name": "testConsumeToAnyWithEmptyQueue"}, {"method_name": "matchChomp(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_matchChompTest.java", "testclass_name": "TokenQueue_matchChompTest", "testcase_name": "testMatchChomp_MatchFound"}, {"method_name": "matchChomp(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_matchChompTest.java", "testclass_name": "TokenQueue_matchChompTest", "testcase_name": "testMatchChomp_MatchNotFound"}, {"method_name": "matchesAny(char,char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_matchesAnyTest.java", "testclass_name": "TokenQueue_matchesAnyTest", "testcase_name": "testMatchesAnyWithEmptyQueue"}, {"method_name": "matchesAny(char,char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_matchesAnyTest.java", "testclass_name": "TokenQueue_matchesAnyTest", "testcase_name": "testMatchesAnyWithMatchingCharacter"}, {"method_name": "matchesAny(char,char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_matchesAnyTest.java", "testclass_name": "TokenQueue_matchesAnyTest", "testcase_name": "testMatchesAnyWithNonMatchingCharacter"}, {"method_name": "consumeToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToIgnoreCaseTest.java", "testclass_name": "TokenQueue_consumeToIgnoreCaseTest", "testcase_name": "testConsumeToIgnoreCase_MatchFound"}, {"method_name": "consumeToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToIgnoreCaseTest.java", "testclass_name": "TokenQueue_consumeToIgnoreCaseTest", "testcase_name": "testConsumeToIgnoreCase_NoMatchFound"}, {"method_name": "consumeToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToIgnoreCaseTest.java", "testclass_name": "TokenQueue_consumeToIgnoreCaseTest", "testcase_name": "testConsumeToIgnoreCase_CaseInsensitiveMatch"}, {"method_name": "consumeToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueue_consumeToIgnoreCaseTest.java", "testclass_name": "TokenQueue_consumeToIgnoreCaseTest", "testcase_name": "testConsumeToIgnoreCase_EmptyQueue"}], "Entities": [{"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "unescapeMultiChars"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "notMissingMultis"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "notMissingSupplementals"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "unescape"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "caseSensitive"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "quoteReplacements"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "noSpuriousDecodes"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escape"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapedSupplementary"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapeSupplementaryCharacter"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "caseSensitive"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapeByClonedOutputSettings"}, {"method_name": "escape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapeDefaults"}, {"method_name": "getByName(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "getByName"}, {"method_name": "getByName(String)", "file_path": "src/test/java/org/jsoup/nodes/Entities_getByNameTest.java", "testclass_name": "Entities_getByNameTest", "testcase_name": "testGetByName_ExistingEntity"}, {"method_name": "getByName(String)", "file_path": "src/test/java/org/jsoup/nodes/Entities_getByNameTest.java", "testclass_name": "Entities_getByNameTest", "testcase_name": "testGetByName_NonExistingEntity"}, {"method_name": "getByName(String)", "file_path": "src/test/java/org/jsoup/nodes/Entities_getByNameTest.java", "testclass_name": "Entities_getByNameTest", "testcase_name": "testGetByName_MultiPointsEntity"}, {"method_name": "unescape(String,boolean)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "strictUnescape"}], "EscapeMode": [{"method_name": "codepointForName(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "xhtml"}, {"method_name": "nameForCodepoint(int)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "xhtml"}], "NodeIterator": [{"method_name": "from(Document)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canIterateNodes"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "hasNextIsPure"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/NodeIterator_hasNextTest.java", "testclass_name": "NodeIterator_hasNextTest", "testcase_name": "testHasNextWithNextNode"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/NodeIterator_hasNextTest.java", "testclass_name": "NodeIterator_hasNextTest", "testcase_name": "testHasNextWithoutNextNode"}, {"method_name": "from(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "iterateSubTree"}, {"method_name": "from(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canIterateJustOneSibling"}, {"method_name": "from(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canIterateFirstEmptySibling"}, {"method_name": "restart(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRestart"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRemoveViaIterator"}, {"method_name": "from(Document,Class<Element>)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canFilterForElements"}, {"method_name": "from(Document,Class<TextNode>)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canFilterForTextNodes"}, {"method_name": "next()", "file_path": "src/test/java/org/jsoup/nodes/NodeIterator_nextTest.java", "testclass_name": "NodeIterator_nextTest", "testcase_name": "testNextSuccess"}, {"method_name": "next()", "file_path": "src/test/java/org/jsoup/nodes/NodeIterator_nextTest.java", "testclass_name": "NodeIterator_nextTest", "testcase_name": "testNextThrowsNoSuchElementException"}], "Iterator": [{"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "iteratorThrows"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorEmpty"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemovable"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemove"}, {"method_name": "next()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "iteratorThrows"}, {"method_name": "next()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}], "DataUtil": [{"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "testCharset"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "testQuotedCharset"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldNotThrowExceptionOnEmptyCharset"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldCorrectCharsetForDuplicateCharsetString"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldReturnNullForIllegalCharsetNames"}, {"method_name": "parseInputStream(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "discardsSpuriousByteOrderMark"}, {"method_name": "parseInputStream(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "discardsSpuriousByteOrderMarkWhenNoCharsetSet"}, {"method_name": "parseInputStream(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "wrongMetaCharsetFallback"}, {"method_name": "parseInputStream(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "secondMetaElementWithContentTypeContainsCharsetParameter"}, {"method_name": "parseInputStream(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "firstMetaElementWithCharsetShouldBeUsedForDecoding"}, {"method_name": "parseInputStream(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "parseSequenceInputStream"}, {"method_name": "mimeBoundary()", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "generatesMimeBoundaries"}, {"method_name": "streamParser(Path,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "streamerSupportsBOMinFiles"}, {"method_name": "streamParser(Path,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "streamerSupportsZippedUTF8BOM"}, {"method_name": "readToByteBuffer(InputStream,int)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesUnlimitedRead"}], "W3CDom": [{"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "simpleConversion"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "namespacePreservation"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesInvalidAttributeNames"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "htmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesInvalidTagAsText"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "treatsUndeclaredNamespaceAsLocalName"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xmlnsXpathTest"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xhtmlNoNamespace"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canDisableNamespaces"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "testRoundTripDoctype"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canOutputHtmlWithoutNamespace"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "convertsElementsAndMaintainsSource"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canXmlParseCdataNodes"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesEmptyDoctype"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "testHtmlParseAttributesAreCaseInsensitive"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "simpleConversion"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "htmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesInvalidTagAsText"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "testRoundTripDoctype"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canOutputHtmlWithoutNamespace"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDom_asStringTest.java", "testclass_name": "W3CDom_asStringTest", "testcase_name": "testAsString_withPropertiesAndDoctype"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDom_asStringTest.java", "testclass_name": "W3CDom_asStringTest", "testcase_name": "testAsString_transformerException"}, {"method_name": "Document,Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canConvertToCustomDocument"}, {"method_name": "namespaceAware()", "file_path": "src/test/java/org/jsoup/helper/W3CDom_namespaceAwareTest.java", "testclass_name": "W3CDom_namespaceAwareTest", "testcase_name": "testNamespaceAware"}, {"method_name": "fromJsoup(Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDom_fromJsoupTest.java", "testclass_name": "W3CDom_fromJsoupTest", "testcase_name": "testFromJsoupWithValidDocument"}, {"method_name": "fromJsoup(Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDom_fromJsoupTest.java", "testclass_name": "W3CDom_fromJsoupTest", "testcase_name": "testFromJsoupWithNullDocument"}, {"method_name": "fromJsoup(Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDom_convertTest.java", "testclass_name": "W3CDom_convertTest", "testcase_name": "testConvertDocument"}, {"method_name": "fromJsoup(Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDom_convertTest.java", "testclass_name": "W3CDom_convertTest", "testcase_name": "testConvertElement"}], "XmlTreeBuilder": [{"method_name": "parse(String,String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testSimpleXmlParse"}, {"method_name": "parse(String,String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testPopToClose"}, {"method_name": "parse(String,String)", "file_path": "src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java", "testclass_name": "XmlTreeBuilderTest", "testcase_name": "testCommentAndDocType"}]}