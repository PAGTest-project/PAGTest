[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class InetAddressValidator_isValidInet6AddressTest {\n    private InetAddressValidator validator;\n\n    @BeforeEach\n    protected void setUp() {\n        validator = new InetAddressValidator();\n    }\n\n    @Test\n    public void testValidIPv6Address() {\n        assertTrue(validator.isValidInet6Address(\"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"), \"2001:0db8:85a3:0000:0000:8a2e:0370:7334 should be valid\");\n    }\n\n    @Test\n    public void testInvalidIPv6Address() {\n        assertFalse(validator.isValidInet6Address(\"2001:0db8:85a3::8a2e:0370:7334::\"), \"2001:0db8:85a3::8a2e:0370:7334:: should be invalid\");\n    }\n\n    @Test\n    public void testIPv6AddressWithPrefix() {\n        assertTrue(validator.isValidInet6Address(\"2001:0db8:85a3::8a2e:0370:7334/64\"), \"2001:0db8:85a3::8a2e:0370:7334/64 should be valid\");\n    }\n\n    @Test\n    public void testIPv6AddressWithInvalidPrefix() {\n        assertFalse(validator.isValidInet6Address(\"2001:0db8:85a3::8a2e:0370:7334/129\"), \"2001:0db8:85a3::8a2e:0370:7334/129 should be invalid\");\n    }\n\n    @Test\n    public void testIPv6AddressWithZoneId() {\n        assertTrue(validator.isValidInet6Address(\"fe80::8a2e:0370:7334%eth0\"), \"fe80::8a2e:0370:7334%eth0 should be valid\");\n    }\n\n    @Test\n    public void testIPv6AddressWithInvalidZoneId() {\n        assertFalse(validator.isValidInet6Address(\"fe80::8a2e:0370:7334%\"), \"fe80::8a2e:0370:7334% should be invalid\");\n    }\n\n    @Test\n    public void testIPv6AddressWithIPv4Ending() {\n        assertTrue(validator.isValidInet6Address(\"::ffff:192.0.2.128\"), \"::ffff:192.0.2.128 should be valid\");\n    }\n\n    @Test\n    public void testIPv6AddressWithInvalidIPv4Ending() {\n        assertFalse(validator.isValidInet6Address(\"::ffff:192.0.2.256\"), \"::ffff:192.0.2.256 should be invalid\");\n    }\n}\n"}]