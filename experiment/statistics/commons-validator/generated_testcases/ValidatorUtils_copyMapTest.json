[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.util;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.validator.Arg;\nimport org.apache.commons.validator.Msg;\nimport org.apache.commons.validator.Var;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ValidatorUtils_copyMapTest {\n\n    private Map<String, Object> originalMap;\n\n    @BeforeEach\n    public void setUp() {\n        originalMap = new HashMap<>();\n        originalMap.put(\"key1\", \"value1\");\n        originalMap.put(\"key2\", new Msg());\n        originalMap.put(\"key3\", new Arg());\n        originalMap.put(\"key4\", new Var());\n    }\n\n    @Test\n    public void testCopyMap() {\n        Map<String, Object> copiedMap = ValidatorUtils.copyMap(originalMap);\n\n        assertEquals(originalMap.size(), copiedMap.size());\n        for (Map.Entry<String, Object> entry : originalMap.entrySet()) {\n            String key = entry.getKey();\n            Object originalValue = entry.getValue();\n            Object copiedValue = copiedMap.get(key);\n\n            if (originalValue instanceof Cloneable) {\n                assertTrue(originalValue != copiedValue); // Ensure deep copy\n            } else {\n                assertEquals(originalValue, copiedValue);\n            }\n        }\n    }\n}\n"}]