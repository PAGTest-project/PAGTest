[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.apache.commons.validator.routines.checkdigit.CheckDigitException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ISSNValidator_convertToEAN13Test {\n\n    private ISSNValidator validator;\n\n    @BeforeEach\n    public void setUp() {\n        validator = new ISSNValidator();\n    }\n\n    @Test\n    public void testConvertToEAN13Valid() {\n        String issn = \"1234-5679\";\n        String suffix = \"00\";\n        String expectedEAN13 = \"97712345670009\"; // Manually calculated EAN-13 for the given ISSN and suffix\n        assertEquals(expectedEAN13, validator.convertToEAN13(issn, suffix));\n    }\n\n    @Test\n    public void testConvertToEAN13InvalidSuffix() {\n        String issn = \"1234-5679\";\n        String suffix = \"0\";\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            validator.convertToEAN13(issn, suffix);\n        });\n        assertEquals(\"Suffix must be two digits: '0'\", exception.getMessage());\n    }\n\n    @Test\n    public void testConvertToEAN13InvalidISSN() {\n        String issn = \"1234-5678\"; // Invalid ISSN\n        String suffix = \"00\";\n        assertNull(validator.convertToEAN13(issn, suffix));\n    }\n\n    @Test\n    public void testConvertToEAN13CheckDigitException() {\n        String issn = \"1234-5679\";\n        String suffix = \"00\";\n        // Mocking a CheckDigitException by providing an invalid EAN13 prefix\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            validator.convertToEAN13(issn, suffix);\n        });\n        assertTrue(exception.getMessage().contains(\"Check digit error for '97712345670009'\"));\n    }\n}\n"}]