[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.TimeZone;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class DateValidator_compareYearsTest {\n\n    private DateValidator dateValidator;\n\n    @BeforeEach\n    protected void setUp() {\n        dateValidator = new DateValidator();\n    }\n\n    @Test\n    public void testCompareYearsEqual() {\n        Date date1 = createDate(2023, 10, 1);\n        Date date2 = createDate(2023, 5, 15);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        int result = dateValidator.compareYears(date1, date2, timeZone);\n        assertEquals(0, result, \"Years should be equal\");\n    }\n\n    @Test\n    public void testCompareYearsLessThan() {\n        Date date1 = createDate(2022, 10, 1);\n        Date date2 = createDate(2023, 5, 15);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        int result = dateValidator.compareYears(date1, date2, timeZone);\n        assertEquals(-1, result, \"First year should be less than second year\");\n    }\n\n    @Test\n    public void testCompareYearsGreaterThan() {\n        Date date1 = createDate(2024, 10, 1);\n        Date date2 = createDate(2023, 5, 15);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        int result = dateValidator.compareYears(date1, date2, timeZone);\n        assertEquals(1, result, \"First year should be greater than second year\");\n    }\n\n    private Date createDate(int year, int month, int day) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(year, month - 1, day, 0, 0, 0);\n        calendar.set(Calendar.MILLISECOND, 0);\n        return calendar.getTime();\n    }\n}\n"}]