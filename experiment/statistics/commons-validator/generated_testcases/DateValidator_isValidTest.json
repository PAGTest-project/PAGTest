[{"strategy": "retry", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.Test;\n\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.util.Locale;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class DateValidator_isValidTest {\n\n    @Test\n    public void testIsValid_NullValue() {\n        DateValidator validator = new DateValidator();\n        assertFalse(validator.isValid(null, Locale.US));\n    }\n\n    @Test\n    public void testIsValid_ValidDateWithLocale() {\n        DateValidator validator = new DateValidator();\n        assertTrue(validator.isValid(\"12/31/2023\", Locale.US));\n    }\n\n    @Test\n    public void testIsValid_InvalidDateWithLocale() {\n        DateValidator validator = new DateValidator();\n        assertFalse(validator.isValid(\"31/12/2023\", Locale.US));\n    }\n\n    @Test\n    public void testIsValid_ValidDateWithoutLocale() {\n        DateValidator validator = new DateValidator();\n        assertTrue(validator.isValid(\"12/31/2023\", Locale.getDefault()));\n    }\n\n    @Test\n    public void testIsValid_InvalidDateWithoutLocale() {\n        DateValidator validator = new DateValidator();\n        assertFalse(validator.isValid(\"31/12/2023\", Locale.getDefault()));\n    }\n\n    private static class DateValidator {\n        public boolean isValid(final String value, final Locale locale) {\n            if (value == null) {\n                return false;\n            }\n\n            DateFormat formatter;\n            if (locale != null) {\n                formatter = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n            } else {\n                formatter = DateFormat.getDateInstance(DateFormat.SHORT, Locale.getDefault());\n            }\n\n            formatter.setLenient(false);\n\n            try {\n                formatter.parse(value);\n            } catch (final ParseException e) {\n                return false;\n            }\n\n            return true;\n        }\n    }\n}\n"}]