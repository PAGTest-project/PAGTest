[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.mockito.Mockito.*;\n\npublic class ValidatorResources_addValidatorActionTest {\n\n    private ValidatorResources validatorResources;\n    private ValidatorAction validatorAction;\n    private Log log;\n\n    @BeforeEach\n    public void setUp() {\n        validatorResources = new ValidatorResources();\n        validatorAction = mock(ValidatorAction.class);\n        log = mock(Log.class);\n        when(validatorAction.getName()).thenReturn(\"testAction\");\n        when(validatorAction.getClassname()).thenReturn(\"TestClass\");\n        when(validatorResources.getLog()).thenReturn(log);\n    }\n\n    @Test\n    public void testAddValidatorAction() {\n        // Given\n        when(log.isDebugEnabled()).thenReturn(true);\n\n        // When\n        validatorResources.addValidatorAction(validatorAction);\n\n        // Then\n        verify(validatorAction).init();\n        verify(log).debug(\"Add ValidatorAction: testAction,TestClass\");\n        Map<String, ValidatorAction> actions = validatorResources.getActions();\n        assert(actions.containsKey(\"testAction\"));\n        assert(actions.get(\"testAction\") == validatorAction);\n    }\n}\n"}]