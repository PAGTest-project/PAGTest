[{"strategy": "retry", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class ValidatorResources_addFormSetTest {\n\n    private ValidatorResources validatorResources;\n    private FormSet formSet;\n    private Log log;\n\n    @BeforeEach\n    public void setUp() {\n        validatorResources = Mockito.spy(new ValidatorResources());\n        formSet = new FormSet();\n        log = Mockito.mock(Log.class);\n        doReturn(log).when(validatorResources).getLog();\n    }\n\n    @Test\n    public void testAddFormSetDefault() {\n        // Given\n        doReturn(\"\").when(validatorResources).buildKey(formSet);\n        doReturn(true).when(log).isWarnEnabled();\n\n        // When\n        validatorResources.addFormSet(formSet);\n\n        // Then\n        assertEquals(formSet, validatorResources.defaultFormSet);\n        verify(log).warn(\"Overriding default FormSet definition.\");\n    }\n\n    @Test\n    public void testAddFormSetNonDefaultNew() {\n        // Given\n        String key = \"en_US\";\n        doReturn(key).when(validatorResources).buildKey(formSet);\n        doReturn(true).when(log).isDebugEnabled();\n        doReturn(new HashMap<>()).when(validatorResources).getFormSets();\n\n        // When\n        validatorResources.addFormSet(formSet);\n\n        // Then\n        assertEquals(formSet, validatorResources.getFormSets().get(key));\n        verify(log).debug(\"Adding FormSet '\" + formSet + \"'.\");\n    }\n\n    @Test\n    public void testAddFormSetNonDefaultOverride() {\n        // Given\n        String key = \"en_US\";\n        doReturn(key).when(validatorResources).buildKey(formSet);\n        doReturn(true).when(log).isWarnEnabled();\n        Map<String, FormSet> formSets = new HashMap<>();\n        formSets.put(key, new FormSet());\n        doReturn(formSets).when(validatorResources).getFormSets();\n\n        // When\n        validatorResources.addFormSet(formSet);\n\n        // Then\n        assertEquals(formSet, validatorResources.getFormSets().get(key));\n        verify(log).warn(\"Overriding FormSet definition. Duplicate for locale: \" + key);\n    }\n}\n"}]