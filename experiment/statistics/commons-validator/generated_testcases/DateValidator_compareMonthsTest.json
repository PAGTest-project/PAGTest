[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.TimeZone;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class DateValidator_compareMonthsTest {\n\n    private DateValidator dateValidator;\n\n    @BeforeEach\n    public void setUp() {\n        dateValidator = new DateValidator();\n    }\n\n    @Test\n    public void testCompareMonthsEqual() {\n        Date date1 = createDate(2023, Calendar.JANUARY, 15);\n        Date date2 = createDate(2023, Calendar.JANUARY, 20);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        assertEquals(0, dateValidator.compareMonths(date1, date2, timeZone));\n    }\n\n    @Test\n    public void testCompareMonthsLessThan() {\n        Date date1 = createDate(2023, Calendar.JANUARY, 15);\n        Date date2 = createDate(2023, Calendar.FEBRUARY, 20);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        assertEquals(-1, dateValidator.compareMonths(date1, date2, timeZone));\n    }\n\n    @Test\n    public void testCompareMonthsGreaterThan() {\n        Date date1 = createDate(2023, Calendar.FEBRUARY, 15);\n        Date date2 = createDate(2023, Calendar.JANUARY, 20);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        assertEquals(1, dateValidator.compareMonths(date1, date2, timeZone));\n    }\n\n    private Date createDate(int year, int month, int day) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(year, month, day, 0, 0, 0);\n        calendar.set(Calendar.MILLISECOND, 0);\n        return calendar.getTime();\n    }\n}\n"}]