[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class GenericValidator_maxLengthTest {\n\n    @Test\n    public void testMaxLength_WithinLimit() {\n        String value = \"Hello\\nWorld\";\n        int max = 15;\n        int lineEndLength = 1;\n        assertTrue(GenericValidator.maxLength(value, max, lineEndLength));\n    }\n\n    @Test\n    public void testMaxLength_ExceedsLimit() {\n        String value = \"Hello\\nWorld\\r\";\n        int max = 10;\n        int lineEndLength = 1;\n        assertFalse(GenericValidator.maxLength(value, max, lineEndLength));\n    }\n\n    @Test\n    public void testMaxLength_NoLineEndings() {\n        String value = \"HelloWorld\";\n        int max = 10;\n        int lineEndLength = 1;\n        assertTrue(GenericValidator.maxLength(value, max, lineEndLength));\n    }\n\n    @Test\n    public void testMaxLength_EmptyString() {\n        String value = \"\";\n        int max = 5;\n        int lineEndLength = 1;\n        assertTrue(GenericValidator.maxLength(value, max, lineEndLength));\n    }\n\n    @Test\n    public void testMaxLength_ExactlyAtLimit() {\n        String value = \"Hello\\nWorld\";\n        int max = 11;\n        int lineEndLength = 1;\n        assertTrue(GenericValidator.maxLength(value, max, lineEndLength));\n    }\n}\n"}]