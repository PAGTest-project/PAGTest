{"file_path": "src/test/java/org/apache/commons/validator/MultipleConfigFilesTest.java", "testclass_name": "MultipleConfigFilesTest", "dependencies": ["package org.apache.commons.validator;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.io.IOException;", "import java.io.InputStream;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.xml.sax.SAXException;"], "name": "MultipleConfigFilesTest", "description": "Tests for validating configurations loaded from multiple XML files.", "class_members": {"variables": [{"name": "FORM_KEY", "type": "static final String"}, {"name": "ACTION", "type": "static final String"}, {"name": "resources", "type": "ValidatorResources"}], "methods": [], "nested_classes": []}, "fixtures": ["setUp"], "test_cases": [{"name": "testBothBlank", "primary_tested": ["Validator.validate()"], "associated_methods": ["ValidatorResults.getValidatorResult(String)", "ValidatorResult.containsAction(String)", "ValidatorResult.isValid(String)"], "external_dependencies": {"modules": ["Validator", "ValidatorResources", "ValidatorResults", "ValidatorResult", "NameBean"], "class_members": [{"name": "resources", "type": "variable"}, {"name": "FORM_KEY", "type": "variable"}, {"name": "ACTION", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests validation when both first name and last name are blank."}, {"name": "testMergedConfig", "primary_tested": ["ValidatorResources.getForm(String,String,String,String)", "Field.getVarValue(String)"], "associated_methods": [], "external_dependencies": {"modules": ["ValidatorResources", "Form", "Field"], "class_members": [{"name": "resources", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that forms and constants from different config files are merged into the same FormSet."}, {"name": "testRequiredFirstNameBlankLastNameShort", "primary_tested": ["Validator.validate()"], "associated_methods": ["ValidatorResults.getValidatorResult(String)", "ValidatorResult.containsAction(String)", "ValidatorResult.isValid(String)"], "external_dependencies": {"modules": ["Validator", "ValidatorResources", "ValidatorResults", "ValidatorResult", "NameBean"], "class_members": [{"name": "resources", "type": "variable"}, {"name": "FORM_KEY", "type": "variable"}, {"name": "ACTION", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests validation when first name is blank and last name is too short."}, {"name": "testRequiredLastNameLong", "primary_tested": ["Validator.validate()"], "associated_methods": ["ValidatorResults.getValidatorResult(String)", "ValidatorResult.containsAction(String)", "ValidatorResult.isValid(String)"], "external_dependencies": {"modules": ["Validator", "ValidatorResources", "ValidatorResults", "ValidatorResult", "NameBean"], "class_members": [{"name": "resources", "type": "variable"}, {"name": "FORM_KEY", "type": "variable"}, {"name": "ACTION", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests validation when first name is valid and last name is a long integer."}, {"name": "testRequiredLastNameShort", "primary_tested": ["Validator.validate()"], "associated_methods": ["ValidatorResults.getValidatorResult(String)", "ValidatorResult.containsAction(String)", "ValidatorResult.isValid(String)"], "external_dependencies": {"modules": ["Validator", "ValidatorResources", "ValidatorResults", "ValidatorResult", "NameBean"], "class_members": [{"name": "resources", "type": "variable"}, {"name": "FORM_KEY", "type": "variable"}, {"name": "ACTION", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests validation when first name is valid and last name is too short."}]}