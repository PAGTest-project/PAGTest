[{"strategy": "generate", "code": "\npackage org.ice4j.pseudotcp;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\nimport static org.mockito.Mockito.*;\n\npublic class PseudoTcpSocketImpl_onTcpReadableTest {\n\n    @Test\n    public void testOnTcpReadable() {\n        // Given\n        PseudoTcpSocketImpl socketImpl = new PseudoTcpSocketImpl(12345);\n        PseudoTCPBase tcp = mock(PseudoTCPBase.class);\n        Logger logger = mock(Logger.class);\n        socketImpl.logger = logger;\n\n        when(tcp.getAvailable()).thenReturn(100);\n        when(logger.isLoggable(Level.FINER)).thenReturn(true);\n\n        // When\n        socketImpl.onTcpReadable(tcp);\n\n        // Then\n        verify(logger).log(Level.FINER, \"TCP READABLE data available for reading: 100\");\n        verify(tcp, times(1)).getAvailable();\n        verify(logger, times(1)).isLoggable(Level.FINER);\n        verify(logger, times(1)).log(eq(Level.FINER), anyString());\n    }\n}\n"}]