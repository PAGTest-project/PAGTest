[{"strategy": "retry", "code": "\npackage org.ice4j.pseudotcp.util;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.nio.BufferOverflowException;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ByteFifoBuffer_consumeWriteBufferTest {\n\n    private ByteFifoBuffer fifoBuffer;\n\n    @BeforeEach\n    public void setUp() {\n        fifoBuffer = new ByteFifoBuffer(16);\n    }\n\n    @Test\n    public void testConsumeWriteBufferSuccess() {\n        fifoBuffer.write(new byte[8], 8);\n        assertDoesNotThrow(() -> fifoBuffer.consumeWriteBuffer(8));\n        assertEquals(8, fifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testConsumeWriteBufferOverflow() {\n        fifoBuffer.write(new byte[8], 8);\n        assertThrows(BufferOverflowException.class, () -> fifoBuffer.consumeWriteBuffer(9));\n    }\n\n    @Test\n    public void testConsumeWriteBufferNegativeCount() {\n        assertThrows(IllegalArgumentException.class, () -> fifoBuffer.consumeWriteBuffer(-1));\n    }\n\n    @Test\n    public void testConsumeWriteBufferZeroCount() {\n        assertDoesNotThrow(() -> fifoBuffer.consumeWriteBuffer(0));\n        assertEquals(0, fifoBuffer.getBuffered());\n    }\n}\n"}]