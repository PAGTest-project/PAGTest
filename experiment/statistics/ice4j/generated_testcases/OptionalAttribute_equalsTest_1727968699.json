[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.*;\n\npublic class OptionalAttribute_equalsTest {\n    private OptionalAttribute optionalAttribute;\n    private byte[] expectedAttributeValue;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        MsgFixture msgFixture = new MsgFixture();\n        int offset = Attribute.HEADER_LENGTH;\n\n        // Initialize a sample body\n        expectedAttributeValue = new byte[msgFixture.unknownOptionalAttribute.length - offset];\n        System.arraycopy(msgFixture.unknownOptionalAttribute, offset, expectedAttributeValue, 0, expectedAttributeValue.length);\n\n        optionalAttribute = new OptionalAttribute(msgFixture.optionalAttributeType);\n        optionalAttribute.setBody(expectedAttributeValue, 0, expectedAttributeValue.length);\n    }\n\n    @Test\n    public void testEquals_SameInstance() {\n        assertTrue(optionalAttribute.equals(optionalAttribute));\n    }\n\n    @Test\n    public void testEquals_DifferentInstanceSameValue() {\n        OptionalAttribute anotherAttribute = new OptionalAttribute(optionalAttribute.getAttributeType());\n        anotherAttribute.setBody(expectedAttributeValue, 0, expectedAttributeValue.length);\n        assertTrue(optionalAttribute.equals(anotherAttribute));\n    }\n\n    @Test\n    public void testEquals_DifferentInstanceDifferentValue() {\n        byte[] differentValue = new byte[] {1, 2, 3};\n        OptionalAttribute anotherAttribute = new OptionalAttribute(optionalAttribute.getAttributeType());\n        anotherAttribute.setBody(differentValue, 0, differentValue.length);\n        assertFalse(optionalAttribute.equals(anotherAttribute));\n    }\n\n    @Test\n    public void testEquals_DifferentType() {\n        Object nonOptionalAttribute = new Object();\n        assertFalse(optionalAttribute.equals(nonOptionalAttribute));\n    }\n}\n"}]