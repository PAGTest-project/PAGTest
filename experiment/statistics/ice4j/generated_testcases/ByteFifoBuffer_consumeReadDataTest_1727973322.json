[{"strategy": "retry", "code": "\npackage org.ice4j.pseudotcp.util;\n\nimport java.nio.BufferUnderflowException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ByteFifoBuffer_consumeReadDataTest {\n\n    private ByteFifoBuffer fifoBuffer;\n\n    @BeforeEach\n    public void setUp() {\n        fifoBuffer = new ByteFifoBuffer(16);\n    }\n\n    @Test\n    public void testConsumeReadDataSuccess() {\n        // Given\n        byte[] data = new byte[8];\n        fifoBuffer.write(data, 8);\n\n        // When\n        fifoBuffer.consumeReadData(8);\n\n        // Then\n        assertEquals(0, fifoBuffer.getBuffered());\n        assertEquals(8, fifoBuffer.getReadPos());\n    }\n\n    @Test\n    public void testConsumeReadDataBufferUnderflow() {\n        // Given\n        byte[] data = new byte[8];\n        fifoBuffer.write(data, 8);\n\n        // When & Then\n        assertThrows(BufferUnderflowException.class, () -> fifoBuffer.consumeReadData(10));\n    }\n\n    @Test\n    public void testConsumeReadDataIllegalArgumentException() {\n        // Given\n        byte[] data = new byte[8];\n        fifoBuffer.write(data, 8);\n\n        // When & Then\n        assertThrows(IllegalArgumentException.class, () -> fifoBuffer.consumeReadData(-1));\n    }\n}\n"}]