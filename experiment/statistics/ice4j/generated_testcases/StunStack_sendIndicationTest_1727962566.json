[{"strategy": "retry", "code": "\npackage org.ice4j.stack;\n\nimport org.ice4j.*;\nimport org.ice4j.message.*;\nimport org.ice4j.socket.*;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\nimport java.io.IOException;\nimport java.net.DatagramSocket;\nimport java.net.InetSocketAddress;\n\npublic class StunStack_sendIndicationTest {\n    private StunStack stunStack;\n    private TransportAddress clientAddress;\n    private TransportAddress serverAddress;\n    private IceSocketWrapper clientSock;\n    private IceSocketWrapper serverSock;\n    private NetAccessManager mockNetAccessManager;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        clientSock = new IceUdpSocketWrapper(\n            new SafeCloseDatagramSocket(new InetSocketAddress(\"127.0.0.1\", 0)));\n        serverSock = new IceUdpSocketWrapper(\n            new SafeCloseDatagramSocket(new InetSocketAddress(\"127.0.0.1\", 0)));\n\n        clientAddress = new TransportAddress(\"127.0.0.1\", clientSock.getLocalPort(), Transport.UDP);\n        serverAddress = new TransportAddress(\"127.0.0.1\", serverSock.getLocalPort(), Transport.UDP);\n\n        stunStack = new StunStack();\n        mockNetAccessManager = mock(NetAccessManager.class);\n        stunStack.addSocket(clientSock);\n        stunStack.addSocket(serverSock);\n    }\n\n    @Test\n    public void testSendIndicationSuccess() throws StunException {\n        Indication indication = new Indication();\n        indication.setTransactionID(TransactionID.createNewTransactionID().getBytes());\n\n        assertDoesNotThrow(() -> stunStack.sendIndication(indication, serverAddress, clientAddress));\n    }\n\n    @Test\n    public void testSendIndicationNullTransactionID() throws StunException {\n        Indication indication = new Indication();\n\n        assertDoesNotThrow(() -> stunStack.sendIndication(indication, serverAddress, clientAddress));\n    }\n\n    @Test\n    public void testSendIndicationIllegalArgumentException() throws StunException {\n        Indication indication = new Indication();\n        indication.setTransactionID(TransactionID.createNewTransactionID().getBytes());\n\n        doThrow(new IllegalArgumentException(\"Invalid address\")).when(mockNetAccessManager).sendMessage(any(), any(), any());\n\n        StunException exception = assertThrows(StunException.class, () -> stunStack.sendIndication(indication, serverAddress, clientAddress));\n        assertEquals(StunException.ILLEGAL_ARGUMENT, exception.getID());\n        assertTrue(exception.getMessage().contains(\"Failed to send STUN indication\"));\n    }\n\n    @Test\n    public void testSendIndicationIOException() throws StunException {\n        Indication indication = new Indication();\n        indication.setTransactionID(TransactionID.createNewTransactionID().getBytes());\n\n        doThrow(new IOException(\"Network error\")).when(mockNetAccessManager).sendMessage(any(), any(), any());\n\n        StunException exception = assertThrows(StunException.class, () -> stunStack.sendIndication(indication, serverAddress, clientAddress));\n        assertEquals(StunException.NETWORK_ERROR, exception.getID());\n        assertTrue(exception.getMessage().contains(\"Failed to send STUN indication\"));\n    }\n}\n"}]