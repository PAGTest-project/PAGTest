[{"strategy": "generate", "code": "\npackage org.ice4j.stack;\n\nimport org.ice4j.*;\nimport org.ice4j.message.*;\nimport org.ice4j.socket.*;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StunStack_removeSocketTest {\n\n    private StunStack stunStack;\n    private TransportAddress localAddress;\n    private IceSocketWrapper localSock;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        stunStack = new StunStack();\n        localSock = new IceUdpSocketWrapper(\n            new SafeCloseDatagramSocket(new InetSocketAddress(\"127.0.0.1\", 0)));\n        localAddress = new TransportAddress(\n            \"127.0.0.1\", localSock.getLocalPort(), Transport.UDP);\n        stunStack.addSocket(localSock);\n    }\n\n    @Test\n    public void testRemoveSocket() {\n        // Given: A socket is added to the StunStack\n        stunStack.addSocket(localSock);\n\n        // When: The socket is removed\n        stunStack.removeSocket(localAddress);\n\n        // Then: Verify the socket is removed by checking the state of NetAccessManager\n        NetAccessManager netAccessManager = stunStack.getNetAccessManager();\n        assertFalse(netAccessManager.containsSocket(localSock), \"Socket should be removed\");\n    }\n}\n"}]