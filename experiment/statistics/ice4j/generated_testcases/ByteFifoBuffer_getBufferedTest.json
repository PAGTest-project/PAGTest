[{"strategy": "generate", "code": "\npackage org.ice4j.pseudotcp.util;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ByteFifoBuffer_getBufferedTest {\n\n    private ByteFifoBuffer fifoBuffer;\n\n    @BeforeEach\n    public void setUp() {\n        fifoBuffer = new ByteFifoBuffer(1024);\n    }\n\n    @Test\n    public void testGetBufferedInitialState() {\n        assertEquals(0, fifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testGetBufferedAfterWrite() {\n        byte[] data = new byte[256];\n        fifoBuffer.write(data, 256);\n        assertEquals(256, fifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testGetBufferedAfterRead() {\n        byte[] data = new byte[256];\n        byte[] readBuffer = new byte[256];\n        fifoBuffer.write(data, 256);\n        fifoBuffer.read(readBuffer, 256);\n        assertEquals(0, fifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testGetBufferedAfterPartialRead() {\n        byte[] data = new byte[256];\n        byte[] readBuffer = new byte[128];\n        fifoBuffer.write(data, 256);\n        fifoBuffer.read(readBuffer, 128);\n        assertEquals(128, fifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testGetBufferedAfterMultipleWritesAndReads() {\n        byte[] data1 = new byte[128];\n        byte[] data2 = new byte[128];\n        byte[] readBuffer = new byte[256];\n        fifoBuffer.write(data1, 128);\n        fifoBuffer.write(data2, 128);\n        fifoBuffer.read(readBuffer, 256);\n        assertEquals(0, fifoBuffer.getBuffered());\n    }\n}\n"}]