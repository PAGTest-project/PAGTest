[{"file_path": "src/test/java/org/ice4j/message/MessageFactory_createConnectionBindResponseTest.java", "testclass_name": "MessageFactory_createConnectionBindResponseTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;", "import org.ice4j.message.MessageFactory;", "import org.ice4j.message.Response;"], "name": "MessageFactory_createConnectionBindResponseTest", "description": "Unit test for the createConnectionBindResponse method in MessageFactory.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateConnectionBindResponse", "primary_tested": ["MessageFactory.createConnectionBindResponse()"], "associated_methods": ["Response.getMessageType()"], "external_dependencies": {"modules": ["MessageFactory", "Response", "Message"]}, "category": "unit", "description": "Tests the creation of a connection bind response and verifies its message type."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createCreatePermissionResponseTest.java", "testclass_name": "MessageFactory_createCreatePermissionResponseTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;", "import org.ice4j.message.Message;"], "name": "MessageFactory_createCreatePermissionResponseTest", "description": "Unit test for creating a Create Permission Response using MessageFactory.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateCreatePermissionResponse", "primary_tested": ["MessageFactory.createCreatePermissionResponse()"], "associated_methods": ["Response.getMessageType()"], "external_dependencies": {"modules": ["MessageFactory", "Response", "Message"]}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of a Create Permission Response and verifies its message type."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createSharedSecretRequestTest.java", "testclass_name": "MessageFactory_createSharedSecretRequestTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;"], "name": "MessageFactory_createSharedSecretRequestTest", "description": "Test for the creation of a Shared Secret Request using MessageFactory.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateSharedSecretRequest", "primary_tested": ["MessageFactory.createSharedSecretRequest()"], "external_dependencies": {"modules": ["MessageFactory", "UnsupportedOperationException"]}, "category": "unit", "description": "Tests the creation of a Shared Secret Request using MessageFactory, expecting an UnsupportedOperationException with a specific message."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createSharedSecretErrorResponseTest.java", "testclass_name": "MessageFactory_createSharedSecretErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "MessageFactory_createSharedSecretErrorResponseTest", "description": "Test for the creation of a Shared Secret Error Response using MessageFactory.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateSharedSecretErrorResponse", "primary_tested": ["MessageFactory.createSharedSecretErrorResponse()"], "external_dependencies": {"modules": ["MessageFactory", "UnsupportedOperationException"]}, "category": "unit", "description": "Tests the creation of a Shared Secret Error Response using MessageFactory, expecting an UnsupportedOperationException with a specific message."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createSharedSecretResponseTest.java", "testclass_name": "MessageFactory_createSharedSecretResponseTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import org.junit.jupiter.api.Test;"], "name": "MessageFactory_createSharedSecretResponseTest", "description": "Test for creating a shared secret request using MessageFactory.", "test_cases": [{"name": "testCreateSharedSecretRequest", "primary_tested": ["MessageFactory.createSharedSecretRequest()"], "external_dependencies": {"modules": ["MessageFactory"]}, "category": "unit", "description": "Tests that creating a shared secret request throws an UnsupportedOperationException."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createChannelBindResponseTest.java", "testclass_name": "MessageFactory_createChannelBindResponseTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "MessageFactory_createChannelBindResponseTest", "description": "Unit test for the creation of a Channel Bind Response using MessageFactory.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateChannelBindResponse", "primary_tested": ["MessageFactory.createChannelBindResponse()"], "external_dependencies": {"modules": ["MessageFactory", "Response", "Message"]}, "category": "unit", "description": "Tests the creation of a Channel Bind Response and verifies its message type."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createAllocationErrorResponseTest.java", "testclass_name": "MessageFactory_createAllocationErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "MessageFactory_createAllocationErrorResponseTest", "description": "Unit tests for creating allocation error responses using MessageFactory.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateAllocationErrorResponse_WithErrorCode", "primary_tested": ["MessageFactory.createAllocationErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of an allocation error response with a specific error code."}]}, {"file_path": "src/test/java/org/ice4j/stack/StunStack_getPacketLoggerTest.java", "testclass_name": "StunStack_getPacketLoggerTest", "dependencies": ["package org.ice4j.stack;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;", "import static org.mockito.Mockito.*;"], "name": "StunStack_getPacketLoggerTest", "description": "Unit test for the getPacketLogger method in the StunStack class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testGetPacketLogger", "primary_tested": ["StunStack.getPacketLogger()"], "external_dependencies": {"modules": ["PacketLogger", "StunStack"]}, "category": "unit", "description": "Tests the retrieval of the PacketLogger instance from the StunStack class."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createBindingIndicationTest.java", "testclass_name": "MessageFactory_createBindingIndicationTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.ice4j.attribute.*;", "import org.junit.jupiter.api.*;"], "name": "MessageFactory_createBindingIndicationTest", "description": "Unit test for the creation of a binding indication message using MessageFactory.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCreateBindingIndication", "primary_tested": ["MessageFactory.createBindingIndication()"], "external_dependencies": {"modules": ["Indication", "MessageFactory", "Message"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of a binding indication message and verifies its message type."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createRefreshRequestTest.java", "testclass_name": "MessageFactory_createRefreshRequestTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.ice4j.attribute.*;", "import org.junit.jupiter.api.*;"], "name": "MessageFactory_createRefreshRequestTest", "description": "Unit test for the creation of a refresh request using MessageFactory.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCreateRefreshRequest", "primary_tested": ["MessageFactory.createRefreshRequest()"], "external_dependencies": {"modules": ["Request", "MessageFactory", "Message"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of a refresh request using MessageFactory and verifies the message type."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createCreatePermissionErrorResponseTest.java", "testclass_name": "MessageFactory_createCreatePermissionErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "MessageFactory_createCreatePermissionErrorResponseTest", "description": "Unit test for creating a Create Permission Error Response using MessageFactory.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testCreateCreatePermissionErrorResponse", "primary_tested": ["MessageFactory.createCreatePermissionErrorResponse(char)"], "associated_methods": ["Response.isErrorResponse()"], "external_dependencies": {"modules": ["MessageFactory", "Response"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of a Create Permission Error Response and verifies it is an error response."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createBindingErrorResponseTest.java", "testclass_name": "MessageFactory_createBindingErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.ice4j.attribute.*;", "import org.junit.jupiter.api.*;"], "name": "MessageFactory_createBindingErrorResponseTest", "description": "Unit test for the createBindingErrorResponse method in the MessageFactory class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCreateBindingErrorResponse", "primary_tested": ["MessageFactory.createBindingErrorResponse(char,String)"], "associated_methods": ["Response.setMessageType(char)", "Response.putAttribute(ErrorCodeAttribute)"], "external_dependencies": {"modules": ["Response", "MessageFactory", "ErrorCodeAttribute", "AttributeFactory"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of a binding error response using the MessageFactory class."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createConnectionBindErrorResponseTest.java", "testclass_name": "MessageFactory_createConnectionBindErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.message.MessageFactory;", "import org.ice4j.message.Response;"], "name": "MessageFactory_createConnectionBindErrorResponseTest", "description": "Unit tests for the createConnectionBindErrorResponse method in the MessageFactory class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateConnectionBindErrorResponse_WithErrorCode", "primary_tested": ["MessageFactory.createConnectionBindErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a connection bind error response with a specific error code."}, {"name": "testCreateConnectionBindErrorResponse_WithNullReasonPhrase", "primary_tested": ["MessageFactory.createConnectionBindErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a connection bind error response with a specific error code and no reason phrase."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RequestedAddressFamilyAttribute_getNameTest.java", "testclass_name": "RequestedAddressFamilyAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "RequestedAddressFamilyAttribute_getNameTest", "description": "Unit tests for the getName method of RequestedAddressFamilyAttribute.", "class_members": {"variables": [{"name": "requestedAddressFamilyAttribute", "type": "RequestedAddressFamilyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["RequestedAddressFamilyAttribute.getName()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName functionality of the RequestedAddressFamilyAttribute to ensure it returns the expected attribute name."}]}, {"file_path": "src/test/java/org/ice4j/stack/StunStack_getCredentialsManagerTest.java", "testclass_name": "StunStack_getCredentialsManagerTest", "dependencies": ["package org.ice4j.stack;", "import org.ice4j.security.CredentialsManager;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "StunStack_getCredentialsManagerTest", "description": "Unit tests for the getCredentialsManager method in the StunStack class.", "class_members": {"variables": [{"name": "stunStack", "type": "StunStack"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetCredentialsManager", "primary_tested": ["StunStack.getCredentialsManager()"], "external_dependencies": {"modules": ["StunStack", "CredentialsManager"], "class_members": [{"name": "stunStack", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the getCredentialsManager method returns a non-null CredentialsManager instance."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UsernameAttribute_getNameTest.java", "testclass_name": "UsernameAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UsernameAttribute_getNameTest", "description": "Unit tests for the getName method of the UsernameAttribute class.", "class_members": {"variables": [{"name": "usernameAttribute", "type": "UsernameAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["UsernameAttribute.getName()"], "external_dependencies": {"modules": ["UsernameAttribute"], "class_members": [{"name": "usernameAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the UsernameAttribute class to ensure it returns 'USERNAME'."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ConnectionIdAttribute_getNameTest.java", "testclass_name": "ConnectionIdAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ConnectionIdAttribute_getNameTest", "description": "Unit tests for the getName method of ConnectionIdAttribute.", "class_members": {"variables": [{"name": "connectionIdAttribute", "type": "ConnectionIdAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["ConnectionIdAttribute.getName()"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName functionality of the ConnectionIdAttribute."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createConnectErrorResponseTest.java", "testclass_name": "MessageFactory_createConnectErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "MessageFactory_createConnectErrorResponseTest", "description": "Unit tests for the MessageFactory.createConnectErrorResponse method.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testCreateConnectErrorResponse_withErrorCode", "primary_tested": ["MessageFactory.createConnectErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a Connect Error Response with a specific error code."}, {"name": "testCreateConnectErrorResponse_withNullReasonPhrase", "primary_tested": ["MessageFactory.createConnectErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a Connect Error Response with a specific error code and checks if it is an error response."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getNameTest.java", "testclass_name": "ErrorCodeAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getNameTest", "description": "Unit tests for the getName method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["ErrorCodeAttribute.getName()"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the ErrorCodeAttribute to ensure it returns 'ERROR-CODE'."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_getNameTest.java", "testclass_name": "ChangeRequestAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ChangeRequestAttribute_getNameTest", "description": "Unit tests for the getName method of the ChangeRequestAttribute class.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["ChangeRequestAttribute.getName()"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the ChangeRequestAttribute class to ensure it returns the expected string 'CHANGE-REQUEST'."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createAllocateRequestTest.java", "testclass_name": "MessageFactory_createAllocateRequestTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.ice4j.attribute.*;", "import org.junit.jupiter.api.*;"], "name": "MessageFactory_createAllocateRequestTest", "description": "Unit test for the creation of an allocate request using MessageFactory.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCreateAllocateRequest", "primary_tested": ["MessageFactory.createAllocateRequest()"], "associated_methods": ["Request.setMessageType(int)", "Request.getMessageType()"], "external_dependencies": {"modules": ["MessageFactory", "Request", "Message"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of an allocate request using MessageFactory and verifies the message type."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RequestedAddressFamilyAttribute_getDataLengthTest.java", "testclass_name": "RequestedAddressFamilyAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "RequestedAddressFamilyAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of RequestedAddressFamilyAttribute.", "class_members": {"variables": [{"name": "requestedAddressFamilyAttribute", "type": "RequestedAddressFamilyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["RequestedAddressFamilyAttribute.getDataLength()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of RequestedAddressFamilyAttribute to ensure the data length is properly calculated."}]}, {"file_path": "src/test/java/org/ice4j/attribute/XorOnlyAttribute_getDataLengthTest.java", "testclass_name": "XorOnlyAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "XorOnlyAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the XorOnlyAttribute class.", "class_members": {"variables": [{"name": "xorOnly", "type": "XorOnlyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["XorOnlyAttribute.getDataLength()"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the XorOnlyAttribute class, asserting that it returns 0."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_getAttributeTest.java", "testclass_name": "UnknownAttributesAttribute_getAttributeTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_getAttributeTest", "description": "Unit tests for the getAttribute method of UnknownAttributesAttribute.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetAttribute", "primary_tested": ["UnknownAttributesAttribute.getAttribute(int)"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getAttribute method of UnknownAttributesAttribute to ensure it returns the correct attribute ID at the specified index."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RequestedAddressFamilyAttribute_getFamilyTest.java", "testclass_name": "RequestedAddressFamilyAttribute_getFamilyTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "RequestedAddressFamilyAttribute_getFamilyTest", "description": "Unit tests for the getFamily method of the RequestedAddressFamilyAttribute class.", "class_members": {"variables": [{"name": "requestedAddressFamilyAttribute", "type": "RequestedAddressFamilyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetFamily", "primary_tested": ["RequestedAddressFamilyAttribute.getFamily()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getFamily method of the RequestedAddressFamilyAttribute class to ensure it returns the expected family value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ConnectionIdAttribute_getConnectionIdValueTest.java", "testclass_name": "ConnectionIdAttribute_getConnectionIdValueTest", "dependencies": ["package org.ice4j.attribute;", "import org.ice4j.*;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ConnectionIdAttribute_getConnectionIdValueTest", "description": "Unit tests for the getConnectionIdValue method of ConnectionIdAttribute.", "class_members": {"variables": [{"name": "connectionIdAttribute", "type": "ConnectionIdAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetConnectionIdValue", "primary_tested": ["ConnectionIdAttribute.getConnectionIdValue()"], "associated_methods": ["ConnectionIdAttribute.setConnectionIdValue(int)"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getConnectionIdValue method of ConnectionIdAttribute to ensure it returns the expected value after setting it."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getErrorCodeTest.java", "testclass_name": "ErrorCodeAttribute_getErrorCodeTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getErrorCodeTest", "description": "Unit tests for the getErrorCode method in the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetErrorCode", "primary_tested": ["ErrorCodeAttribute.getErrorCode()"], "associated_methods": ["ErrorCodeAttribute.setErrorClass(byte)", "ErrorCodeAttribute.setErrorNumber(byte)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the calculation of the error code in the ErrorCodeAttribute class."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createRefreshErrorResponseTest.java", "testclass_name": "MessageFactory_createRefreshErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "MessageFactory_createRefreshErrorResponseTest", "description": "Unit tests for the MessageFactory's createRefreshErrorResponse method with different parameters.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCreateRefreshErrorResponse_WithErrorCode", "primary_tested": ["MessageFactory.createRefreshErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a refresh error response with just an error code."}, {"name": "testCreateRefreshErrorResponse_WithErrorCodeAndReasonPhrase", "primary_tested": ["MessageFactory.createRefreshErrorResponse(char,String)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a refresh error response with an error code and a reason phrase."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_getAttributesTest.java", "testclass_name": "UnknownAttributesAttribute_getAttributesTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import java.util.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_getAttributesTest", "description": "Unit tests for the getAttributes method of UnknownAttributesAttribute.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetAttributes", "primary_tested": ["UnknownAttributesAttribute.getAttributes()"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the retrieval of attributes from UnknownAttributesAttribute and verifies the order and presence of added attributes."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RealmAttribute_getDataLengthTest.java", "testclass_name": "RealmAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "RealmAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the RealmAttribute class.", "class_members": {"variables": [{"name": "realmAttribute", "type": "RealmAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["RealmAttribute.getDataLength()"], "associated_methods": ["RealmAttribute.setRealm(byte[])"], "external_dependencies": {"modules": ["RealmAttribute"], "class_members": [{"name": "realmAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the RealmAttribute class by setting a realm value and checking if the returned length matches the expected length."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_setChangePortFlagTest.java", "testclass_name": "ChangeRequestAttribute_setChangePortFlagTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ChangeRequestAttribute_setChangePortFlagTest", "description": "Unit tests for the setChangePortFlag method of the ChangeRequestAttribute class.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetChangePortFlag", "primary_tested": ["ChangeRequestAttribute.setChangePortFlag(boolean)"], "associated_methods": ["ChangeRequestAttribute.getChangePortFlag()"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setChangePortFlag method of the ChangeRequestAttribute class to ensure it correctly sets and retrieves the changePortFlag."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getErrorNumberTest.java", "testclass_name": "ErrorCodeAttribute_getErrorNumberTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getErrorNumberTest", "description": "Unit tests for the getErrorNumber method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetErrorNumber", "primary_tested": ["ErrorCodeAttribute.getErrorNumber()"], "associated_methods": ["ErrorCodeAttribute.setErrorNumber(byte)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getErrorNumber method of the ErrorCodeAttribute class by setting an error number and verifying the returned value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_setReasonPhraseTest.java", "testclass_name": "ErrorCodeAttribute_setReasonPhraseTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_setReasonPhraseTest", "description": "Unit tests for the setReasonPhrase method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetReasonPhrase", "primary_tested": ["ErrorCodeAttribute.setReasonPhrase(String)"], "associated_methods": ["ErrorCodeAttribute.getReasonPhrase()"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setReasonPhrase method of the ErrorCodeAttribute class by setting a custom reason phrase and verifying it using the getReasonPhrase method."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_getChangePortFlagTest.java", "testclass_name": "ChangeRequestAttribute_getChangePortFlagTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ChangeRequestAttribute_getChangePortFlagTest", "description": "Unit tests for the getChangePortFlag method of the ChangeRequestAttribute class.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetChangePortFlag", "primary_tested": ["ChangeRequestAttribute.getChangePortFlag()"], "associated_methods": ["ChangeRequestAttribute.setChangePortFlag(boolean)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getChangePortFlag method of the ChangeRequestAttribute class to ensure it returns the correct value based on the setChangePortFlag method."}]}, {"file_path": "src/test/java/org/ice4j/attribute/SoftwareAttribute_getDataLengthTest.java", "testclass_name": "SoftwareAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "SoftwareAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the SoftwareAttribute class.", "class_members": {"variables": [{"name": "softwareAttribute", "type": "SoftwareAttribute"}, {"name": "softwareValue", "type": "byte[]"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["SoftwareAttribute.getDataLength()"], "external_dependencies": {"modules": ["SoftwareAttribute"], "class_members": [{"name": "softwareAttribute", "type": "variable"}, {"name": "softwareValue", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the SoftwareAttribute class to ensure it returns the correct length of the software value."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createChannelBindErrorResponseTest.java", "testclass_name": "MessageFactory_createChannelBindErrorResponseTest", "dependencies": ["package org.ice4j.message;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "MessageFactory_createChannelBindErrorResponseTest", "description": "Unit tests for the MessageFactory's createChannelBindErrorResponse method.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testCreateChannelBindErrorResponse_WithErrorCode", "primary_tested": ["MessageFactory.createChannelBindErrorResponse(char)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a Channel Bind Error Response with just an error code."}, {"name": "testCreateChannelBindErrorResponse_WithErrorCodeAndReasonPhrase", "primary_tested": ["MessageFactory.createChannelBindErrorResponse(char,String)"], "external_dependencies": {"modules": ["MessageFactory", "Response"]}, "category": "unit", "description": "Tests the creation of a Channel Bind Error Response with an error code and a reason phrase."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createAllocationResponseTest.java", "testclass_name": "MessageFactory_createAllocationResponseTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.ice4j.attribute.*;", "import org.junit.jupiter.api.*;"], "name": "MessageFactory_createAllocationResponseTest", "description": "Unit test for the createAllocationResponse method in the MessageFactory class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCreateAllocationResponse", "primary_tested": ["MessageFactory.createAllocationResponse(Request,TransportAddress,TransportAddress,TransportAddress,int)"], "associated_methods": ["AttributeFactory.createXorMappedAddressAttribute(TransportAddress,byte[])", "AttributeFactory.createXorRelayedAddressAttribute(TransportAddress,byte[])", "AttributeFactory.createLifetimeAttribute(int)"], "external_dependencies": {"modules": ["Request", "Response", "TransportAddress", "Transport", "Message", "AttributeFactory", "XorMappedAddressAttribute", "XorRelayedAddressAttribute", "LifetimeAttribute", "MessageFactory"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the creation of an allocation response using the MessageFactory.createAllocationResponse method, ensuring that the response contains the correct attributes and matches the expected response."}]}, {"file_path": "src/test/java/org/ice4j/message/MessageFactory_createGoogleAllocateRequestTest.java", "testclass_name": "MessageFactory_createGoogleAllocateRequestTest", "dependencies": ["package org.ice4j.message;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.ice4j.attribute.*;", "import org.junit.jupiter.api.*;"], "name": "MessageFactory_createGoogleAllocateRequestTest", "description": "Unit test for the creation of a Google Allocate Request using MessageFactory.", "class_members": {"variables": [{"name": "username", "type": "String"}, {"name": "expectedRequest", "type": "Request"}, {"name": "actualRequest", "type": "Request"}]}, "test_cases": [{"name": "testCreateGoogleAllocateRequest", "primary_tested": ["MessageFactory.createGoogleAllocateRequest(String)"], "associated_methods": ["Request.setMessageType(int)", "Request.putAttribute(Attribute)", "AttributeFactory.createMagicCookieAttribute()", "AttributeFactory.createUsernameAttribute(String)", "Request.getMessageType()", "Request.getAttributes()"], "external_dependencies": {"modules": ["org.ice4j.Message", "org.ice4j.Request", "org.ice4j.attribute.AttributeFactory"], "class_members": [{"name": "username", "type": "variable"}, {"name": "expectedRequest", "type": "variable"}, {"name": "actualRequest", "type": "variable"}]}, "category": "unit", "description": "Tests the creation of a Google Allocate Request using MessageFactory and verifies the message type and attributes."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_containsTest.java", "testclass_name": "UnknownAttributesAttribute_containsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_containsTest", "description": "Unit tests for the contains method of UnknownAttributesAttribute.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testContains_AttributePresent", "primary_tested": ["UnknownAttributesAttribute.contains(char)"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if the contains method correctly identifies an attribute that is present."}, {"name": "testContains_AttributeNotPresent", "primary_tested": ["UnknownAttributesAttribute.contains(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if the contains method correctly identifies an attribute that is not present."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getReasonPhraseTest.java", "testclass_name": "ErrorCodeAttribute_getReasonPhraseTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getReasonPhraseTest", "description": "Unit tests for the getReasonPhrase method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetReasonPhraseWithSetReasonPhrase", "primary_tested": ["ErrorCodeAttribute.getReasonPhrase()"], "associated_methods": ["ErrorCodeAttribute.setReasonPhrase(String)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the getReasonPhrase method returns the correct reason phrase after it has been set."}, {"name": "testGetReasonPhraseWithNullReasonPhrase", "primary_tested": ["ErrorCodeAttribute.getReasonPhrase()"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the getReasonPhrase method returns null when no reason phrase has been set."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_setErrorClassTest.java", "testclass_name": "ErrorCodeAttribute_setErrorClassTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_setErrorClassTest", "description": "Unit tests for the setErrorClass method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetErrorClassValid", "primary_tested": ["ErrorCodeAttribute.setErrorClass(byte)"], "associated_methods": ["ErrorCodeAttribute.getErrorClass()"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setErrorClass method with a valid error class."}, {"name": "testSetErrorClassInvalid", "primary_tested": ["ErrorCodeAttribute.setErrorClass(byte)"], "associated_methods": ["ErrorCodeAttribute.getErrorClass()"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setErrorClass method with an invalid error class, expecting an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/ice4j/attribute/SoftwareAttribute_getNameTest.java", "testclass_name": "SoftwareAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "SoftwareAttribute_getNameTest", "description": "Unit tests for the getName method of the SoftwareAttribute class.", "class_members": {"variables": [{"name": "softwareAttribute", "type": "SoftwareAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["SoftwareAttribute.getName()"], "external_dependencies": {"modules": ["SoftwareAttribute"], "class_members": [{"name": "softwareAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the SoftwareAttribute class to ensure it returns 'SOFTWARE'."}]}, {"file_path": "src/test/java/org/ice4j/attribute/NonceAttribute_getNameTest.java", "testclass_name": "NonceAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "NonceAttribute_getNameTest", "description": "Unit tests for the getName() method of the NonceAttribute class.", "class_members": {"variables": [{"name": "nonceAttribute", "type": "NonceAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["NonceAttribute.getName()"], "external_dependencies": {"modules": ["NonceAttribute"], "class_members": [{"name": "nonceAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the getName() method of NonceAttribute returns 'NONCE'."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_nowTest.java", "testclass_name": "PseudoTCPBase_nowTest", "dependencies": ["package org.ice4j.pseudotcp;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertTrue;"], "name": "PseudoTCPBase_nowTest", "description": "Unit test for the now() method in PseudoTCPBase.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testNow", "primary_tested": ["PseudoTCPBase.now()"], "external_dependencies": {"modules": ["PseudoTCPBase"]}, "category": "unit", "description": "Tests that the now() method in PseudoTCPBase returns a non-negative value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ConnectionIdAttribute_getDataLengthTest.java", "testclass_name": "ConnectionIdAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ConnectionIdAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the ConnectionIdAttribute class.", "class_members": {"variables": [{"name": "connectionIdAttribute", "type": "ConnectionIdAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["ConnectionIdAttribute.getDataLength()"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the getDataLength method returns a data length of 4 bytes."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UsernameAttribute_getDataLengthTest.java", "testclass_name": "UsernameAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UsernameAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the UsernameAttribute class.", "class_members": {"variables": [{"name": "usernameAttribute", "type": "UsernameAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["UsernameAttribute.getDataLength()"], "associated_methods": ["UsernameAttribute.setUsername(byte[])"], "external_dependencies": {"modules": ["UsernameAttribute"], "class_members": [{"name": "usernameAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the UsernameAttribute class by setting a username and verifying the length."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_addAttributeIDTest.java", "testclass_name": "UnknownAttributesAttribute_addAttributeIDTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_addAttributeIDTest", "description": "Unit tests for the addAttributeID method of the UnknownAttributesAttribute class.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testAddAttributeID_NewAttribute", "primary_tested": ["UnknownAttributesAttribute.addAttributeID(char)"], "associated_methods": ["UnknownAttributesAttribute.contains(char)", "UnknownAttributesAttribute.getAttributeCount()"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the addition of a new attribute ID to the UnknownAttributesAttribute."}, {"name": "testAddAttributeID_DuplicateAttribute", "primary_tested": ["UnknownAttributesAttribute.addAttributeID(char)"], "associated_methods": ["UnknownAttributesAttribute.contains(char)", "UnknownAttributesAttribute.getAttributeCount()"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the addition of a duplicate attribute ID to the UnknownAttributesAttribute."}]}, {"file_path": "src/test/java/org/ice4j/attribute/OptionalAttribute_getDataLengthTest.java", "testclass_name": "OptionalAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "OptionalAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the OptionalAttribute class.", "class_members": {"variables": [{"name": "optionalAttribute", "type": "OptionalAttribute"}, {"name": "expectedAttributeValue", "type": "byte[]"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["OptionalAttribute.getDataLength()"], "external_dependencies": {"modules": ["OptionalAttribute"], "class_members": [{"name": "optionalAttribute", "type": "variable"}, {"name": "expectedAttributeValue", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the OptionalAttribute class to ensure it returns the correct length of the attribute value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getErrorClassTest.java", "testclass_name": "ErrorCodeAttribute_getErrorClassTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getErrorClassTest", "description": "Unit tests for the getErrorClass method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetErrorClass", "primary_tested": ["ErrorCodeAttribute.getErrorClass()"], "associated_methods": ["ErrorCodeAttribute.setErrorClass(byte)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getErrorClass method of the ErrorCodeAttribute class by setting an error class and verifying the returned value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_getChangeIpFlagTest.java", "testclass_name": "ChangeRequestAttribute_getChangeIpFlagTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ChangeRequestAttribute_getChangeIpFlagTest", "description": "Unit tests for the getChangeIpFlag method of the ChangeRequestAttribute class.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetChangeIpFlag", "primary_tested": ["ChangeRequestAttribute.getChangeIpFlag()"], "associated_methods": ["ChangeRequestAttribute.setChangeIpFlag(boolean)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getChangeIpFlag method when the flag is set to true."}, {"name": "testGetChangeIpFlagFalse", "primary_tested": ["ChangeRequestAttribute.getChangeIpFlag()"], "associated_methods": ["ChangeRequestAttribute.setChangeIpFlag(boolean)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getChangeIpFlag method when the flag is set to false."}]}, {"file_path": "src/test/java/org/ice4j/stack/StunStack_isPacketLoggerEnabledTest.java", "testclass_name": "StunStack_isPacketLoggerEnabledTest", "dependencies": ["package org.ice4j.stack;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;", "import static org.mockito.Mockito.*;"], "name": "StunStack_isPacketLoggerEnabledTest", "description": "Tests for the StunStack.isPacketLoggerEnabled method.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testIsPacketLoggerEnabled_LoggerEnabled", "primary_tested": ["StunStack.isPacketLoggerEnabled()"], "associated_methods": ["StunStack.setPacketLogger(PacketLogger)", "PacketLogger.isEnabled()"], "external_dependencies": {"modules": ["PacketLogger", "StunStack"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the isPacketLoggerEnabled method when the logger is enabled."}, {"name": "testIsPacketLoggerEnabled_LoggerDisabled", "primary_tested": ["StunStack.isPacketLoggerEnabled()"], "associated_methods": ["StunStack.setPacketLogger(PacketLogger)", "PacketLogger.isEnabled()"], "external_dependencies": {"modules": ["PacketLogger", "StunStack"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the isPacketLoggerEnabled method when the logger is disabled."}, {"name": "testIsPacketLoggerEnabled_LoggerNull", "primary_tested": ["StunStack.isPacketLoggerEnabled()"], "associated_methods": ["StunStack.setPacketLogger(PacketLogger)"], "external_dependencies": {"modules": ["StunStack"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the isPacketLoggerEnabled method when the logger is null."}]}, {"file_path": "src/test/java/org/ice4j/attribute/OptionalAttribute_getNameTest.java", "testclass_name": "OptionalAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;", "import org.ice4j.MsgFixture;"], "name": "OptionalAttribute_getNameTest", "description": "Unit tests for the getName method of the OptionalAttribute class.", "class_members": {"variables": [{"name": "optionalAttribute", "type": "OptionalAttribute"}, {"name": "expectedAttributeValue", "type": "byte[]"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["OptionalAttribute.getName()"], "external_dependencies": {"modules": ["OptionalAttribute", "MsgFixture"], "class_members": [{"name": "optionalAttribute", "type": "variable"}, {"name": "expectedAttributeValue", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the OptionalAttribute class to ensure it returns the expected attribute name."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_getAckNotifyTest.java", "testclass_name": "PseudoTCPBase_getAckNotifyTest", "dependencies": ["package org.ice4j.pseudotcp;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "PseudoTCPBase_getAckNotifyTest", "description": "Unit test for the getAckNotify method in PseudoTCPBase.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testGetAckNotify", "primary_tested": ["PseudoTCPBase.getAckNotify()"], "external_dependencies": {"modules": ["PseudoTCPBase"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getAckNotify method of PseudoTCPBase to ensure it returns a non-null value."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_segToStrTest.java", "testclass_name": "PseudoTCPBase_segToStrTest", "dependencies": ["package org.ice4j.pseudotcp;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "PseudoTCPBase_segToStrTest", "description": "Unit tests for the segToStr method in PseudoTCPBase.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSegToStr", "primary_tested": ["PseudoTCPBase.segToStr(Segment)"], "external_dependencies": {"modules": ["Segment", "PseudoTCPBase"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the segToStr method of PseudoTCPBase to ensure it correctly formats a Segment object into a string."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RealmAttribute_getNameTest.java", "testclass_name": "RealmAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "RealmAttribute_getNameTest", "description": "Unit tests for the getName method of the RealmAttribute class.", "class_members": {"variables": [{"name": "realmAttribute", "type": "RealmAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["RealmAttribute.getName()"], "external_dependencies": {"modules": ["RealmAttribute"], "class_members": [{"name": "realmAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the RealmAttribute class to ensure it returns 'REALM'."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_getMTUTest.java", "testclass_name": "PseudoTCPBase_getMTUTest", "dependencies": ["package org.ice4j.pseudotcp;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "PseudoTCPBase_getMTUTest", "description": "Unit test for the getMTU method in PseudoTCPBase.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testGetMTU", "primary_tested": ["PseudoTCPBase.getMTU()"], "associated_methods": ["PseudoTCPBase.notifyMTU(int)"], "external_dependencies": {"modules": ["PseudoTCPBase"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getMTU method of PseudoTCPBase after setting the MTU value using notifyMTU."}]}, {"file_path": "src/test/java/org/ice4j/attribute/XorOnlyAttribute_getNameTest.java", "testclass_name": "XorOnlyAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "XorOnlyAttribute_getNameTest", "description": "Unit tests for the getName method of the XorOnlyAttribute class.", "class_members": {"variables": [{"name": "xorOnly", "type": "XorOnlyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["XorOnlyAttribute.getName()"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the XorOnlyAttribute class."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_getM_rwnd_scaleTest.java", "testclass_name": "PseudoTCPBase_getM_rwnd_scaleTest", "dependencies": ["package org.ice4j.pseudotcp;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "PseudoTCPBase_getM_rwnd_scaleTest", "description": "Unit test for the getM_rwnd_scale method in PseudoTCPBase class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testGetM_rwnd_scale", "primary_tested": ["PseudoTCPBase.getM_rwnd_scale()"], "external_dependencies": {"modules": ["PseudoTCPBase"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getM_rwnd_scale method of the PseudoTCPBase class."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_getNameTest.java", "testclass_name": "UnknownAttributesAttribute_getNameTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_getNameTest", "description": "Unit tests for the getName method of the UnknownAttributesAttribute class.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetName", "primary_tested": ["UnknownAttributesAttribute.getName()"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getName method of the UnknownAttributesAttribute class."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_getDataLengthTest.java", "testclass_name": "ChangeRequestAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ChangeRequestAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the ChangeRequestAttribute class.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["ChangeRequestAttribute.getDataLength()"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the ChangeRequestAttribute class to ensure it returns the expected value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/NonceAttribute_getDataLengthTest.java", "testclass_name": "NonceAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "NonceAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the NonceAttribute class.", "class_members": {"variables": [{"name": "nonceAttribute", "type": "NonceAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["NonceAttribute.getDataLength()"], "associated_methods": ["NonceAttribute.setNonce(byte[])"], "external_dependencies": {"modules": ["NonceAttribute"], "class_members": [{"name": "nonceAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method of the NonceAttribute class to ensure it returns the correct length of the nonce."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_getAttributeCountTest.java", "testclass_name": "UnknownAttributesAttribute_getAttributeCountTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_getAttributeCountTest", "description": "Unit tests for the getAttributeCount method of UnknownAttributesAttribute.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetAttributeCount", "primary_tested": ["UnknownAttributesAttribute.getAttributeCount()"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getAttributeCount method of UnknownAttributesAttribute by adding multiple attribute IDs and verifying the count."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/util/ByteFifoBuffer_lengthTest.java", "testclass_name": "ByteFifoBuffer_lengthTest", "dependencies": ["package org.ice4j.pseudotcp.util;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ByteFifoBuffer_lengthTest", "description": "Unit tests for the length method of ByteFifoBuffer.", "class_members": {"variables": [{"name": "buffer", "type": "ByteFifoBuffer"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testLength", "primary_tested": ["ByteFifoBuffer.length()"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "buffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the length method of the ByteFifoBuffer."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ConnectionIdAttribute_setConnectionIdValueTest.java", "testclass_name": "ConnectionIdAttribute_setConnectionIdValueTest", "dependencies": ["package org.ice4j.attribute;", "import org.ice4j.*;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ConnectionIdAttribute_setConnectionIdValueTest", "description": "Unit tests for setting the connection ID value in ConnectionIdAttribute.", "class_members": {"variables": [{"name": "connectionIdAttribute", "type": "ConnectionIdAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetConnectionIdValue", "primary_tested": ["ConnectionIdAttribute.setConnectionIdValue(int)"], "associated_methods": ["ConnectionIdAttribute.getConnectionIdValue()"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the functionality of setting the connection ID value in ConnectionIdAttribute and verifies if it is set correctly."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_getM_swnd_scaleTest.java", "testclass_name": "PseudoTCPBase_getM_swnd_scaleTest", "dependencies": ["package org.ice4j.pseudotcp;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "PseudoTCPBase_getM_swnd_scaleTest", "description": "Unit test for the getM_swnd_scale method in PseudoTCPBase.", "class_members": {"variables": [{"name": "pseudoTCPBase", "type": "PseudoTCPBase"}]}, "fixtures": [], "test_cases": [{"name": "testGetM_swnd_scale", "primary_tested": ["PseudoTCPBase.getM_swnd_scale()"], "associated_methods": ["PseudoTCPBase.applyWindowScaleOption(short)"], "external_dependencies": {"modules": ["PseudoTCPBase"], "class_members": [{"name": "pseudoTCPBase", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the getM_swnd_scale method of PseudoTCPBase after applying a window scale option."}]}, {"file_path": "src/test/java/org/ice4j/stack/StunStack_logPacketToPcapTest.java", "testclass_name": "StunStack_logPacketToPcapTest", "dependencies": ["package org.ice4j.stack;", "import org.junit.jupiter.api.Test;", "import org.mockito.Mockito;", "import java.net.DatagramPacket;", "import java.net.InetAddress;", "import java.net.UnknownHostException;", "import static org.mockito.Mockito.*;"], "name": "StunStack_logPacketToPcapTest", "description": "Unit tests for the logPacketToPcap method in the StunStack class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testLogPacketToPcap_PacketLoggerEnabled", "primary_tested": ["StunStack.logPacketToPcap(DatagramPacket,boolean,InetAddress,int)"], "associated_methods": ["PacketLogger.logPacket(byte[],int,byte[],int,byte[],boolean)"], "external_dependencies": {"modules": ["DatagramPacket", "InetAddress", "PacketLogger", "StunStack"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the logPacketToPcap method when the PacketLogger is enabled."}, {"name": "testLogPacketToPcap_PacketLoggerDisabled", "primary_tested": ["StunStack.logPacketToPcap(DatagramPacket,boolean,InetAddress,int)"], "associated_methods": ["PacketLogger.logPacket(byte[],int,byte[],int,byte[],boolean)"], "external_dependencies": {"modules": ["DatagramPacket", "InetAddress", "PacketLogger", "StunStack"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the logPacketToPcap method when the PacketLogger is disabled."}, {"name": "testLogPacketToPcap_InterfaceAddressNull", "primary_tested": ["StunStack.logPacketToPcap(DatagramPacket,boolean,InetAddress,int)"], "associated_methods": ["PacketLogger.logPacket(byte[],int,byte[],int,byte[],boolean)"], "external_dependencies": {"modules": ["DatagramPacket", "InetAddress", "PacketLogger", "StunStack"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the logPacketToPcap method when the interface address is null."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getDefaultReasonPhraseTest.java", "testclass_name": "ErrorCodeAttribute_getDefaultReasonPhraseTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getDefaultReasonPhraseTest", "description": "Unit tests for the getDefaultReasonPhrase method in the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDefaultReasonPhrase_KnownErrorCode", "primary_tested": ["ErrorCodeAttribute.getDefaultReasonPhrase(char)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDefaultReasonPhrase method with a known error code."}, {"name": "testGetDefaultReasonPhrase_UnknownErrorCode", "primary_tested": ["ErrorCodeAttribute.getDefaultReasonPhrase(char)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDefaultReasonPhrase method with an unknown error code."}]}, {"file_path": "src/test/java/org/ice4j/ice/harvest/SinglePortUdpHarvester_isHostHarvesterTest.java", "testclass_name": "SinglePortUdpHarvester_isHostHarvesterTest", "dependencies": ["package org.ice4j.ice.harvest;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;", "import java.io.IOException;"], "name": "SinglePortUdpHarvester_isHostHarvesterTest", "description": "Test for the isHostHarvester method in SinglePortUdpHarvester.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testIsHostHarvester", "primary_tested": ["SinglePortUdpHarvester.isHostHarvester()"], "external_dependencies": {"modules": ["SinglePortUdpHarvester", "IOException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the isHostHarvester method of SinglePortUdpHarvester to ensure it returns true when instantiated with a null argument."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_getDataLengthTest.java", "testclass_name": "ErrorCodeAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLength_NoReasonPhrase", "primary_tested": ["ErrorCodeAttribute.getDataLength()"], "associated_methods": ["ErrorCodeAttribute.setErrorClass(byte)", "ErrorCodeAttribute.setErrorNumber(byte)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method when no reason phrase is set."}, {"name": "testGetDataLength_WithReasonPhrase", "primary_tested": ["ErrorCodeAttribute.getDataLength()"], "associated_methods": ["ErrorCodeAttribute.setErrorClass(byte)", "ErrorCodeAttribute.setErrorNumber(byte)", "ErrorCodeAttribute.setReasonPhrase(String)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method when a reason phrase is set."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RequestedAddressFamilyAttribute_setFamilyTest.java", "testclass_name": "RequestedAddressFamilyAttribute_setFamilyTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "RequestedAddressFamilyAttribute_setFamilyTest", "description": "Unit tests for the setFamily method of the RequestedAddressFamilyAttribute class.", "class_members": {"variables": [{"name": "requestedAddressFamilyAttribute", "type": "RequestedAddressFamilyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetFamilyValidIPv4", "primary_tested": ["RequestedAddressFamilyAttribute.setFamily(char)"], "associated_methods": ["RequestedAddressFamilyAttribute.getFamily()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setFamily method with a valid IPv4 family value."}, {"name": "testSetFamilyValidIPv6", "primary_tested": ["RequestedAddressFamilyAttribute.setFamily(char)"], "associated_methods": ["RequestedAddressFamilyAttribute.getFamily()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setFamily method with a valid IPv6 family value."}, {"name": "testSetFamilyInvalid", "primary_tested": ["RequestedAddressFamilyAttribute.setFamily(char)"], "associated_methods": ["RequestedAddressFamilyAttribute.getFamily()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setFamily method with an invalid family value."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/util/ByteFifoBuffer_resetReadPositionTest.java", "testclass_name": "ByteFifoBuffer_resetReadPositionTest", "dependencies": ["package org.ice4j.pseudotcp.util;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ByteFifoBuffer_resetReadPositionTest", "description": "Unit tests for the resetReadPosition method of ByteFifoBuffer.", "class_members": {"variables": [{"name": "fifo", "type": "ByteFifoBuffer"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testResetReadPosition", "primary_tested": ["ByteFifoBuffer.resetReadPosition()"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.read(byte[],int)", "ByteFifoBuffer.getBuffered()"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifo", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the resetReadPosition method of ByteFifoBuffer to ensure it correctly resets the read position and updates the buffered count."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/util/ByteFifoBuffer_resetWritePositionTest.java", "testclass_name": "ByteFifoBuffer_resetWritePositionTest", "dependencies": ["package org.ice4j.pseudotcp.util;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ByteFifoBuffer_resetWritePositionTest", "description": "Unit tests for the resetWritePosition method of ByteFifoBuffer.", "class_members": {"variables": [{"name": "fifoBuffer", "type": "ByteFifoBuffer"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testResetWritePosition", "primary_tested": ["ByteFifoBuffer.resetWritePosition()"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.getBuffered()", "ByteFifoBuffer.getWriteRemaining()"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifoBuffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the resetWritePosition method of ByteFifoBuffer to ensure it correctly resets the write position and updates the buffer state."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTCPBase_notifyMTUTest.java", "testclass_name": "PseudoTCPBase_notifyMTUTest", "dependencies": ["package org.ice4j.pseudotcp;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.pseudotcp.PseudoTcpState;"], "name": "PseudoTCPBase_notifyMTUTest", "description": "Unit tests for the notifyMTU method in PseudoTCPBase class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testNotifyMTU_EstablishedState", "primary_tested": ["PseudoTCPBase.notifyMTU(int)"], "associated_methods": ["PseudoTCPBase.getMTU()"], "external_dependencies": {"modules": ["PseudoTCPBase", "PseudoTcpState"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the notifyMTU method when the state is TCP_ESTABLISHED."}, {"name": "testNotifyMTU_NonEstablishedState", "primary_tested": ["PseudoTCPBase.notifyMTU(int)"], "associated_methods": ["PseudoTCPBase.getMTU()"], "external_dependencies": {"modules": ["PseudoTCPBase", "PseudoTcpState"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the notifyMTU method when the state is TCP_LISTEN."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_setChangeIpFlagTest.java", "testclass_name": "ChangeRequestAttribute_setChangeIpFlagTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ChangeRequestAttribute_setChangeIpFlagTest", "description": "Unit tests for setting the changeIpFlag in ChangeRequestAttribute.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetChangeIpFlag", "primary_tested": ["ChangeRequestAttribute.setChangeIpFlag(boolean)"], "associated_methods": ["ChangeRequestAttribute.getChangeIpFlag()"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests setting the changeIpFlag to true and verifies it."}, {"name": "testSetChangeIpFlagFalse", "primary_tested": ["ChangeRequestAttribute.setChangeIpFlag(boolean)"], "associated_methods": ["ChangeRequestAttribute.getChangeIpFlag()"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests setting the changeIpFlag to false and verifies it."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_getDataLengthTest.java", "testclass_name": "UnknownAttributesAttribute_getDataLengthTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_getDataLengthTest", "description": "Unit tests for the getDataLength method of the UnknownAttributesAttribute class.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetDataLengthEvenAttributes", "primary_tested": ["UnknownAttributesAttribute.getDataLength()"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method when the number of attributes is even."}, {"name": "testGetDataLengthOddAttributes", "primary_tested": ["UnknownAttributesAttribute.getDataLength()"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getDataLength method when the number of attributes is odd."}]}, {"file_path": "src/test/java/org/ice4j/attribute/RequestedAddressFamilyAttribute_equalsTest.java", "testclass_name": "RequestedAddressFamilyAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.junit.jupiter.api.*;"], "name": "RequestedAddressFamilyAttribute_equalsTest", "description": "Unit tests for the equals method of the RequestedAddressFamilyAttribute class.", "class_members": {"variables": [{"name": "requestedAddressFamilyAttribute", "type": "RequestedAddressFamilyAttribute"}, {"name": "msgFixture", "type": "MsgFixture"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEqualsSameObject", "primary_tested": ["RequestedAddressFamilyAttribute.equals(Object)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same object."}, {"name": "testEqualsDifferentType", "primary_tested": ["RequestedAddressFamilyAttribute.equals(Object)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "Object"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different type of object."}, {"name": "testEqualsDifferentFamily", "primary_tested": ["RequestedAddressFamilyAttribute.equals(Object)"], "associated_methods": ["RequestedAddressFamilyAttribute.setFamily(int)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different family values."}, {"name": "testEqualsSameFamily", "primary_tested": ["RequestedAddressFamilyAttribute.equals(Object)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same family value."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTcpSocketImpl_getOutputStreamTest.java", "testclass_name": "PseudoTcpSocketImpl_getOutputStreamTest", "dependencies": ["package org.ice4j.pseudotcp;", "import static org.junit.jupiter.api.Assertions.*;", "import java.io.*;", "import java.net.SocketException;", "import org.junit.jupiter.api.*;"], "name": "PseudoTcpSocketImpl_getOutputStreamTest", "description": "Unit tests for the getOutputStream method of PseudoTcpSocketImpl.", "class_members": {"variables": [{"name": "pseudoTcpSocketImpl", "type": "PseudoTcpSocketImpl"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetOutputStream_FirstCall", "primary_tested": ["PseudoTcpSocketImpl.getOutputStream()"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "OutputStream"], "class_members": [{"name": "pseudoTcpSocketImpl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the first call to getOutputStream method of PseudoTcpSocketImpl, ensuring it returns a non-null OutputStream of type PseudoTcpSocketImpl.PseudoTcpOutputStream."}, {"name": "testGetOutputStream_SubsequentCall", "primary_tested": ["PseudoTcpSocketImpl.getOutputStream()"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "OutputStream"], "class_members": [{"name": "pseudoTcpSocketImpl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests subsequent calls to getOutputStream method of PseudoTcpSocketImpl, ensuring the same OutputStream instance is returned."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ConnectionIdAttribute_equalsTest.java", "testclass_name": "ConnectionIdAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ConnectionIdAttribute_equalsTest", "description": "Unit tests for the equals method of the ConnectionIdAttribute class.", "class_members": {"variables": [{"name": "connectionIdAttribute", "type": "ConnectionIdAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ConnectionIdAttribute.equals(Object)"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same object."}, {"name": "testEquals_DifferentType", "primary_tested": ["ConnectionIdAttribute.equals(Object)"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with an object of a different type."}, {"name": "testEquals_DifferentConnectionIdValue", "primary_tested": ["ConnectionIdAttribute.equals(Object)"], "associated_methods": ["ConnectionIdAttribute.setConnectionIdValue(int)"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different connection ID values."}, {"name": "testEquals_SameConnectionIdValue", "primary_tested": ["ConnectionIdAttribute.equals(Object)"], "associated_methods": ["ConnectionIdAttribute.setConnectionIdValue(int)"], "external_dependencies": {"modules": ["ConnectionIdAttribute"], "class_members": [{"name": "connectionIdAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same connection ID value."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTcpSocketImpl_getInputStreamTest.java", "testclass_name": "PseudoTcpSocketImpl_getInputStreamTest", "dependencies": ["package org.ice4j.pseudotcp;", "import static org.junit.jupiter.api.Assertions.*;", "import java.io.*;", "import java.net.*;", "import org.junit.jupiter.api.*;"], "name": "PseudoTcpSocketImpl_getInputStreamTest", "description": "Unit tests for the getInputStream method of PseudoTcpSocketImpl.", "class_members": {"variables": [{"name": "pseudoTcpSocket", "type": "PseudoTcpSocketImpl"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetInputStream_InitialState", "primary_tested": ["PseudoTcpSocketImpl.getInputStream()"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "InputStream"], "class_members": [{"name": "pseudoTcpSocket", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the initial state of the InputStream returned by getInputStream method."}, {"name": "testGetInputStream_SubsequentCalls", "primary_tested": ["PseudoTcpSocketImpl.getInputStream()"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "InputStream"], "class_members": [{"name": "pseudoTcpSocket", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that subsequent calls to getInputStream return the same InputStream instance."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/util/ByteFifoBuffer_setCapacityTest.java", "testclass_name": "ByteFifoBuffer_setCapacityTest", "dependencies": ["package org.ice4j.pseudotcp.util;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ByteFifoBuffer_setCapacityTest", "description": "Unit tests for the setCapacity method of ByteFifoBuffer.", "class_members": {"variables": [{"name": "fifo", "type": "ByteFifoBuffer"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetCapacitySuccess", "primary_tested": ["ByteFifoBuffer.setCapacity(int)"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.length()"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifo", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the successful setting of capacity in ByteFifoBuffer."}, {"name": "testSetCapacityFailure", "primary_tested": ["ByteFifoBuffer.setCapacity(int)"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.length()"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifo", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the failure of setting capacity in ByteFifoBuffer when the new capacity is less than the current data length."}]}, {"file_path": "src/test/java/org/ice4j/attribute/OptionalAttribute_equalsTest.java", "testclass_name": "OptionalAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;", "import org.ice4j.MsgFixture;"], "name": "OptionalAttribute_equalsTest", "description": "Unit tests for the equals method of the OptionalAttribute class.", "class_members": {"variables": [{"name": "optionalAttribute", "type": "OptionalAttribute"}, {"name": "expectedAttributeValue", "type": "byte[]"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["OptionalAttribute.equals(Object)"], "external_dependencies": {"modules": ["OptionalAttribute"], "class_members": [{"name": "optionalAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same instance."}, {"name": "testEquals_DifferentInstanceSameValue", "primary_tested": ["OptionalAttribute.equals(Object)"], "associated_methods": ["OptionalAttribute.setBody(byte[],int,int)"], "external_dependencies": {"modules": ["OptionalAttribute"], "class_members": [{"name": "optionalAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different instance but the same value."}, {"name": "testEquals_DifferentInstanceDifferentValue", "primary_tested": ["OptionalAttribute.equals(Object)"], "associated_methods": ["OptionalAttribute.setBody(byte[],int,int)"], "external_dependencies": {"modules": ["OptionalAttribute"], "class_members": [{"name": "optionalAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different instance and different value."}, {"name": "testEquals_DifferentType", "primary_tested": ["OptionalAttribute.equals(Object)"], "external_dependencies": {"modules": ["OptionalAttribute"], "class_members": [{"name": "optionalAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with an object of a different type."}]}, {"file_path": "src/test/java/org/ice4j/stunclient/NetworkConfigurationDiscoveryProcess_startTest.java", "testclass_name": "NetworkConfigurationDiscoveryProcess_startTest", "dependencies": ["package org.ice4j.stunclient;", "import org.ice4j.*;", "import org.ice4j.socket.*;", "import org.ice4j.stack.*;", "import org.junit.jupiter.api.*;", "import static org.junit.jupiter.api.Assertions.*;", "import java.io.IOException;"], "name": "NetworkConfigurationDiscoveryProcess_startTest", "description": "Tests for the start method of NetworkConfigurationDiscoveryProcess, including success and exception scenarios.", "class_members": {"variables": [{"name": "discoverer", "type": "NetworkConfigurationDiscoveryProcess"}, {"name": "stunStack", "type": "StunStack"}, {"name": "localAddress", "type": "TransportAddress"}, {"name": "serverAddress", "type": "TransportAddress"}], "nested_classes": [{"name": "NetworkConfigurationDiscoveryProcess", "description": "Internal class to simulate NetworkConfigurationDiscoveryProcess for testing purposes"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testStartSuccess", "primary_tested": ["NetworkConfigurationDiscoveryProcess.start()"], "associated_methods": ["NetworkConfigurationDiscoveryProcess.isStarted()"], "external_dependencies": {"modules": ["NetworkConfigurationDiscoveryProcess", "StunStack", "TransportAddress"], "class_members": [{"name": "discoverer", "type": "variable"}, {"name": "stunStack", "type": "variable"}, {"name": "localAddress", "type": "variable"}, {"name": "serverAddress", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the successful start of NetworkConfigurationDiscoveryProcess."}, {"name": "testStartIOException", "primary_tested": ["NetworkConfigurationDiscoveryProcess.start()"], "external_dependencies": {"modules": ["NetworkConfigurationDiscoveryProcess", "StunStack", "TransportAddress"], "class_members": [{"name": "discoverer", "type": "variable"}, {"name": "stunStack", "type": "variable"}, {"name": "localAddress", "type": "variable"}, {"name": "serverAddress", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the start method of NetworkConfigurationDiscoveryProcess when an IOException is expected."}, {"name": "testStartStunException", "primary_tested": ["NetworkConfigurationDiscoveryProcess.start()"], "external_dependencies": {"modules": ["NetworkConfigurationDiscoveryProcess", "StunStack", "TransportAddress"], "class_members": [{"name": "discoverer", "type": "variable"}, {"name": "localAddress", "type": "variable"}, {"name": "serverAddress", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the start method of NetworkConfigurationDiscoveryProcess when a NullPointerException is expected."}]}, {"file_path": "src/test/java/org/ice4j/attribute/XorOnlyAttribute_equalsTest.java", "testclass_name": "XorOnlyAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "XorOnlyAttribute_equalsTest", "description": "Unit tests for the equals method of the XorOnlyAttribute class.", "class_members": {"variables": [{"name": "xorOnly", "type": "XorOnlyAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["XorOnlyAttribute.equals(Object)"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same instance."}, {"name": "testEquals_DifferentType", "primary_tested": ["XorOnlyAttribute.equals(Object)"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different type of object."}, {"name": "testEquals_DifferentAttributeType", "primary_tested": ["XorOnlyAttribute.equals(Object)"], "associated_methods": ["XorOnlyAttribute.getAttributeType()"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different attribute type."}, {"name": "testEquals_DifferentDataLength", "primary_tested": ["XorOnlyAttribute.equals(Object)"], "associated_methods": ["XorOnlyAttribute.getDataLength()"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different data length."}, {"name": "testEquals_EqualAttributes", "primary_tested": ["XorOnlyAttribute.equals(Object)"], "external_dependencies": {"modules": ["XorOnlyAttribute"], "class_members": [{"name": "xorOnly", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with equal attributes."}]}, {"file_path": "src/test/java/org/ice4j/attribute/NonceAttribute_equalsTest.java", "testclass_name": "NonceAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "NonceAttribute_equalsTest", "description": "Unit tests for the equals method of the NonceAttribute class.", "class_members": {"variables": [{"name": "nonceAttribute1", "type": "NonceAttribute"}, {"name": "nonceAttribute2", "type": "NonceAttribute"}, {"name": "nonceValue1", "type": "byte[]"}, {"name": "nonceValue2", "type": "byte[]"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEqualsSameObject", "primary_tested": ["NonceAttribute.equals(Object)"], "external_dependencies": {"modules": ["NonceAttribute"], "class_members": [{"name": "nonceAttribute1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing the same object."}, {"name": "testEqualsDifferentType", "primary_tested": ["NonceAttribute.equals(Object)"], "external_dependencies": {"modules": ["NonceAttribute"], "class_members": [{"name": "nonceAttribute1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing with a different type."}, {"name": "testEqualsDifferentNonce", "primary_tested": ["NonceAttribute.equals(Object)"], "external_dependencies": {"modules": ["NonceAttribute"], "class_members": [{"name": "nonceAttribute1", "type": "variable"}, {"name": "nonceAttribute2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different nonce values."}, {"name": "testEqualsSameNonce", "primary_tested": ["NonceAttribute.equals(Object)"], "associated_methods": ["NonceAttribute.setNonce(byte[])"], "external_dependencies": {"modules": ["NonceAttribute"], "class_members": [{"name": "nonceAttribute1", "type": "variable"}, {"name": "nonceAttribute2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with the same nonce value."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ErrorCodeAttribute_equalsTest.java", "testclass_name": "ErrorCodeAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ErrorCodeAttribute_equalsTest", "description": "Unit tests for the equals method of the ErrorCodeAttribute class.", "class_members": {"variables": [{"name": "errorCodeAttribute1", "type": "ErrorCodeAttribute"}, {"name": "errorCodeAttribute2", "type": "ErrorCodeAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ErrorCodeAttribute.equals(Object)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same instance."}, {"name": "testEquals_DifferentType", "primary_tested": ["ErrorCodeAttribute.equals(Object)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different type."}, {"name": "testEquals_DifferentErrorClass", "primary_tested": ["ErrorCodeAttribute.equals(Object)"], "associated_methods": ["ErrorCodeAttribute.setErrorClass(byte)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute1", "type": "variable"}, {"name": "errorCodeAttribute2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different error classes."}, {"name": "testEquals_DifferentErrorNumber", "primary_tested": ["ErrorCodeAttribute.equals(Object)"], "associated_methods": ["ErrorCodeAttribute.setErrorNumber(byte)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute1", "type": "variable"}, {"name": "errorCodeAttribute2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different error numbers."}, {"name": "testEquals_DifferentReasonPhrase", "primary_tested": ["ErrorCodeAttribute.equals(Object)"], "associated_methods": ["ErrorCodeAttribute.setReasonPhrase(String)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute1", "type": "variable"}, {"name": "errorCodeAttribute2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different reason phrases."}, {"name": "testEquals_SameAttributes", "primary_tested": ["ErrorCodeAttribute.equals(Object)"], "associated_methods": ["ErrorCodeAttribute.setErrorClass(byte)", "ErrorCodeAttribute.setErrorNumber(byte)", "ErrorCodeAttribute.setReasonPhrase(String)"], "external_dependencies": {"modules": ["ErrorCodeAttribute"], "class_members": [{"name": "errorCodeAttribute1", "type": "variable"}, {"name": "errorCodeAttribute2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same attributes."}]}, {"file_path": "src/test/java/org/ice4j/attribute/UnknownAttributesAttribute_equalsTest.java", "testclass_name": "UnknownAttributesAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import java.util.*;", "import org.ice4j.*;", "import org.junit.jupiter.api.*;"], "name": "UnknownAttributesAttribute_equalsTest", "description": "Unit tests for the equals method of the UnknownAttributesAttribute class.", "class_members": {"variables": [{"name": "unknownAttributesAttribute", "type": "UnknownAttributesAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["UnknownAttributesAttribute.equals(Object)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same object."}, {"name": "testEquals_DifferentType", "primary_tested": ["UnknownAttributesAttribute.equals(Object)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different type object."}, {"name": "testEquals_DifferentAttributeType", "primary_tested": ["UnknownAttributesAttribute.equals(Object)"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different attribute types."}, {"name": "testEquals_DifferentDataLength", "primary_tested": ["UnknownAttributesAttribute.equals(Object)"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different data lengths."}, {"name": "testEquals_DifferentUnknownAttributes", "primary_tested": ["UnknownAttributesAttribute.equals(Object)"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with different unknown attributes."}, {"name": "testEquals_SameAttributes", "primary_tested": ["UnknownAttributesAttribute.equals(Object)"], "associated_methods": ["UnknownAttributesAttribute.addAttributeID(char)"], "external_dependencies": {"modules": ["UnknownAttributesAttribute"], "class_members": [{"name": "unknownAttributesAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same attributes."}]}, {"file_path": "src/test/java/org/ice4j/attribute/ChangeRequestAttribute_equalsTest.java", "testclass_name": "ChangeRequestAttribute_equalsTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.*;"], "name": "ChangeRequestAttribute_equalsTest", "description": "Unit tests for the equals method of the ChangeRequestAttribute class.", "class_members": {"variables": [{"name": "changeRequestAttribute", "type": "ChangeRequestAttribute"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with the same object."}, {"name": "testEquals_DifferentType", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different type object."}, {"name": "testEquals_DifferentAttributeType", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different attribute type."}, {"name": "testEquals_DifferentDataLength", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different data length."}, {"name": "testEquals_DifferentChangeIpFlag", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different change IP flag."}, {"name": "testEquals_DifferentChangePortFlag", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with a different change port flag."}, {"name": "testEquals_AllAttributesSame", "primary_tested": ["ChangeRequestAttribute.equals(Object)"], "external_dependencies": {"modules": ["ChangeRequestAttribute"], "class_members": [{"name": "changeRequestAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method with all attributes being the same."}]}, {"file_path": "src/test/java/org/ice4j/pseudotcp/util/ByteFifoBuffer_getBufferedTest.java", "testclass_name": "ByteFifoBuffer_getBufferedTest", "dependencies": ["package org.ice4j.pseudotcp.util;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ByteFifoBuffer_getBufferedTest", "description": "Unit tests for the getBuffered method of ByteFifoBuffer.", "class_members": {"variables": [{"name": "fifoBuffer", "type": "ByteFifoBuffer"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetBufferedInitialState", "primary_tested": ["ByteFifoBuffer.getBuffered()"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifoBuffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the initial state of the getBuffered method, expecting 0 bytes buffered."}, {"name": "testGetBufferedAfterWrite", "primary_tested": ["ByteFifoBuffer.getBuffered()"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifoBuffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getBuffered method after writing data, expecting 256 bytes buffered."}, {"name": "testGetBufferedAfterRead", "primary_tested": ["ByteFifoBuffer.getBuffered()"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.read(byte[],int)"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifoBuffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getBuffered method after writing and reading data, expecting 0 bytes buffered."}, {"name": "testGetBufferedAfterPartialRead", "primary_tested": ["ByteFifoBuffer.getBuffered()"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.read(byte[],int)"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifoBuffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getBuffered method after writing and partially reading data, expecting 128 bytes buffered."}, {"name": "testGetBufferedAfterMultipleWritesAndReads", "primary_tested": ["ByteFifoBuffer.getBuffered()"], "associated_methods": ["ByteFifoBuffer.write(byte[],int)", "ByteFifoBuffer.read(byte[],int)"], "external_dependencies": {"modules": ["ByteFifoBuffer"], "class_members": [{"name": "fifoBuffer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getBuffered method after multiple writes and reads, expecting 0 bytes buffered."}]}]