{"file_path": "src/test/java/org/ice4j/ice/RoleConflictResolutionTest.java", "testclass_name": "RoleConflictResolutionTest", "dependencies": ["package org.ice4j.ice;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import java.io.*;", "import java.util.*;", "import java.util.concurrent.*;", "import java.util.logging.*;", "import org.junit.jupiter.api.*;"], "name": "RoleConflictResolutionTest", "description": "Tests for resolving role conflicts in ICE negotiation.", "class_members": {"variables": [{"name": "logger", "type": "static final Logger"}], "methods": [{"name": "testRecoveryFromRoleConflict", "signature": "private static void testRecoveryFromRoleConflict(boolean bothControlling) throws Throwable"}, {"name": "createPeer", "signature": "private static Agent createPeer(String label, boolean iceControlling) throws IOException"}, {"name": "disposePeer", "signature": "private static void disposePeer(Agent peer)"}, {"name": "logSelectedPairs", "signature": "private static void logSelectedPairs(Agent peer)"}, {"name": "exchangeCredentials", "signature": "private static void exchangeCredentials(Agent peer1, Agent peer2)"}, {"name": "exchangeCandidates", "signature": "private static void exchangeCandidates(Agent peer1, Agent peer2)"}, {"name": "copyRemoteCandidates", "signature": "private static void copyRemoteCandidates(Component localComponent, Component remoteComponent)"}]}, "fixtures": [], "test_cases": [{"name": "testRecoveryFromBothControlledConflict", "primary_tested": ["RoleConflictResolutionTest.testRecoveryFromRoleConflict(boolean)"], "associated_methods": [], "external_dependencies": {"modules": ["Agent", "CountDownLatch", "Arrays", "TimeUnit", "Logger"], "class_members": [{"name": "testRecoveryFromRoleConflict", "type": "method"}]}, "category": "unit", "fixtures_used": [], "description": "Tests recovery from a role conflict where both peers are in the controlled role."}, {"name": "testRecoveryFromBothControllingConflict", "primary_tested": ["RoleConflictResolutionTest.testRecoveryFromRoleConflict(boolean)"], "associated_methods": [], "external_dependencies": {"modules": ["Agent", "CountDownLatch", "Arrays", "TimeUnit", "Logger"], "class_members": [{"name": "testRecoveryFromRoleConflict", "type": "method"}]}, "category": "unit", "fixtures_used": [], "description": "Tests recovery from a role conflict where both peers are in the controlling role."}]}