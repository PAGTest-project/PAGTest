{"file_path": "src/test/java/org/ice4j/attribute/AddressAttributeTest.java", "testclass_name": "AddressAttributeTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.junit.jupiter.api.*;"], "name": "AddressAttributeTest", "description": "Unit tests for AddressAttribute and its descendants, focusing on type, name, xor-ing, decoding, encoding, equality, data length, and family.", "class_members": {"variables": [{"name": "addressAttribute", "type": "AddressAttribute"}, {"name": "msgFixture", "type": "MsgFixture"}]}, "fixtures": ["setUp", "tearDown"], "test_cases": [{"name": "testAddressAttributeDescendants", "primary_tested": ["AddressAttribute.getAttributeType()", "AddressAttribute.getName()"], "associated_methods": [], "external_dependencies": {"modules": ["MappedAddressAttribute", "SourceAddressAttribute", "ChangedAddressAttribute", "ResponseAddressAttribute", "ReflectedFromAttribute", "XorMappedAddressAttribute", "AlternateServerAttribute", "XorPeerAddressAttribute", "XorRelayedAddressAttribute"], "class_members": [{"name": "addressAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Verifies that AddressAttribute descendants have correctly set types and names."}, {"name": "testXorMappedAddressXoring_v4", "primary_tested": ["XorMappedAddressAttribute.applyXor(byte[])"], "associated_methods": [], "external_dependencies": {"modules": ["XorMappedAddressAttribute", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Verifies that xorred address-es are properly xor-ed for IPv4 addresses."}, {"name": "testXorMappedAddressXoring_v6", "primary_tested": ["XorMappedAddressAttribute.applyXor(byte[])"], "associated_methods": [], "external_dependencies": {"modules": ["XorMappedAddressAttribute", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Verifies that xorred address-es are properly xor-ed for IPv6 addresses."}, {"name": "testDecodeAttributeBody", "primary_tested": ["AddressAttribute.decodeAttributeBody(byte[], char, char)"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "MsgFixture"], "class_members": [{"name": "addressAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests whether sample binary arrays are correctly decoded."}, {"name": "testDecodeAttributeBodyv6", "primary_tested": ["AddressAttribute.decodeAttributeBody(byte[], char, char)"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "MsgFixture"], "class_members": [{"name": "addressAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests whether sample binary arrays are correctly decoded for IPv6."}, {"name": "testEncode", "primary_tested": ["AddressAttribute.encode()"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "MsgFixture", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests whether attributes are properly encoded."}, {"name": "testEncodev6", "primary_tested": ["AddressAttribute.encode()"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "MsgFixture", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests whether attributes are properly encoded for IPv6."}, {"name": "testEquals", "primary_tested": ["AddressAttribute.equals(Object)"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "MappedAddressAttribute", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method against a null, a different, and an identical object."}, {"name": "testGetDataLength", "primary_tested": ["AddressAttribute.getDataLength()"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests whether data length is properly calculated."}, {"name": "testGetFamily", "primary_tested": ["AddressAttribute.getFamily()"], "associated_methods": [], "external_dependencies": {"modules": ["AddressAttribute", "TransportAddress"], "class_members": [{"name": "addressAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the address family is always 1 for IPv4 and 2 for IPv6."}]}