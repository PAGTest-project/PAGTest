{"file_path": "src/test/java/org/ice4j/attribute/RequestedAddressFamilyAttributeTest.java", "testclass_name": "RequestedAddressFamilyAttributeTest", "dependencies": ["package org.ice4j.attribute;", "import static org.junit.jupiter.api.Assertions.*;", "import org.ice4j.*;", "import org.junit.jupiter.api.*;"], "name": "RequestedAddressFamilyAttributeTest", "description": "Unit tests for the RequestedAddressFamilyAttribute class, focusing on data length calculation, name retrieval, equality checks, decoding, encoding, and family value validation.", "class_members": {"variables": [{"name": "requestedAddressFamilyAttribute", "type": "RequestedAddressFamilyAttribute"}, {"name": "msgFixture", "type": "MsgFixture"}]}, "fixtures": ["setUp", "tearDown"], "test_cases": [{"name": "testGetDataLength", "primary_tested": ["RequestedAddressFamilyAttribute.getDataLength()"], "associated_methods": ["RequestedAddressFamilyAttribute.setFamily(char)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests whether data length is properly calculated."}, {"name": "testGetName", "primary_tested": ["RequestedAddressFamilyAttribute.getName()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests getting the name."}, {"name": "testEqualsObject", "primary_tested": ["RequestedAddressFamilyAttribute.equals(Object)"], "associated_methods": ["RequestedAddressFamilyAttribute.setFamily(char)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method against a null, a different and an identical object."}, {"name": "testDecodeAttributeBodyV4", "primary_tested": ["RequestedAddressFamilyAttribute.decodeAttributeBody(byte[],char,char)"], "associated_methods": ["RequestedAddressFamilyAttribute.getFamily()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture", "Attribute", "StunException"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Test whether sample binary arrays are correctly decoded."}, {"name": "testDecodeAttributeBodyV6", "primary_tested": ["RequestedAddressFamilyAttribute.decodeAttributeBody(byte[],char,char)"], "associated_methods": ["RequestedAddressFamilyAttribute.getFamily()"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture", "Attribute", "StunException"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Test whether sample binary arrays are correctly decoded."}, {"name": "testEncodeV4", "primary_tested": ["RequestedAddressFamilyAttribute.encode()"], "associated_methods": ["RequestedAddressFamilyAttribute.setFamily(char)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Test whether attributes are properly encoded."}, {"name": "testEncodeV6", "primary_tested": ["RequestedAddressFamilyAttribute.encode()"], "associated_methods": ["RequestedAddressFamilyAttribute.setFamily(char)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Test whether attributes are properly encoded."}, {"name": "testGetFamily", "primary_tested": ["RequestedAddressFamilyAttribute.getFamily()"], "associated_methods": ["RequestedAddressFamilyAttribute.setFamily(char)"], "external_dependencies": {"modules": ["RequestedAddressFamilyAttribute", "MsgFixture"], "class_members": [{"name": "requestedAddressFamilyAttribute", "type": "variable"}, {"name": "msgFixture", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the address family is always 0x01 or 0x02."}]}