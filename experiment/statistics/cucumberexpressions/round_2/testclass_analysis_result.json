[{"file_path": "src/test/java/io/cucumber/cucumberexpressions/RegularExpression_getRegexpTest.java", "testclass_name": "RegularExpression_getRegexpTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import java.util.regex.Pattern;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "RegularExpression_getRegexpTest", "description": "Unit test for the getRegexp method of the RegularExpression class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetRegexp", "primary_tested": ["RegularExpression.getRegexp()"], "external_dependencies": {"modules": ["Pattern", "ParameterTypeRegistry", "RegularExpression"]}, "category": "unit", "description": "Tests the getRegexp method of the RegularExpression class to ensure it returns the expected Pattern."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/TreeRegexp_getGroupBuilderTest.java", "testclass_name": "TreeRegexp_getGroupBuilderTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import java.util.regex.Pattern;", "import static org.junit.jupiter.api.Assertions.assertNotNull;"], "name": "TreeRegexp_getGroupBuilderTest", "description": "Unit test for the getGroupBuilder method of the TreeRegexp class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetGroupBuilder", "primary_tested": ["TreeRegexp.getGroupBuilder()"], "external_dependencies": {"modules": ["Pattern", "TreeRegexp", "GroupBuilder"]}, "category": "unit", "description": "Tests the getGroupBuilder method of the TreeRegexp class to ensure it returns a non-null GroupBuilder."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/RegularExpression_getSourceTest.java", "testclass_name": "RegularExpression_getSourceTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import java.util.regex.Pattern;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "RegularExpression_getSourceTest", "description": "Unit test for the getSource method of the RegularExpression class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testGetSource", "primary_tested": ["RegularExpression.getSource()"], "external_dependencies": {"modules": ["Pattern", "ParameterTypeRegistry", "RegularExpression"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getSource method of the RegularExpression class to ensure it returns the correct source string."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterType_getNameTest.java", "testclass_name": "ParameterType_getNameTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "ParameterType_getNameTest", "description": "Unit test for the getName method of the ParameterType class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetName", "primary_tested": ["ParameterType.getName()"], "external_dependencies": {"modules": ["ParameterType"]}, "category": "unit", "description": "Tests the getName method of the ParameterType class to ensure it returns the correct name."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/CucumberExpression_getSourceTest.java", "testclass_name": "CucumberExpression_getSourceTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import java.util.Locale;"], "name": "CucumberExpression_getSourceTest", "description": "Unit tests for the getSource method of the CucumberExpression class.", "class_members": {"variables": [{"name": "parameterTypeRegistry", "type": "ParameterTypeRegistry"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetSource", "primary_tested": ["CucumberExpression.getSource()"], "external_dependencies": {"modules": ["ParameterTypeRegistry", "CucumberExpression"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getSource method of the CucumberExpression class to ensure it returns the correct expression string."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterType_getTypeTest.java", "testclass_name": "ParameterType_getTypeTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.lang.reflect.Type;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "ParameterType_getTypeTest", "description": "Unit tests for the getType method of the ParameterType class.", "class_members": {"variables": [{"name": "parameterType", "type": "ParameterType<String>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "getType_returnsCorrectType", "primary_tested": ["ParameterType.getType()"], "external_dependencies": {"modules": ["ParameterType", "Type"], "class_members": [{"name": "parameterType", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the getType method of ParameterType returns the correct type."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/CucumberExpression_getRegexpTest.java", "testclass_name": "CucumberExpression_getRegexpTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.util.Locale;", "import java.util.regex.Pattern;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "CucumberExpression_getRegexpTest", "description": "Unit tests for the getRegexp method of the CucumberExpression class.", "class_members": {"variables": [{"name": "parameterTypeRegistry", "type": "ParameterTypeRegistry"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testGetRegexp", "primary_tested": ["CucumberExpression.getRegexp()"], "external_dependencies": {"modules": ["ParameterTypeRegistry", "CucumberExpression", "Pattern"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the getRegexp method of the CucumberExpression class to ensure it returns the correct pattern for a given expression."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterTypeRegistry_setDefaultParameterTransformerTest.java", "testclass_name": "ParameterTypeRegistry_setDefaultParameterTransformerTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertSame;", "import java.util.Locale;", "import java.lang.reflect.Type;"], "name": "ParameterTypeRegistry_setDefaultParameterTransformerTest", "description": "Unit tests for setting the default parameter transformer in ParameterTypeRegistry.", "class_members": {"variables": [{"name": "parameterTypeRegistry", "type": "ParameterTypeRegistry"}, {"name": "mockTransformer", "type": "ParameterByTypeTransformer"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetDefaultParameterTransformer", "primary_tested": ["ParameterTypeRegistry.setDefaultParameterTransformer(ParameterByTypeTransformer)"], "associated_methods": ["ParameterTypeRegistry.getDefaultParameterTransformer()"], "external_dependencies": {"modules": ["ParameterTypeRegistry", "ParameterByTypeTransformer"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}, {"name": "mockTransformer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the functionality of setting the default parameter transformer in ParameterTypeRegistry and verifies that the transformer is correctly set."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterType_preferForRegexpMatchTest.java", "testclass_name": "ParameterType_preferForRegexpMatchTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static java.util.Collections.singletonList;"], "name": "ParameterType_preferForRegexpMatchTest", "description": "Tests for the preferForRegexpMatch method in the ParameterType class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testPreferForRegexpMatch_True", "primary_tested": ["ParameterType.preferForRegexpMatch()"], "external_dependencies": {"modules": ["ParameterType", "CaptureGroupTransformer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the preferForRegexpMatch method returns true when configured to do so."}, {"name": "testPreferForRegexpMatch_False", "primary_tested": ["ParameterType.preferForRegexpMatch()"], "external_dependencies": {"modules": ["ParameterType", "CaptureGroupTransformer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the preferForRegexpMatch method returns false when configured to do so."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterType_useRegexpMatchAsStrongTypeHintTest.java", "testclass_name": "ParameterType_useRegexpMatchAsStrongTypeHintTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static java.util.Collections.singletonList;"], "name": "ParameterType_useRegexpMatchAsStrongTypeHintTest", "description": "Tests for the useRegexpMatchAsStrongTypeHint method in the ParameterType class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testUseRegexpMatchAsStrongTypeHintTrue", "primary_tested": ["ParameterType.useRegexpMatchAsStrongTypeHint()"], "external_dependencies": {"modules": ["ParameterType", "CaptureGroupTransformer", "Object"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the useRegexpMatchAsStrongTypeHint method returns true when configured to do so."}, {"name": "testUseRegexpMatchAsStrongTypeHintFalse", "primary_tested": ["ParameterType.useRegexpMatchAsStrongTypeHint()"], "external_dependencies": {"modules": ["ParameterType", "CaptureGroupTransformer", "Object"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the useRegexpMatchAsStrongTypeHint method returns false when configured to do so."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterType_getRegexpsTest.java", "testclass_name": "ParameterType_getRegexpsTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.Test;", "import java.util.Arrays;", "import java.util.List;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "ParameterType_getRegexpsTest", "description": "Unit test for the getRegexps method of the ParameterType class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetRegexps", "primary_tested": ["ParameterType.getRegexps()"], "external_dependencies": {"modules": ["ParameterType", "Arrays", "List"]}, "category": "unit", "description": "Tests the getRegexps method of the ParameterType class to ensure it returns the correct list of regex patterns."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterType_useForSnippetsTest.java", "testclass_name": "ParameterType_useForSnippetsTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "ParameterType_useForSnippetsTest", "description": "Tests for the useForSnippets functionality of the ParameterType class.", "class_members": {"variables": [{"name": "parameterType", "type": "ParameterType<?>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testUseForSnippetsTrue", "primary_tested": ["ParameterType.useForSnippets()"], "external_dependencies": {"modules": ["ParameterType"], "class_members": [{"name": "parameterType", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that the useForSnippets method returns true when the ParameterType is configured to use for snippets."}, {"name": "testUseForSnippetsFalse", "primary_tested": ["ParameterType.useForSnippets()"], "external_dependencies": {"modules": ["ParameterType"], "class_members": [{"name": "parameterTypeFalse", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that the useForSnippets method returns false when the ParameterType is configured not to use for snippets."}]}, {"file_path": "src/test/java/io/cucumber/cucumberexpressions/BuiltInParameterTransformer_transformTest.java", "testclass_name": "BuiltInParameterTransformer_transformTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.lang.reflect.Type;", "import java.math.BigDecimal;", "import java.math.BigInteger;", "import java.util.Locale;", "import java.util.Optional;", "import static org.junit.jupiter.api.Assertions.*;"], "name": "BuiltInParameterTransformer_transformTest", "description": "Unit tests for the BuiltInParameterTransformer's transform method.", "class_members": {"variables": [{"name": "transformer", "type": "BuiltInParameterTransformer"}], "methods": [], "nested_classes": [{"name": "TestEnum", "description": "Internal enum for testing purposes"}, {"name": "ParameterizedTypeImpl", "description": "Internal class implementing ParameterizedType for testing purposes"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testTransformStringToBigDecimal", "primary_tested": ["BuiltInParameterTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["BuiltInParameterTransformer", "BigDecimal"], "class_members": [{"name": "transformer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the transformation of a string to a BigDecimal."}, {"name": "testTransformStringToOptionalBigDecimal", "primary_tested": ["BuiltInParameterTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["BuiltInParameterTransformer", "Optional", "BigDecimal"], "class_members": [{"name": "transformer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the transformation of a string to an Optional<BigDecimal>."}, {"name": "testTransformStringToUnsupportedType", "primary_tested": ["BuiltInParameterTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["BuiltInParameterTransformer"], "class_members": [{"name": "transformer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the transformation of a string to an unsupported type, expecting an IllegalArgumentException."}, {"name": "testTransformNullValue", "primary_tested": ["BuiltInParameterTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["BuiltInParameterTransformer", "BigDecimal"], "class_members": [{"name": "transformer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the transformation of a null value to a BigDecimal, expecting a null result."}, {"name": "testTransformStringToEnum", "primary_tested": ["BuiltInParameterTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["BuiltInParameterTransformer", "TestEnum"], "class_members": [{"name": "transformer", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the transformation of a string to an enum."}]}]