[{"strategy": "retry", "code": "\npackage io.cucumber.cucumberexpressions;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ParameterType_compareToTest {\n\n    @Test\n    public void testCompareTo_preferForRegexpMatch() {\n        ParameterType<String> paramType1 = new ParameterType<>(\"name1\", \"regexp1\", String.class, (Transformer<String>) s -> s, true, true);\n        ParameterType<String> paramType2 = new ParameterType<>(\"name2\", \"regexp2\", String.class, (Transformer<String>) s -> s, true, false);\n\n        assertEquals(-1, paramType1.compareTo(paramType2));\n        assertEquals(1, paramType2.compareTo(paramType1));\n    }\n\n    @Test\n    public void testCompareTo_nameComparison() {\n        ParameterType<String> paramType1 = new ParameterType<>(\"name1\", \"regexp1\", String.class, (Transformer<String>) s -> s, false, false);\n        ParameterType<String> paramType2 = new ParameterType<>(\"name2\", \"regexp2\", String.class, (Transformer<String>) s -> s, false, false);\n\n        assertEquals(-1, paramType1.compareTo(paramType2));\n        assertEquals(1, paramType2.compareTo(paramType1));\n    }\n\n    @Test\n    public void testCompareTo_nullName() {\n        ParameterType<String> paramType1 = new ParameterType<>(null, \"regexp1\", String.class, (Transformer<String>) s -> s, false, false);\n        ParameterType<String> paramType2 = new ParameterType<>(\"name2\", \"regexp2\", String.class, (Transformer<String>) s -> s, false, false);\n\n        assertEquals(-1, paramType1.compareTo(paramType2));\n        assertEquals(1, paramType2.compareTo(paramType1));\n    }\n}\n"}]