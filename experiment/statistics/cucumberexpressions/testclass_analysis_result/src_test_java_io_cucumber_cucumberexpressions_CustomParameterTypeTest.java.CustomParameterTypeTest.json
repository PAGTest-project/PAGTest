{"file_path": "src/test/java/io/cucumber/cucumberexpressions/CustomParameterTypeTest.java", "testclass_name": "CustomParameterTypeTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.api.function.Executable;", "import java.util.List;", "import java.util.Locale;", "import java.util.regex.Pattern;", "import static java.lang.Integer.parseInt;", "import static java.util.Arrays.asList;", "import static java.util.regex.Pattern.compile;", "import static org.hamcrest.CoreMatchers.is;", "import static org.hamcrest.MatcherAssert.assertThat;", "import static org.hamcrest.core.IsEqual.equalTo;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.fail;"], "name": "CustomParameterTypeTest", "description": "Tests for custom parameter types in Cucumber expressions.", "class_members": {"variables": [{"name": "parameterTypeRegistry", "type": "ParameterTypeRegistry"}], "methods": [], "nested_classes": [{"name": "Coordinate", "description": "Internal class representing a coordinate with x, y, and z values."}, {"name": "Color", "description": "Internal class representing a color with a name."}, {"name": "CssColor", "description": "Internal class representing a CSS color with a name."}]}, "fixtures": ["create_parameter"], "test_cases": [{"name": "throws_exception_for_illegal_character_in_parameter_name", "primary_tested": ["ParameterType.<init>(String,String,Class,Transformer,boolean,boolean)"], "external_dependencies": {"modules": ["CucumberExpressionException", "Executable", "Transformer"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that an exception is thrown for an illegal character in the parameter name."}, {"name": "matches_CucumberExpression_parameters_with_custom_parameter_type", "primary_tested": ["CucumberExpression.match(String)"], "associated_methods": ["Color.<init>(String)"], "external_dependencies": {"modules": ["CucumberExpression", "Expression", "Color"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": ["create_parameter"], "description": "Tests matching CucumberExpression parameters with a custom parameter type."}, {"name": "matches_CucumberExpression_parameters_with_multiple_capture_groups", "primary_tested": ["CucumberExpression.match(String)"], "associated_methods": ["Coordinate.<init>(int,int,int)"], "external_dependencies": {"modules": ["CucumberExpression", "Expression", "Coordinate", "CaptureGroupTransformer"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests matching CucumberExpression parameters with multiple capture groups."}, {"name": "warns_when_CucumberExpression_parameters_with_multiple_capture_groups_has_a_transformer", "primary_tested": ["CucumberExpression.match(String)"], "associated_methods": ["Coordinate.<init>(int,int,int)"], "external_dependencies": {"modules": ["CucumberExpression", "Expression", "Coordinate", "Transformer"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests warning when CucumberExpression parameters with multiple capture groups have a transformer."}, {"name": "warns_when_anonymous_parameter_has_multiple_capture_groups", "primary_tested": ["RegularExpression.match(String,Class,Class,Class)"], "associated_methods": ["Coordinate.<init>(int,int,int)"], "external_dependencies": {"modules": ["RegularExpression", "Expression", "Coordinate", "Pattern"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests warning when an anonymous parameter has multiple capture groups."}, {"name": "matches_CucumberExpression_parameters_with_custom_parameter_type_using_optional_group", "primary_tested": ["CucumberExpression.match(String)"], "associated_methods": ["Color.<init>(String)"], "external_dependencies": {"modules": ["CucumberExpression", "Expression", "Color"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests matching CucumberExpression parameters with a custom parameter type using an optional group."}, {"name": "defers_transformation_until_queried_from_argument", "primary_tested": ["CucumberExpression.match(String)"], "associated_methods": ["CssColor.<init>(String)"], "external_dependencies": {"modules": ["CucumberExpression", "Expression", "CssColor", "Transformer"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests deferring transformation until queried from the argument."}, {"name": "conflicting_parameter_type_is_detected_for_type_name", "primary_tested": ["ParameterTypeRegistry.defineParameterType(ParameterType)"], "associated_methods": ["CssColor.<init>(String)"], "external_dependencies": {"modules": ["ParameterTypeRegistry", "ParameterType", "CssColor", "DuplicateTypeNameException"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests detecting a conflicting parameter type for the type name."}, {"name": "conflicting_parameter_type_is_not_detected_for_type", "primary_tested": ["ParameterTypeRegistry.defineParameterType(ParameterType)"], "associated_methods": ["Color.<init>(String)"], "external_dependencies": {"modules": ["ParameterTypeRegistry", "ParameterType", "Color"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that a conflicting parameter type is not detected for the type."}, {"name": "conflicting_parameter_type_is_not_detected_for_regexp", "primary_tested": ["CucumberExpression.match(String)"], "associated_methods": ["CssColor.<init>(String)", "Color.<init>(String)"], "external_dependencies": {"modules": ["CucumberExpression", "Expression", "CssColor", "Color"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that a conflicting parameter type is not detected for the regexp."}, {"name": "matches_RegularExpression_arguments_with_custom_parameter_type_without_name", "primary_tested": ["RegularExpression.match(String)"], "associated_methods": ["Color.<init>(String)"], "external_dependencies": {"modules": ["RegularExpression", "Expression", "Color", "Pattern"], "class_members": [{"name": "parameterTypeRegistry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests matching RegularExpression arguments with a custom parameter type without a name."}]}