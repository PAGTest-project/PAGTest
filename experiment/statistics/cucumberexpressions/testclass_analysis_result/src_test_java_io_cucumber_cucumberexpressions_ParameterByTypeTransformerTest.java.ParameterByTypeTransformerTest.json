{"file_path": "src/test/java/io/cucumber/cucumberexpressions/ParameterByTypeTransformerTest.java", "testclass_name": "ParameterByTypeTransformerTest", "dependencies": ["package io.cucumber.cucumberexpressions;", "import com.fasterxml.jackson.databind.ObjectMapper;", "import com.fasterxml.jackson.databind.type.TypeFactory;", "import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.MethodSource;", "import java.lang.reflect.Type;", "import java.math.BigDecimal;", "import java.math.BigInteger;", "import java.util.Optional;", "import java.util.stream.Stream;", "import static java.util.Locale.ENGLISH;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNull;"], "name": "ParameterByTypeTransformerTest", "description": "Tests for the ParameterByTypeTransformer class, focusing on various type conversions using different implementations.", "class_members": {"variables": [], "methods": [], "nested_classes": [{"name": "TestJacksonDefaultTransformer", "description": "Internal class implementing ParameterByTypeTransformer using Jackson ObjectMapper."}]}, "fixtures": [], "test_cases": [{"name": "should_convert_null_to_null", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Object"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of null to null using ParameterByTypeTransformer."}, {"name": "should_convert_null_to_optional", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of null to an empty Optional using ParameterByTypeTransformer."}, {"name": "should_convert_null_to_optional_generic", "primary_tested": ["ParameterByTypeTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Optional", "TypeReference"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of null to an empty Optional with a generic type using ParameterByTypeTransformer."}, {"name": "should_convert_to_string", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "String"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a string using ParameterByTypeTransformer."}, {"name": "should_convert_to_optional_string", "primary_tested": ["ParameterByTypeTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Optional", "TypeReference"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to an Optional string using ParameterByTypeTransformer."}, {"name": "should_convert_to_object", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Object"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to an Object using ParameterByTypeTransformer."}, {"name": "should_convert_to_big_integer", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "BigInteger"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a BigInteger using ParameterByTypeTransformer."}, {"name": "should_convert_to_big_decimal", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "BigDecimal"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a BigDecimal using ParameterByTypeTransformer."}, {"name": "should_convert_to_byte", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Byte"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a Byte using ParameterByTypeTransformer."}, {"name": "should_convert_to_short", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Short"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a Short using ParameterByTypeTransformer."}, {"name": "should_convert_to_integer", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Integer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to an Integer using ParameterByTypeTransformer."}, {"name": "should_convert_to_optional_integer", "primary_tested": ["ParameterByTypeTransformer.transform(String,Type)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Optional", "TypeReference"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to an Optional Integer using ParameterByTypeTransformer."}, {"name": "should_convert_to_long", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Long"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a Long using ParameterByTypeTransformer."}, {"name": "should_convert_to_float", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Float"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a Float using ParameterByTypeTransformer."}, {"name": "should_convert_to_double", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "Double"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to a Double using ParameterByTypeTransformer."}, {"name": "should_convert_to_enum", "primary_tested": ["ParameterByTypeTransformer.transform(String,Class)"], "external_dependencies": {"modules": ["ParameterByTypeTransformer", "TestEnum"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the transformation of a string to an Enum using ParameterByTypeTransformer."}]}