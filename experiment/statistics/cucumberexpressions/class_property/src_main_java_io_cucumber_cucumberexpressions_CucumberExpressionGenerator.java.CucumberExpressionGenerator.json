{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/CucumberExpressionGenerator.java.CucumberExpressionGenerator", "class_docstring": "", "superclasses": "", "super_interfaces": [], "methods": [{"method_name": "CucumberExpressionGenerator", "description": "Constructor that initializes the CucumberExpressionGenerator with a ParameterTypeRegistry.", "expected_testcases": []}, {"method_name": "generateExpressions", "description": "Generates a list of GeneratedExpression objects based on the provided text and the ParameterTypeRegistry.", "expected_testcases": [{"testcase_name": "SingleParameterTypeMatch", "description": "Test with a text that matches a single parameter type, expecting a list with one GeneratedExpression containing the matched parameter type."}, {"testcase_name": "MultipleParameterTypeMatches", "description": "Test with a text that matches multiple parameter types, expecting a list with multiple GeneratedExpression objects, each containing a different matched parameter type."}, {"testcase_name": "NoParameterTypeMatch", "description": "Test with a text that does not match any parameter type, expecting an empty list."}, {"testcase_name": "EmptyText", "description": "Test with an empty text, expecting an empty list."}, {"testcase_name": "TextWithSpecialCharacters", "description": "Test with a text containing special characters that need to be escaped, expecting the special characters to be correctly escaped in the GeneratedExpression."}]}, {"method_name": "escape", "description": "Escapes special characters in the provided string to ensure they are correctly formatted for use in Cucumber expressions.", "expected_testcases": [{"testcase_name": "EscapePercentSign", "description": "Test with a string containing a percent sign, expecting the percent sign to be escaped."}, {"testcase_name": "EscapeParentheses", "description": "Test with a string containing parentheses, expecting the parentheses to be escaped."}, {"testcase_name": "EscapeBraces", "description": "Test with a string containing braces, expecting the braces to be escaped."}, {"testcase_name": "EscapeSlash", "description": "Test with a string containing a slash, expecting the slash to be escaped."}, {"testcase_name": "NoSpecialCharacters", "description": "Test with a string containing no special characters, expecting the string to remain unchanged."}]}, {"method_name": "createParameterTypeMatchers", "description": "Creates a list of ParameterTypeMatcher objects based on the provided text and the ParameterTypeRegistry.", "expected_testcases": [{"testcase_name": "SingleParameterType", "description": "Test with a text that matches a single parameter type, expecting a list with one ParameterTypeMatcher."}, {"testcase_name": "MultipleParameterTypes", "description": "Test with a text that matches multiple parameter types, expecting a list with multiple ParameterTypeMatcher objects."}, {"testcase_name": "NoParameterTypeMatch", "description": "Test with a text that does not match any parameter type, expecting an empty list."}]}, {"method_name": "createParameterTypeMatchers", "description": "Creates a list of ParameterTypeMatcher objects for a specific ParameterType and the provided text.", "expected_testcases": [{"testcase_name": "SingleRegexpMatch", "description": "Test with a text that matches a single regexp of a ParameterType, expecting a list with one ParameterTypeMatcher."}, {"testcase_name": "MultipleRegexpMatches", "description": "Test with a text that matches multiple regexps of a ParameterType, expecting a list with multiple ParameterTypeMatcher objects."}, {"testcase_name": "NoRegexpMatch", "description": "Test with a text that does not match any regexp of a ParameterType, expecting an empty list."}]}], "overrides": null, "class_name": "CucumberExpressionGenerator", "description": "Class responsible for generating Cucumber expressions based on provided text and a ParameterTypeRegistry."}