{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/Group.java.Group", "class_docstring": "", "superclasses": "", "super_interfaces": [], "methods": [{"method_name": "getValue", "description": "Returns the value of the group.", "expected_testcases": [{"testcase_name": "GetValueWithNonNullValue", "description": "Test with a group having a non-null value, expecting the same value to be returned."}, {"testcase_name": "GetValueWithNullValue", "description": "Test with a group having a null value, expecting null to be returned."}]}, {"method_name": "getStart", "description": "Returns the start index of the group.", "expected_testcases": [{"testcase_name": "GetStartWithPositiveIndex", "description": "Test with a group having a positive start index, expecting the same index to be returned."}, {"testcase_name": "GetStartWithZeroIndex", "description": "Test with a group having a start index of zero, expecting zero to be returned."}]}, {"method_name": "getEnd", "description": "Returns the end index of the group.", "expected_testcases": [{"testcase_name": "GetEndWithPositiveIndex", "description": "Test with a group having a positive end index, expecting the same index to be returned."}, {"testcase_name": "GetEndWithZeroIndex", "description": "Test with a group having an end index of zero, expecting zero to be returned."}]}, {"method_name": "getChildren", "description": "Returns the list of child groups.", "expected_testcases": [{"testcase_name": "GetChildrenWithNonEmptyList", "description": "Test with a group having a non-empty list of children, expecting the same list to be returned."}, {"testcase_name": "GetChildrenWithEmptyList", "description": "Test with a group having an empty list of children, expecting an empty list to be returned."}]}, {"method_name": "getValues", "description": "Returns a list of values from the group and its children.", "expected_testcases": [{"testcase_name": "GetValuesWithChildren", "description": "Test with a group having children, expecting a list of values from the group and its children."}, {"testcase_name": "GetValuesWithoutChildren", "description": "Test with a group having no children, expecting a list containing only the group's value."}]}, {"method_name": "parse", "description": "Parses a pattern into a collection of groups.", "expected_testcases": [{"testcase_name": "ParseWithValidPattern", "description": "Test with a valid pattern, expecting a non-empty collection of groups."}, {"testcase_name": "ParseWithEmptyPattern", "description": "Test with an empty pattern, expecting an empty collection of groups."}]}, {"method_name": "toGroups", "description": "Converts a list of GroupBuilder objects into a list of Group objects.", "expected_testcases": [{"testcase_name": "ToGroupsWithNonNullChildren", "description": "Test with a non-null list of GroupBuilder children, expecting a list of Group objects."}, {"testcase_name": "ToGroupsWithNullChildren", "description": "Test with a null list of GroupBuilder children, expecting an empty list of Group objects."}]}], "overrides": null, "class_name": "Group", "description": "Class representing a group of elements with a value, start and end indices, and a list of child groups."}