{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/CucumberExpressionTokenizer.java.CucumberExpressionTokenizer", "class_docstring": "", "superclasses": "", "super_interfaces": [], "methods": [{"method_name": "tokenize", "description": "Tokenizes the given Cucumber expression string into a list of tokens.", "expected_testcases": [{"testcase_name": "EmptyExpression", "description": "Tokenize an empty string, expecting an empty list of tokens."}, {"testcase_name": "SingleTextToken", "description": "Tokenize a string with a single text token, expecting a list containing one text token."}, {"testcase_name": "MultipleTextTokens", "description": "Tokenize a string with multiple text tokens separated by whitespace, expecting a list containing multiple text tokens."}, {"testcase_name": "EscapedCharacter", "description": "Tokenize a string with an escaped character, expecting the escaped character to be treated as text."}, {"testcase_name": "MixedTokens", "description": "Tokenize a string with a mix of text and special tokens, expecting a list containing the appropriate tokens."}]}, {"method_name": "tokenizeImpl", "description": "Provides an iterable of tokens for the given Cucumber expression string. This method is not directly tested as it is an internal implementation detail and is covered by the tests of the 'tokenize' method.", "expected_testcases": []}, {"method_name": "TokenIterator", "description": "An internal class that implements the Iterator interface for tokens. This class is not directly tested as it is an internal implementation detail and is covered by the tests of the 'tokenize' method.", "expected_testcases": []}], "overrides": null, "class_name": "CucumberExpressionTokenizer", "description": "Class responsible for tokenizing a Cucumber expression into a list of tokens."}