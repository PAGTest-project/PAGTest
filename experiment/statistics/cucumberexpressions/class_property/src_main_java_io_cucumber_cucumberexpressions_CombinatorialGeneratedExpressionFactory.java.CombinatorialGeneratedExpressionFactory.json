{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/CombinatorialGeneratedExpressionFactory.java.CombinatorialGeneratedExpressionFactory", "class_docstring": "", "superclasses": "", "super_interfaces": [], "methods": [{"method_name": "CombinatorialGeneratedExpressionFactory", "description": "Constructor that initializes the factory with an expression template and a list of parameter type combinations.", "expected_testcases": []}, {"method_name": "generateExpressions", "description": "Generates a list of GeneratedExpression objects by permuting the parameter type combinations according to the template, up to a maximum of 256 expressions.", "expected_testcases": [{"testcase_name": "GenerateSingleExpression", "description": "Test with a single parameter type combination, expecting a single GeneratedExpression object in the list."}, {"testcase_name": "GenerateMaximumExpressions", "description": "Test with parameter type combinations that should generate exactly 256 expressions, expecting a list of 256 GeneratedExpression objects."}, {"testcase_name": "GenerateExceedingMaximumExpressions", "description": "Test with parameter type combinations that would generate more than 256 expressions, expecting a list of exactly 256 GeneratedExpression objects."}, {"testcase_name": "GenerateNoExpressions", "description": "Test with an empty list of parameter type combinations, expecting an empty list of GeneratedExpression objects."}]}, {"method_name": "generatePermutations", "description": "Helper method that recursively generates permutations of parameter types and adds them to the list of generated expressions, stopping if the maximum number of expressions is reached.", "expected_testcases": [{"testcase_name": "GeneratePermutationsSingleLevel", "description": "Test with a single level of parameter types, expecting permutations to be generated correctly."}, {"testcase_name": "GeneratePermutationsMultipleLevels", "description": "Test with multiple levels of parameter types, expecting permutations to be generated correctly across all levels."}, {"testcase_name": "GeneratePermutationsExceedingMax", "description": "Test with parameter types that would exceed the maximum number of expressions, expecting the method to stop generating permutations after reaching the limit."}]}], "overrides": null, "class_name": "CombinatorialGeneratedExpressionFactory", "description": "Class responsible for generating combinatorial expressions based on a template and a list of parameter type combinations."}