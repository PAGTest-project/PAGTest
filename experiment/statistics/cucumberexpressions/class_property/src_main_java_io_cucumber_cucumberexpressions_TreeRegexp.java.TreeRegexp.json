{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/TreeRegexp.java.TreeRegexp", "class_docstring": "\nTreeRegexp represents matches as a tree of {@link Group}\nreflecting the nested structure of capture groups in the original\nregexp.\n", "superclasses": "", "super_interfaces": [], "methods": [{"method_name": "TreeRegexp(String regexp)", "description": "Constructor that initializes the TreeRegexp object with a given regular expression string, compiling it into a Pattern object.", "expected_testcases": [{"testcase_name": "ValidRegex", "description": "Initialize with a valid regex string, expecting the pattern to be compiled successfully."}, {"testcase_name": "InvalidRegex", "description": "Initialize with an invalid regex string, expecting an exception to be thrown."}]}, {"method_name": "TreeRegexp(Pattern pattern)", "description": "Constructor that initializes the TreeRegexp object with a pre-compiled Pattern object.", "expected_testcases": [{"testcase_name": "ValidPattern", "description": "Initialize with a valid Pattern object, expecting the groupBuilder to be created successfully."}]}, {"method_name": "createGroupBuilder(Pattern pattern)", "description": "Static method that creates a GroupBuilder object by parsing the pattern's source string and building a tree structure based on the groups defined in the regex.", "expected_testcases": [{"testcase_name": "SimplePattern", "description": "Create a GroupBuilder for a simple regex pattern with no groups, expecting a single root group."}, {"testcase_name": "NestedGroups", "description": "Create a GroupBuilder for a regex pattern with nested capturing groups, expecting the correct nested structure in the GroupBuilder."}, {"testcase_name": "NonCapturingGroups", "description": "Create a GroupBuilder for a regex pattern with non-capturing groups, expecting the non-capturing groups to be correctly identified and handled."}, {"testcase_name": "CharacterClass", "description": "Create a GroupBuilder for a regex pattern with character classes, expecting the character classes to be correctly parsed without affecting group structure."}]}, {"method_name": "isNonCapturingGroup(String source, int i)", "description": "Private static method that determines if a group in the regex pattern is non-capturing based on the syntax.", "expected_testcases": [{"testcase_name": "NonCapturingGroup", "description": "Check a group that is non-capturing, expecting the method to return true."}, {"testcase_name": "CapturingGroup", "description": "Check a group that is capturing, expecting the method to return false."}, {"testcase_name": "NamedGroup", "description": "Check a named capturing group, expecting the method to return false."}]}, {"method_name": "pattern()", "description": "Method that returns the Pattern object associated with the TreeRegexp instance.", "expected_testcases": [{"testcase_name": "PatternRetrieval", "description": "Retrieve the Pattern object, expecting it to match the pattern used during initialization."}]}, {"method_name": "match(CharSequence s)", "description": "Method that attempts to match the input string against the compiled pattern and returns a Group object representing the match result.", "expected_testcases": [{"testcase_name": "SuccessfulMatch", "description": "Match a string that fully matches the pattern, expecting a non-null Group object."}, {"testcase_name": "PartialMatch", "description": "Match a string that partially matches the pattern, expecting a null Group object."}, {"testcase_name": "NoMatch", "description": "Match a string that does not match the pattern at all, expecting a null Group object."}]}, {"method_name": "getGroupBuilder()", "description": "Method that returns the GroupBuilder object associated with the TreeRegexp instance.", "expected_testcases": [{"testcase_name": "GroupBuilderRetrieval", "description": "Retrieve the GroupBuilder object, expecting it to match the structure built during initialization."}]}], "overrides": null, "class_name": "TreeRegexp", "description": "Class responsible for parsing and matching regular expressions, building a tree structure based on the groups defined in the regex pattern."}