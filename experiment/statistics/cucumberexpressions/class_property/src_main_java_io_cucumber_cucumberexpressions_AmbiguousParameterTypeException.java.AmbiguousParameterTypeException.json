{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/AmbiguousParameterTypeException.java.AmbiguousParameterTypeException", "class_docstring": "", "superclasses": "CucumberExpressionException", "super_interfaces": [], "methods": [{"method_name": "AmbiguousParameterTypeException", "description": "Constructor that initializes the exception with detailed error messages and stores the involved regular expressions, parameter types, and generated expressions.", "expected_testcases": [{"testcase_name": "AmbiguousParameterTypeException_ValidInput", "description": "Test the constructor with valid input parameters, expecting the exception to be created with the correct error message and stored values."}, {"testcase_name": "AmbiguousParameterTypeException_NullParameterTypeRegexp", "description": "Test the constructor with a null parameter type regexp, expecting a NullPointerException or similar exception to be thrown."}, {"testcase_name": "AmbiguousParameterTypeException_EmptyParameterTypes", "description": "Test the constructor with an empty set of parameter types, expecting the exception to be created with an appropriate error message indicating no parameter types."}]}, {"method_name": "parameterTypeNames", "description": "Static method that converts a set of ParameterType objects into a string of their names, formatted for error messages.", "expected_testcases": [{"testcase_name": "parameterTypeNames_SingleParameterType", "description": "Test with a single ParameterType, expecting the method to return a string containing the name of that parameter type."}, {"testcase_name": "parameterTypeNames_MultipleParameterTypes", "description": "Test with multiple ParameterType objects, expecting the method to return a string containing the names of all parameter types, joined appropriately."}, {"testcase_name": "parameterTypeNames_EmptySet", "description": "Test with an empty set of ParameterType objects, expecting the method to return an empty string."}]}, {"method_name": "expressions", "description": "Static method that converts a list of GeneratedExpression objects into a string of their sources, formatted for error messages.", "expected_testcases": [{"testcase_name": "expressions_SingleGeneratedExpression", "description": "Test with a single GeneratedExpression, expecting the method to return a string containing the source of that expression."}, {"testcase_name": "expressions_MultipleGeneratedExpressions", "description": "Test with multiple GeneratedExpression objects, expecting the method to return a string containing the sources of all expressions, joined appropriately."}, {"testcase_name": "expressions_EmptyList", "description": "Test with an empty list of GeneratedExpression objects, expecting the method to return an empty string."}]}, {"method_name": "join", "description": "Static method that joins a list of strings into a single string with each element separated by a newline and indentation.", "expected_testcases": [{"testcase_name": "join_SingleString", "description": "Test with a single string, expecting the method to return that string without any additional formatting."}, {"testcase_name": "join_MultipleStrings", "description": "Test with multiple strings, expecting the method to return a single string with each element separated by a newline and indented appropriately."}, {"testcase_name": "join_EmptyList", "description": "Test with an empty list of strings, expecting the method to return an empty string."}]}, {"method_name": "getRegexp", "description": "Getter method for retrieving the regular expression associated with the exception.", "expected_testcases": [{"testcase_name": "getRegexp_ValidPattern", "description": "Test with a valid pattern stored in the exception, expecting the method to return the correct Pattern object."}]}, {"method_name": "getParameterTypeRegexp", "description": "Getter method for retrieving the parameter type regular expression associated with the exception.", "expected_testcases": [{"testcase_name": "getParameterTypeRegexp_ValidString", "description": "Test with a valid string stored in the exception, expecting the method to return the correct string."}]}, {"method_name": "getParameterTypes", "description": "Getter method for retrieving the set of parameter types associated with the exception.", "expected_testcases": [{"testcase_name": "getParameterTypes_ValidSet", "description": "Test with a valid set of ParameterType objects stored in the exception, expecting the method to return the correct set."}]}, {"method_name": "getGeneratedExpressions", "description": "Getter method for retrieving the list of generated expressions associated with the exception.", "expected_testcases": [{"testcase_name": "getGeneratedExpressions_ValidList", "description": "Test with a valid list of GeneratedExpression objects stored in the exception, expecting the method to return the correct list."}]}], "overrides": null, "class_name": "AmbiguousParameterTypeException", "description": "This class extends CucumberExpressionException and is used to handle exceptions related to ambiguous parameter types in Cucumber expressions. It provides detailed error messages and methods to retrieve the involved regular expressions and parameter types."}