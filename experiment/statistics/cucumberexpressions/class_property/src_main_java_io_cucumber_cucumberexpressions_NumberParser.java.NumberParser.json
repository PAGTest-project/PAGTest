{"class_uri": "src/main/java/io/cucumber/cucumberexpressions/NumberParser.java.NumberParser", "class_docstring": "", "superclasses": "", "super_interfaces": [], "methods": [{"method_name": "NumberParser", "description": "Constructor that initializes the NumberFormat instance based on the provided locale and configures it to parse numbers as BigDecimals.", "expected_testcases": []}, {"method_name": "parseDouble", "description": "Parses a string to a double using the configured NumberFormat.", "expected_testcases": [{"testcase_name": "ValidDoubleParsing", "description": "Parse a valid string representing a double, expecting the correct double value."}, {"testcase_name": "InvalidDoubleParsing", "description": "Attempt to parse an invalid string that cannot be converted to a double, expecting a CucumberExpressionException."}, {"testcase_name": "EmptyStringDoubleParsing", "description": "Attempt to parse an empty string, expecting a CucumberExpressionException."}]}, {"method_name": "parseFloat", "description": "Parses a string to a float using the configured NumberFormat.", "expected_testcases": [{"testcase_name": "ValidFloatParsing", "description": "Parse a valid string representing a float, expecting the correct float value."}, {"testcase_name": "InvalidFloatParsing", "description": "Attempt to parse an invalid string that cannot be converted to a float, expecting a CucumberExpressionException."}, {"testcase_name": "EmptyStringFloatParsing", "description": "Attempt to parse an empty string, expecting a CucumberExpressionException."}]}, {"method_name": "parseBigDecimal", "description": "Parses a string to a BigDecimal using the configured NumberFormat or falls back to default BigDecimal parsing if the locale does not support DecimalFormat.", "expected_testcases": [{"testcase_name": "ValidBigDecimalParsingWithDecimalFormat", "description": "Parse a valid string representing a BigDecimal when the locale supports DecimalFormat, expecting the correct BigDecimal value."}, {"testcase_name": "ValidBigDecimalParsingWithoutDecimalFormat", "description": "Parse a valid string representing a BigDecimal when the locale does not support DecimalFormat, expecting the correct BigDecimal value using default parsing."}, {"testcase_name": "InvalidBigDecimalParsing", "description": "Attempt to parse an invalid string that cannot be converted to a BigDecimal, expecting a CucumberExpressionException."}, {"testcase_name": "EmptyStringBigDecimalParsing", "description": "Attempt to parse an empty string, expecting a CucumberExpressionException."}]}, {"method_name": "parse", "description": "Private method that performs the actual parsing of the string to a Number using the configured NumberFormat, handling ParseException by throwing a CucumberExpressionException.", "expected_testcases": []}], "overrides": null, "class_name": "NumberParser", "description": "Class responsible for parsing numbers from strings using a specified locale-based number format."}