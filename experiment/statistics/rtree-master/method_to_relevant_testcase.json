{"rectangle(double,double,double,double)": [{"class_name": "Geometries", "file_path": "src/test/java/com/github/davidmoten/rtree/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testMbrWithNegativeValues"}, {"class_name": "Geometries", "file_path": "src/test/java/com/github/davidmoten/rtree/HighPrecisionTest.java", "testclass_name": "HighPrecisionTest", "testcase_name": "testHighPrecision"}], "set(boolean)": [{"class_name": "AtomicBoolean", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testRunThatDoesNotThrow"}], "add(Rectangle)": [{"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/LeafTest.java", "testclass_name": "LeafTest", "testcase_name": "testMbr"}], "create()": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}], "add(Entry)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}], "entries()": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}], "count()": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}], "toBlocking()": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}], "single()": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}], "register(Class)": [{"class_name": "Kryo", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testKryo"}], "search(RTree<String, Point>, Point, double)": [{"class_name": "LatLongExampleTest", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testLatLongExample"}], "createGeoCircleValue(Point, double, String)": [{"class_name": "LatLongExampleTest", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testSearchLatLongCircles"}], "add(RTree<GeoCircleValue<String>, Rectangle>, GeoCircleValue<String>)": [{"class_name": "LatLongExampleTest", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testSearchLatLongCircles"}], "unsubscribe()": [{"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeAfterFirst"}, {"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeAfterLastButBeforeCompletedCalled"}, {"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testErrorCalledJustAfterUnsubscribe"}, {"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeCalledAfterFirst"}, {"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}], "onError(Throwable)": [{"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testError"}, {"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testErrorCalledJustAfterUnsubscribe"}], "push(Object)": [{"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPeekGivesLastPushed"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorWhenHasOneItem"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsOneItem"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsLastPushedFirst"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsTwoItemsInOrderOfPop"}], "pop()": [{"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}], "add(Iterable<Entry<Object, Point>>)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArray"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructure"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArrayBackpressure"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructureBackpressure"}], "search(Rectangle)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArray"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructure"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArrayBackpressure"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructureBackpressure"}], "verify(Subscriber,VerificationMode)": [{"class_name": "Mockito", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearch"}], "maxChildren(int)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}], "empty()": [{"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}], "push(NodePosition)": [{"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}], "isEmpty()": [{"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}], "star()": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}], "add(List)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}], "request(long)": [{"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"class_name": "Subscriber", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}], "x1()": [{"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}, {"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong2"}], "x2()": [{"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}, {"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong2"}], "y1()": [{"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}], "y2()": [{"class_name": "Rectangle", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}], "x()": [{"class_name": "Point", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testPointLatLong"}], "y()": [{"class_name": "Point", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testPointLatLong"}], "checkRoundTripPoint(Serializer<String, Point>)": [{"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testJavaIoSerialization"}, {"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringPointSerialization"}], "check(Serializer<String, Rectangle>, Entry<String, Rectangle>, Entry<String, Rectangle>)": [{"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringRectangleFloatSerialization"}, {"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringRectangleDoubleSerialization"}], "check(Serializer<String, Circle>, Entry<String, Circle>, Entry<String, Circle>)": [{"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringCircleFloatSerialization"}, {"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringCircleDoubleSerialization"}], "check(Serializer<String, Line>, Entry<String, Line>, Entry<String, Line>)": [{"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringLineFloatSerialization"}, {"class_name": "SerializersTest", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringLineDoubleSerialization"}], "add(Entry<String, Point>)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}], "write(RTree<String, Point>, ByteArrayOutputStream)": [{"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}], "read(ByteArrayInputStream, int, InternalStructure)": [{"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"class_name": "Serializer", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}], "delete(Entry<String, Point>)": [{"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"class_name": "RTree", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}], "intersects(Rectangle)": [{"class_name": "Line", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoubleIntersectsWithHorizontalLine"}, {"class_name": "Line", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineFloatIntersectsWithHorizontalLine"}], "peek()": [{"class_name": "ImmutableStack", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_popTest.java", "testclass_name": "ImmutableStack_popTest", "testcase_name": "testPopOnNonEmptyStack"}], "hasNext()": [{"class_name": "Iterator", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_iteratorTest.java", "testclass_name": "ImmutableStack_iteratorTest", "testcase_name": "testIteratorWithNonEmptyStack"}, {"class_name": "Iterator", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_iteratorTest.java", "testclass_name": "ImmutableStack_iteratorTest", "testcase_name": "testIteratorWithEmptyStack"}], "next()": [{"class_name": "Iterator", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_iteratorTest.java", "testclass_name": "ImmutableStack_iteratorTest", "testcase_name": "testIteratorWithNonEmptyStack"}], "add(Integer)": [{"class_name": "BoundedPriorityQueue", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithSingleElement"}, {"class_name": "BoundedPriorityQueue", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithMultipleElements"}], "toList()": [{"class_name": "Observable", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_nearestTest.java", "testclass_name": "RTree_nearestTest", "testcase_name": "testNearestWithinDistance"}, {"class_name": "Observable", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_nearestTest.java", "testclass_name": "RTree_nearestTest", "testcase_name": "testNearestWithNoMatches"}, {"class_name": "Observable", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_nearestTest.java", "testclass_name": "RTree_nearestTest", "testcase_name": "testNearestWithMaxCount"}]}