[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.Context;\nimport com.github.davidmoten.rtree.Node;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class NonLeafDefault_childTest {\n\n    private NonLeafDefault<String, Rectangle> nonLeaf;\n    private Node<String, Rectangle> child1;\n    private Node<String, Rectangle> child2;\n\n    @Before\n    public void setUp() {\n        child1 = new LeafDefault<>(\"entry1\", com.github.davidmoten.rtree.geometry.Geometries.rectangle(0, 0, 1, 1));\n        child2 = new LeafDefault<>(\"entry2\", com.github.davidmoten.rtree.geometry.Geometries.rectangle(2, 2, 3, 3));\n        List<Node<String, Rectangle>> children = Arrays.asList(child1, child2);\n        Context<String, Rectangle> context = new Context<>(null, null, null, null);\n        nonLeaf = new NonLeafDefault<>(children, context);\n    }\n\n    @Test\n    public void testChild() {\n        Node<String, Rectangle> retrievedChild = nonLeaf.child(0);\n        assertNotNull(retrievedChild);\n        assertEquals(child1, retrievedChild);\n    }\n}\n"}]