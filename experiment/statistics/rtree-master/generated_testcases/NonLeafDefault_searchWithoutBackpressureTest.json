[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport com.github.davidmoten.rtree.Entry;\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport org.junit.Before;\nimport org.junit.Test;\nimport rx.Subscriber;\nimport rx.functions.Func1;\n\nimport static org.mockito.Mockito.*;\n\npublic class NonLeafDefault_searchWithoutBackpressureTest {\n\n    private NonLeafDefault<String, Geometry> nonLeafDefault;\n    private Func1<Geometry, Boolean> criterion;\n    private Subscriber<Entry<String, Geometry>> subscriber;\n\n    @Before\n    public void setUp() {\n        // Mocking dependencies\n        criterion = mock(Func1.class);\n        subscriber = mock(Subscriber.class);\n        nonLeafDefault = new NonLeafDefault<>(null, null, null);\n    }\n\n    @Test\n    public void testSearchWithoutBackpressure() {\n        // Given\n        doCallRealMethod().when(nonLeafDefault).searchWithoutBackpressure(any(), any());\n\n        // When\n        nonLeafDefault.searchWithoutBackpressure(criterion, subscriber);\n\n        // Then\n        verify(nonLeafDefault).searchWithoutBackpressure(criterion, subscriber);\n        verify(nonLeafDefault, times(1)).searchWithoutBackpressure(criterion, subscriber);\n    }\n}\n"}]