[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport com.github.davidmoten.rtree.Context;\nimport com.github.davidmoten.rtree.Entry;\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\nimport org.junit.Test;\nimport java.util.Arrays;\nimport java.util.List;\nimport static org.junit.Assert.assertEquals;\n\npublic class LeafDefault_entryTest {\n\n    @Test\n    public void testEntry() {\n        // Given\n        Entry<String, Rectangle> entry1 = new Entry<String, Rectangle>() {\n            @Override\n            public String value() {\n                return \"Entry1\";\n            }\n\n            @Override\n            public Rectangle geometry() {\n                return Rectangle.create(0, 0, 1, 1);\n            }\n        };\n\n        Entry<String, Rectangle> entry2 = new Entry<String, Rectangle>() {\n            @Override\n            public String value() {\n                return \"Entry2\";\n            }\n\n            @Override\n            public Rectangle geometry() {\n                return Rectangle.create(1, 1, 2, 2);\n            }\n        };\n\n        List<Entry<String, Rectangle>> entries = Arrays.asList(entry1, entry2);\n        Context<String, Rectangle> context = new Context<String, Rectangle>() {};\n        LeafDefault<String, Rectangle> leaf = new LeafDefault<>(entries, context);\n\n        // When\n        Entry<String, Rectangle> result = leaf.entry(1);\n\n        // Then\n        assertEquals(\"Entry2\", result.value());\n        assertEquals(Rectangle.create(1, 1, 2, 2), result.geometry());\n    }\n}\n"}]