[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.Mock;\nimport org.mockito.MockitoAnnotations;\n\nimport com.github.davidmoten.rtree.geometry.Geometry;\n\nimport rx.Observable;\nimport rx.functions.Func2;\n\npublic class RTree_deleteTest {\n\n    private RTree<String, Geometry> mockTree;\n\n    @Mock\n    private Entry<String, Geometry> mockEntry;\n\n    @Before\n    public void setUp() {\n        MockitoAnnotations.initMocks(this);\n        mockTree = new RTree<String, Geometry>() {\n            @Override\n            public RTree<String, Geometry> delete(Entry<String, Geometry> entry, boolean all) {\n                return this;\n            }\n        };\n    }\n\n    @Test\n    public void testDelete() {\n        // Given\n        List<Entry<String, Geometry>> entries = Arrays.asList(mockEntry);\n        Observable<Entry<String, Geometry>> observableEntries = Observable.from(entries);\n        boolean all = true;\n\n        // When\n        Observable<RTree<String, Geometry>> result = mockTree.delete(observableEntries, all);\n\n        // Then\n        result.forEach(tree -> assertEquals(mockTree, tree));\n    }\n}\n"}]