[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal.util;\n\nimport static com.github.davidmoten.rtree.internal.util.BoundedPriorityQueue.create;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\n\nimport java.util.Comparator;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class BoundedPriorityQueue_addTest {\n\n    private static final Comparator<Integer> comparator = Comparator.naturalOrder();\n    private BoundedPriorityQueue<Integer> queue;\n\n    @Before\n    public void setUp() {\n        queue = create(2, comparator);\n    }\n\n    @Test(expected = NullPointerException.class)\n    public void testAddNullThrowsException() {\n        queue.add(null);\n    }\n\n    @Test\n    public void testAddElementToEmptyQueue() {\n        queue.add(1);\n        assertEquals(1, queue.asList().size());\n        assertTrue(queue.asList().contains(1));\n    }\n\n    @Test\n    public void testAddElementToFullQueueWithLowerPriority() {\n        queue.add(1);\n        queue.add(2);\n        queue.add(0); // This should not be added as it has lower priority than 1\n        assertEquals(2, queue.asList().size());\n        assertTrue(queue.asList().contains(1));\n        assertTrue(queue.asList().contains(2));\n    }\n\n    @Test\n    public void testAddElementToFullQueueWithHigherPriority() {\n        queue.add(1);\n        queue.add(2);\n        queue.add(3); // This should replace 1 as it has higher priority\n        assertEquals(2, queue.asList().size());\n        assertTrue(queue.asList().contains(2));\n        assertTrue(queue.asList().contains(3));\n    }\n}\n"}]