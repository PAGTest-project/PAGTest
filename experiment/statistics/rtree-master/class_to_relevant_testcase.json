{"Geometries": [{"method_name": "rectangle(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testMbrWithNegativeValues"}, {"method_name": "rectangle(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/HighPrecisionTest.java", "testclass_name": "HighPrecisionTest", "testcase_name": "testHighPrecision"}], "AtomicBoolean": [{"method_name": "set(boolean)", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testRunThatDoesNotThrow"}], "Rectangle": [{"method_name": "add(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/LeafTest.java", "testclass_name": "LeafTest", "testcase_name": "testMbr"}, {"method_name": "x1()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}, {"method_name": "x1()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong2"}, {"method_name": "x2()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}, {"method_name": "x2()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong2"}, {"method_name": "y1()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}, {"method_name": "y2()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}], "RTree": [{"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "create()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}, {"method_name": "add(Entry)", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "add(Entry)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"method_name": "add(Entry)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"method_name": "add(Entry)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}, {"method_name": "entries()", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "count()", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "toBlocking()", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "single()", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "add(Iterable<Entry<Object, Point>>)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArray"}, {"method_name": "add(Iterable<Entry<Object, Point>>)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructure"}, {"method_name": "add(Iterable<Entry<Object, Point>>)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArrayBackpressure"}, {"method_name": "add(Iterable<Entry<Object, Point>>)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructureBackpressure"}, {"method_name": "search(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArray"}, {"method_name": "search(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructure"}, {"method_name": "search(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArrayBackpressure"}, {"method_name": "search(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructureBackpressure"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"method_name": "maxChildren(int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}, {"method_name": "isEmpty()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}, {"method_name": "star()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"method_name": "star()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"method_name": "star()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"method_name": "star()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"method_name": "star()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"method_name": "star()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}, {"method_name": "add(List)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"method_name": "add(List)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"method_name": "add(List)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"method_name": "add(List)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"method_name": "add(Entry<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"method_name": "add(Entry<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"method_name": "add(Entry<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "add(Entry<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "delete(Entry<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"method_name": "delete(Entry<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}], "Kryo": [{"method_name": "register(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testKryo"}], "LatLongExampleTest": [{"method_name": "search(RTree<String, Point>, Point, double)", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testLatLongExample"}, {"method_name": "createGeoCircleValue(Point, double, String)", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testSearchLatLongCircles"}, {"method_name": "add(RTree<GeoCircleValue<String>, Rectangle>, GeoCircleValue<String>)", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testSearchLatLongCircles"}], "Subscriber": [{"method_name": "unsubscribe()", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeAfterFirst"}, {"method_name": "unsubscribe()", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeAfterLastButBeforeCompletedCalled"}, {"method_name": "unsubscribe()", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testErrorCalledJustAfterUnsubscribe"}, {"method_name": "unsubscribe()", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeCalledAfterFirst"}, {"method_name": "unsubscribe()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}, {"method_name": "onError(Throwable)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testError"}, {"method_name": "onError(Throwable)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testErrorCalledJustAfterUnsubscribe"}, {"method_name": "request(long)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"method_name": "request(long)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}], "ImmutableStack": [{"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPeekGivesLastPushed"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorWhenHasOneItem"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsOneItem"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsLastPushedFirst"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsTwoItemsInOrderOfPop"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}, {"method_name": "empty()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"method_name": "empty()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}, {"method_name": "push(NodePosition)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"method_name": "push(NodePosition)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}, {"method_name": "isEmpty()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"method_name": "isEmpty()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}, {"method_name": "peek()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_popTest.java", "testclass_name": "ImmutableStack_popTest", "testcase_name": "testPopOnNonEmptyStack"}], "Mockito": [{"method_name": "verify(Subscriber,VerificationMode)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearch"}], "Point": [{"method_name": "x()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testPointLatLong"}, {"method_name": "y()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testPointLatLong"}], "SerializersTest": [{"method_name": "checkRoundTripPoint(Serializer<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testJavaIoSerialization"}, {"method_name": "checkRoundTripPoint(Serializer<String, Point>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringPointSerialization"}, {"method_name": "check(Serializer<String, Rectangle>, Entry<String, Rectangle>, Entry<String, Rectangle>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringRectangleFloatSerialization"}, {"method_name": "check(Serializer<String, Rectangle>, Entry<String, Rectangle>, Entry<String, Rectangle>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringRectangleDoubleSerialization"}, {"method_name": "check(Serializer<String, Circle>, Entry<String, Circle>, Entry<String, Circle>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringCircleFloatSerialization"}, {"method_name": "check(Serializer<String, Circle>, Entry<String, Circle>, Entry<String, Circle>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringCircleDoubleSerialization"}, {"method_name": "check(Serializer<String, Line>, Entry<String, Line>, Entry<String, Line>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringLineFloatSerialization"}, {"method_name": "check(Serializer<String, Line>, Entry<String, Line>, Entry<String, Line>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringLineDoubleSerialization"}], "Serializer": [{"method_name": "write(RTree<String, Point>, ByteArrayOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"method_name": "write(RTree<String, Point>, ByteArrayOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"method_name": "write(RTree<String, Point>, ByteArrayOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "write(RTree<String, Point>, ByteArrayOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "write(RTree<String, Point>, ByteArrayOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}, {"method_name": "read(ByteArrayInputStream, int, InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"method_name": "read(ByteArrayInputStream, int, InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"method_name": "read(ByteArrayInputStream, int, InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "read(ByteArrayInputStream, int, InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "read(ByteArrayInputStream, int, InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}], "Line": [{"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoubleIntersectsWithHorizontalLine"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineFloatIntersectsWithHorizontalLine"}], "Iterator": [{"method_name": "hasNext()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_iteratorTest.java", "testclass_name": "ImmutableStack_iteratorTest", "testcase_name": "testIteratorWithNonEmptyStack"}, {"method_name": "hasNext()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_iteratorTest.java", "testclass_name": "ImmutableStack_iteratorTest", "testcase_name": "testIteratorWithEmptyStack"}, {"method_name": "next()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_iteratorTest.java", "testclass_name": "ImmutableStack_iteratorTest", "testcase_name": "testIteratorWithNonEmptyStack"}], "BoundedPriorityQueue": [{"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithSingleElement"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithMultipleElements"}], "Observable": [{"method_name": "toList()", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_nearestTest.java", "testclass_name": "RTree_nearestTest", "testcase_name": "testNearestWithinDistance"}, {"method_name": "toList()", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_nearestTest.java", "testclass_name": "RTree_nearestTest", "testcase_name": "testNearestWithNoMatches"}, {"method_name": "toList()", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_nearestTest.java", "testclass_name": "RTree_nearestTest", "testcase_name": "testNearestWithMaxCount"}]}