{"file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "dependencies": ["package com.github.davidmoten.internal.operators;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertFalse;", "import static org.junit.Assert.assertTrue;", "import java.util.Arrays;", "import java.util.Comparator;", "import java.util.List;", "import java.util.concurrent.atomic.AtomicBoolean;", "import org.junit.Test;", "import com.github.davidmoten.rtree.RTree;", "import com.github.davidmoten.rtree.geometry.Geometries;", "import com.github.davidmoten.rtree.geometry.Line;", "import com.github.davidmoten.rtree.internal.operators.OperatorBoundedPriorityQueue;", "import rx.Observable;", "import rx.Observable.OnSubscribe;", "import rx.Subscriber;"], "name": "OperatorBoundedPriorityQueueTest", "description": "Unit tests for the OperatorBoundedPriorityQueue class, focusing on priority queue operations and subscription management.", "class_members": {"variables": [{"name": "integerComparator", "type": "static Comparator<Integer>"}]}, "fixtures": [], "test_cases": [{"name": "testPriority", "primary_tested": ["OperatorBoundedPriorityQueue.call(Subscriber<? super T>)"], "external_dependencies": {"modules": ["Observable", "OperatorBoundedPriorityQueue", "Comparator", "Arrays"], "class_members": [{"name": "integerComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the priority queue functionality by ensuring the correct elements are retained and sorted."}, {"name": "testUnsubscribeAfterFirst", "primary_tested": ["OperatorBoundedPriorityQueue.call(Subscriber<? super T>)"], "associated_methods": ["Subscriber.unsubscribe()"], "external_dependencies": {"modules": ["Observable", "OperatorBoundedPriorityQueue", "AtomicBoolean", "Subscriber"], "class_members": [{"name": "integerComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of unsubscribing after receiving the first element."}, {"name": "testUnsubscribeAfterLastButBeforeCompletedCalled", "primary_tested": ["OperatorBoundedPriorityQueue.call(Subscriber<? super T>)"], "associated_methods": ["Subscriber.unsubscribe()"], "external_dependencies": {"modules": ["Observable", "OperatorBoundedPriorityQueue", "AtomicBoolean", "Subscriber"], "class_members": [{"name": "integerComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of unsubscribing after receiving the last element but before onCompleted is called."}, {"name": "testError", "primary_tested": ["OperatorBoundedPriorityQueue.call(Subscriber<? super T>)"], "associated_methods": ["Subscriber.onError(Throwable)"], "external_dependencies": {"modules": ["Observable", "OperatorBoundedPriorityQueue", "AtomicBoolean", "Subscriber"], "class_members": [{"name": "integerComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior when an error is emitted."}, {"name": "testErrorCalledJustAfterUnsubscribe", "primary_tested": ["OperatorBoundedPriorityQueue.call(Subscriber<? super T>)"], "associated_methods": ["Subscriber.unsubscribe()", "Subscriber.onError(Throwable)"], "external_dependencies": {"modules": ["Observable", "OperatorBoundedPriorityQueue", "AtomicBoolean", "Subscriber", "OnSubscribe"], "class_members": [{"name": "integerComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior when an error is emitted just after unsubscribing."}, {"name": "testUnsubscribeCalledAfterFirst", "primary_tested": ["OperatorBoundedPriorityQueue.call(Subscriber<? super T>)"], "associated_methods": ["Subscriber.unsubscribe()"], "external_dependencies": {"modules": ["Observable", "OperatorBoundedPriorityQueue", "AtomicBoolean", "Subscriber", "OnSubscribe"], "class_members": [{"name": "integerComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior of unsubscribing after receiving the first element."}, {"name": "testOperatorShouldRequestMaxFromUpstream", "primary_tested": ["RTree.nearest(Point,double,int)"], "external_dependencies": {"modules": ["RTree", "Geometries", "Line"]}, "category": "unit", "description": "Tests the operator's ability to request the maximum number of elements from the upstream."}]}