[
    {
        "file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_buildTimestampTest.java",
        "testclass_name": "UrlBuilder_buildTimestampTest",
        "dependencies": [
            "package com.binance.connector.client.utils;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertTrue;"
        ],
        "name": "UrlBuilder_buildTimestampTest",
        "description": "Unit test for the buildTimestamp method in the UrlBuilder class.",
        "class_members": {},
        "fixtures": [],
        "test_cases": [
            {
                "name": "testBuildTimestamp",
                "primary_tested": [
                    "UrlBuilder.buildTimestamp()"
                ],
                "external_dependencies": {
                    "modules": [
                        "UrlBuilder"
                    ]
                },
                "category": "unit",
                "description": "Tests that the buildTimestamp method returns a timestamp string that matches the pattern of digits."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createTradeTest.java",
        "testclass_name": "SpotClientImpl_createTradeTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.enums.DefaultUrls;",
            "import com.binance.connector.client.impl.spot.Trade;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createTradeTest",
        "description": "Unit tests for the creation of Trade objects in the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateTrade",
                "primary_tested": [
                    "SpotClientImpl.createTrade()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Trade object using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createPayTest.java",
        "testclass_name": "SpotClientImpl_createPayTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Pay;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createPayTest",
        "description": "Unit tests for creating a Pay instance using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreatePay",
                "primary_tested": [
                    "SpotClientImpl.createPay()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Pay"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Pay instance using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createSpotAlgoTest.java",
        "testclass_name": "SpotClientImpl_createSpotAlgoTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.SpotAlgo;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createSpotAlgoTest",
        "description": "Test suite for creating SpotAlgo instances using SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateSpotAlgo",
                "primary_tested": [
                    "SpotClientImpl.createSpotAlgo()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "SpotAlgo"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a SpotAlgo instance using SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createFiatTest.java",
        "testclass_name": "SpotClientImpl_createFiatTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Fiat;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createFiatTest",
        "description": "Unit tests for creating a Fiat instance using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateFiat",
                "primary_tested": [
                    "SpotClientImpl.createFiat()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Fiat"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Fiat instance using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createPortfolioMarginTest.java",
        "testclass_name": "SpotClientImpl_createPortfolioMarginTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.PortfolioMargin;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createPortfolioMarginTest",
        "description": "Test suite for creating a Portfolio Margin using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreatePortfolioMargin",
                "primary_tested": [
                    "SpotClientImpl.createPortfolioMargin()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "PortfolioMargin"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Portfolio Margin using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createVIPLoansTest.java",
        "testclass_name": "SpotClientImpl_createVIPLoansTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import com.binance.connector.client.impl.spot.VIPLoans;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.*;"
        ],
        "name": "SpotClientImpl_createVIPLoansTest",
        "description": "Test suite for creating VIP loans using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateVIPLoans",
                "primary_tested": [
                    "SpotClientImpl.createVIPLoans()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "VIPLoans"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of VIP loans using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createCryptoLoansTest.java",
        "testclass_name": "SpotClientImpl_createCryptoLoansTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.CryptoLoans;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createCryptoLoansTest",
        "description": "Test suite for creating CryptoLoans using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateCryptoLoans",
                "primary_tested": [
                    "SpotClientImpl.createCryptoLoans()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "CryptoLoans"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of CryptoLoans using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createMarginTest.java",
        "testclass_name": "SpotClientImpl_createMarginTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Margin;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createMarginTest",
        "description": "Unit tests for creating a Margin instance using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateMargin",
                "primary_tested": [
                    "SpotClientImpl.createMargin()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Margin"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Margin instance using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createFuturesTest.java",
        "testclass_name": "SpotClientImpl_createFuturesTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Futures;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createFuturesTest",
        "description": "Unit tests for creating Futures using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateFutures",
                "primary_tested": [
                    "SpotClientImpl.createFutures()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Futures"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of Futures using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createWalletTest.java",
        "testclass_name": "SpotClientImpl_createWalletTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import com.binance.connector.client.impl.spot.Wallet;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createWalletTest",
        "description": "Unit tests for creating a Wallet using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateWallet",
                "primary_tested": [
                    "SpotClientImpl.createWallet()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Wallet"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Wallet using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createStakingTest.java",
        "testclass_name": "SpotClientImpl_createStakingTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import com.binance.connector.client.impl.spot.Staking;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createStakingTest",
        "description": "Unit tests for creating a Staking instance using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateStaking",
                "primary_tested": [
                    "SpotClientImpl.createStaking()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Staking"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Staking instance using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createRebateTest.java",
        "testclass_name": "SpotClientImpl_createRebateTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Rebate;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createRebateTest",
        "description": "Unit tests for creating Rebate using SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateRebate",
                "primary_tested": [
                    "SpotClientImpl.createRebate()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Rebate"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of Rebate using SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createGiftCardTest.java",
        "testclass_name": "SpotClientImpl_createGiftCardTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.GiftCard;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.*;"
        ],
        "name": "SpotClientImpl_createGiftCardTest",
        "description": "Unit tests for creating a gift card using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateGiftCard",
                "primary_tested": [
                    "SpotClientImpl.createGiftCard()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "GiftCard"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a gift card using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createNFTTest.java",
        "testclass_name": "SpotClientImpl_createNFTTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.enums.DefaultUrls;",
            "import com.binance.connector.client.impl.spot.NFT;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.*;"
        ],
        "name": "SpotClientImpl_createNFTTest",
        "description": "Unit tests for creating NFT using SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateNFT",
                "primary_tested": [
                    "SpotClientImpl.createNFT()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "NFT"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of an NFT using SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createMiningTest.java",
        "testclass_name": "SpotClientImpl_createMiningTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Mining;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createMiningTest",
        "description": "Test suite for creating Mining instance using SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateMining",
                "primary_tested": [
                    "SpotClientImpl.createMining()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "Mining"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Mining instance using SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createSimpleEarnTest.java",
        "testclass_name": "SpotClientImpl_createSimpleEarnTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.SimpleEarn;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createSimpleEarnTest",
        "description": "Unit test for creating a SimpleEarn instance using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateSimpleEarn",
                "primary_tested": [
                    "SpotClientImpl.createSimpleEarn()"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClientImpl",
                        "SimpleEarn"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a SimpleEarn instance using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedSubscriptionRecordTest.java",
        "testclass_name": "SimpleEarn_lockedSubscriptionRecordTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_lockedSubscriptionRecordTest",
        "description": "Test for the locked subscription record functionality in the SimpleEarn module of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLockedSubscriptionRecord",
                "primary_tested": [
                    "SimpleEarn.lockedSubscriptionRecord(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the locked subscription record functionality of the SimpleEarn module."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_collateralAssetsDataTest.java",
        "testclass_name": "CryptoLoans_collateralAssetsDataTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_collateralAssetsDataTest",
        "description": "Unit tests for the collateral assets data functionality in the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCollateralAssetsData",
                "primary_tested": [
                    "CryptoLoans.collateralAssetsData(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Map",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the collateral assets data retrieval functionality of the CryptoLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_tradeFeeTest.java",
        "testclass_name": "Wallet_tradeFeeTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_tradeFeeTest",
        "description": "Test suite for the tradeFee method in the Wallet service of the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTradeFee",
                "primary_tested": [
                    "Wallet.tradeFee(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the tradeFee method of the Wallet service in the SpotClientImpl, ensuring it returns the expected mock response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanAdjustLTVHistoryTest.java",
        "testclass_name": "CryptoLoans_loanAdjustLTVHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_loanAdjustLTVHistoryTest",
        "description": "Unit tests for the loanAdjustLTVHistory method in the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLoanAdjustLTVHistory",
                "primary_tested": [
                    "CryptoLoans.loanAdjustLTVHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the loanAdjustLTVHistory method of the CryptoLoans class by verifying the response from the mock server."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanBorrowHistoryTest.java",
        "testclass_name": "CryptoLoans_loanBorrowHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_loanBorrowHistoryTest",
        "description": "Unit tests for the loan borrow history functionality in the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLoanBorrowHistory",
                "primary_tested": [
                    "CryptoLoans.loanBorrowHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "CryptoLoans"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the loan borrow history functionality of the CryptoLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingWbethUnwrapHistoryTest.java",
        "testclass_name": "Staking_ethStakingWbethUnwrapHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingWbethUnwrapHistoryTest",
        "description": "Test for the ethStakingWbethUnwrapHistory method in the Staking service of the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingWbethUnwrapHistory",
                "primary_tested": [
                    "Staking.ethStakingWbethUnwrapHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ethStakingWbethUnwrapHistory method of the Staking service in the SpotClientImpl class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/PortfolioMargin_assetLeverageTest.java",
        "testclass_name": "PortfolioMargin_assetLeverageTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "PortfolioMargin_assetLeverageTest",
        "description": "Unit tests for the asset leverage functionality in the PortfolioMargin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "portfolioMargin",
                    "type": "PortfolioMargin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAssetLeverage",
                "primary_tested": [
                    "PortfolioMargin.assetLeverage()"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Dispatcher",
                        "PortfolioMargin",
                        "HmacSignatureGenerator",
                        "ProxyAuth",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "portfolioMargin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the asset leverage functionality of the PortfolioMargin class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Blvt_userLimitTest.java",
        "testclass_name": "Blvt_userLimitTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Blvt_userLimitTest",
        "description": "Unit tests for the user limit functionality of the Blvt class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "blvt",
                    "type": "Blvt"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testUserLimit",
                "primary_tested": [
                    "Blvt.userLimit(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "HmacSignatureGenerator",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "blvt",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the user limit functionality of the Blvt class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_transferHistoryTest.java",
        "testclass_name": "Margin_transferHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_transferHistoryTest",
        "description": "Test suite for the transfer history functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ],
            "methods": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTransferHistory",
                "primary_tested": [
                    "Margin.transferHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Margin",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the transfer history functionality of the Margin class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkParameterTest.java",
        "testclass_name": "ParameterChecker_checkParameterTest",
        "dependencies": [
            "package com.binance.connector.client.utils;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.HashMap;",
            "import java.util.Map;",
            "import org.junit.Test;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;"
        ],
        "name": "ParameterChecker_checkParameterTest",
        "description": "Unit tests for the ParameterChecker.checkParameter method, which validates parameters in a map.",
        "class_members": {
            "variables": [],
            "methods": [],
            "nested_classes": []
        },
        "fixtures": [],
        "test_cases": [
            {
                "name": "testCheckParameter_ValidParameter",
                "primary_tested": [
                    "ParameterChecker.checkParameter(Map<String,Object>,String,Class<T>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "ParameterChecker",
                        "HashMap",
                        "Map"
                    ],
                    "class_members": []
                },
                "category": "unit",
                "fixtures_used": [],
                "description": "Tests the checkParameter method with a valid parameter in the map."
            },
            {
                "name": "testCheckParameter_MissingParameter",
                "primary_tested": [
                    "ParameterChecker.checkParameter(Map<String,Object>,String,Class<T>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "ParameterChecker",
                        "HashMap",
                        "Map",
                        "BinanceConnectorException"
                    ],
                    "class_members": []
                },
                "category": "unit",
                "fixtures_used": [],
                "description": "Tests the checkParameter method when a required parameter is missing, expecting a BinanceConnectorException."
            },
            {
                "name": "testCheckParameter_WrongType",
                "primary_tested": [
                    "ParameterChecker.checkParameter(Map<String,Object>,String,Class<T>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "ParameterChecker",
                        "HashMap",
                        "Map",
                        "BinanceConnectorException"
                    ],
                    "class_members": []
                },
                "category": "unit",
                "fixtures_used": [],
                "description": "Tests the checkParameter method when a parameter has the wrong type, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_collateralAssetTest.java",
        "testclass_name": "VIPLoans_collateralAssetTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "VIPLoans_collateralAssetTest",
        "description": "Test suite for the VIPLoans collateral asset functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "vipLoans",
                    "type": "VIPLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCollateralAsset",
                "primary_tested": [
                    "VIPLoans.collateralAsset(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "VIPLoans",
                        "LinkedHashMap",
                        "Map"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the collateral asset functionality of the VIPLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_flexibleProductPositionTest.java",
        "testclass_name": "SimpleEarn_flexibleProductPositionTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_flexibleProductPositionTest",
        "description": "Test suite for the flexible product position functionality in the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                },
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testFlexibleProductPosition",
                "primary_tested": [
                    "SimpleEarn.flexibleProductPosition(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SimpleEarn",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Dispatcher",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        },
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the flexible product position functionality of the SimpleEarn class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_bnbConvertableAssetsTest.java",
        "testclass_name": "Wallet_bnbConvertableAssetsTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.UrlBuilder;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_bnbConvertableAssetsTest",
        "description": "Test for the BNB convertable assets functionality in the Wallet module of the SpotClient.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testBnbConvertableAssets",
                "primary_tested": [
                    "Wallet.bnbConvertableAssets(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the functionality of converting BNB assets in the Wallet module of the SpotClient."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_flexibleRedemptionRecordTest.java",
        "testclass_name": "SimpleEarn_flexibleRedemptionRecordTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_flexibleRedemptionRecordTest",
        "description": "Test for the flexible redemption record functionality in the SimpleEarn module of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFlexibleRedemptionRecord",
                "primary_tested": [
                    "SimpleEarn.flexibleRedemptionRecord(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the flexible redemption record functionality of the SimpleEarn module."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingSubHistoryTest.java",
        "testclass_name": "Staking_ethStakingSubHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingSubHistoryTest",
        "description": "Unit tests for the ethStakingSubHistory method in the Staking class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "staking",
                    "type": "Staking"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingSubHistory",
                "primary_tested": [
                    "Staking.ethStakingSubHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "HmacSignatureGenerator",
                        "ProxyAuth",
                        "Staking"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "staking",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ethStakingSubHistory method of the Staking class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_dustLogTest.java",
        "testclass_name": "Wallet_dustLogTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_dustLogTest",
        "description": "Test suite for the dustLog functionality in the Wallet module of the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testDustLog",
                "primary_tested": [
                    "Wallet.dustLog(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the dustLog functionality of the Wallet module in the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_enableFastWithdrawTest.java",
        "testclass_name": "Wallet_enableFastWithdrawTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_enableFastWithdrawTest",
        "description": "Test for enabling fast withdraw functionality in the Wallet service of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEnableFastWithdraw",
                "primary_tested": [
                    "Wallet.enableFastWithdraw(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the functionality of enabling fast withdraw in the Wallet service."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createC2CTest.java",
        "testclass_name": "SpotClientImpl_createC2CTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.C2C;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createC2CTest",
        "description": "Unit tests for creating C2C client in SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateC2C",
                "primary_tested": [
                    "SpotClientImpl.createC2C()"
                ],
                "external_dependencies": {
                    "modules": [
                        "C2C",
                        "SpotClientImpl",
                        "HmacSignatureGenerator",
                        "SignatureGenerator"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "apiKey",
                            "type": "variable"
                        },
                        {
                            "name": "signatureGenerator",
                            "type": "variable"
                        },
                        {
                            "name": "showLimitUsage",
                            "type": "variable"
                        },
                        {
                            "name": "proxy",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a C2C client using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_getOpenOCOOrdersTest.java",
        "testclass_name": "Trade_getOpenOCOOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_getOpenOCOOrdersTest",
        "description": "Unit tests for the getOpenOCOOrders method in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOpenOCOOrders",
                "primary_tested": [
                    "Trade.getOpenOCOOrders(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "HttpMethod",
                        "RequestHandler",
                        "HmacSignatureGenerator",
                        "ProxyAuth",
                        "Dispatcher",
                        "LinkedHashMap",
                        "Map"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOpenOCOOrders method in the Trade class, ensuring it returns the expected response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/SpotClientImpl_createConvertTest.java",
        "testclass_name": "SpotClientImpl_createConvertTest",
        "dependencies": [
            "package com.binance.connector.client.impl;",
            "import com.binance.connector.client.impl.spot.Convert;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import static org.junit.Assert.assertNotNull;"
        ],
        "name": "SpotClientImpl_createConvertTest",
        "description": "Unit tests for creating a Convert instance using the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "spotClient",
                    "type": "SpotClientImpl"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "apiKey",
                    "type": "String"
                },
                {
                    "name": "signatureGenerator",
                    "type": "SignatureGenerator"
                },
                {
                    "name": "showLimitUsage",
                    "type": "boolean"
                },
                {
                    "name": "proxy",
                    "type": "ProxyAuth"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testCreateConvert",
                "primary_tested": [
                    "SpotClientImpl.createConvert()"
                ],
                "external_dependencies": {
                    "modules": [
                        "Convert",
                        "SpotClientImpl",
                        "HmacSignatureGenerator",
                        "SignatureGenerator"
                    ],
                    "class_members": [
                        {
                            "name": "spotClient",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "apiKey",
                            "type": "variable"
                        },
                        {
                            "name": "signatureGenerator",
                            "type": "variable"
                        },
                        {
                            "name": "showLimitUsage",
                            "type": "variable"
                        },
                        {
                            "name": "proxy",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the creation of a Convert instance using the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/UserData_extendListenKeyTest.java",
        "testclass_name": "UserData_extendListenKeyTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "UserData_extendListenKeyTest",
        "description": "Unit tests for extending the listen key in UserData class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "userData",
                    "type": "UserData"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testExtendListenKeyWithoutParameters",
                "primary_tested": [
                    "UserData.extendListenKey(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "UserData"
                    ],
                    "class_members": [
                        {
                            "name": "userData",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of extending the listen key without providing parameters, expecting a BinanceConnectorException."
            },
            {
                "name": "testExtendListenKeyWithValidParameters",
                "primary_tested": [
                    "UserData.extendListenKey(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "UserData",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "MockWebServer"
                    ],
                    "class_members": [
                        {
                            "name": "userData",
                            "type": "variable"
                        },
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of extending the listen key with valid parameters, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SpotAlgo_cancelOrderTest.java",
        "testclass_name": "SpotAlgo_cancelOrderTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SpotAlgo_cancelOrderTest",
        "description": "Tests for the cancellation of spot algo orders.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "spotAlgo",
                    "type": "SpotAlgo"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCancelOrderSuccess",
                "primary_tested": [
                    "SpotAlgo.cancelOrder(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "SpotAlgo",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "spotAlgo",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful cancellation of a spot algo order."
            },
            {
                "name": "testCancelOrderMissingAlgoId",
                "primary_tested": [
                    "SpotAlgo.cancelOrder(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotAlgo",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "spotAlgo",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior when attempting to cancel a spot algo order without providing the required 'algoId'."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_queryUniversalTransferTest.java",
        "testclass_name": "SubAccount_queryUniversalTransferTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_queryUniversalTransferTest",
        "description": "Unit tests for querying universal transfers in the SubAccount class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "subAccount",
                    "type": "SubAccount"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testQueryUniversalTransfer",
                "primary_tested": [
                    "SubAccount.queryUniversalTransfer(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "SubAccount",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the queryUniversalTransfer method of the SubAccount class with valid parameters."
            },
            {
                "name": "testQueryUniversalTransferWithoutParameters",
                "primary_tested": [
                    "SubAccount.queryUniversalTransfer(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SubAccount",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the queryUniversalTransfer method of the SubAccount class without parameters, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_plansListTest.java",
        "testclass_name": "AutoInvest_plansListTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "AutoInvest_plansListTest",
        "description": "Tests for the AutoInvest plans list functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "autoInvest",
                    "type": "AutoInvest"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testPlansListSuccess",
                "primary_tested": [
                    "AutoInvest.plansList(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "AutoInvest",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "autoInvest",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of plans list with a valid plan type."
            },
            {
                "name": "testPlansListMissingPlanType",
                "primary_tested": [
                    "AutoInvest.plansList(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "AutoInvest",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "autoInvest",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior when the plan type is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_enableFuturesTest.java",
        "testclass_name": "SubAccount_enableFuturesTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_enableFuturesTest",
        "description": "Tests for enabling futures functionality for sub-accounts in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "subAccount",
                    "type": "SubAccount"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEnableFuturesWithoutEmail",
                "primary_tested": [
                    "SubAccount.enableFutures(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the exception thrown when enabling futures without providing an email."
            },
            {
                "name": "testEnableFuturesWithValidEmail",
                "primary_tested": [
                    "SubAccount.enableFutures(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful enabling of futures with a valid email."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_renewTest.java",
        "testclass_name": "VIPLoans_renewTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "VIPLoans_renewTest",
        "description": "Unit tests for the VIPLoans renew functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "vipLoans",
                    "type": "VIPLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testRenewSuccess",
                "primary_tested": [
                    "VIPLoans.renew(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "VIPLoans",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful renewal of a VIP loan."
            },
            {
                "name": "testRenewMissingOrderId",
                "primary_tested": [
                    "VIPLoans.renew(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "VIPLoans",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior when attempting to renew a VIP loan without providing an order ID, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanIncomeTest.java",
        "testclass_name": "CryptoLoans_loanIncomeTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_loanIncomeTest",
        "description": "Unit tests for the loan income functionality of the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLoanIncomeWithValidParameters",
                "primary_tested": [
                    "CryptoLoans.loanIncome(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "MockData"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the loan income functionality with valid parameters."
            },
            {
                "name": "testLoanIncomeWithoutAssetParameter",
                "primary_tested": [
                    "CryptoLoans.loanIncome(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "CryptoLoans",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the loan income functionality without the required asset parameter, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_dustTransferTest.java",
        "testclass_name": "Wallet_dustTransferTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.ArrayList;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_dustTransferTest",
        "description": "Unit tests for the dust transfer functionality in the Wallet class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "wallet",
                    "type": "Wallet"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testDustTransferSuccess",
                "primary_tested": [
                    "Wallet.dustTransfer(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Wallet",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "MockData"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "wallet",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful dust transfer functionality of the Wallet."
            },
            {
                "name": "testDustTransferInvalidParameter",
                "primary_tested": [
                    "Wallet.dustTransfer(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Wallet",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "wallet",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the handling of invalid parameters in the dust transfer functionality of the Wallet."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_repaymentHistoryTest.java",
        "testclass_name": "VIPLoans_repaymentHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "VIPLoans_repaymentHistoryTest",
        "description": "Test suite for the repayment history functionality of VIP loans.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "vipLoans",
                    "type": "VIPLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testRepaymentHistory",
                "primary_tested": [
                    "VIPLoans.repaymentHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "RequestHandler",
                        "HmacSignatureGenerator",
                        "Dispatcher",
                        "LinkedHashMap",
                        "Map",
                        "HttpMethod",
                        "MockData",
                        "MockWebServerDispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the repayment history functionality of VIP loans by verifying the response from the mock server."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Convert_acceptQuoteTest.java",
        "testclass_name": "Convert_acceptQuoteTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Convert_acceptQuoteTest",
        "description": "Unit tests for the acceptQuote method in the Convert class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "convert",
                    "type": "Convert"
                }
            ],
            "methods": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAcceptQuoteWithoutParameters",
                "primary_tested": [
                    "Convert.acceptQuote(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "convert",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the acceptQuote method without parameters, expecting a BinanceConnectorException."
            },
            {
                "name": "testAcceptQuoteWithParameters",
                "primary_tested": [
                    "Convert.acceptQuote(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "convert",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the acceptQuote method with parameters, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_assetsTest.java",
        "testclass_name": "SubAccount_assetsTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.UrlBuilder;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_assetsTest",
        "description": "Tests for the SubAccount assets functionality in the Binance Connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAssetsWithoutParameters",
                "primary_tested": [
                    "SubAccount.assets(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "Dispatcher",
                        "HttpMethod",
                        "MockData",
                        "MockWebServerDispatcher",
                        "LinkedHashMap",
                        "Map"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the SubAccount assets functionality without providing any parameters, expecting a BinanceConnectorException."
            },
            {
                "name": "testAssetsWithValidParameters",
                "primary_tested": [
                    "SubAccount.assets(Map<String,Object>)"
                ],
                "associated_methods": [
                    "UrlBuilder.urlEncode(String)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "MockWebServer",
                        "Dispatcher",
                        "HttpMethod",
                        "MockData",
                        "MockWebServerDispatcher",
                        "LinkedHashMap",
                        "Map",
                        "UrlBuilder"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the SubAccount assets functionality with valid parameters, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingQuotaTest.java",
        "testclass_name": "Staking_ethStakingQuotaTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingQuotaTest",
        "description": "Test for the ethStakingQuota method in the Staking service of the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingQuota",
                "primary_tested": [
                    "Staking.ethStakingQuota(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ethStakingQuota method of the Staking service in the SpotClientImpl class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingWbethRewardHistoryTest.java",
        "testclass_name": "Staking_ethStakingWbethRewardHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingWbethRewardHistoryTest",
        "description": "Test for the ethStakingWbethRewardHistory method in the Staking service of the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingWbethRewardHistory",
                "primary_tested": [
                    "Staking.ethStakingWbethRewardHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ethStakingWbethRewardHistory method of the Staking service in the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_algorithmTest.java",
        "testclass_name": "Mining_algorithmTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Mining_algorithmTest",
        "description": "Unit tests for the Mining algorithm functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "mining",
                    "type": "Mining"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAlgorithm",
                "primary_tested": [
                    "Mining.algorithm(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Mining",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the algorithm method of the Mining class with default parameters."
            },
            {
                "name": "testAlgorithmWithParameters",
                "primary_tested": [
                    "Mining.algorithm(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Mining",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the algorithm method of the Mining class with specific parameters."
            },
            {
                "name": "testAlgorithmWithInvalidParameters",
                "primary_tested": [
                    "Mining.algorithm(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "LinkedHashMap",
                        "BinanceConnectorException",
                        "Mining"
                    ],
                    "class_members": [
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the algorithm method of the Mining class with invalid parameters, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Blvt_blvtInfoTest.java",
        "testclass_name": "Blvt_blvtInfoTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Blvt_blvtInfoTest",
        "description": "Unit tests for the Blvt class's blvtInfo method.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "blvt",
                    "type": "Blvt"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testBlvtInfoSuccess",
                "primary_tested": [
                    "Blvt.blvtInfo(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Blvt",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "blvt",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of BLVT info with valid parameters."
            },
            {
                "name": "testBlvtInfoWithoutParameters",
                "primary_tested": [
                    "Blvt.blvtInfo(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Blvt",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "blvt",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the retrieval of BLVT info without providing any parameters."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanCollateralAssetsTest.java",
        "testclass_name": "CryptoLoans_flexibleLoanCollateralAssetsTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_flexibleLoanCollateralAssetsTest",
        "description": "Test for the flexible loan collateral assets functionality in the CryptoLoans service.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFlexibleLoanCollateralAssets",
                "primary_tested": [
                    "CryptoLoans.flexibleLoanCollateralAssets(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the flexible loan collateral assets functionality of the CryptoLoans service."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_forceLiquidationRecTest.java",
        "testclass_name": "Margin_forceLiquidationRecTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_forceLiquidationRecTest",
        "description": "Test for the force liquidation record functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ],
            "methods": [],
            "nested_classes": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testForceLiquidationRec",
                "primary_tested": [
                    "Margin.forceLiquidationRec(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Margin",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the force liquidation record functionality by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_simpleAccountTest.java",
        "testclass_name": "SimpleEarn_simpleAccountTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_simpleAccountTest",
        "description": "Test suite for the SimpleEarn simpleAccount functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testSimpleAccount",
                "primary_tested": [
                    "SimpleEarn.simpleAccount(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the simpleAccount functionality of the SimpleEarn module."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_withdrawHistoryTest.java",
        "testclass_name": "Wallet_withdrawHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_withdrawHistoryTest",
        "description": "Unit tests for the withdraw history functionality of the Wallet class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "wallet",
                    "type": "Wallet"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testWithdrawHistory",
                "primary_tested": [
                    "Wallet.withdrawHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Wallet",
                        "LinkedHashMap",
                        "Map"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "wallet",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the withdraw history functionality of the Wallet class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/PortfolioMargin_repayFuturesTest.java",
        "testclass_name": "PortfolioMargin_repayFuturesTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "PortfolioMargin_repayFuturesTest",
        "description": "Unit tests for the PortfolioMargin repayFutures functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "portfolioMargin",
                    "type": "PortfolioMargin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testRepayFutures",
                "primary_tested": [
                    "PortfolioMargin.repayFutures(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "PortfolioMargin",
                        "HmacSignatureGenerator",
                        "ProxyAuth",
                        "Dispatcher",
                        "Map",
                        "LinkedHashMap",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "portfolioMargin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the repayFutures functionality of the PortfolioMargin class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_flexibleSubscriptionRecordTest.java",
        "testclass_name": "SimpleEarn_flexibleSubscriptionRecordTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_flexibleSubscriptionRecordTest",
        "description": "Test suite for the flexible subscription record functionality in the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFlexibleSubscriptionRecord",
                "primary_tested": [
                    "SimpleEarn.flexibleSubscriptionRecord(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "SimpleEarn",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the flexible subscription record functionality of the SimpleEarn class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_delistScheduleTest.java",
        "testclass_name": "Margin_delistScheduleTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_delistScheduleTest",
        "description": "Test suite for the delist schedule functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ],
            "methods": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testDelistSchedule",
                "primary_tested": [
                    "Margin.delistSchedule(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Margin",
                        "RequestHandler",
                        "HmacSignatureGenerator"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the delist schedule functionality of the Margin class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanRepayHistoryTest.java",
        "testclass_name": "CryptoLoans_loanRepayHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_loanRepayHistoryTest",
        "description": "Unit tests for the loan repayment history functionality in the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLoanRepayHistory",
                "primary_tested": [
                    "CryptoLoans.loanRepayHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "MockData"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the loan repayment history functionality of the CryptoLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanOngoingOrdersTest.java",
        "testclass_name": "CryptoLoans_loanOngoingOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_loanOngoingOrdersTest",
        "description": "Test suite for the ongoing loan orders functionality in the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLoanOngoingOrders",
                "primary_tested": [
                    "CryptoLoans.loanOngoingOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ongoing loan orders functionality of the CryptoLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedRewardsHistoryTest.java",
        "testclass_name": "SimpleEarn_lockedRewardsHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_lockedRewardsHistoryTest",
        "description": "Unit tests for the locked rewards history functionality of the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLockedRewardsHistory",
                "primary_tested": [
                    "SimpleEarn.lockedRewardsHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "SimpleEarn",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the locked rewards history functionality of the SimpleEarn class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_isolatedMarginDataTest.java",
        "testclass_name": "Margin_isolatedMarginDataTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_isolatedMarginDataTest",
        "description": "Test suite for isolated margin data functionality in the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testIsolatedMarginData",
                "primary_tested": [
                    "Margin.isolatedMarginData(Map<String, Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String, String, String, HttpMethod, int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the isolated margin data functionality of the Margin created by the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanLtvAdjustHistoryTest.java",
        "testclass_name": "CryptoLoans_flexibleLoanLtvAdjustHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_flexibleLoanLtvAdjustHistoryTest",
        "description": "Test for the flexible loan LTV adjustment history functionality in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ],
            "methods": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFlexibleLoanLtvAdjustHistory",
                "primary_tested": [
                    "CryptoLoans.flexibleLoanLtvAdjustHistory(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Dispatcher",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the flexible loan LTV adjustment history functionality by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingWbethWrapHistoryTest.java",
        "testclass_name": "Staking_ethStakingWbethWrapHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingWbethWrapHistoryTest",
        "description": "Test for the ethStakingWbethWrapHistory method in the Staking service of the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingWbethWrapHistory",
                "primary_tested": [
                    "Staking.ethStakingWbethWrapHistory(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ethStakingWbethWrapHistory method of the Staking service in the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_fundingWalletTest.java",
        "testclass_name": "Wallet_fundingWalletTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_fundingWalletTest",
        "description": "Unit tests for the funding wallet functionality in the Wallet class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "wallet",
                    "type": "Wallet"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFundingWallet",
                "primary_tested": [
                    "Wallet.fundingWallet(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Wallet"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "wallet",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the funding wallet functionality of the Wallet class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_createVirtualSubAccountTest.java",
        "testclass_name": "SubAccount_createVirtualSubAccountTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_createVirtualSubAccountTest",
        "description": "Tests for the creation of virtual sub-accounts in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "subAccount",
                    "type": "SubAccount"
                }
            ],
            "methods": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCreateVirtualSubAccountSuccess",
                "primary_tested": [
                    "SubAccount.createVirtualSubAccount(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "LinkedHashMap",
                        "Dispatcher",
                        "HttpMethod",
                        "SubAccount",
                        "MockData"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful creation of a virtual sub-account with the provided parameters."
            },
            {
                "name": "testCreateVirtualSubAccountMissingParameter",
                "primary_tested": [
                    "SubAccount.createVirtualSubAccount(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "LinkedHashMap",
                        "BinanceConnectorException",
                        "SubAccount"
                    ],
                    "class_members": [
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the handling of a missing parameter in the creation of a virtual sub-account, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_leverageBracketTest.java",
        "testclass_name": "Margin_leverageBracketTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_leverageBracketTest",
        "description": "Test suite for the leverage bracket functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ],
            "methods": [],
            "nested_classes": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLeverageBracket",
                "primary_tested": [
                    "Margin.leverageBracket()"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "RequestHandler",
                        "Margin"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the leverage bracket functionality of the Margin class by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_coinInfoTest.java",
        "testclass_name": "Wallet_coinInfoTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_coinInfoTest",
        "description": "Test suite for the coinInfo method in the Wallet service of the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCoinInfo",
                "primary_tested": [
                    "Wallet.coinInfo(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.PREFIX",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the coinInfo method of the Wallet service in the SpotClientImpl, ensuring it returns the expected mock response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_cancelOpenOrdersTest.java",
        "testclass_name": "Trade_cancelOpenOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_cancelOpenOrdersTest",
        "description": "Tests for the cancelOpenOrders functionality in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCancelOpenOrdersSuccess",
                "primary_tested": [
                    "Trade.cancelOpenOrders(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful cancellation of open orders with a valid symbol."
            },
            {
                "name": "testCancelOpenOrdersWithoutSymbol",
                "primary_tested": [
                    "Trade.cancelOpenOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Trade",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior when attempting to cancel open orders without providing a symbol, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_indexPlanRebalanceInfoTest.java",
        "testclass_name": "AutoInvest_indexPlanRebalanceInfoTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "AutoInvest_indexPlanRebalanceInfoTest",
        "description": "Tests for the index plan rebalance info functionality in the AutoInvest module of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ],
            "methods": [],
            "nested_classes": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testIndexPlanRebalanceInfo",
                "primary_tested": [
                    "AutoInvest.indexPlanRebalanceInfo(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the index plan rebalance info functionality with default parameters."
            },
            {
                "name": "testIndexPlanRebalanceInfoWithParameters",
                "primary_tested": [
                    "AutoInvest.indexPlanRebalanceInfo(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the index plan rebalance info functionality with specific parameters."
            },
            {
                "name": "testIndexPlanRebalanceInfoWithoutParameters",
                "primary_tested": [
                    "AutoInvest.indexPlanRebalanceInfo(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the index plan rebalance info functionality without any parameters."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Fiat_paymentsTest.java",
        "testclass_name": "Fiat_paymentsTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Fiat_paymentsTest",
        "description": "Unit tests for the Fiat payments functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "fiatClient",
                    "type": "Fiat"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testPayments",
                "primary_tested": [
                    "Fiat.payments(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Fiat",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "fiatClient",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the payments functionality of the Fiat client with a valid transaction type."
            },
            {
                "name": "testPaymentsMissingTransactionType",
                "primary_tested": [
                    "Fiat.payments(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Fiat",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "fiatClient",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the payments functionality of the Fiat client when the transaction type is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_maxBorrowTest.java",
        "testclass_name": "Margin_maxBorrowTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_maxBorrowTest",
        "description": "Unit tests for the maxBorrow functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testMaxBorrow",
                "primary_tested": [
                    "Margin.maxBorrow(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Margin",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the maxBorrow functionality of the Margin class with a valid asset parameter."
            },
            {
                "name": "testMaxBorrowMissingAsset",
                "primary_tested": [
                    "Margin.maxBorrow(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Margin",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the maxBorrow functionality of the Margin class when the asset parameter is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_getOrderTest.java",
        "testclass_name": "Trade_getOrderTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_getOrderTest",
        "description": "Unit tests for the getOrder method in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOrderSuccess",
                "primary_tested": [
                    "Trade.getOrder(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Trade",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of an order by verifying the response from the mock server."
            },
            {
                "name": "testGetOrderMissingSymbol",
                "primary_tested": [
                    "Trade.getOrder(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Trade",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of the getOrder method when the 'symbol' parameter is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_cancelOCOTest.java",
        "testclass_name": "Trade_cancelOCOTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_cancelOCOTest",
        "description": "Tests for canceling OCO orders in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCancelOCOWithoutParameters",
                "primary_tested": [
                    "Trade.cancelOCO(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of cancelOCO method when no parameters are provided, expecting a BinanceConnectorException."
            },
            {
                "name": "testCancelOCOSuccess",
                "primary_tested": [
                    "Trade.cancelOCO(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful cancellation of an OCO order with the required parameters."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_capitalFlowTest.java",
        "testclass_name": "Margin_capitalFlowTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_capitalFlowTest",
        "description": "Test suite for the capital flow functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCapitalFlow",
                "primary_tested": [
                    "Margin.capitalFlow(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "HttpMethod",
                        "RequestHandler",
                        "HmacSignatureGenerator",
                        "Dispatcher",
                        "LinkedHashMap",
                        "Map"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the capital flow functionality of the Margin class by mocking the web server response and verifying the result."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedProductPositionTest.java",
        "testclass_name": "SimpleEarn_lockedProductPositionTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_lockedProductPositionTest",
        "description": "Test suite for the locked product position functionality in the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLockedProductPosition",
                "primary_tested": [
                    "SimpleEarn.lockedProductPosition(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "SimpleEarn",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the locked product position functionality of the SimpleEarn class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_cancelOrderTest.java",
        "testclass_name": "Trade_cancelOrderTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_cancelOrderTest",
        "description": "Tests for the cancelOrder method in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCancelOrderSuccess",
                "primary_tested": [
                    "Trade.cancelOrder(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful cancellation of an order by verifying the response."
            },
            {
                "name": "testCancelOrderWithoutSymbol",
                "primary_tested": [
                    "Trade.cancelOrder(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Trade",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of the cancelOrder method when the symbol parameter is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_tradesTest.java",
        "testclass_name": "Market_tradesTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Market_tradesTest",
        "description": "Tests for the trades endpoint in the Binance Spot Client API.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTradesWithoutSymbol",
                "primary_tested": [
                    "Market.trades(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the trades endpoint without a symbol, expecting a BinanceConnectorException."
            },
            {
                "name": "testTradesWithSymbol",
                "primary_tested": [
                    "Market.trades(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the trades endpoint with a symbol, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedProductListTest.java",
        "testclass_name": "SimpleEarn_lockedProductListTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_lockedProductListTest",
        "description": "Unit tests for the locked product list functionality of the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLockedProductList",
                "primary_tested": [
                    "SimpleEarn.lockedProductList(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "ProxyAuth",
                        "SimpleEarn"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the locked product list functionality of the SimpleEarn class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_apiPermissionTest.java",
        "testclass_name": "Wallet_apiPermissionTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_apiPermissionTest",
        "description": "Test for the API permission functionality in the Wallet API of the Binance Connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testApiPermission",
                "primary_tested": [
                    "Wallet.apiPermission(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.PREFIX",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the API permission functionality of the Wallet API by verifying the response from the mock server."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_isolatedAccountTest.java",
        "testclass_name": "Margin_isolatedAccountTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_isolatedAccountTest",
        "description": "Test suite for the isolated account functionality in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testIsolatedAccount",
                "primary_tested": [
                    "Margin.isolatedAccount(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Margin"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the isolated account functionality of the Margin class by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Blvt_subscriptionRecordTest.java",
        "testclass_name": "Blvt_subscriptionRecordTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Blvt_subscriptionRecordTest",
        "description": "Unit tests for the Blvt subscription record functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "blvt",
                    "type": "Blvt"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testSubscriptionRecordSuccess",
                "primary_tested": [
                    "Blvt.subscriptionRecord(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Blvt",
                        "HmacSignatureGenerator",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "blvt",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful subscription record retrieval for the Blvt class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresAccountTest.java",
        "testclass_name": "SubAccount_futuresAccountTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.UrlBuilder;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_futuresAccountTest",
        "description": "Tests for the futures account functionality of the SubAccount service in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFuturesAccountWithoutEmail",
                "primary_tested": [
                    "SubAccount.futuresAccount(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the futures account functionality without providing an email, expecting a BinanceConnectorException."
            },
            {
                "name": "testFuturesAccountWithEmail",
                "primary_tested": [
                    "SubAccount.futuresAccount(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the futures account functionality by providing an email and expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/UserData_createIsolatedMarginListenKeyTest.java",
        "testclass_name": "UserData_createIsolatedMarginListenKeyTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "UserData_createIsolatedMarginListenKeyTest",
        "description": "Unit tests for the creation of isolated margin listen keys in the UserData class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "userData",
                    "type": "UserData"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCreateIsolatedMarginListenKeyWithoutSymbol",
                "primary_tested": [
                    "UserData.createIsolatedMarginListenKey(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "UserData"
                    ],
                    "class_members": [
                        {
                            "name": "userData",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the creation of an isolated margin listen key without providing a symbol, expecting a BinanceConnectorException."
            },
            {
                "name": "testCreateIsolatedMarginListenKeyWithSymbol",
                "primary_tested": [
                    "UserData.createIsolatedMarginListenKey(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "UserData",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "userData",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the creation of an isolated margin listen key with a provided symbol, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SpotAlgo_getSubOrdersTest.java",
        "testclass_name": "SpotAlgo_getSubOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SpotAlgo_getSubOrdersTest",
        "description": "Unit tests for the getSubOrders method in the SpotAlgo class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "client",
                    "type": "SpotClient"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetSubOrders",
                "primary_tested": [
                    "SpotAlgo.getSubOrders(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "client",
                            "type": "variable"
                        },
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getSubOrders method with a valid algoId."
            },
            {
                "name": "testGetSubOrdersWithoutAlgoId",
                "primary_tested": [
                    "SpotAlgo.getSubOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "client",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getSubOrders method without providing an algoId, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/GiftCard_tokensLimitTest.java",
        "testclass_name": "GiftCard_tokensLimitTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "GiftCard_tokensLimitTest",
        "description": "Tests for the tokens limit functionality of the GiftCard class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "giftCard",
                    "type": "GiftCard"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTokensLimitSuccess",
                "primary_tested": [
                    "GiftCard.tokensLimit(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "HttpMethod",
                        "GiftCard",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "giftCard",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of tokens limit with a valid base token."
            },
            {
                "name": "testTokensLimitWithoutBaseToken",
                "primary_tested": [
                    "GiftCard.tokensLimit(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "GiftCard",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "giftCard",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior when attempting to retrieve tokens limit without providing a base token, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_sorAllocationsTest.java",
        "testclass_name": "Trade_sorAllocationsTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.ParameterChecker;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_sorAllocationsTest",
        "description": "Tests for the sorAllocations method in the Trade API of the Binance Connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testSorAllocations",
                "primary_tested": [
                    "Trade.sorAllocations(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the sorAllocations method with a valid symbol parameter."
            },
            {
                "name": "testSorAllocationsMissingSymbol",
                "primary_tested": [
                    "Trade.sorAllocations(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "BinanceConnectorException",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the sorAllocations method when the symbol parameter is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SpotAlgo_getHistoricalOrdersTest.java",
        "testclass_name": "SpotAlgo_getHistoricalOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SpotAlgo_getHistoricalOrdersTest",
        "description": "Unit test for the getHistoricalOrders method in the SpotAlgo class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetHistoricalOrders",
                "primary_tested": [
                    "SpotAlgo.getHistoricalOrders(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getHistoricalOrders functionality of the SpotAlgo class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/NFT_withdrawHistoryTest.java",
        "testclass_name": "NFT_withdrawHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "NFT_withdrawHistoryTest",
        "description": "Unit tests for the NFT withdraw history functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "nft",
                    "type": "NFT"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testWithdrawHistory",
                "primary_tested": [
                    "NFT.withdrawHistory(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "HttpMethod",
                        "HmacSignatureGenerator",
                        "NFT"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "nft",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the withdraw history functionality of the NFT class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_queryUniversalTransferTest.java",
        "testclass_name": "Wallet_queryUniversalTransferTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_queryUniversalTransferTest",
        "description": "Tests for the universal transfer query functionality in the Wallet class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "wallet",
                    "type": "Wallet"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testQueryUniversalTransferSuccess",
                "primary_tested": [
                    "Wallet.queryUniversalTransfer(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "HttpMethod",
                        "Dispatcher",
                        "Wallet"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "wallet",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful query of a universal transfer with the required parameters."
            },
            {
                "name": "testQueryUniversalTransferMissingType",
                "primary_tested": [
                    "Wallet.queryUniversalTransfer(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Wallet",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "wallet",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the handling of a BinanceConnectorException when the 'type' parameter is missing."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_hashrateResaleListTest.java",
        "testclass_name": "Mining_hashrateResaleListTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Mining_hashrateResaleListTest",
        "description": "Tests for the hashrate resale list functionality in the Mining class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "mining",
                    "type": "Mining"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testHashrateResaleListSuccess",
                "primary_tested": [
                    "Mining.hashrateResaleList(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Mining",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of hashrate resale list with specified parameters."
            },
            {
                "name": "testHashrateResaleListWithoutParameters",
                "primary_tested": [
                    "Mining.hashrateResaleList(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Mining",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the retrieval of hashrate resale list without any parameters."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_redeemLockedProductTest.java",
        "testclass_name": "SimpleEarn_redeemLockedProductTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_redeemLockedProductTest",
        "description": "Tests for redeeming locked products in the SimpleEarn service.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testRedeemLockedProductSuccess",
                "primary_tested": [
                    "SimpleEarn.redeemLockedProduct(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "SimpleEarn",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful redemption of a locked product in the SimpleEarn service."
            },
            {
                "name": "testRedeemLockedProductWithoutPositionId",
                "primary_tested": [
                    "SimpleEarn.redeemLockedProduct(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "SimpleEarn",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of the SimpleEarn service when attempting to redeem a locked product without providing a position ID, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_getOrdersTest.java",
        "testclass_name": "Trade_getOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_getOrdersTest",
        "description": "Unit tests for the getOrders method in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOrdersSuccess",
                "primary_tested": [
                    "Trade.getOrders(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of orders with a valid symbol parameter."
            },
            {
                "name": "testGetOrdersWithoutSymbol",
                "primary_tested": [
                    "Trade.getOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Trade",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of the getOrders method when called without the required symbol parameter, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_interestRateHistoryTest.java",
        "testclass_name": "Margin_interestRateHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_interestRateHistoryTest",
        "description": "Tests for the interest rate history functionality in the Margin module of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testInterestRateHistory",
                "primary_tested": [
                    "Margin.interestRateHistory(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the interest rate history functionality with a valid asset parameter."
            },
            {
                "name": "testInterestRateHistoryMissingAsset",
                "primary_tested": [
                    "Margin.interestRateHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockData",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the interest rate history functionality when the 'asset' parameter is missing, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_depthTest.java",
        "testclass_name": "Market_depthTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Market_depthTest",
        "description": "Unit tests for the depth functionality of the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testDepthWithoutSymbol",
                "primary_tested": [
                    "Market.depth(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the depth functionality of the Market class without providing a symbol, expecting a BinanceConnectorException."
            },
            {
                "name": "testDepthWithSymbol",
                "primary_tested": [
                    "Market.depth(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the depth functionality of the Market class with a provided symbol, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_collateralRecordTest.java",
        "testclass_name": "SimpleEarn_collateralRecordTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_collateralRecordTest",
        "description": "Test suite for the collateral record functionality of the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCollateralRecord",
                "primary_tested": [
                    "SimpleEarn.collateralRecord(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "RequestHandler",
                        "ProxyAuth",
                        "HmacSignatureGenerator",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the collateral record functionality of the SimpleEarn class by mocking the web server response and verifying the result."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_getOcoOpenOrdersTest.java",
        "testclass_name": "Margin_getOcoOpenOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_getOcoOpenOrdersTest",
        "description": "Test suite for the Margin class's getOcoOpenOrders method.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOcoOpenOrders",
                "primary_tested": [
                    "Margin.getOcoOpenOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Margin"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOcoOpenOrders method of the Margin class by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_targetAssetListTest.java",
        "testclass_name": "AutoInvest_targetAssetListTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "AutoInvest_targetAssetListTest",
        "description": "Test for the target asset list functionality in the AutoInvest module of the SpotClient.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTargetAssetList",
                "primary_tested": [
                    "AutoInvest.targetAssetList(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the target asset list functionality of the AutoInvest module in the SpotClient."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingRedeemHistoryTest.java",
        "testclass_name": "Staking_ethStakingRedeemHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingRedeemHistoryTest",
        "description": "Test for the redemption history functionality of ETH staking in the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingRedeemHistory",
                "primary_tested": [
                    "Staking.ethStakingRedeemHistory(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the redemption history functionality of ETH staking in the SpotClientImpl class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/GiftCard_redeemCodeTest.java",
        "testclass_name": "GiftCard_redeemCodeTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "GiftCard_redeemCodeTest",
        "description": "Unit tests for redeeming gift card codes using the GiftCard class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "giftCard",
                    "type": "GiftCard"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testRedeemCodeSuccess",
                "primary_tested": [
                    "GiftCard.redeemCode(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockData",
                        "HttpMethod",
                        "GiftCard",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "giftCard",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful redemption of a gift card code."
            },
            {
                "name": "testRedeemCodeWithoutCode",
                "primary_tested": [
                    "GiftCard.redeemCode(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "GiftCard",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "giftCard",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior when attempting to redeem a gift card code without providing a code, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_accountStatusTest.java",
        "testclass_name": "Wallet_accountStatusTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_accountStatusTest",
        "description": "Test for the account status functionality in the Wallet module of the SpotClientImpl.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAccountStatus",
                "primary_tested": [
                    "Wallet.accountStatus(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the account status functionality of the Wallet module in the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_ongoingOrdersTest.java",
        "testclass_name": "VIPLoans_ongoingOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "VIPLoans_ongoingOrdersTest",
        "description": "Test suite for the ongoing orders functionality of VIPLoans.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "vipLoans",
                    "type": "VIPLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testOngoingOrders",
                "primary_tested": [
                    "VIPLoans.ongoingOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "LinkedHashMap",
                        "Map",
                        "Dispatcher",
                        "HttpMethod",
                        "RequestHandler",
                        "HmacSignatureGenerator",
                        "MockData",
                        "MockWebServerDispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ongoing orders functionality of the VIPLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_coinNameTest.java",
        "testclass_name": "Mining_coinNameTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.exceptions.BinanceServerException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Mining_coinNameTest",
        "description": "Unit tests for the coinName method in the Mining class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "mining",
                    "type": "Mining"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCoinName",
                "primary_tested": [
                    "Mining.coinName(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "Mining",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the coinName method without parameters."
            },
            {
                "name": "testCoinNameWithParameters",
                "primary_tested": [
                    "Mining.coinName(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "Mining",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the coinName method with parameters."
            },
            {
                "name": "testCoinNameException",
                "primary_tested": [
                    "Mining.coinName(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "Mining",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher",
                        "BinanceServerException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "mining",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the coinName method to handle exceptions."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_timeTest.java",
        "testclass_name": "Market_timeTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Market_timeTest",
        "description": "Unit tests for the Market class time method.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "market",
                    "type": "Market"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTime",
                "primary_tested": [
                    "Market.time()"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Market",
                        "ProxyAuth"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "market",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the time method of the Market class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresAccountSummaryTest.java",
        "testclass_name": "SubAccount_futuresAccountSummaryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.UrlBuilder;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_futuresAccountSummaryTest",
        "description": "Test for the futures account summary functionality of the SubAccount service in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFuturesAccountSummary",
                "primary_tested": [
                    "SubAccount.futuresAccountSummary(Map<String,Object>)"
                ],
                "associated_methods": [
                    "UrlBuilder.urlEncode(String)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "UrlBuilder",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the futures account summary functionality of the SubAccount service by verifying the response from the mock server."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/PortfolioMargin_interestHistoryTest.java",
        "testclass_name": "PortfolioMargin_interestHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "PortfolioMargin_interestHistoryTest",
        "description": "Unit tests for the interest history functionality of the PortfolioMargin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "portfolioMargin",
                    "type": "PortfolioMargin"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testInterestHistory",
                "primary_tested": [
                    "PortfolioMargin.interestHistory(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "PortfolioMargin",
                        "HmacSignatureGenerator",
                        "ProxyAuth",
                        "MockData",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "portfolioMargin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the interest history functionality of the PortfolioMargin class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_borrowInterestRateTest.java",
        "testclass_name": "VIPLoans_borrowInterestRateTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "VIPLoans_borrowInterestRateTest",
        "description": "Test suite for the VIPLoans borrow interest rate functionality.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "vipLoans",
                    "type": "VIPLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testBorrowInterestRate",
                "primary_tested": [
                    "VIPLoans.borrowInterestRate(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "VIPLoans",
                        "HmacSignatureGenerator",
                        "ProxyAuth",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the borrow interest rate functionality of the VIPLoans class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubDetailsTest.java",
        "testclass_name": "SubAccount_managedSubDetailsTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.UrlBuilder;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_managedSubDetailsTest",
        "description": "Tests for the managed sub-account details functionality in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testManagedSubDetailsWithoutParameters",
                "primary_tested": [
                    "SubAccount.managedSubDetails(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Map",
                        "UrlBuilder"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "UrlBuilder.urlEncode(String)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the managed sub-account details functionality without parameters, expecting a BinanceConnectorException."
            },
            {
                "name": "testManagedSubDetailsWithParameters",
                "primary_tested": [
                    "SubAccount.managedSubDetails(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Map",
                        "UrlBuilder"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "UrlBuilder.urlEncode(String)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the managed sub-account details functionality with parameters, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/UserData_closeMarginListenKeyTest.java",
        "testclass_name": "UserData_closeMarginListenKeyTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "UserData_closeMarginListenKeyTest",
        "description": "Tests for closing margin listen key functionality in the Binance Spot Client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCloseMarginListenKeyWithoutParameters",
                "primary_tested": [
                    "UserData.closeMarginListenKey(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of closing a margin listen key without providing parameters, expecting a BinanceConnectorException."
            },
            {
                "name": "testCloseMarginListenKeyWithValidParameters",
                "primary_tested": [
                    "UserData.closeMarginListenKey(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful closing of a margin listen key with valid parameters."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_tradeCoeffTest.java",
        "testclass_name": "Margin_tradeCoeffTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_tradeCoeffTest",
        "description": "Test suite for the tradeCoeff method in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ],
            "methods": [],
            "nested_classes": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testTradeCoeff",
                "primary_tested": [
                    "Margin.tradeCoeff(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Margin",
                        "RequestHandler",
                        "MockData"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the tradeCoeff method of the Margin class by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_availableInventoryTest.java",
        "testclass_name": "Margin_availableInventoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_availableInventoryTest",
        "description": "Test for the available inventory functionality in the Margin module of the SpotClient.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAvailableInventory",
                "primary_tested": [
                    "Margin.availableInventory(Map<String, Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String, String, String, HttpMethod, int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the available inventory functionality of the Margin module in the SpotClient."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_applyOneClickArrivalDepositTest.java",
        "testclass_name": "Wallet_applyOneClickArrivalDepositTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_applyOneClickArrivalDepositTest",
        "description": "Test for applying one-click arrival deposit functionality in the Wallet service.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testApplyOneClickArrivalDeposit",
                "primary_tested": [
                    "Wallet.applyOneClickArrivalDeposit(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the one-click arrival deposit functionality of the Wallet service."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_getOrderTest.java",
        "testclass_name": "Margin_getOrderTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.ParameterChecker;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_getOrderTest",
        "description": "Tests for the getOrder method in the Margin API of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOrderWithoutSymbol",
                "primary_tested": [
                    "Margin.getOrder(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "BinanceConnectorException",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOrder method without a symbol, expecting a BinanceConnectorException."
            },
            {
                "name": "testGetOrderWithSymbol",
                "primary_tested": [
                    "Margin.getOrder(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOrder method with a symbol, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_flexibleProductListTest.java",
        "testclass_name": "SimpleEarn_flexibleProductListTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_flexibleProductListTest",
        "description": "Unit tests for the flexible product list functionality of the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFlexibleProductList",
                "primary_tested": [
                    "SimpleEarn.flexibleProductList(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "SimpleEarn",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the flexible product list functionality of the SimpleEarn class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/UserData_extendMarginListenKeyTest.java",
        "testclass_name": "UserData_extendMarginListenKeyTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "UserData_extendMarginListenKeyTest",
        "description": "Tests for extending margin listen key functionality in the UserData class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "userData",
                    "type": "UserData"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testExtendMarginListenKey",
                "primary_tested": [
                    "UserData.extendMarginListenKey(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "UserData",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "userData",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the functionality of extending a margin listen key with valid parameters."
            },
            {
                "name": "testExtendMarginListenKeyWithoutParameters",
                "primary_tested": [
                    "UserData.extendMarginListenKey(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "UserData",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "userData",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of extending a margin listen key without providing necessary parameters, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SpotAlgo_getOpenOrdersTest.java",
        "testclass_name": "SpotAlgo_getOpenOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SpotAlgo_getOpenOrdersTest",
        "description": "Unit tests for the getOpenOrders method of the SpotAlgo class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "spotAlgo",
                    "type": "SpotAlgo"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOpenOrders",
                "primary_tested": [
                    "SpotAlgo.getOpenOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "SpotAlgo",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "spotAlgo",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOpenOrders functionality of the SpotAlgo class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_preventedMatchesTest.java",
        "testclass_name": "Trade_preventedMatchesTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_preventedMatchesTest",
        "description": "Unit tests for the preventedMatches method in the Trade class, focusing on scenarios with and without a symbol parameter.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testPreventedMatchesWithoutSymbol",
                "primary_tested": [
                    "Trade.preventedMatches(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Map",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the preventedMatches method without a symbol parameter, expecting a BinanceConnectorException."
            },
            {
                "name": "testPreventedMatchesWithSymbol",
                "primary_tested": [
                    "Trade.preventedMatches(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Map",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the preventedMatches method with a symbol parameter, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_marginAccountTest.java",
        "testclass_name": "SubAccount_marginAccountTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_marginAccountTest",
        "description": "Unit tests for the margin account functionality of the SubAccount class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "subAccount",
                    "type": "SubAccount"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testMarginAccountWithoutEmail",
                "primary_tested": [
                    "SubAccount.marginAccount(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "BinanceConnectorException",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the margin account functionality without providing an email, expecting a BinanceConnectorException."
            },
            {
                "name": "testMarginAccountWithValidEmail",
                "primary_tested": [
                    "SubAccount.marginAccount(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "subAccount",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the margin account functionality with a valid email, expecting a successful response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_adjustCrossMarginMaxLeverageTest.java",
        "testclass_name": "Margin_adjustCrossMarginMaxLeverageTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_adjustCrossMarginMaxLeverageTest",
        "description": "Tests for adjusting cross margin maximum leverage in the Margin class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "margin",
                    "type": "Margin"
                }
            ],
            "methods": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAdjustCrossMarginMaxLeverageSuccess",
                "primary_tested": [
                    "Margin.adjustCrossMarginMaxLeverage(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "LinkedHashMap",
                        "Dispatcher",
                        "HttpMethod",
                        "Margin",
                        "MockData"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful adjustment of cross margin maximum leverage."
            },
            {
                "name": "testAdjustCrossMarginMaxLeverageMissingParameter",
                "primary_tested": [
                    "Margin.adjustCrossMarginMaxLeverage(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "LinkedHashMap",
                        "BinanceConnectorException",
                        "Margin"
                    ],
                    "class_members": [
                        {
                            "name": "margin",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the handling of missing parameters when adjusting cross margin maximum leverage."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_crossMarginDataTest.java",
        "testclass_name": "Margin_crossMarginDataTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Margin_crossMarginDataTest",
        "description": "Test suite for cross margin data functionality in the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCrossMarginData",
                "primary_tested": [
                    "Margin.crossMarginData(Map<String, Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the cross margin data functionality of the Margin created by the SpotClientImpl."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanRepayHistoryTest.java",
        "testclass_name": "CryptoLoans_flexibleLoanRepayHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_flexibleLoanRepayHistoryTest",
        "description": "Test for the flexible loan repay history functionality in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testFlexibleLoanRepayHistory",
                "primary_tested": [
                    "CryptoLoans.flexibleLoanRepayHistory(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the flexible loan repay history functionality by setting up a mock web server and verifying the response."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedPersonalLeftQuotaTest.java",
        "testclass_name": "SimpleEarn_lockedPersonalLeftQuotaTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SimpleEarn_lockedPersonalLeftQuotaTest",
        "description": "Tests for the locked personal left quota functionality in the SimpleEarn class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "simpleEarn",
                    "type": "SimpleEarn"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testLockedPersonalLeftQuotaSuccess",
                "primary_tested": [
                    "SimpleEarn.lockedPersonalLeftQuota(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "SimpleEarn"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of locked personal left quota with a valid projectId."
            },
            {
                "name": "testLockedPersonalLeftQuotaWithoutProjectId",
                "primary_tested": [
                    "SimpleEarn.lockedPersonalLeftQuota(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "SimpleEarn",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "simpleEarn",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of the locked personal left quota method when called without a projectId, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Staking_ethStakingRateHistoryTest.java",
        "testclass_name": "Staking_ethStakingRateHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Staking_ethStakingRateHistoryTest",
        "description": "Test for the ethStakingRateHistory method in the Staking service of the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEthStakingRateHistory",
                "primary_tested": [
                    "Staking.ethStakingRateHistory(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the ethStakingRateHistory method of the Staking service in the SpotClientImpl class."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_apiTradingStatusTest.java",
        "testclass_name": "Wallet_apiTradingStatusTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Wallet_apiTradingStatusTest",
        "description": "Test for the API trading status functionality in the Wallet class.",
        "class_members": {
            "variables": [
                {
                    "name": "wallet",
                    "type": "Wallet"
                },
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "setUp"
        ],
        "test_cases": [
            {
                "name": "testApiTradingStatus",
                "primary_tested": [
                    "Wallet.apiTradingStatus(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Wallet",
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "RequestHandler",
                        "HmacSignatureGenerator",
                        "Map",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "wallet",
                            "type": "variable"
                        },
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "setUp"
                ],
                "description": "Tests the API trading status functionality of the Wallet class by mocking the web server response and verifying the result."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/NFT_depositHistoryTest.java",
        "testclass_name": "NFT_depositHistoryTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "NFT_depositHistoryTest",
        "description": "Unit tests for the deposit history functionality of the NFT client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "nftClient",
                    "type": "NFT"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testDepositHistory",
                "primary_tested": [
                    "NFT.depositHistory(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "NFT",
                        "HmacSignatureGenerator",
                        "MockData",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap",
                        "Dispatcher"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "nftClient",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the deposit history functionality of the NFT client."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_collateralAccountTest.java",
        "testclass_name": "VIPLoans_collateralAccountTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.utils.RequestHandler;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "VIPLoans_collateralAccountTest",
        "description": "Unit tests for the collateral account functionality in the VIPLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "vipLoans",
                    "type": "VIPLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCollateralAccount",
                "primary_tested": [
                    "VIPLoans.collateralAccount(Map<String,Object>)"
                ],
                "associated_methods": [],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "RequestHandler",
                        "HmacSignatureGenerator",
                        "VIPLoans"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "vipLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the collateral account functionality of the VIPLoans class by mocking a web server response and verifying the result."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_myTradesTest.java",
        "testclass_name": "Trade_myTradesTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_myTradesTest",
        "description": "Unit tests for the Trade class's myTrades method.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testMyTradesSuccess",
                "primary_tested": [
                    "Trade.myTrades(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful retrieval of trades with a valid symbol."
            },
            {
                "name": "testMyTradesWithoutSymbol",
                "primary_tested": [
                    "Trade.myTrades(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "Trade",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the behavior of the myTrades method when called without a symbol, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_getOpenOrdersTest.java",
        "testclass_name": "Trade_getOpenOrdersTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Trade_getOpenOrdersTest",
        "description": "Unit tests for the getOpenOrders method in the Trade class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "trade",
                    "type": "Trade"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testGetOpenOrders",
                "primary_tested": [
                    "Trade.getOpenOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOpenOrders method with parameters."
            },
            {
                "name": "testGetOpenOrdersWithoutParameters",
                "primary_tested": [
                    "Trade.getOpenOrders(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Trade"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "trade",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the getOpenOrders method without parameters."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_enableMarginTest.java",
        "testclass_name": "SubAccount_enableMarginTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.UrlBuilder;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "SubAccount_enableMarginTest",
        "description": "Tests for enabling margin for sub-accounts in the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ],
            "methods": [],
            "nested_classes": []
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testEnableMarginWithoutEmail",
                "primary_tested": [
                    "SubAccount.enableMargin(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "BinanceConnectorException",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "MockData",
                        "UrlBuilder"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "UrlBuilder.urlEncode(String)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the exception thrown when enabling margin without providing an email."
            },
            {
                "name": "testEnableMarginWithEmail",
                "primary_tested": [
                    "SubAccount.enableMargin(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "MockData",
                        "UrlBuilder"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)",
                        "UrlBuilder.urlEncode(String)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the successful enabling of margin for a sub-account with an email provided."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_oneTimeTransactionStatusTest.java",
        "testclass_name": "AutoInvest_oneTimeTransactionStatusTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "AutoInvest_oneTimeTransactionStatusTest",
        "description": "Tests for the one-time transaction status functionality in the AutoInvest module of the Binance connector client.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testOneTimeTransactionStatus",
                "primary_tested": [
                    "AutoInvest.oneTimeTransactionStatus(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the one-time transaction status functionality with a valid transaction ID."
            },
            {
                "name": "testOneTimeTransactionStatusWithoutTransactionId",
                "primary_tested": [
                    "AutoInvest.oneTimeTransactionStatus(Map<String,Object>)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK",
                        "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the one-time transaction status functionality without a transaction ID, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_accountEarningTest.java",
        "testclass_name": "Mining_accountEarningTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Mining_accountEarningTest",
        "description": "Tests for the account earning functionality in the Mining class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAccountEarningWithValidParameters",
                "primary_tested": [
                    "Mining.accountEarning(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Mining",
                        "HmacSignatureGenerator",
                        "MockData",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the account earning functionality with valid parameters."
            },
            {
                "name": "testAccountEarningWithoutAlgoParameter",
                "primary_tested": [
                    "Mining.accountEarning(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "Mining",
                        "HmacSignatureGenerator",
                        "MockData",
                        "MockWebServerDispatcher",
                        "HttpMethod",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.API_KEY",
                        "MockData.SECRET_KEY",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the account earning functionality without the 'algo' parameter, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_customizeMarginCallTest.java",
        "testclass_name": "CryptoLoans_customizeMarginCallTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.utils.ProxyAuth;",
            "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "CryptoLoans_customizeMarginCallTest",
        "description": "Unit tests for the customize margin call functionality in the CryptoLoans class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                },
                {
                    "name": "cryptoLoans",
                    "type": "CryptoLoans"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testCustomizeMarginCallWithValidParameters",
                "primary_tested": [
                    "CryptoLoans.customizeMarginCall(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the customize margin call functionality with valid parameters."
            },
            {
                "name": "testCustomizeMarginCallWithoutRequiredParameter",
                "primary_tested": [
                    "CryptoLoans.customizeMarginCall(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "MockWebServer",
                        "CryptoLoans",
                        "LinkedHashMap",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        },
                        {
                            "name": "cryptoLoans",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the customize margin call functionality without the required parameter, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_aggTradesTest.java",
        "testclass_name": "Market_aggTradesTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Market_aggTradesTest",
        "description": "Unit tests for the aggregate trades functionality in the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAggTradesWithValidParameters",
                "primary_tested": [
                    "Market.aggTrades(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the aggregate trades functionality with valid parameters."
            },
            {
                "name": "testAggTradesWithoutSymbol",
                "primary_tested": [
                    "Market.aggTrades(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the aggregate trades functionality without the required symbol parameter, expecting a BinanceConnectorException."
            }
        ]
    },
    {
        "file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_averagePriceTest.java",
        "testclass_name": "Market_averagePriceTest",
        "dependencies": [
            "package com.binance.connector.client.impl.spot;",
            "import static org.junit.Assert.assertEquals;",
            "import static org.junit.Assert.assertThrows;",
            "import java.util.LinkedHashMap;",
            "import java.util.Map;",
            "import org.junit.Before;",
            "import org.junit.Test;",
            "import com.binance.connector.client.SpotClient;",
            "import com.binance.connector.client.enums.HttpMethod;",
            "import com.binance.connector.client.exceptions.BinanceConnectorException;",
            "import com.binance.connector.client.impl.SpotClientImpl;",
            "import com.binance.connector.client.utils.ParameterChecker;",
            "import okhttp3.mockwebserver.Dispatcher;",
            "import okhttp3.mockwebserver.MockWebServer;",
            "import unit.MockData;",
            "import unit.MockWebServerDispatcher;"
        ],
        "name": "Market_averagePriceTest",
        "description": "Tests for the average price functionality in the SpotClientImpl class.",
        "class_members": {
            "variables": [
                {
                    "name": "mockWebServer",
                    "type": "MockWebServer"
                },
                {
                    "name": "baseUrl",
                    "type": "String"
                }
            ]
        },
        "fixtures": [
            "init"
        ],
        "test_cases": [
            {
                "name": "testAveragePriceWithValidSymbol",
                "primary_tested": [
                    "Market.averagePrice(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the average price functionality with a valid symbol."
            },
            {
                "name": "testAveragePriceWithoutSymbol",
                "primary_tested": [
                    "Market.averagePrice(Map<String,Object>)"
                ],
                "associated_methods": [
                    "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"
                ],
                "external_dependencies": {
                    "modules": [
                        "SpotClient",
                        "SpotClientImpl",
                        "MockWebServer",
                        "Dispatcher",
                        "MockWebServerDispatcher",
                        "MockData",
                        "HttpMethod",
                        "Map",
                        "LinkedHashMap",
                        "BinanceConnectorException"
                    ],
                    "class_members": [
                        {
                            "name": "mockWebServer",
                            "type": "variable"
                        },
                        {
                            "name": "baseUrl",
                            "type": "variable"
                        }
                    ],
                    "project_specific_resources": [
                        "MockData.PREFIX",
                        "MockData.MOCK_RESPONSE",
                        "MockData.HTTP_STATUS_OK"
                    ]
                },
                "category": "unit",
                "fixtures_used": [
                    "init"
                ],
                "description": "Tests the average price functionality without a symbol, expecting a BinanceConnectorException."
            }
        ]
    }
]