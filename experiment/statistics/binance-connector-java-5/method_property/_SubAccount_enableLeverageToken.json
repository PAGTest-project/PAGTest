{"target_method": "enableLeverageToken", "signature": "String enableLeverageToken(Map<String, Object>)", "direct_enhancements": [{"method_name": "enableMargin(Map<String, Object>)", "relation_type": "Behavioral Similarity", "confidence": 0.9, "reason": "Both methods enable specific features (leverage tokens and margin) for sub-accounts, requiring similar parameter checks and API requests.", "is_external": false}, {"method_name": "enableFutures(Map<String, Object>)", "relation_type": "Behavioral Similarity", "confidence": 0.85, "reason": "Both methods enable futures and leverage tokens for sub-accounts, sharing similar parameter requirements and API request structures.", "is_external": false}, {"method_name": "createVirtualSubAccount(Map<String, Object>)", "relation_type": "Structural Similarity", "confidence": 0.75, "reason": "Both methods involve creating or enabling features for sub-accounts, sharing similar control flows and parameter handling.", "is_external": false}], "gwt_enhancements": {"Given": {"enhanced_by": [{"method_name": "initializeRequestHandler()", "relation_type": "State Change Similarity", "confidence": 0.8, "reason": "Both methods require the initialization of the RequestHandler to send API requests.", "is_external": false}]}, "When": {"enhanced_by": [{"method_name": "checkParameter(Map<String, Object>, String, Class)", "relation_type": "Resource Access Similarity", "confidence": 0.9, "reason": "Both methods use ParameterChecker.checkParameter to validate input parameters, ensuring consistent parameter handling.", "is_external": false}]}, "Then": {"enhanced_by": [{"method_name": "sendSignedRequest(String, String, Map<String, Object>, HttpMethod, boolean)", "relation_type": "Exception Handling Similarity", "confidence": 0.85, "reason": "Both methods use the sendSignedRequest method to send API requests, sharing similar exception handling and response processing.", "is_external": false}]}}}