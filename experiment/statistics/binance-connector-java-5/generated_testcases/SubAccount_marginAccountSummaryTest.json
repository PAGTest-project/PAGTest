[{"strategy": "retry", "code": "\npackage com.binance.connector.client.impl.spot;\n\nimport static org.junit.Assert.assertEquals;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport org.junit.Before;\nimport org.junit.Test;\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.utils.UrlBuilder;\nimport okhttp3.mockwebserver.Dispatcher;\nimport okhttp3.mockwebserver.MockWebServer;\nimport unit.MockData;\nimport unit.MockWebServerDispatcher;\n\npublic class SubAccount_marginAccountSummaryTest {\n    private MockWebServer mockWebServer;\n    private String baseUrl;\n\n    @Before\n    public void init() {\n        this.mockWebServer = new MockWebServer();\n        this.baseUrl = mockWebServer.url(MockData.PREFIX).toString();\n    }\n\n    @Test\n    public void testMarginAccountSummary() {\n        String path = String.format(\"/sapi/v1/sub-account/margin/accountSummary?email=%s\",\n                UrlBuilder.urlEncode(\"alice@test.com\"));\n        Map<String, Object> parameters = new LinkedHashMap<>();\n        parameters.put(\"email\", \"alice@test.com\");\n\n        Dispatcher dispatcher = MockWebServerDispatcher.getDispatcher(MockData.PREFIX, path, \"{\\\"data\\\":\\\"{\\\\\\\"key_1\\\\\\\": \\\\\\\"value_1\\\\\\\", \\\\\\\"key_2\\\\\\\": \\\\\\\"value_2\\\\\\\"}\\\"}\", HttpMethod.GET, MockData.HTTP_STATUS_OK);\n        mockWebServer.setDispatcher(dispatcher);\n\n        SubAccount subAccount = new SubAccount(baseUrl, MockData.API_KEY, MockData.SECRET_KEY, true, null);\n        String result = subAccount.marginAccountSummary(parameters);\n        assertEquals(\"{\\\"data\\\":\\\"{\\\\\\\"key_1\\\\\\\": \\\\\\\"value_1\\\\\\\", \\\\\\\"key_2\\\\\\\": \\\\\\\"value_2\\\\\\\"}\\\"}\", result);\n    }\n}\n"}]