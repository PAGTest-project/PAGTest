[{"strategy": "generate", "code": "\npackage com.binance.connector.client.impl.spot;\n\nimport static org.junit.Assert.assertEquals;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport org.junit.Before;\nimport org.junit.Test;\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.utils.RequestHandler;\nimport okhttp3.mockwebserver.Dispatcher;\nimport okhttp3.mockwebserver.MockWebServer;\nimport unit.MockData;\nimport unit.MockWebServerDispatcher;\n\npublic class SpotAlgo_getOpenOrdersTest {\n    private MockWebServer mockWebServer;\n    private String baseUrl;\n    private SpotAlgo spotAlgo;\n\n    @Before\n    public void init() {\n        this.mockWebServer = new MockWebServer();\n        this.baseUrl = mockWebServer.url(MockData.PREFIX).toString();\n        this.spotAlgo = new SpotAlgo(baseUrl, MockData.API_KEY, MockData.SECRET_KEY, true, null);\n    }\n\n    @Test\n    public void testGetOpenOrders() {\n        String path = \"/sapi/v1/algo/spot/openOrders\";\n        Map<String, Object> parameters = new LinkedHashMap<>();\n\n        Dispatcher dispatcher = MockWebServerDispatcher.getDispatcher(MockData.PREFIX, path, MockData.MOCK_RESPONSE, HttpMethod.GET, MockData.HTTP_STATUS_OK);\n        mockWebServer.setDispatcher(dispatcher);\n\n        String result = spotAlgo.getOpenOrders(parameters);\n        assertEquals(MockData.MOCK_RESPONSE, result);\n    }\n}\n"}]