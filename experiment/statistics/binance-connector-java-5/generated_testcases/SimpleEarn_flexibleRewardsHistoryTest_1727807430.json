[{"strategy": "generate", "code": "\npackage com.binance.connector.client.impl.spot;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertThrows;\n\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.utils.ParameterChecker;\nimport com.binance.connector.client.utils.RequestHandler;\nimport com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;\nimport com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;\n\npublic class SimpleEarn_flexibleRewardsHistoryTest {\n\n    private SimpleEarn simpleEarn;\n    private RequestHandler requestHandler;\n    private String baseUrl = \"http://test.url\";\n    private String apiKey = \"testApiKey\";\n    private String secretKey = \"testSecretKey\";\n    private boolean showLimitUsage = false;\n\n    @Before\n    public void setUp() {\n        requestHandler = Mockito.mock(RequestHandler.class);\n        simpleEarn = new SimpleEarn(baseUrl, apiKey, new HmacSignatureGenerator(secretKey), showLimitUsage, null);\n        simpleEarn.requestHandler = requestHandler;\n    }\n\n    @Test\n    public void testFlexibleRewardsHistorySuccess() {\n        Map<String, Object> parameters = new LinkedHashMap<>();\n        parameters.put(\"type\", \"BONUS\");\n\n        Mockito.when(requestHandler.sendSignedRequest(baseUrl, SimpleEarn.FLEXIBLE_REWARDS_HISTORY, parameters, HttpMethod.GET, showLimitUsage))\n               .thenReturn(\"Success\");\n\n        String result = simpleEarn.flexibleRewardsHistory(parameters);\n        assertEquals(\"Success\", result);\n    }\n\n    @Test\n    public void testFlexibleRewardsHistoryMissingType() {\n        Map<String, Object> parameters = new LinkedHashMap<>();\n\n        assertThrows(ParameterChecker.ParameterCheckException.class, () -> {\n            simpleEarn.flexibleRewardsHistory(parameters);\n        });\n    }\n}\n"}]