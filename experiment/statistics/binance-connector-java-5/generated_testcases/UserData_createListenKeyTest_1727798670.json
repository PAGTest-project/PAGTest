[{"strategy": "generate", "code": "\npackage com.binance.connector.client.impl.spot;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.Mock;\nimport org.mockito.MockitoAnnotations;\n\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.utils.ProxyAuth;\nimport com.binance.connector.client.utils.RequestHandler;\n\npublic class UserData_createListenKeyTest {\n\n    private UserData userData;\n\n    @Mock\n    private RequestHandler requestHandler;\n\n    private final String baseUrl = \"https://api.binance.com\";\n    private final String apiKey = \"testApiKey\";\n    private final boolean showLimitUsage = false;\n    private final ProxyAuth proxy = null;\n\n    @Before\n    public void setUp() {\n        MockitoAnnotations.initMocks(this);\n        userData = new UserData(baseUrl, apiKey, showLimitUsage, proxy);\n        userData.requestHandler = requestHandler;\n    }\n\n    @Test\n    public void testCreateListenKey() {\n        String expectedListenKey = \"testListenKey\";\n        when(requestHandler.sendApiRequest(baseUrl, \"/api/v3/userDataStream\", null, HttpMethod.POST, showLimitUsage))\n            .thenReturn(expectedListenKey);\n\n        String result = userData.createListenKey();\n        assertEquals(expectedListenKey, result);\n    }\n}\n"}]