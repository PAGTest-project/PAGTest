[{"strategy": "retry", "code": "\npackage com.binance.connector.client.utils;\n\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\nimport okhttp3.Request;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class RequestBuilder_buildApiKeyRequestTest {\n\n    @Test\n    public void testBuildApiKeyRequest_GET() {\n        String fullUrl = \"https://api.binance.com/api/v3/ticker/price\";\n        String apiKey = \"testApiKey\";\n        Request request = RequestBuilder.buildApiKeyRequest(fullUrl, HttpMethod.GET, apiKey);\n        assertNotNull(request);\n        assertEquals(fullUrl, request.url().toString());\n        assertEquals(apiKey, request.header(\"X-MBX-APIKEY\"));\n    }\n\n    @Test(expected = BinanceConnectorException.class)\n    public void testBuildApiKeyRequest_InvalidHttpMethod() {\n        String fullUrl = \"https://api.binance.com/api/v3/ticker/price\";\n        String apiKey = \"testApiKey\";\n        RequestBuilder.buildApiKeyRequest(fullUrl, null, apiKey);\n    }\n\n    @Test(expected = BinanceConnectorException.class)\n    public void testBuildApiKeyRequest_InvalidURL() {\n        String fullUrl = \"invalidUrl\";\n        String apiKey = \"testApiKey\";\n        RequestBuilder.buildApiKeyRequest(fullUrl, HttpMethod.GET, apiKey);\n    }\n}\n"}]