[{"strategy": "generate", "code": "\npackage com.binance.connector.client.impl;\n\nimport com.binance.connector.client.impl.spot.GiftCard;\nimport com.binance.connector.client.utils.ProxyAuth;\nimport com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;\nimport com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;\nimport org.junit.Before;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class SpotClientImpl_createGiftCardTest {\n    private SpotClientImpl spotClient;\n    private String baseUrl;\n    private String apiKey;\n    private SignatureGenerator signatureGenerator;\n    private boolean showLimitUsage;\n    private ProxyAuth proxy;\n\n    @Before\n    public void setUp() {\n        baseUrl = \"https://api.binance.com\";\n        apiKey = \"testApiKey\";\n        signatureGenerator = new HmacSignatureGenerator(\"testSecretKey\");\n        showLimitUsage = true;\n        proxy = null;\n        spotClient = new SpotClientImpl(apiKey, signatureGenerator, baseUrl);\n    }\n\n    @Test\n    public void testCreateGiftCard() {\n        GiftCard giftCard = spotClient.createGiftCard();\n        assertNotNull(giftCard);\n        assertEquals(baseUrl, giftCard.getBaseUrl());\n        assertEquals(apiKey, giftCard.getApiKey());\n        assertEquals(signatureGenerator, giftCard.getSignatureGenerator());\n        assertEquals(showLimitUsage, giftCard.isShowLimitUsage());\n        assertEquals(proxy, giftCard.getProxy());\n    }\n}\n"}]