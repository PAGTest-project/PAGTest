[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.json.JSONObject;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\n\npublic class ParameterChecker_checkOneOfParametersRequiredTest {\n\n    @Test\n    public void testCheckOneOfParametersRequired_AllParametersMissing() {\n        JSONObject params = new JSONObject();\n        String[] parameters = {\"param1\", \"param2\"};\n        String expectedMessage = \"One of the following parameters is required: \" + Arrays.toString(parameters);\n\n        BinanceConnectorException exception = assertThrows(BinanceConnectorException.class, () -> {\n            ParameterChecker.checkOneOfParametersRequired(params, parameters);\n        });\n\n        assertEquals(expectedMessage, exception.getMessage());\n    }\n\n    @Test\n    public void testCheckOneOfParametersRequired_OneParameterPresent() {\n        JSONObject params = new JSONObject();\n        params.put(\"param1\", \"value1\");\n        String[] parameters = {\"param1\", \"param2\"};\n\n        // No exception should be thrown\n        ParameterChecker.checkOneOfParametersRequired(params, parameters);\n    }\n\n    @Test\n    public void testCheckOneOfParametersRequired_NullParams() {\n        String[] parameters = {\"param1\", \"param2\"};\n        String expectedMessage = \"One of the following parameters is required: \" + Arrays.toString(parameters);\n\n        BinanceConnectorException exception = assertThrows(BinanceConnectorException.class, () -> {\n            ParameterChecker.checkOneOfParametersRequired(null, parameters);\n        });\n\n        assertEquals(expectedMessage, exception.getMessage());\n    }\n}\n"}]