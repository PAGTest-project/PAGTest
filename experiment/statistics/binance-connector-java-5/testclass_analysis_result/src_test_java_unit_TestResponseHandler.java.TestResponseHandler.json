{"file_path": "src/test/java/unit/TestResponseHandler.java", "testclass_name": "TestResponseHandler", "dependencies": ["package unit;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import static org.junit.Assert.assertTrue;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceClientException;", "import com.binance.connector.client.exceptions.BinanceServerException;", "import com.binance.connector.client.utils.ResponseHandler;", "import okhttp3.Request;", "import okhttp3.mockwebserver.MockResponse;", "import okhttp3.mockwebserver.MockWebServer;"], "name": "TestResponseHandler", "description": "Unit tests for the ResponseHandler class, focusing on handling different HTTP responses and error scenarios.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "request", "type": "Request"}, {"name": "VALID_RESPONSE", "type": "static final String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testHandleResponse", "primary_tested": ["ResponseHandler.handleResponse(Request,boolean,ProxyAuth)"], "external_dependencies": {"modules": ["MockWebServer", "Request", "ResponseHandler"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "request", "type": "variable"}, {"name": "VALID_RESPONSE", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of a valid HTTP response by the ResponseHandler."}, {"name": "testWith400JSONErrorMsg", "primary_tested": ["ResponseHandler.handleResponse(Request,boolean,ProxyAuth)"], "external_dependencies": {"modules": ["MockWebServer", "Request", "ResponseHandler", "BinanceClientException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "request", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of a 400 HTTP error response with a JSON error message by the ResponseHandler."}, {"name": "testWith400ErrorMsg", "primary_tested": ["ResponseHandler.handleResponse(Request,boolean,ProxyAuth)"], "external_dependencies": {"modules": ["MockWebServer", "Request", "ResponseHandler", "BinanceClientException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "request", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of a 400 HTTP error response with a plain text error message by the ResponseHandler."}, {"name": "testWith500ErrorMsg", "primary_tested": ["ResponseHandler.handleResponse(Request,boolean,ProxyAuth)"], "external_dependencies": {"modules": ["MockWebServer", "Request", "ResponseHandler", "BinanceServerException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "request", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of a 500 HTTP error response by the ResponseHandler."}]}