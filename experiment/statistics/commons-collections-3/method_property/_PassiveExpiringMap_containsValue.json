{"target_method": "containsValue", "signature": "boolean containsValue(Object)", "direct_enhancements": [{"method_name": "containsKey(Object)", "relation_type": "Behavioral Similarity", "confidence": 0.9, "reason": "Both methods check for the presence of an element in the map but focus on different aspects (key vs. value).", "is_external": false}, {"method_name": "removeIfExpired(Object, long)", "relation_type": "Structural Similarity", "confidence": 0.85, "reason": "Both methods involve checking and potentially removing elements based on a condition (expiration vs. presence).", "is_external": false}, {"method_name": "removeAllExpired(long)", "relation_type": "Structural Similarity", "confidence": 0.8, "reason": "Both methods involve iterating over the map and removing elements based on a condition (expiration vs. presence).", "is_external": false}, {"method_name": "isExpired(long, Long)", "relation_type": "Exception Handling Similarity", "confidence": 0.75, "reason": "Both methods handle null checks and conditional logic related to expiration.", "is_external": false}], "gwt_enhancements": {"Given": {"enhanced_by": [{"method_name": "initializeExpirationMap()", "relation_type": "State Change Similarity", "confidence": 0.8, "reason": "Both methods require the initialization of the expiration map for proper functioning.", "is_external": false}]}, "When": {"enhanced_by": [{"method_name": "removeAllExpired(long)", "relation_type": "Resource Access Similarity", "confidence": 0.7, "reason": "Removing expired entries is a prerequisite for accurately checking the presence of a value.", "is_external": false}]}, "Then": {"enhanced_by": [{"method_name": "verifyValuePresence(Object)", "relation_type": "Exception Handling Similarity", "confidence": 0.85, "reason": "Both methods verify the presence of elements and handle similar conditional checks.", "is_external": false}]}}}