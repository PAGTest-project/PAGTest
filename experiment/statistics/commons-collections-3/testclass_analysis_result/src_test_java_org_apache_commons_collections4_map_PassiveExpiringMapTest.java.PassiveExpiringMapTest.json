{"file_path": "src/test/java/org/apache/commons/collections4/map/PassiveExpiringMapTest.java", "testclass_name": "PassiveExpiringMapTest", "dependencies": ["package org.apache.commons.collections4.map;", "import static org.junit.jupiter.api.Assertions.assertAll;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.junit.jupiter.api.Assertions.fail;", "import java.util.HashMap;", "import java.util.Map;", "import java.util.concurrent.TimeUnit;", "import org.apache.commons.collections4.collection.AbstractCollectionTest;", "import org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy;", "import org.junit.jupiter.api.Test;"], "name": "PassiveExpiringMapTest", "description": "Unit tests for the PassiveExpiringMap class, focusing on its expiration policies and map operations.", "class_members": {"variables": [], "methods": [{"name": "makeDecoratedTestMap", "signature": "Map<Integer, String> makeDecoratedTestMap()"}, {"name": "makeTestMap", "signature": "Map<Integer, String> makeTestMap()"}, {"name": "validateExpiration", "signature": "void validateExpiration(Map<String, String> map, long timeout)"}], "nested_classes": [{"name": "TestExpirationPolicy", "description": "Internal class implementing ExpirationPolicy for testing purposes."}]}, "fixtures": [], "test_cases": [{"name": "testConstructors", "primary_tested": ["PassiveExpiringMap.PassiveExpiringMap(Map<String, String>)", "PassiveExpiringMap.PassiveExpiringMap(ExpirationPolicy<String, String>)", "PassiveExpiringMap.PassiveExpiringMap(long, TimeUnit)"], "external_dependencies": {"modules": ["PassiveExpiringMap", "ExpirationPolicy", "TimeUnit"]}, "category": "unit", "description": "Tests the constructors of PassiveExpiringMap for proper exception handling."}, {"name": "testContainsKey", "primary_tested": ["PassiveExpiringMap.containsKey(Object)"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the containsKey method of PassiveExpiringMap to ensure it correctly identifies keys based on expiration policy."}, {"name": "testContainsValue", "primary_tested": ["PassiveExpiringMap.containsValue(Object)"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the containsValue method of PassiveExpiringMap to ensure it correctly identifies values based on expiration policy."}, {"name": "testDecoratedMap", "primary_tested": ["PassiveExpiringMap.get(Object)", "PassiveExpiringMap.remove(Object)", "PassiveExpiringMap.put(Object, Object)"], "associated_methods": ["PassiveExpiringMap.makeDecoratedTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeDecoratedTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the behavior of a decorated map with PassiveExpiringMap, ensuring entries do not expire prematurely."}, {"name": "testEntrySet", "primary_tested": ["PassiveExpiringMap.entrySet()"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the entrySet method of PassiveExpiringMap to ensure it returns the correct set of entries."}, {"name": "testExpiration", "primary_tested": ["PassiveExpiringMap.PassiveExpiringMap(long)", "PassiveExpiringMap.PassiveExpiringMap(ExpirationPolicy<Object, Object>)"], "associated_methods": ["PassiveExpiringMap.validateExpiration(Map<String, String>, long)"], "external_dependencies": {"modules": ["PassiveExpiringMap", "PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy"], "class_members": [{"name": "validateExpiration", "type": "method"}]}, "category": "unit", "description": "Tests the expiration behavior of PassiveExpiringMap with different expiration policies and timeouts."}, {"name": "testGet", "primary_tested": ["PassiveExpiringMap.get(Object)"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the get method of PassiveExpiringMap to ensure it returns the correct values based on expiration policy."}, {"name": "testIsEmpty", "primary_tested": ["PassiveExpiringMap.isEmpty()"], "associated_methods": ["PassiveExpiringMap.makeTestMap()", "PassiveExpiringMap.remove(Object)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the isEmpty method of PassiveExpiringMap to ensure it correctly identifies if the map is empty based on expiration policy."}, {"name": "testKeySet", "primary_tested": ["PassiveExpiringMap.keySet()"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the keySet method of PassiveExpiringMap to ensure it returns the correct set of keys."}, {"name": "testPut", "primary_tested": ["PassiveExpiringMap.put(Object, Object)"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the put method of PassiveExpiringMap to ensure it correctly adds and updates entries based on expiration policy."}, {"name": "testSize", "primary_tested": ["PassiveExpiringMap.size()"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the size method of PassiveExpiringMap to ensure it returns the correct number of entries based on expiration policy."}, {"name": "testValues", "primary_tested": ["PassiveExpiringMap.values()"], "associated_methods": ["PassiveExpiringMap.makeTestMap()"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "makeTestMap", "type": "method"}]}, "category": "unit", "description": "Tests the values method of PassiveExpiringMap to ensure it returns the correct collection of values."}, {"name": "testZeroTimeToLive", "primary_tested": ["PassiveExpiringMap.PassiveExpiringMap(long)", "PassiveExpiringMap.put(Object, Object)", "PassiveExpiringMap.get(Object)"], "external_dependencies": {"modules": ["PassiveExpiringMap"]}, "category": "unit", "description": "Tests the behavior of PassiveExpiringMap with a zero time-to-live, ensuring entries are immediately expired."}]}