{"file_path": "src/test/java/org/apache/commons/collections4/comparators/ComparatorChainTest.java", "testclass_name": "ComparatorChainTest", "dependencies": ["package org.apache.commons.collections4.comparators;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.io.Serializable;", "import java.util.Arrays;", "import java.util.Comparator;", "import java.util.LinkedList;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ComparatorChainTest", "description": "Unit tests for the ComparatorChain class, which is used to chain multiple comparators.", "class_members": {"variables": [], "methods": [], "nested_classes": [{"name": "ColumnComparator", "description": "A comparator for PseudoRow objects based on a specific column index."}, {"name": "PseudoRow", "description": "A mock row object used for testing, containing an array of integers representing columns."}]}, "fixtures": [], "test_cases": [{"name": "testBadListComparatorChain", "primary_tested": ["ComparatorChain.compare(Integer,Integer)"], "external_dependencies": {"modules": ["ComparatorChain", "Integer"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that an UnsupportedOperationException is thrown when a ComparatorChain is created with an empty list of comparators."}, {"name": "testBadNoopComparatorChain", "primary_tested": ["ComparatorChain.compare(Integer,Integer)"], "external_dependencies": {"modules": ["ComparatorChain", "Integer"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that an UnsupportedOperationException is thrown when a ComparatorChain is created with zero comparators."}, {"name": "testComparatorChainOnMinValuedComparator", "primary_tested": ["ComparatorChain.compare(Integer,Integer)"], "external_dependencies": {"modules": ["ComparatorChain", "Integer"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ComparatorChain with a custom comparator that returns Integer.MIN_VALUE for negative comparisons."}, {"name": "testListComparatorChain", "primary_tested": ["ComparatorChain.compare(Integer,Integer)"], "external_dependencies": {"modules": ["ComparatorChain", "Integer", "ComparableComparator"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ComparatorChain with a list of comparators containing a single ComparableComparator."}, {"name": "testNoopComparatorChain", "primary_tested": ["ComparatorChain.compare(Integer,Integer)"], "external_dependencies": {"modules": ["ComparatorChain", "Integer", "ComparableComparator"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ComparatorChain with a single ComparableComparator added after initialization."}]}