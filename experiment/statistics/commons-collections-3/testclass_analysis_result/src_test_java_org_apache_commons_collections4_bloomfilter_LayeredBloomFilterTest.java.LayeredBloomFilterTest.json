{"file_path": "src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilterTest.java", "testclass_name": "LayeredBloomFilterTest", "dependencies": ["package org.apache.commons.collections4.bloomfilter;", "import static org.junit.jupiter.api.Assertions.assertArrayEquals;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.time.Duration;", "import java.time.Instant;", "import java.util.ArrayList;", "import java.util.Deque;", "import java.util.Iterator;", "import java.util.List;", "import java.util.function.Consumer;", "import java.util.function.Predicate;", "import java.util.function.Supplier;", "import org.apache.commons.collections4.bloomfilter.LayerManager.Cleanup;", "import org.apache.commons.collections4.bloomfilter.LayerManager.ExtendCheck;", "import org.junit.jupiter.api.Test;"], "name": "LayeredBloomFilterTest", "description": "Unit tests for the LayeredBloomFilter class, focusing on various functionalities such as cleanup, expiration, finding elements, and managing layers.", "class_members": {"variables": [{"name": "dbgInstrument", "type": "static final List<String>"}], "methods": [{"name": "createEmptyFilter", "signature": "protected LayeredBloomFilter<BloomFilter> createEmptyFilter(Shape shape)"}, {"name": "makeFilter", "signature": "protected BloomFilter makeFilter(Hasher h)"}, {"name": "makeFilter", "signature": "protected BloomFilter makeFilter(IndexExtractor p)"}, {"name": "makeFilter", "signature": "protected BloomFilter makeFilter(int... values)"}, {"name": "setupFindTest", "signature": "private LayeredBloomFilter<BloomFilter> setupFindTest()"}], "nested_classes": [{"name": "AdvanceOnTimeQuanta", "description": "A Predicate that advances after a quantum of time."}, {"name": "CleanByTime", "description": "A Consumer that cleans the list based on how long each filter has been in the list."}, {"name": "NumberedBloomFilter", "description": "A Bloom filter implementation that includes a value and sequence number."}, {"name": "TimestampedBloomFilter", "description": "A Bloom filter implementation that tracks the creation time."}]}, "fixtures": [], "test_cases": [{"name": "testCardinalityAndIsEmpty", "primary_tested": ["LayeredBloomFilter.testCardinalityAndIsEmpty(LayeredBloomFilter)"], "external_dependencies": {"modules": ["LayerManager", "SimpleBloomFilter", "LayeredBloomFilter"], "class_members": [{"name": "createEmptyFilter", "type": "method"}]}, "category": "unit", "description": "Tests the cardinality and emptiness of the LayeredBloomFilter."}, {"name": "testCleanup", "primary_tested": ["LayeredBloomFilter.cleanup()"], "associated_methods": ["NumberedBloomFilter.value--", "LayeredBloomFilter.getDepth()", "LayeredBloomFilter.merge(Hasher)", "LayeredBloomFilter.next()", "LayeredBloomFilter.get(int)"], "external_dependencies": {"modules": ["LayerManager", "NumberedBloomFilter", "TestingHashers"], "class_members": [{"name": "createEmptyFilter", "type": "method"}]}, "category": "unit", "description": "Tests the cleanup functionality of the LayeredBloomFilter."}, {"name": "testEstimateUnionCrossTypes", "primary_tested": ["BloomFilter.estimateUnion(BloomFilter)"], "external_dependencies": {"modules": ["BloomFilter", "DefaultBloomFilterTest.SparseDefaultBloomFilter", "TestingHashers"], "class_members": [{"name": "createEmptyFilter", "type": "method"}]}, "category": "unit", "description": "Tests the estimated union calculations between different types of BloomFilters."}, {"name": "testExpiration", "primary_tested": ["LayeredBloomFilter.processBloomFilters(Predicate)"], "associated_methods": ["TimestampedBloomFilter.getTimestamp()", "LayeredBloomFilter.getDepth()", "LayeredBloomFilter.merge(Hasher)"], "external_dependencies": {"modules": ["LayeredBloomFilter", "TimestampedBloomFilter", "TestingHashers"], "class_members": [{"name": "createTimedLayeredFilter", "type": "method"}]}, "category": "unit", "description": "Tests the expiration functionality of the LayeredBloomFilter."}, {"name": "testFindBitMapExtractor", "primary_tested": ["LayeredBloomFilter.find(BitMapExtractor)"], "associated_methods": ["TestingHashers.FROM1.indices(Shape)", "BitMapExtractor.fromIndexExtractor(IndexExtractor, int)"], "external_dependencies": {"modules": ["LayeredBloomFilter", "BitMapExtractor", "TestingHashers"], "class_members": [{"name": "setupFindTest", "type": "method"}]}, "category": "unit", "description": "Tests the find functionality using BitMapExtractor in the LayeredBloomFilter."}, {"name": "testFindBloomFilter", "primary_tested": ["LayeredBloomFilter.find(Hasher)"], "external_dependencies": {"modules": ["LayeredBloomFilter", "TestingHashers"], "class_members": [{"name": "setupFindTest", "type": "method"}]}, "category": "unit", "description": "Tests the find functionality using BloomFilter in the LayeredBloomFilter."}, {"name": "testFindIndexExtractor", "primary_tested": ["LayeredBloomFilter.find(IndexExtractor)"], "associated_methods": ["TestingHashers.FROM1.indices(Shape)"], "external_dependencies": {"modules": ["LayeredBloomFilter", "TestingHashers"], "class_members": [{"name": "setupFindTest", "type": "method"}]}, "category": "unit", "description": "Tests the find functionality using IndexExtractor in the LayeredBloomFilter."}, {"name": "testGetLayer", "primary_tested": ["LayeredBloomFilter.get(int)"], "associated_methods": ["SimpleBloomFilter.asBitMapArray()"], "external_dependencies": {"modules": ["LayeredBloomFilter", "SimpleBloomFilter", "TestingHashers"], "class_members": [{"name": "createEmptyFilter", "type": "method"}]}, "category": "unit", "description": "Tests the retrieval of a specific layer in the LayeredBloomFilter."}, {"name": "testMultipleFilters", "primary_tested": ["LayeredBloomFilter.contains(BloomFilter)", "LayeredBloomFilter.copy().contains(BloomFilter)", "LayeredBloomFilter.flatten().contains(BloomFilter)"], "associated_methods": ["LayeredBloomFilter.getDepth()", "LayeredBloomFilter.merge(Hasher)"], "external_dependencies": {"modules": ["LayeredBloomFilter", "TestingHashers"], "class_members": [{"name": "createEmptyFilter", "type": "method"}, {"name": "makeFilter", "type": "method"}]}, "category": "unit", "description": "Tests the functionality of managing multiple filters in the LayeredBloomFilter."}, {"name": "testNext", "primary_tested": ["LayeredBloomFilter.next()"], "associated_methods": ["LayeredBloomFilter.getDepth()", "LayeredBloomFilter.merge(Hasher)", "LayeredBloomFilter.get(int).contains(Hasher)"], "external_dependencies": {"modules": ["LayeredBloomFilter", "LayerManager", "SimpleBloomFilter", "TestingHashers"], "class_members": [{"name": "createEmptyFilter", "type": "method"}]}, "category": "unit", "description": "Tests the next functionality of the LayeredBloomFilter."}]}