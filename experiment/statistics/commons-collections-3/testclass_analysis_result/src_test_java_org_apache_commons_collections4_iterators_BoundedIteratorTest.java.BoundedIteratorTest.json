{"file_path": "src/test/java/org/apache/commons/collections4/iterators/BoundedIteratorTest.java", "testclass_name": "BoundedIteratorTest", "dependencies": ["package org.apache.commons.collections4.iterators;", "import static org.hamcrest.MatcherAssert.assertThat;", "import static org.hamcrest.core.Is.is;", "import static org.hamcrest.core.IsEqual.equalTo;", "import static org.hamcrest.core.IsNull.nullValue;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.ArrayList;", "import java.util.Arrays;", "import java.util.Collections;", "import java.util.Iterator;", "import java.util.List;", "import java.util.NoSuchElementException;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "BoundedIteratorTest", "description": "Unit tests for the BoundedIterator class, which decorates an iterator with bounds on the start index and maximum number of elements.", "class_members": {"variables": [{"name": "testArray", "type": "String[]"}, {"name": "testList", "type": "List<E>"}], "methods": [{"name": "makeEmptyIterator", "signature": "Iterator<E> makeEmptyIterator()"}, {"name": "makeObject", "signature": "Iterator<E> makeObject()"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testBounded", "primary_tested": ["BoundedIterator.next()"], "associated_methods": ["BoundedIterator.hasNext()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the bounded iterator functionality, ensuring elements are returned within the specified bounds."}, {"name": "testEmptyBounded", "primary_tested": ["BoundedIterator.hasNext()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior of a bounded iterator with a max of 0, ensuring it behaves as an empty iterator."}, {"name": "testMaxGreaterThanSize", "primary_tested": ["BoundedIterator.next()"], "associated_methods": ["BoundedIterator.hasNext()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior of a bounded iterator when the max is greater than the size of the decorated iterator."}, {"name": "testNegativeMax", "primary_tested": ["BoundedIterator.BoundedIterator(Iterator<E>, int, int)"], "external_dependencies": {"modules": ["BoundedIterator", "IllegalArgumentException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior when a negative max is passed to the BoundedIterator constructor, expecting an IllegalArgumentException."}, {"name": "testNegativeOffset", "primary_tested": ["BoundedIterator.BoundedIterator(Iterator<E>, int, int)"], "external_dependencies": {"modules": ["BoundedIterator", "IllegalArgumentException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior when a negative offset is passed to the BoundedIterator constructor, expecting an IllegalArgumentException."}, {"name": "testOffsetGreaterThanSize", "primary_tested": ["BoundedIterator.hasNext()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior of a bounded iterator when the offset is greater than the size of the decorated iterator."}, {"name": "testRemoveCalledTwice", "primary_tested": ["BoundedIterator.remove()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "IllegalStateException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior when remove() is called twice without calling next() in between, expecting an IllegalStateException."}, {"name": "testRemoveFirst", "primary_tested": ["BoundedIterator.remove()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests removing the first element and verifies it is removed from the underlying collection."}, {"name": "testRemoveLast", "primary_tested": ["BoundedIterator.remove()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests removing the last element and verifies it is removed from the underlying collection."}, {"name": "testRemoveMiddle", "primary_tested": ["BoundedIterator.remove()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests removing an element in the middle of the iterator and verifies it is removed from the underlying collection."}, {"name": "testRemoveUnsupported", "primary_tested": ["BoundedIterator.remove()"], "associated_methods": ["BoundedIterator.next()"], "external_dependencies": {"modules": ["BoundedIterator", "UnsupportedOperationException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior when the decorated iterator does not support the remove() method, expecting an UnsupportedOperationException."}, {"name": "testRemoveWithoutCallingNext", "primary_tested": ["BoundedIterator.remove()"], "external_dependencies": {"modules": ["BoundedIterator", "IllegalStateException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior when remove() is called without calling next() first, expecting an IllegalStateException."}, {"name": "testSameAsDecorated", "primary_tested": ["BoundedIterator.next()"], "associated_methods": ["BoundedIterator.hasNext()"], "external_dependencies": {"modules": ["BoundedIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the behavior of a bounded iterator with offset 0 and max equal to the size of the decorated iterator, ensuring it returns all elements."}]}