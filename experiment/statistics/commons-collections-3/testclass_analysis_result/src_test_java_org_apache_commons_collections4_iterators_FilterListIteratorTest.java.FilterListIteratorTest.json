{"file_path": "src/test/java/org/apache/commons/collections4/iterators/FilterListIteratorTest.java", "testclass_name": "FilterListIteratorTest", "dependencies": ["package org.apache.commons.collections4.iterators;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.ArrayList;", "import java.util.Collection;", "import java.util.List;", "import java.util.ListIterator;", "import java.util.Random;", "import org.apache.commons.collections4.Predicate;", "import org.apache.commons.collections4.PredicateUtils;", "import org.apache.commons.collections4.list.GrowthList;", "import org.junit.jupiter.api.AfterEach;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "FilterListIteratorTest", "description": "Unit tests for the FilterListIterator class, which filters elements of a list based on a predicate.", "class_members": {"variables": [{"name": "list", "type": "ArrayList<Integer>"}, {"name": "odds", "type": "ArrayList<Integer>"}, {"name": "evens", "type": "ArrayList<Integer>"}, {"name": "threes", "type": "ArrayList<Integer>"}, {"name": "fours", "type": "ArrayList<Integer>"}, {"name": "sixes", "type": "ArrayList<Integer>"}, {"name": "truePred", "type": "Predicate<Integer>"}, {"name": "falsePred", "type": "Predicate<Integer>"}, {"name": "evenPred", "type": "Predicate<Integer>"}, {"name": "oddPred", "type": "Predicate<Integer>"}, {"name": "threePred", "type": "Predicate<Integer>"}, {"name": "fourPred", "type": "Predicate<Integer>"}, {"name": "random", "type": "Random"}], "methods": [{"name": "nextNextPrevious", "signature": "void nextNextPrevious(ListIterator<?>, ListIterator<?>)"}, {"name": "previousPreviousNext", "signature": "void previousPreviousNext(ListIterator<?>, ListIterator<?>)"}, {"name": "walkBackward", "signature": "void walkBackward(ListIterator<?>, ListIterator<?>)"}, {"name": "walkForward", "signature": "void walkForward(ListIterator<?>, ListIterator<?>)"}, {"name": "walkLists", "signature": "void walkLists(List<E>, ListIterator<E>)"}], "nested_classes": []}, "fixtures": ["setUp", "tearDown"], "test_cases": [{"name": "testCollections360", "primary_tested": ["FilterListIterator.hasNext()", "FilterListIterator.hasPrevious()"], "external_dependencies": {"modules": ["GrowthList", "PredicateUtils", "FilterListIterator"], "class_members": [{"name": "truePred", "type": "variable"}], "project_specific_resources": ["PredicateUtils.anyPredicate(Collection<Predicate<Object>>)"]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasNext and hasPrevious methods of FilterListIterator for an empty list."}, {"name": "testEvens", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "evens", "type": "variable"}, {"name": "evenPred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator with an even number predicate."}, {"name": "testFailingHasNextBug", "primary_tested": ["FilterListIterator.hasNext()", "FilterListIterator.hasPrevious()", "FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "fours", "type": "variable"}, {"name": "fourPred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hasNext and hasPrevious methods of FilterListIterator for a list filtered by a four predicate."}, {"name": "testFalsePredicate", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "falsePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator with a false predicate."}, {"name": "testFours", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "fours", "type": "variable"}, {"name": "fourPred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator with a four predicate."}, {"name": "testManual", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "threePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator manually with a three predicate."}, {"name": "testNestedSixes", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "sixes", "type": "variable"}, {"name": "threePred", "type": "variable"}, {"name": "evenPred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests nested FilterListIterators with a three and even predicate."}, {"name": "testNestedSixes2", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "sixes", "type": "variable"}, {"name": "evenPred", "type": "variable"}, {"name": "threePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests nested FilterListIterators with an even and three predicate."}, {"name": "testNestedSixes3", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "sixes", "type": "variable"}, {"name": "threePred", "type": "variable"}, {"name": "evenPred", "type": "variable"}, {"name": "truePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests nested FilterListIterators with a three, even, and true predicate."}, {"name": "testNextChangesPrevious", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "associated_methods": ["FilterListIteratorTest.nextNextPrevious(ListIterator<?>, ListIterator<?>)"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "threes", "type": "variable"}, {"name": "threePred", "type": "variable"}, {"name": "truePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if calls to next() change the value returned by previous() in FilterListIterator."}, {"name": "testOdds", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "odds", "type": "variable"}, {"name": "oddPred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator with an odd number predicate."}, {"name": "testPreviousChangesNext", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "associated_methods": ["FilterListIteratorTest.previousPreviousNext(ListIterator<?>, ListIterator<?>)"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "threes", "type": "variable"}, {"name": "threePred", "type": "variable"}, {"name": "truePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if calls to previous() change the value returned by next() in FilterListIterator."}, {"name": "testThrees", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "threes", "type": "variable"}, {"name": "threePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator with a three predicate."}, {"name": "testTruePredicate", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}, {"name": "truePred", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the FilterListIterator with a true predicate."}, {"name": "testWalkLists", "primary_tested": ["FilterListIterator.next()", "FilterListIterator.previous()"], "external_dependencies": {"modules": ["FilterListIterator"], "class_members": [{"name": "list", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the walkLists utility method with a list iterator."}]}