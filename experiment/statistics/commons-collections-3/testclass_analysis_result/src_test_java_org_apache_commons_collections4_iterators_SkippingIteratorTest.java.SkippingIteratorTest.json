{"file_path": "src/test/java/org/apache/commons/collections4/iterators/SkippingIteratorTest.java", "testclass_name": "SkippingIteratorTest", "dependencies": ["package org.apache.commons.collections4.iterators;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.ArrayList;", "import java.util.Arrays;", "import java.util.Collections;", "import java.util.Iterator;", "import java.util.List;", "import java.util.NoSuchElementException;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "SkippingIteratorTest", "description": "Unit tests for the SkippingIterator class, which skips a specified number of elements in an iterator.", "class_members": {"variables": [{"name": "testArray", "type": "String[]"}, {"name": "testList", "type": "List<E>"}], "methods": [{"name": "makeEmptyIterator", "signature": "Iterator<E> makeEmptyIterator()"}, {"name": "makeObject", "signature": "Iterator<E> makeObject()"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testNegativeOffset", "primary_tested": ["SkippingIterator.<init>(Iterator<E>,int)"], "external_dependencies": {"modules": ["SkippingIterator", "IllegalArgumentException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the case if a negative offset is passed to the constructor. Expected IllegalArgumentException."}, {"name": "testOffsetGreaterThanSize", "primary_tested": ["SkippingIterator.<init>(Iterator<E>,int)"], "external_dependencies": {"modules": ["SkippingIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the case if the offset passed to the constructor is greater than the decorated iterator's size. The SkippingIterator should behave as if there are no more elements to return."}, {"name": "testRemoveCalledTwice", "primary_tested": ["SkippingIterator.remove()"], "external_dependencies": {"modules": ["SkippingIterator", "IllegalStateException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the remove() method being called twice without calling next() in between. Expected IllegalStateException."}, {"name": "testRemoveFirst", "primary_tested": ["SkippingIterator.remove()"], "external_dependencies": {"modules": ["SkippingIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests removing the first element. Verifies that the element is removed from the underlying collection."}, {"name": "testRemoveLast", "primary_tested": ["SkippingIterator.remove()"], "external_dependencies": {"modules": ["SkippingIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests removing the last element. Verifies that the element is removed from the underlying collection."}, {"name": "testRemoveMiddle", "primary_tested": ["SkippingIterator.remove()"], "external_dependencies": {"modules": ["SkippingIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests removing an element in the middle of the iterator. Verifies that the element is removed from the underlying collection."}, {"name": "testRemoveUnsupported", "primary_tested": ["SkippingIterator.remove()"], "external_dependencies": {"modules": ["SkippingIterator", "UnsupportedOperationException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the case if the decorated iterator does not support the remove() method and throws an UnsupportedOperationException."}, {"name": "testRemoveWithoutCallingNext", "primary_tested": ["SkippingIterator.remove()"], "external_dependencies": {"modules": ["SkippingIterator", "IllegalStateException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the remove() method being called without next() being called first. Expected IllegalStateException."}, {"name": "testSameAsDecorated", "primary_tested": ["SkippingIterator.<init>(Iterator<E>,int)"], "external_dependencies": {"modules": ["SkippingIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests a decorated iterator bounded such that the offset is zero, in that the SkippingIterator should return all the same elements as its decorated iterator."}, {"name": "testSkipping", "primary_tested": ["SkippingIterator.<init>(Iterator<E>,int)"], "external_dependencies": {"modules": ["SkippingIterator", "NoSuchElementException"], "class_members": [{"name": "testList", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests a decorated iterator bounded such that the first element returned is at an index greater than its first element, and the last element returned is at an index less than its last element."}]}