{"file_path": "src/test/java/org/apache/commons/collections4/bag/PredicatedBagTest.java", "testclass_name": "PredicatedBagTest", "dependencies": ["package org.apache.commons.collections4.bag;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.Set;", "import org.apache.commons.collections4.Bag;", "import org.apache.commons.collections4.Predicate;", "import org.apache.commons.collections4.functors.TruePredicate;", "import org.junit.jupiter.api.Test;"], "name": "PredicatedBagTest", "description": "Unit tests for PredicatedBag functionality, focusing on illegal and legal additions, and decorations.", "class_members": {"variables": [{"name": "truePredicate", "type": "Predicate<T>"}], "methods": [{"name": "decorateBag", "signature": "protected Bag<T> decorateBag(final HashBag<T> bag, final Predicate<T> predicate)"}, {"name": "makeTestBag", "signature": "protected Bag<T> makeTestBag()"}, {"name": "stringPredicate", "signature": "protected Predicate<T> stringPredicate()"}]}, "fixtures": [], "test_cases": [{"name": "testIllegalAdd", "primary_tested": ["Bag.add(T)"], "external_dependencies": {"modules": ["Bag", "HashBag", "Predicate", "TruePredicate", "IllegalArgumentException"], "class_members": [{"name": "truePredicate", "type": "variable"}, {"name": "decorateBag", "type": "method"}, {"name": "makeTestBag", "type": "method"}]}, "category": "unit", "description": "Tests that adding an illegal element to the bag throws an IllegalArgumentException."}, {"name": "testIllegalDecorate", "primary_tested": ["PredicatedBag.predicatedBag(HashBag<T>, Predicate<T>)"], "external_dependencies": {"modules": ["HashBag", "Predicate", "TruePredicate", "IllegalArgumentException", "NullPointerException"], "class_members": [{"name": "truePredicate", "type": "variable"}, {"name": "decorateBag", "type": "method"}, {"name": "stringPredicate", "type": "method"}]}, "category": "unit", "description": "Tests that decorating a bag with illegal elements or a null predicate throws an IllegalArgumentException or NullPointerException."}, {"name": "testLegalAddRemove", "primary_tested": ["Bag.add(T)", "Bag.remove(T)", "Bag.uniqueSet()"], "associated_methods": ["Bag.uniqueSet()"], "external_dependencies": {"modules": ["Bag", "HashBag", "Predicate", "TruePredicate"], "class_members": [{"name": "truePredicate", "type": "variable"}, {"name": "decorateBag", "type": "method"}, {"name": "makeTestBag", "type": "method"}]}, "category": "unit", "description": "Tests the legal addition and removal of elements from the bag, ensuring the unique set is updated correctly."}]}