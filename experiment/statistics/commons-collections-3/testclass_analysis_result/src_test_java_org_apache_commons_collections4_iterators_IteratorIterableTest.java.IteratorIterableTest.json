{"file_path": "src/test/java/org/apache/commons/collections4/iterators/IteratorIterableTest.java", "testclass_name": "IteratorIterableTest", "dependencies": ["package org.apache.commons.collections4.iterators;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.junit.jupiter.api.Assertions.fail;", "import java.util.ArrayList;", "import java.util.Iterator;", "import java.util.List;", "import org.apache.commons.collections4.BulkTest;", "import org.junit.jupiter.api.Test;"], "name": "IteratorIterableTest", "description": "Tests for the IteratorIterable class, focusing on its behavior with iterators and iterables.", "class_members": {"variables": [], "methods": [{"name": "createIterator", "signature": "Iterator<Integer> createIterator()"}, {"name": "verifyIteration", "signature": "void verifyIteration(Iterable<Number> iterable)"}], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testIterator", "primary_tested": ["IteratorIterable.<init>(Iterator<Integer>)"], "associated_methods": ["IteratorIterableTest.verifyIteration(Iterable<Number>)"], "external_dependencies": {"modules": ["Iterator", "Iterable", "IteratorIterable", "ArrayList", "List", "Integer"], "class_members": [{"name": "createIterator", "type": "method"}, {"name": "verifyIteration", "type": "method"}]}, "category": "unit", "description": "Tests the behavior of IteratorIterable when used with an iterator, ensuring it cannot be iterated twice."}, {"name": "testMultipleUserIterator", "primary_tested": ["IteratorIterable.<init>(Iterator<Integer>,boolean)"], "associated_methods": ["IteratorIterableTest.verifyIteration(Iterable<Number>)"], "external_dependencies": {"modules": ["Iterator", "Iterable", "IteratorIterable", "ArrayList", "List", "Integer"], "class_members": [{"name": "createIterator", "type": "method"}, {"name": "verifyIteration", "type": "method"}]}, "category": "unit", "description": "Tests the behavior of IteratorIterable when used with an iterator and allows multiple iterations."}]}