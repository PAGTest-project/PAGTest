{"file_path": "src/test/java/org/apache/commons/collections4/set/ListOrderedSetTest.java", "testclass_name": "ListOrderedSetTest", "dependencies": ["package org.apache.commons.collections4.set;", "import static org.junit.jupiter.api.Assertions.assertAll;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertSame;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.ArrayList;", "import java.util.Collection;", "import java.util.HashSet;", "import java.util.Iterator;", "import java.util.List;", "import java.util.Set;", "import org.apache.commons.collections4.IteratorUtils;", "import org.junit.jupiter.api.Test;"], "name": "ListOrderedSetTest", "description": "Unit tests for ListOrderedSet operations including decorator, duplicates, indexed addition, removal, replacement, ordering, and retention.", "class_members": {"variables": [{"name": "ZERO", "type": "static final Integer"}, {"name": "ONE", "type": "static final Integer"}, {"name": "TWO", "type": "static final Integer"}, {"name": "THREE", "type": "static final Integer"}], "methods": [{"name": "getCompatibilityVersion", "signature": "String getCompatibilityVersion()"}, {"name": "makeObject", "signature": "ListOrderedSet<E> makeObject()"}, {"name": "setupSet", "signature": "ListOrderedSet<E> setupSet()"}], "nested_classes": [{"name": "A", "description": "Internal class with overridden equals and hashCode methods"}, {"name": "B", "description": "Internal class with overridden equals and hashCode methods"}]}, "fixtures": [], "test_cases": [{"name": "testDecorator", "primary_tested": ["ListOrderedSet.listOrderedSet(List<E>)", "ListOrderedSet.listOrderedSet(Set<E>)", "ListOrderedSet.listOrderedSet(Set<E>, List<E>)"], "external_dependencies": {"modules": ["ListOrderedSet", "HashSet", "ArrayList", "NullPointerException"]}, "category": "unit", "description": "Tests the decorator functionality of ListOrderedSet by checking for expected exceptions when passing null parameters."}, {"name": "testDuplicates", "primary_tested": ["ListOrderedSet.listOrderedSet(List<E>)", "ListOrderedSet.size()", "ListOrderedSet.get(int)"], "associated_methods": ["IteratorUtils.toArray(Iterator<E>)"], "external_dependencies": {"modules": ["ListOrderedSet", "ArrayList", "IteratorUtils"]}, "category": "unit", "description": "Tests the handling of duplicates in ListOrderedSet and checks if the insertion order is preserved."}, {"name": "testListAddIndexed", "primary_tested": ["ListOrderedSet.add(E)", "ListOrderedSet.add(int, E)", "ListOrderedSet.addAll(int, Collection<? extends E>)", "ListOrderedSet.get(int)"], "external_dependencies": {"modules": ["ListOrderedSet", "ArrayList"]}, "category": "unit", "description": "Tests the indexed addition functionality of ListOrderedSet and checks if the order is maintained."}, {"name": "testListAddRemove", "primary_tested": ["ListOrderedSet.add(E)", "ListOrderedSet.remove(int)", "ListOrderedSet.asList()", "ListOrderedSet.indexOf(Object)"], "external_dependencies": {"modules": ["ListOrderedSet", "ArrayList"]}, "category": "unit", "description": "Tests the addition and removal functionality of ListOrderedSet and checks if the order is maintained."}, {"name": "testListAddReplacing", "primary_tested": ["ListOrderedSet.add(E)", "ListOrderedSet.decorated()", "ListOrderedSet.iterator()", "ListOrderedSet.get(int)", "ListOrderedSet.asList()"], "external_dependencies": {"modules": ["ListOrderedSet"]}, "category": "unit", "description": "Tests the replacement functionality of ListOrderedSet when adding elements that are equal but not the same instance."}, {"name": "testOrdering", "primary_tested": ["ListOrderedSet.setupSet()", "ListOrderedSet.iterator()", "ListOrderedSet.remove(Object)", "ListOrderedSet.add(E)"], "external_dependencies": {"modules": ["ListOrderedSet"]}, "category": "unit", "description": "Tests the ordering and removal functionality of ListOrderedSet and checks if the order is maintained after removals and additions."}, {"name": "testRetainAll", "primary_tested": ["ListOrderedSet.listOrderedSet(Set<E>, List<E>)", "ListOrderedSet.add(E)", "ListOrderedSet.retainAll(Collection<?>)", "ListOrderedSet.get(int)"], "external_dependencies": {"modules": ["ListOrderedSet", "ArrayList", "HashSet"]}, "category": "unit", "description": "Tests the retainAll functionality of ListOrderedSet and checks if the insertion order is preserved."}]}