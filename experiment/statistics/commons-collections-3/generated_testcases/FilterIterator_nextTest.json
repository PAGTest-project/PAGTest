[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.apache.commons.collections4.functors.TruePredicate.truePredicate;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.apache.commons.collections4.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FilterIterator_nextTest {\n\n    private FilterIterator<String> filterIterator;\n    private Iterator<String> iterator;\n    private Predicate<String> predicate;\n\n    @BeforeEach\n    public void setUp() {\n        List<String> list = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\"));\n        iterator = list.iterator();\n        predicate = truePredicate();\n        filterIterator = new FilterIterator<>(iterator, predicate);\n    }\n\n    @Test\n    public void testNextWithValidElement() {\n        assertTrue(filterIterator.hasNext());\n        assertEquals(\"a\", filterIterator.next());\n    }\n\n    @Test\n    public void testNextWithNoSuchElementException() {\n        // Consume all elements\n        while (filterIterator.hasNext()) {\n            filterIterator.next();\n        }\n        assertThrows(NoSuchElementException.class, () -> filterIterator.next());\n    }\n}\n"}]