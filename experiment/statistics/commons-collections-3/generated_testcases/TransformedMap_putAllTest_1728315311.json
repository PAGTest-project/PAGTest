[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.apache.commons.collections4.TransformerUtils;\nimport org.apache.commons.collections4.collection.TransformedCollectionTest;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class TransformedMap_putAllTest {\n\n    private TransformedMap<String, String> transformedMap;\n    private Map<String, String> baseMap;\n\n    @BeforeEach\n    public void setUp() {\n        baseMap = new HashMap<>();\n        baseMap.put(\"A\", \"1\");\n        baseMap.put(\"B\", \"2\");\n        baseMap.put(\"C\", \"3\");\n\n        transformedMap = TransformedMap.transformedMap(\n                baseMap,\n                (Transformer<? super String, ? extends String>) TransformedCollectionTest.TO_LOWER_CASE_TRANSFORMER,\n                (Transformer<? super String, ? extends String>) TransformedCollectionTest.STRING_TO_INTEGER_TRANSFORMER);\n    }\n\n    @Test\n    public void testPutAll() {\n        Map<String, String> mapToCopy = new HashMap<>();\n        mapToCopy.put(\"D\", \"4\");\n        mapToCopy.put(\"E\", \"5\");\n\n        transformedMap.putAll(mapToCopy);\n\n        assertEquals(5, transformedMap.size());\n        assertEquals(Integer.valueOf(4), transformedMap.get(\"d\"));\n        assertEquals(Integer.valueOf(5), transformedMap.get(\"e\"));\n    }\n\n    @Test\n    public void testPutAllWithEmptyMap() {\n        Map<String, String> mapToCopy = new HashMap<>();\n\n        transformedMap.putAll(mapToCopy);\n\n        assertEquals(3, transformedMap.size());\n        assertTrue(transformedMap.containsKey(\"a\"));\n        assertTrue(transformedMap.containsKey(\"b\"));\n        assertTrue(transformedMap.containsKey(\"c\"));\n    }\n}\n"}]