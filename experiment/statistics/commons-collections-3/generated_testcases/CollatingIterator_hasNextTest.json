[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.Iterator;\nimport java.util.List;\nimport org.apache.commons.collections4.comparators.ComparableComparator;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CollatingIterator_hasNextTest {\n\n    private Comparator<Integer> comparator;\n    private List<Integer> evens;\n    private List<Integer> odds;\n\n    @BeforeEach\n    public void setUp() {\n        comparator = new ComparableComparator<>();\n        evens = new ArrayList<>();\n        odds = new ArrayList<>();\n        for (int i = 0; i < 20; i++) {\n            if (i % 2 == 0) {\n                evens.add(i);\n            } else {\n                odds.add(i);\n            }\n        }\n    }\n\n    @Test\n    public void testHasNextWithElements() {\n        CollatingIterator<Integer> iter = new CollatingIterator<>(comparator, evens.iterator(), odds.iterator());\n        assertTrue(iter.hasNext());\n    }\n\n    @Test\n    public void testHasNextWithoutElements() {\n        CollatingIterator<Integer> iter = new CollatingIterator<>(comparator, new ArrayList<Integer>().iterator(), new ArrayList<Integer>().iterator());\n        assertFalse(iter.hasNext());\n    }\n\n    @Test\n    public void testHasNextWithOneEmptyIterator() {\n        CollatingIterator<Integer> iter = new CollatingIterator<>(comparator, evens.iterator(), new ArrayList<Integer>().iterator());\n        assertTrue(iter.hasNext());\n    }\n}\n"}]