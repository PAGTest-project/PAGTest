[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class IndexedCollection_retainAllTest {\n\n    private IndexedCollection<Integer, String> indexedCollection;\n    private Collection<String> originalCollection;\n\n    @BeforeEach\n    public void setUp() {\n        originalCollection = new ArrayList<>(Arrays.asList(\"1\", \"2\", \"3\"));\n        indexedCollection = decorateUniqueCollection(originalCollection);\n    }\n\n    @Test\n    public void testRetainAllWithMatchingElements() {\n        Collection<String> toRetain = Arrays.asList(\"2\", \"3\");\n        boolean changed = indexedCollection.retainAll(toRetain);\n\n        assertTrue(changed);\n        assertEquals(2, indexedCollection.size());\n        assertTrue(indexedCollection.containsAll(toRetain));\n    }\n\n    @Test\n    public void testRetainAllWithNoMatchingElements() {\n        Collection<String> toRetain = Arrays.asList(\"4\", \"5\");\n        boolean changed = indexedCollection.retainAll(toRetain);\n\n        assertTrue(changed);\n        assertEquals(0, indexedCollection.size());\n    }\n\n    @Test\n    public void testRetainAllWithAllMatchingElements() {\n        Collection<String> toRetain = Arrays.asList(\"1\", \"2\", \"3\");\n        boolean changed = indexedCollection.retainAll(toRetain);\n\n        assertFalse(changed);\n        assertEquals(3, indexedCollection.size());\n        assertTrue(indexedCollection.containsAll(toRetain));\n    }\n\n    private IndexedCollection<Integer, String> decorateUniqueCollection(Collection<String> original) {\n        Transformer<String, Integer> keyTransformer = s -> Integer.valueOf(s);\n        return IndexedCollection.uniqueIndexedCollection(original, keyTransformer);\n    }\n}\n"}]