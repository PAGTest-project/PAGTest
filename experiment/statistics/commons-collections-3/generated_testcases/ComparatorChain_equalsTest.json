[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.ArrayList;\nimport java.util.BitSet;\nimport java.util.Comparator;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ComparatorChain_equalsTest {\n\n    @Test\n    void testEquals() {\n        // Given\n        Comparator<Integer> comparator1 = Comparator.naturalOrder();\n        Comparator<Integer> comparator2 = Comparator.reverseOrder();\n        List<Comparator<Integer>> comparators = new ArrayList<>();\n        comparators.add(comparator1);\n        BitSet bits = new BitSet();\n        ComparatorChain<Integer> chain1 = new ComparatorChain<>(comparators, bits);\n\n        List<Comparator<Integer>> comparators2 = new ArrayList<>();\n        comparators2.add(comparator1);\n        ComparatorChain<Integer> chain2 = new ComparatorChain<>(comparators2, bits);\n\n        List<Comparator<Integer>> comparators3 = new ArrayList<>();\n        comparators3.add(comparator2);\n        ComparatorChain<Integer> chain3 = new ComparatorChain<>(comparators3, bits);\n\n        // When and Then\n        assertTrue(chain1.equals(chain2)); // Same comparators and bits\n        assertFalse(chain1.equals(chain3)); // Different comparators\n        assertFalse(chain1.equals(null)); // Null object\n        assertFalse(chain1.equals(new Object())); // Different class\n        assertTrue(chain1.equals(chain1)); // Same instance\n    }\n}\n"}]