[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.SortedMap;\nimport java.util.TreeMap;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class TransformedSortedMap_transformedSortedMapTest {\n\n    @Test\n    public void testTransformedSortedMapWithNonEmptyMap() {\n        // Given\n        SortedMap<String, Integer> originalMap = new TreeMap<>();\n        originalMap.put(\"key1\", 1);\n        originalMap.put(\"key2\", 2);\n\n        Transformer<String, String> keyTransformer = input -> input + \"_transformed\";\n        Transformer<Integer, Integer> valueTransformer = input -> input * 2;\n\n        // When\n        TransformedSortedMap<String, Integer> transformedMap = TransformedSortedMap.transformedSortedMap(originalMap, keyTransformer, valueTransformer);\n\n        // Then\n        assertEquals(2, transformedMap.size());\n        assertTrue(transformedMap.containsKey(\"key1_transformed\"));\n        assertTrue(transformedMap.containsKey(\"key2_transformed\"));\n        assertEquals(2, transformedMap.get(\"key1_transformed\"));\n        assertEquals(4, transformedMap.get(\"key2_transformed\"));\n    }\n\n    @Test\n    public void testTransformedSortedMapWithEmptyMap() {\n        // Given\n        SortedMap<String, Integer> originalMap = new TreeMap<>();\n\n        Transformer<String, String> keyTransformer = input -> input + \"_transformed\";\n        Transformer<Integer, Integer> valueTransformer = input -> input * 2;\n\n        // When\n        TransformedSortedMap<String, Integer> transformedMap = TransformedSortedMap.transformedSortedMap(originalMap, keyTransformer, valueTransformer);\n\n        // Then\n        assertTrue(transformedMap.isEmpty());\n    }\n}\n"}]