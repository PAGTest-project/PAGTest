[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_containsAllTest {\n\n    private CompositeCollection<String> compositeCollection;\n    private Collection<String> collection1;\n    private Collection<String> collection2;\n\n    @BeforeEach\n    public void setUp() {\n        compositeCollection = new CompositeCollection<>();\n        collection1 = new ArrayList<>(Arrays.asList(\"A\", \"B\", \"C\"));\n        collection2 = new ArrayList<>(Arrays.asList(\"D\", \"E\", \"F\"));\n        compositeCollection.addComposited(collection1, collection2);\n    }\n\n    @Test\n    public void testContainsAll_WithNullCollection() {\n        assertFalse(compositeCollection.containsAll(null));\n    }\n\n    @Test\n    public void testContainsAll_WithEmptyCollection() {\n        assertTrue(compositeCollection.containsAll(new ArrayList<>()));\n    }\n\n    @Test\n    public void testContainsAll_WithAllElementsPresent() {\n        Collection<String> testCollection = Arrays.asList(\"A\", \"D\");\n        assertTrue(compositeCollection.containsAll(testCollection));\n    }\n\n    @Test\n    public void testContainsAll_WithSomeElementsMissing() {\n        Collection<String> testCollection = Arrays.asList(\"A\", \"X\");\n        assertFalse(compositeCollection.containsAll(testCollection));\n    }\n\n    @Test\n    public void testContainsAll_WithAllElementsMissing() {\n        Collection<String> testCollection = Arrays.asList(\"X\", \"Y\");\n        assertFalse(compositeCollection.containsAll(testCollection));\n    }\n}\n"}]