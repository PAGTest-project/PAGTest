[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\nimport org.apache.commons.collections4.keyvalue.MultiKey;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_putTest {\n\n    private MultiKeyMap<String, String> multiKeyMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiKeyMap = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testPutNewEntry() {\n        String key1 = \"key1\";\n        String key2 = \"key2\";\n        String key3 = \"key3\";\n        String key4 = \"key4\";\n        String key5 = \"key5\";\n        String value = \"value\";\n\n        assertNull(multiKeyMap.put(key1, key2, key3, key4, key5, value));\n        assertEquals(value, multiKeyMap.get(key1, key2, key3, key4, key5));\n    }\n\n    @Test\n    public void testPutExistingEntry() {\n        String key1 = \"key1\";\n        String key2 = \"key2\";\n        String key3 = \"key3\";\n        String key4 = \"key4\";\n        String key5 = \"key5\";\n        String value1 = \"value1\";\n        String value2 = \"value2\";\n\n        assertNull(multiKeyMap.put(key1, key2, key3, key4, key5, value1));\n        assertEquals(value1, multiKeyMap.put(key1, key2, key3, key4, key5, value2));\n        assertEquals(value2, multiKeyMap.get(key1, key2, key3, key4, key5));\n    }\n}\n"}]