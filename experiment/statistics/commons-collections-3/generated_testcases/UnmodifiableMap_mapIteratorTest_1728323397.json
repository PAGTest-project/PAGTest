[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.IterableMap;\nimport org.apache.commons.collections4.MapIterator;\nimport org.apache.commons.collections4.iterators.UnmodifiableMapIterator;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\npublic class UnmodifiableMap_mapIteratorTest {\n\n    @Test\n    public void testMapIteratorWithIterableMap() {\n        // Given\n        IterableMap<String, String> iterableMap = mock(IterableMap.class);\n        MapIterator<String, String> mockIterator = mock(MapIterator.class);\n        when(iterableMap.mapIterator()).thenReturn(mockIterator);\n\n        UnmodifiableMap<String, String> unmodifiableMap = new UnmodifiableMap<>(iterableMap);\n\n        // When\n        MapIterator<String, String> result = unmodifiableMap.mapIterator();\n\n        // Then\n        assertTrue(result instanceof UnmodifiableMapIterator);\n        assertSame(mockIterator, ((UnmodifiableMapIterator<String, String>) result).getIterator());\n    }\n\n    @Test\n    public void testMapIteratorWithoutIterableMap() {\n        // Given\n        Map<String, String> regularMap = mock(Map.class);\n        UnmodifiableMap<String, String> unmodifiableMap = new UnmodifiableMap<>(regularMap);\n\n        // When\n        MapIterator<String, String> result = unmodifiableMap.mapIterator();\n\n        // Then\n        assertTrue(result instanceof UnmodifiableMapIterator);\n        assertTrue(((UnmodifiableMapIterator<String, String>) result).getIterator() instanceof EntrySetMapIterator);\n    }\n}\n"}]