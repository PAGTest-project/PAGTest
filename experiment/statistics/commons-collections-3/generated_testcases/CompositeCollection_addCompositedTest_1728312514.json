[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_addCompositedTest {\n\n    private CompositeCollection<String> compositeCollection;\n    private List<String> collection1;\n    private List<String> collection2;\n\n    @BeforeEach\n    public void setUp() {\n        compositeCollection = new CompositeCollection<>();\n        collection1 = new ArrayList<>(List.of(\"A\", \"B\"));\n        collection2 = new ArrayList<>(List.of(\"C\", \"D\"));\n    }\n\n    @Test\n    public void testAddComposited_NonNullCollection() {\n        compositeCollection.addComposited(collection1);\n        assertEquals(1, compositeCollection.getCollections().size());\n        assertTrue(compositeCollection.getCollections().contains(collection1));\n    }\n\n    @Test\n    public void testAddComposited_NullCollection() {\n        compositeCollection.addComposited(null);\n        assertEquals(0, compositeCollection.getCollections().size());\n    }\n\n    @Test\n    public void testAddComposited_MultipleCollections() {\n        compositeCollection.addComposited(collection1, collection2);\n        assertEquals(2, compositeCollection.getCollections().size());\n        assertTrue(compositeCollection.getCollections().contains(collection1));\n        assertTrue(compositeCollection.getCollections().contains(collection2));\n    }\n\n    @Test\n    public void testAddComposited_ArrayOfCollections() {\n        Collection<String>[] collections = new Collection[]{collection1, collection2};\n        compositeCollection.addComposited(collections);\n        assertEquals(2, compositeCollection.getCollections().size());\n        assertTrue(compositeCollection.getCollections().contains(collection1));\n        assertTrue(compositeCollection.getCollections().contains(collection2));\n    }\n}\n"}]