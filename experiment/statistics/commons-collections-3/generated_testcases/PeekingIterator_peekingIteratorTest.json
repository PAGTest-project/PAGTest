[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PeekingIterator_peekingIteratorTest {\n\n    private List<String> testList;\n    private static final String[] testArray = {\"a\", \"b\", \"c\"};\n\n    @SuppressWarnings(\"unchecked\")\n    @BeforeEach\n    protected void setUp() throws Exception {\n        testList = new ArrayList<>(Arrays.asList((String[]) testArray));\n    }\n\n    @Test\n    public void testPeekingIteratorWithStandardIterator() {\n        Iterator<String> standardIterator = testList.iterator();\n        PeekingIterator<String> peekingIterator = PeekingIterator.peekingIterator(standardIterator);\n\n        assertTrue(peekingIterator.hasNext());\n        assertEquals(\"a\", peekingIterator.peek());\n        assertEquals(\"a\", peekingIterator.next());\n        assertEquals(\"b\", peekingIterator.peek());\n        assertEquals(\"b\", peekingIterator.next());\n        assertEquals(\"c\", peekingIterator.peek());\n        assertEquals(\"c\", peekingIterator.next());\n        assertFalse(peekingIterator.hasNext());\n        assertNull(peekingIterator.peek());\n        assertThrows(NoSuchElementException.class, () -> peekingIterator.next());\n    }\n\n    @Test\n    public void testPeekingIteratorWithPeekingIterator() {\n        Iterator<String> standardIterator = testList.iterator();\n        PeekingIterator<String> originalPeekingIterator = new PeekingIterator<>(standardIterator);\n        PeekingIterator<String> peekingIterator = PeekingIterator.peekingIterator(originalPeekingIterator);\n\n        assertSame(originalPeekingIterator, peekingIterator);\n        assertTrue(peekingIterator.hasNext());\n        assertEquals(\"a\", peekingIterator.peek());\n        assertEquals(\"a\", peekingIterator.next());\n        assertEquals(\"b\", peekingIterator.peek());\n        assertEquals(\"b\", peekingIterator.next());\n        assertEquals(\"c\", peekingIterator.peek());\n        assertEquals(\"c\", peekingIterator.next());\n        assertFalse(peekingIterator.hasNext());\n        assertNull(peekingIterator.peek());\n        assertThrows(NoSuchElementException.class, () -> peekingIterator.next());\n    }\n\n    @Test\n    public void testPeekingIteratorWithNullIterator() {\n        assertThrows(NullPointerException.class, () -> PeekingIterator.peekingIterator(null));\n    }\n}\n"}]