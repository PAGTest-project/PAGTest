[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class TransformedMap_transformedMapTest {\n\n    private Transformer<String, String> keyTransformer;\n    private Transformer<String, String> valueTransformer;\n\n    @BeforeEach\n    public void setUp() {\n        keyTransformer = input -> \"transformed_\" + input;\n        valueTransformer = input -> \"transformed_\" + input;\n    }\n\n    @Test\n    public void testTransformedMapWithEmptyMap() {\n        Map<String, String> emptyMap = new HashMap<>();\n        TransformedMap<String, String> transformedMap = TransformedMap.transformedMap(emptyMap, keyTransformer, valueTransformer);\n        assertTrue(transformedMap.isEmpty());\n    }\n\n    @Test\n    public void testTransformedMapWithNonEmptyMap() {\n        Map<String, String> baseMap = new HashMap<>();\n        baseMap.put(\"key1\", \"value1\");\n        baseMap.put(\"key2\", \"value2\");\n\n        TransformedMap<String, String> transformedMap = TransformedMap.transformedMap(baseMap, keyTransformer, valueTransformer);\n\n        assertEquals(2, transformedMap.size());\n        assertEquals(\"transformed_value1\", transformedMap.get(\"transformed_key1\"));\n        assertEquals(\"transformed_value2\", transformedMap.get(\"transformed_key2\"));\n    }\n}\n"}]