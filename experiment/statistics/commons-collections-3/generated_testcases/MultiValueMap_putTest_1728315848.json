[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_putTest {\n\n    private MultiValueMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new MultiValueMap<>(new HashMap<>(), ArrayList::new);\n    }\n\n    @Test\n    public void testPut_NewKey() {\n        String key = \"A\";\n        String value = \"AA\";\n        Object result = map.put(key, value);\n        assertEquals(value, result);\n        Collection<String> collection = map.getCollection(key);\n        assertNotNull(collection);\n        assertTrue(collection.contains(value));\n    }\n\n    @Test\n    public void testPut_ExistingKey() {\n        String key = \"A\";\n        String value1 = \"AA\";\n        String value2 = \"AB\";\n        map.put(key, value1);\n        Object result = map.put(key, value2);\n        assertEquals(value2, result);\n        Collection<String> collection = map.getCollection(key);\n        assertNotNull(collection);\n        assertTrue(collection.contains(value1));\n        assertTrue(collection.contains(value2));\n    }\n\n    @Test\n    public void testPut_EmptyCollection() {\n        String key = \"A\";\n        String value = \"AA\";\n        // Mocking a collection that returns empty when created\n        MultiValueMap<String, String> map = new MultiValueMap<>(new HashMap<>(), () -> new ArrayList<>());\n        Object result = map.put(key, value);\n        assertNull(result);\n        Collection<String> collection = map.getCollection(key);\n        assertNull(collection);\n    }\n}\n"}]