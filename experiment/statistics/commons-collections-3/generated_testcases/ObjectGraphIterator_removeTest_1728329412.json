[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ObjectGraphIterator_removeTest {\n\n    private ObjectGraphIterator<String> iterator;\n    private List<String> list;\n\n    @BeforeEach\n    public void setUp() {\n        list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n        iterator = new ObjectGraphIterator<>(list.iterator());\n    }\n\n    @Test\n    public void testRemoveSuccess() {\n        // Given\n        assertTrue(iterator.hasNext());\n        assertEquals(\"A\", iterator.next());\n\n        // When\n        iterator.remove();\n\n        // Then\n        assertFalse(list.contains(\"A\"));\n        assertEquals(2, list.size());\n    }\n\n    @Test\n    public void testRemoveWithoutNext() {\n        // Given\n        assertTrue(iterator.hasNext());\n\n        // When/Then\n        assertThrows(IllegalStateException.class, () -> iterator.remove());\n    }\n\n    @Test\n    public void testRemoveTwice() {\n        // Given\n        assertTrue(iterator.hasNext());\n        assertEquals(\"A\", iterator.next());\n        iterator.remove();\n\n        // When/Then\n        assertThrows(IllegalStateException.class, () -> iterator.remove());\n    }\n\n    @Test\n    public void testRemoveAfterIteration() {\n        // Given\n        while (iterator.hasNext()) {\n            iterator.next();\n        }\n\n        // When/Then\n        assertThrows(IllegalStateException.class, () -> iterator.remove());\n    }\n}\n"}]