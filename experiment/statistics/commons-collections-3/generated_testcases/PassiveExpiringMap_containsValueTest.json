[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_containsValueTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(1, TimeUnit.MINUTES);\n    }\n\n    @Test\n    public void testContainsValue_ValuePresent() {\n        expiringMap.put(1, \"value1\");\n        expiringMap.put(2, \"value2\");\n\n        assertTrue(expiringMap.containsValue(\"value1\"));\n        assertTrue(expiringMap.containsValue(\"value2\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueNotPresent() {\n        expiringMap.put(1, \"value1\");\n        expiringMap.put(2, \"value2\");\n\n        assertFalse(expiringMap.containsValue(\"value3\"));\n    }\n\n    @Test\n    public void testContainsValue_ExpiredValue() throws InterruptedException {\n        expiringMap = new PassiveExpiringMap<>(1, TimeUnit.SECONDS);\n        expiringMap.put(1, \"value1\");\n        expiringMap.put(2, \"value2\");\n\n        Thread.sleep(1500); // Wait for entries to expire\n\n        assertFalse(expiringMap.containsValue(\"value1\"));\n        assertFalse(expiringMap.containsValue(\"value2\"));\n    }\n}\n"}]