[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport java.util.ArrayList;\nimport java.util.ListIterator;\nimport org.apache.commons.collections4.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FilterListIterator_nextTest {\n\n    private ArrayList<Integer> list;\n    private Predicate<Integer> threePred;\n    private FilterListIterator<Integer> filterListIterator;\n\n    @BeforeEach\n    public void setUp() {\n        list = new ArrayList<>();\n        for (int i = 0; i < 20; i++) {\n            list.add(Integer.valueOf(i));\n        }\n        threePred = x -> x % 3 == 0;\n        filterListIterator = new FilterListIterator<>(list.listIterator(), threePred);\n    }\n\n    @Test\n    public void testNextWithValidElement() {\n        filterListIterator.setListIterator(list.listIterator());\n        filterListIterator.setPredicate(threePred);\n        assertEquals(Integer.valueOf(0), filterListIterator.next());\n        assertEquals(Integer.valueOf(3), filterListIterator.next());\n        assertEquals(Integer.valueOf(6), filterListIterator.next());\n    }\n\n    @Test\n    public void testNextWithNoValidElement() {\n        filterListIterator.setListIterator(list.listIterator());\n        filterListIterator.setPredicate(x -> false);\n        assertThrows(NoSuchElementException.class, () -> filterListIterator.next());\n    }\n}\n"}]