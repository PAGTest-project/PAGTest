[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.apache.commons.collections4.functors.Transformer;\nimport org.apache.commons.collections4.iterators.TransformIterator;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class IteratorUtils_transformedIteratorTest {\n\n    @Test\n    public void testTransformedIterator_NonNullInputs() {\n        Iterator<Integer> inputIterator = new ArrayIterator<>(new Integer[]{1, 2, 3});\n        Transformer<Integer, String> transformer = Object::toString;\n\n        Iterator<String> transformedIterator = IteratorUtils.transformedIterator(inputIterator, transformer);\n\n        assertTrue(transformedIterator.hasNext());\n        assertEquals(\"1\", transformedIterator.next());\n        assertEquals(\"2\", transformedIterator.next());\n        assertEquals(\"3\", transformedIterator.next());\n        assertFalse(transformedIterator.hasNext());\n        assertThrows(NoSuchElementException.class, transformedIterator::next);\n    }\n\n    @Test\n    public void testTransformedIterator_NullIterator() {\n        Transformer<Integer, String> transformer = Object::toString;\n\n        assertThrows(NullPointerException.class, () -> IteratorUtils.transformedIterator(null, transformer));\n    }\n\n    @Test\n    public void testTransformedIterator_NullTransformer() {\n        Iterator<Integer> inputIterator = new ArrayIterator<>(new Integer[]{1, 2, 3});\n\n        assertThrows(NullPointerException.class, () -> IteratorUtils.transformedIterator(inputIterator, null));\n    }\n}\n"}]