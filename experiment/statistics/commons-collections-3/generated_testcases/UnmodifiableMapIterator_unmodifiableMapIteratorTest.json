[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.apache.commons.collections4.MapIterator;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass UnmodifiableMapIterator_unmodifiableMapIteratorTest {\n\n    @Test\n    void testUnmodifiableMapIteratorWithUnmodifiableIterator() {\n        // Given\n        MapIterator<String, String> mockIterator = mock(MapIterator.class);\n        when(mockIterator.hasNext()).thenReturn(true);\n        when(mockIterator.next()).thenReturn(\"key\");\n        when(mockIterator.getKey()).thenReturn(\"key\");\n        when(mockIterator.getValue()).thenReturn(\"value\");\n\n        MapIterator<String, String> unmodifiableIterator = new UnmodifiableMapIterator<>(mockIterator);\n\n        // When\n        MapIterator<String, String> result = UnmodifiableMapIterator.unmodifiableMapIterator(unmodifiableIterator);\n\n        // Then\n        assertSame(unmodifiableIterator, result);\n    }\n\n    @Test\n    void testUnmodifiableMapIteratorWithModifiableIterator() {\n        // Given\n        MapIterator<String, String> mockIterator = mock(MapIterator.class);\n        when(mockIterator.hasNext()).thenReturn(true);\n        when(mockIterator.next()).thenReturn(\"key\");\n        when(mockIterator.getKey()).thenReturn(\"key\");\n        when(mockIterator.getValue()).thenReturn(\"value\");\n\n        // When\n        MapIterator<String, String> result = UnmodifiableMapIterator.unmodifiableMapIterator(mockIterator);\n\n        // Then\n        assertTrue(result instanceof UnmodifiableMapIterator);\n        assertNotSame(mockIterator, result);\n    }\n\n    @Test\n    void testUnmodifiableMapIteratorWithNullIterator() {\n        // When & Then\n        assertThrows(NullPointerException.class, () -> {\n            UnmodifiableMapIterator.unmodifiableMapIterator(null);\n        });\n    }\n}\n"}]