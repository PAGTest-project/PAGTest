[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Arrays;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_containsTest {\n\n    private CompositeCollection<String> compositeCollection;\n    private Collection<String> collection1;\n    private Collection<String> collection2;\n\n    @BeforeEach\n    public void setUp() {\n        compositeCollection = new CompositeCollection<>();\n        collection1 = new ArrayList<>(Arrays.asList(\"A\", \"B\", \"C\"));\n        collection2 = new ArrayList<>(Arrays.asList(\"D\", \"E\", \"F\"));\n        compositeCollection.addComposited(collection1, collection2);\n    }\n\n    @Test\n    public void testContains_ElementPresentInFirstCollection() {\n        assertTrue(compositeCollection.contains(\"A\"));\n    }\n\n    @Test\n    public void testContains_ElementPresentInSecondCollection() {\n        assertTrue(compositeCollection.contains(\"D\"));\n    }\n\n    @Test\n    public void testContains_ElementNotPresent() {\n        assertFalse(compositeCollection.contains(\"G\"));\n    }\n\n    @Test\n    public void testContains_EmptyCompositeCollection() {\n        CompositeCollection<String> emptyComposite = new CompositeCollection<>();\n        assertFalse(emptyComposite.contains(\"A\"));\n    }\n}\n"}]