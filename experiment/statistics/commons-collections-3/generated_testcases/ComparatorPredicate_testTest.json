[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.functors;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Comparator;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ComparatorPredicate_testTest {\n\n    @Test\n    void testComparatorPredicate() {\n        Comparator<Integer> comparator = Integer::compare;\n        ComparatorPredicate<Integer> predicate = new ComparatorPredicate<>(5, comparator, ComparatorPredicate.Criterion.EQUAL);\n\n        // Test EQUAL criterion\n        assertTrue(predicate.test(5));\n        assertFalse(predicate.test(4));\n        assertFalse(predicate.test(6));\n\n        // Test GREATER criterion\n        predicate = new ComparatorPredicate<>(5, comparator, ComparatorPredicate.Criterion.GREATER);\n        assertFalse(predicate.test(5));\n        assertFalse(predicate.test(4));\n        assertTrue(predicate.test(6));\n\n        // Test LESS criterion\n        predicate = new ComparatorPredicate<>(5, comparator, ComparatorPredicate.Criterion.LESS);\n        assertFalse(predicate.test(5));\n        assertTrue(predicate.test(4));\n        assertFalse(predicate.test(6));\n\n        // Test GREATER_OR_EQUAL criterion\n        predicate = new ComparatorPredicate<>(5, comparator, ComparatorPredicate.Criterion.GREATER_OR_EQUAL);\n        assertTrue(predicate.test(5));\n        assertFalse(predicate.test(4));\n        assertTrue(predicate.test(6));\n\n        // Test LESS_OR_EQUAL criterion\n        predicate = new ComparatorPredicate<>(5, comparator, ComparatorPredicate.Criterion.LESS_OR_EQUAL);\n        assertTrue(predicate.test(5));\n        assertTrue(predicate.test(4));\n        assertFalse(predicate.test(6));\n\n        // Test invalid criterion (should throw NullPointerException)\n        ComparatorPredicate.Criterion invalidCriterion = null;\n        assertThrows(NullPointerException.class, () -> new ComparatorPredicate<>(5, comparator, invalidCriterion));\n    }\n}\n"}]