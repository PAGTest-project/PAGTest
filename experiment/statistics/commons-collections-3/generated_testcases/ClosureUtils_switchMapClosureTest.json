[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.apache.commons.collections4.functors.EqualPredicate;\nimport org.apache.commons.collections4.functors.NOPClosure;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ClosureUtils_switchMapClosureTest {\n\n    @Test\n    public void testSwitchMapClosure_WithDefaultClosure() {\n        // Given\n        Map<String, Closure<String>> map = new HashMap<>();\n        map.put(\"key1\", NOPClosure.nopClosure());\n        map.put(\"key2\", NOPClosure.nopClosure());\n        map.put(null, NOPClosure.nopClosure());\n\n        // When\n        Closure<String> result = ClosureUtils.switchMapClosure(map);\n\n        // Then\n        assertNotNull(result);\n        result.execute(\"key1\");\n        result.execute(\"key2\");\n        result.execute(\"unknownKey\"); // Should execute the default closure\n    }\n\n    @Test\n    public void testSwitchMapClosure_WithoutDefaultClosure() {\n        // Given\n        Map<String, Closure<String>> map = new HashMap<>();\n        map.put(\"key1\", NOPClosure.nopClosure());\n        map.put(\"key2\", NOPClosure.nopClosure());\n\n        // When\n        Closure<String> result = ClosureUtils.switchMapClosure(map);\n\n        // Then\n        assertNotNull(result);\n        result.execute(\"key1\");\n        result.execute(\"key2\");\n        result.execute(\"unknownKey\"); // Should not throw an exception\n    }\n\n    @Test\n    public void testSwitchMapClosure_NullMap() {\n        // Given\n        Map<String, Closure<String>> map = null;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> ClosureUtils.switchMapClosure(map));\n    }\n\n    @Test\n    public void testSwitchMapClosure_EmptyMap() {\n        // Given\n        Map<String, Closure<String>> map = new HashMap<>();\n\n        // When\n        Closure<String> result = ClosureUtils.switchMapClosure(map);\n\n        // Then\n        assertNotNull(result);\n        result.execute(\"unknownKey\"); // Should not throw an exception\n    }\n}\n"}]