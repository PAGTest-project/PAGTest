[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class LoopingListIterator_previousTest {\n\n    private LoopingListIterator<String> loop;\n\n    @BeforeEach\n    public void setUp() {\n        final List<String> list = Arrays.asList(\"a\", \"b\", \"c\");\n        loop = new LoopingListIterator<>(list);\n    }\n\n    @Test\n    public void testPreviousWithElements() {\n        // Move to the end of the list\n        while (loop.hasNext()) {\n            loop.next();\n        }\n\n        // Test previous()\n        assertEquals(\"c\", loop.previous());\n        assertEquals(\"b\", loop.previous());\n        assertEquals(\"a\", loop.previous());\n    }\n\n    @Test\n    public void testPreviousAtStart() {\n        // Test previous() at the start of the list\n        assertEquals(\"c\", loop.previous());\n    }\n\n    @Test\n    public void testPreviousOnEmptyList() {\n        final List<String> emptyList = Arrays.asList();\n        loop = new LoopingListIterator<>(emptyList);\n\n        // Test previous() on an empty list\n        assertThrows(NoSuchElementException.class, () -> {\n            loop.previous();\n        });\n    }\n}\n"}]