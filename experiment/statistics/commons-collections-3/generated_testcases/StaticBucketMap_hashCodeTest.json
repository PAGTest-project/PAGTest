[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class StaticBucketMap_hashCodeTest {\n    private StaticBucketMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new StaticBucketMap<>(17);\n    }\n\n    @Test\n    public void testHashCodeWithSingleEntry() {\n        map.put(\"key1\", \"value1\");\n        int expectedHashCode = \"key1\".hashCode() ^ \"value1\".hashCode();\n        assertEquals(expectedHashCode, map.hashCode());\n    }\n\n    @Test\n    public void testHashCodeWithMultipleEntries() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        int expectedHashCode = (\"key1\".hashCode() ^ \"value1\".hashCode()) + (\"key2\".hashCode() ^ \"value2\".hashCode());\n        assertEquals(expectedHashCode, map.hashCode());\n    }\n\n    @Test\n    public void testHashCodeWithRemovedEntry() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        map.remove(\"key1\");\n        int expectedHashCode = \"key2\".hashCode() ^ \"value2\".hashCode();\n        assertEquals(expectedHashCode, map.hashCode());\n    }\n}\n"}]