[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PushbackIterator_pushbackIteratorTest {\n\n    private Iterator<String> testIterator;\n\n    @BeforeEach\n    public void setUp() {\n        testIterator = new Iterator<String>() {\n            private int index = 0;\n            private final String[] elements = {\"a\", \"b\", \"c\"};\n\n            @Override\n            public boolean hasNext() {\n                return index < elements.length;\n            }\n\n            @Override\n            public String next() {\n                if (!hasNext()) {\n                    throw new NoSuchElementException();\n                }\n                return elements[index++];\n            }\n        };\n    }\n\n    @Test\n    public void testPushbackIteratorWithRegularIterator() {\n        PushbackIterator<String> pushbackIterator = PushbackIterator.pushbackIterator(testIterator);\n        assertTrue(pushbackIterator.hasNext());\n        assertEquals(\"a\", pushbackIterator.next());\n        pushbackIterator.pushback(\"a\");\n        assertEquals(\"a\", pushbackIterator.next());\n        assertEquals(\"b\", pushbackIterator.next());\n        assertEquals(\"c\", pushbackIterator.next());\n    }\n\n    @Test\n    public void testPushbackIteratorWithPushbackIterator() {\n        PushbackIterator<String> originalPushbackIterator = new PushbackIterator<>(testIterator);\n        PushbackIterator<String> pushbackIterator = PushbackIterator.pushbackIterator(originalPushbackIterator);\n        assertTrue(pushbackIterator.hasNext());\n        assertEquals(\"a\", pushbackIterator.next());\n        pushbackIterator.pushback(\"a\");\n        assertEquals(\"a\", pushbackIterator.next());\n        assertEquals(\"b\", pushbackIterator.next());\n        assertEquals(\"c\", pushbackIterator.next());\n    }\n\n    @Test\n    public void testPushbackIteratorWithNullIterator() {\n        assertThrows(NullPointerException.class, () -> {\n            PushbackIterator.pushbackIterator(null);\n        });\n    }\n}\n"}]