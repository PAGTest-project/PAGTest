[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.Comparator;\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class TransformingComparator_compareTest {\n\n    private Transformer<String, Integer> transformer;\n    private Comparator<Integer> decoratedComparator;\n    private TransformingComparator<String, Integer> transformingComparator;\n\n    @BeforeEach\n    public void setUp() {\n        transformer = mock(Transformer.class);\n        decoratedComparator = mock(Comparator.class);\n        transformingComparator = new TransformingComparator<>(transformer, decoratedComparator);\n    }\n\n    @Test\n    public void testCompare() {\n        String obj1 = \"1\";\n        String obj2 = \"2\";\n        Integer transformedObj1 = 1;\n        Integer transformedObj2 = 2;\n\n        when(transformer.apply(obj1)).thenReturn(transformedObj1);\n        when(transformer.apply(obj2)).thenReturn(transformedObj2);\n        when(decoratedComparator.compare(transformedObj1, transformedObj2)).thenReturn(-1);\n\n        int result = transformingComparator.compare(obj1, obj2);\n\n        assertEquals(-1, result);\n    }\n}\n"}]