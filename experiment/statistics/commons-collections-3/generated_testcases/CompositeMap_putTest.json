[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Collection;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_putTest {\n\n    private CompositeMap<String, String> compositeMap;\n    private Map<String, String> mapOne;\n    private Map<String, String> mapTwo;\n\n    @BeforeEach\n    public void setUp() {\n        mapOne = new HashMap<>();\n        mapTwo = new HashMap<>();\n        compositeMap = new CompositeMap<>(mapOne, mapTwo, new CompositeMap.MapMutator<String, String>() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public String put(CompositeMap<String, String> map, Map<String, String>[] composited, String key, String value) {\n                for (Map<String, String> m : composited) {\n                    if (m.containsKey(key)) {\n                        return m.put(key, value);\n                    }\n                }\n                return composited[0].put(key, value);\n            }\n\n            @Override\n            public void putAll(CompositeMap<String, String> map, Map<String, String>[] composited, Map<? extends String, ? extends String> mapToAdd) {\n                for (Map.Entry<? extends String, ? extends String> entry : mapToAdd.entrySet()) {\n                    put(map, composited, entry.getKey(), entry.getValue());\n                }\n            }\n\n            @Override\n            public void resolveCollision(CompositeMap<String, String> composite, Map<String, String> existing, Map<String, String> added, Collection<String> intersect) {\n                throw new UnsupportedOperationException();\n            }\n        });\n    }\n\n    @Test\n    public void testPutWithMutator() {\n        String key = \"key1\";\n        String value = \"value1\";\n        String result = compositeMap.put(key, value);\n        assertEquals(null, result);\n        assertEquals(value, mapOne.get(key));\n    }\n\n    @Test\n    public void testPutWithoutMutator() {\n        compositeMap.setMutator(null);\n        assertThrows(UnsupportedOperationException.class, () -> {\n            compositeMap.put(\"key2\", \"value2\");\n        });\n    }\n}\n"}]