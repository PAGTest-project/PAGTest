[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class BoundedIterator_removeTest {\n\n    private List<String> testList;\n\n    @BeforeEach\n    public void setUp() {\n        testList = Arrays.asList(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\");\n    }\n\n    @Test\n    public void testRemoveBeforeNext() {\n        Iterator<String> iter = new BoundedIterator<>(testList.iterator(), 1, 10);\n\n        // Ensure that calling remove before next throws IllegalStateException\n        assertThrows(IllegalStateException.class, () -> iter.remove());\n    }\n\n    @Test\n    public void testRemoveAfterNext() {\n        Iterator<String> iter = new BoundedIterator<>(testList.iterator(), 1, 10);\n\n        // Call next to advance the iterator\n        assertTrue(iter.hasNext());\n        assertEquals(\"b\", iter.next());\n\n        // Now remove should work without throwing an exception\n        iter.remove();\n\n        // Verify that the element was removed\n        assertTrue(iter.hasNext());\n        assertEquals(\"c\", iter.next());\n    }\n}\n"}]