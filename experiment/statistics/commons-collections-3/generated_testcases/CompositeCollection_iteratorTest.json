[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.collections4.iterators.EmptyIterator;\nimport org.apache.commons.collections4.iterators.IteratorChain;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_iteratorTest {\n\n    private CompositeCollection<String> compositeCollection;\n    private List<String> list1;\n    private List<String> list2;\n\n    @BeforeEach\n    public void setUp() {\n        compositeCollection = new CompositeCollection<>();\n        list1 = new ArrayList<>(Arrays.asList(\"A\", \"B\", \"C\"));\n        list2 = new ArrayList<>(Arrays.asList(\"D\", \"E\", \"F\"));\n    }\n\n    @Test\n    public void testIteratorWithEmptyCompositeCollection() {\n        Iterator<String> iterator = compositeCollection.iterator();\n        assertTrue(iterator instanceof EmptyIterator);\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test\n    public void testIteratorWithNonEmptyCompositeCollection() {\n        compositeCollection.addComposited(list1, list2);\n        Iterator<String> iterator = compositeCollection.iterator();\n        assertTrue(iterator instanceof IteratorChain);\n\n        List<String> expected = new ArrayList<>(Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"));\n        List<String> actual = new ArrayList<>();\n        iterator.forEachRemaining(actual::add);\n\n        assertEquals(expected, actual);\n    }\n}\n"}]