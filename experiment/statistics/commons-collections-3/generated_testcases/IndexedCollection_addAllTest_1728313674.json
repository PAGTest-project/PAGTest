[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class IndexedCollection_addAllTest {\n\n    private IndexedCollection<Integer, String> indexedCollection;\n    private Collection<String> originalCollection;\n\n    @BeforeEach\n    public void setUp() {\n        originalCollection = new ArrayList<>();\n        indexedCollection = IndexedCollection.uniqueIndexedCollection(originalCollection, new Transformer<String, Integer>() {\n            @Override\n            public Integer apply(String input) {\n                return Integer.parseInt(input);\n            }\n        });\n    }\n\n    @Test\n    public void testAddAll_AllElementsAdded() {\n        Collection<String> elementsToAdd = Arrays.asList(\"1\", \"2\", \"3\");\n        assertTrue(indexedCollection.addAll(elementsToAdd));\n        assertEquals(\"1\", indexedCollection.get(1));\n        assertEquals(\"2\", indexedCollection.get(2));\n        assertEquals(\"3\", indexedCollection.get(3));\n    }\n\n    @Test\n    public void testAddAll_NoElementsAdded() {\n        Collection<String> elementsToAdd = Arrays.asList();\n        assertFalse(indexedCollection.addAll(elementsToAdd));\n    }\n\n    @Test\n    public void testAddAll_DuplicateElements() {\n        Collection<String> elementsToAdd = Arrays.asList(\"1\", \"1\");\n        assertThrows(IllegalArgumentException.class, () -> indexedCollection.addAll(elementsToAdd));\n    }\n}\n"}]