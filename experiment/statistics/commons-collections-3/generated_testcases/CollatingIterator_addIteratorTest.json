[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.Iterator;\nimport org.apache.commons.collections4.comparators.ComparableComparator;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CollatingIterator_addIteratorTest {\n\n    private Comparator<Integer> comparator;\n    private ArrayList<Integer> evens;\n    private ArrayList<Integer> odds;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        comparator = new ComparableComparator<>();\n        evens = new ArrayList<>();\n        odds = new ArrayList<>();\n        for (int i = 0; i < 20; i++) {\n            if (0 == i % 2) {\n                evens.add(i);\n            } else {\n                odds.add(i);\n            }\n        }\n    }\n\n    @Test\n    public void testAddIteratorSuccess() {\n        CollatingIterator<Integer> iter = new CollatingIterator<>(comparator);\n        Iterator<Integer> evenIterator = evens.iterator();\n        iter.addIterator(evenIterator);\n        assertEquals(1, iter.getIterators().size());\n        assertSame(evenIterator, iter.getIterators().get(0));\n    }\n\n    @Test\n    public void testAddIteratorNull() {\n        CollatingIterator<Integer> iter = new CollatingIterator<>(comparator);\n        assertThrows(NullPointerException.class, () -> iter.addIterator(null));\n    }\n\n    @Test\n    public void testAddIteratorAfterStart() {\n        CollatingIterator<Integer> iter = new CollatingIterator<>(comparator);\n        iter.addIterator(evens.iterator());\n        iter.hasNext(); // This will start the iteration\n        assertThrows(IllegalStateException.class, () -> iter.addIterator(odds.iterator()));\n    }\n}\n"}]