[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SkippingIterator_removeTest {\n\n    @Test\n    public void testRemoveBeforeNext() {\n        Iterator<String> iterator = Arrays.asList(\"a\", \"b\", \"c\").iterator();\n        SkippingIterator<String> skippingIterator = new SkippingIterator<>(iterator, 1);\n\n        // Given: Iterator is initialized with offset 1\n        // When: remove() is called before next()\n        // Then: IllegalStateException is thrown\n        assertThrows(IllegalStateException.class, () -> skippingIterator.remove());\n    }\n\n    @Test\n    public void testRemoveAfterNext() {\n        List<String> list = Arrays.asList(\"a\", \"b\", \"c\");\n        Iterator<String> iterator = list.iterator();\n        SkippingIterator<String> skippingIterator = new SkippingIterator<>(iterator, 1);\n\n        // Given: Iterator is initialized with offset 1\n        // When: next() is called and then remove()\n        // Then: No exception is thrown\n        skippingIterator.next();\n        assertDoesNotThrow(() -> skippingIterator.remove());\n    }\n}\n"}]