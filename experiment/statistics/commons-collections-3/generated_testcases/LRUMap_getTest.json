[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LRUMap_getTest {\n\n    private LRUMap<String, String> lruMap;\n\n    @BeforeEach\n    public void setUp() {\n        lruMap = new LRUMap<>(3);\n    }\n\n    @Test\n    public void testGet_ExistingKey_UpdateToMRU() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n        lruMap.put(\"key3\", \"value3\");\n\n        // Get an existing key with updateToMRU set to true\n        String value = lruMap.get(\"key1\", true);\n\n        // Assert the value is correct\n        assertEquals(\"value1\", value);\n\n        // Assert the order of keys after the get operation\n        assertArrayEquals(new String[]{\"key2\", \"key3\", \"key1\"}, lruMap.keySet().toArray(new String[0]));\n    }\n\n    @Test\n    public void testGet_ExistingKey_DoNotUpdateToMRU() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n        lruMap.put(\"key3\", \"value3\");\n\n        // Get an existing key with updateToMRU set to false\n        String value = lruMap.get(\"key1\", false);\n\n        // Assert the value is correct\n        assertEquals(\"value1\", value);\n\n        // Assert the order of keys remains unchanged\n        assertArrayEquals(new String[]{\"key1\", \"key2\", \"key3\"}, lruMap.keySet().toArray(new String[0]));\n    }\n\n    @Test\n    public void testGet_NonExistingKey() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n        lruMap.put(\"key3\", \"value3\");\n\n        // Get a non-existing key\n        String value = lruMap.get(\"key4\", true);\n\n        // Assert the value is null\n        assertNull(value);\n\n        // Assert the order of keys remains unchanged\n        assertArrayEquals(new String[]{\"key1\", \"key2\", \"key3\"}, lruMap.keySet().toArray(new String[0]));\n    }\n}\n"}]