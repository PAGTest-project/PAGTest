[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.OrderedMap;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass UnmodifiableOrderedMap_unmodifiableOrderedMapTest {\n\n    @Test\n    void testUnmodifiableOrderedMapWithUnmodifiableMap() {\n        // Given\n        OrderedMap<String, String> mockMap = mock(OrderedMap.class);\n        when(mockMap.getClass().isInstance(Unmodifiable.class)).thenReturn(true);\n\n        // When\n        OrderedMap<String, String> result = UnmodifiableOrderedMap.unmodifiableOrderedMap(mockMap);\n\n        // Then\n        assertSame(mockMap, result);\n    }\n\n    @Test\n    void testUnmodifiableOrderedMapWithModifiableMap() {\n        // Given\n        OrderedMap<String, String> mockMap = mock(OrderedMap.class);\n        when(mockMap.getClass().isInstance(Unmodifiable.class)).thenReturn(false);\n\n        // When\n        OrderedMap<String, String> result = UnmodifiableOrderedMap.unmodifiableOrderedMap(mockMap);\n\n        // Then\n        assertTrue(result instanceof UnmodifiableOrderedMap);\n        assertNotSame(mockMap, result);\n    }\n}\n"}]