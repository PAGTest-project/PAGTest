[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_addCompositedTest {\n\n    private CompositeMap<String, String> compositeMap;\n    private Map<String, String> mapOne;\n    private Map<String, String> mapTwo;\n\n    @BeforeEach\n    public void setUp() {\n        mapOne = new HashMap<>();\n        mapOne.put(\"1\", \"one\");\n        mapOne.put(\"2\", \"two\");\n\n        mapTwo = new HashMap<>();\n        mapTwo.put(\"3\", \"three\");\n        mapTwo.put(\"4\", \"four\");\n\n        compositeMap = new CompositeMap<>(mapOne, mapTwo);\n    }\n\n    @Test\n    public void testAddCompositedNoCollision() {\n        Map<String, String> newMap = new HashMap<>();\n        newMap.put(\"5\", \"five\");\n        newMap.put(\"6\", \"six\");\n\n        compositeMap.addComposited(newMap);\n\n        assertEquals(6, compositeMap.size());\n        assertTrue(compositeMap.containsKey(\"5\"));\n        assertTrue(compositeMap.containsKey(\"6\"));\n    }\n\n    @Test\n    public void testAddCompositedWithCollisionNoMutator() {\n        Map<String, String> newMap = new HashMap<>();\n        newMap.put(\"1\", \"one_new\");\n        newMap.put(\"5\", \"five\");\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            compositeMap.addComposited(newMap);\n        });\n    }\n\n    @Test\n    public void testAddCompositedWithCollisionWithMutator() {\n        Map<String, String> newMap = new HashMap<>();\n        newMap.put(\"1\", \"one_new\");\n        newMap.put(\"5\", \"five\");\n\n        CompositeMap.MapMutator<String, String> mutator = new CompositeMap.MapMutator<String, String>() {\n            @Override\n            public String put(CompositeMap<String, String> map, Map<String, String>[] composited, String key, String value) {\n                return null;\n            }\n\n            @Override\n            public void putAll(CompositeMap<String, String> map, Map<String, String>[] composited, Map<? extends String, ? extends String> mapToAdd) {\n            }\n\n            @Override\n            public void resolveCollision(CompositeMap<String, String> composite, Map<String, String> existing, Map<String, String> added, Collection<String> intersect) {\n            }\n        };\n\n        compositeMap.setMutator(mutator);\n        compositeMap.addComposited(newMap);\n\n        assertEquals(5, compositeMap.size());\n        assertTrue(compositeMap.containsKey(\"5\"));\n    }\n}\n"}]