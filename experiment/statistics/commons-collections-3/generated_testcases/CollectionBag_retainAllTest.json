[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bag;\n\nimport org.apache.commons.collections4.Bag;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class CollectionBag_retainAllTest {\n\n    @Test\n    public void testRetainAll_WithNonNullCollection() {\n        // Given\n        Bag<String> mockBag = Mockito.mock(Bag.class);\n        CollectionBag<String> collectionBag = new CollectionBag<>(mockBag);\n        Collection<String> collection = Arrays.asList(\"A\", \"B\");\n\n        Iterator<String> mockIterator = Mockito.mock(Iterator.class);\n        when(mockBag.iterator()).thenReturn(mockIterator);\n        when(mockIterator.hasNext()).thenReturn(true, true, false);\n        when(mockIterator.next()).thenReturn(\"A\", \"C\");\n\n        // When\n        boolean result = collectionBag.retainAll(collection);\n\n        // Then\n        assertTrue(result);\n        verify(mockIterator).remove();\n    }\n\n    @Test\n    public void testRetainAll_WithNullCollection() {\n        // Given\n        Bag<String> mockBag = Mockito.mock(Bag.class);\n        CollectionBag<String> collectionBag = new CollectionBag<>(mockBag);\n\n        // When\n        boolean result = collectionBag.retainAll(null);\n\n        // Then\n        assertFalse(result);\n        verify(mockBag).retainAll(null);\n    }\n}\n"}]