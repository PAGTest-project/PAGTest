[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\npublic class PassiveExpiringMap_getTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(1000L), new HashMap<>());\n    }\n\n    @Test\n    public void testGetNonExpiredEntry() {\n        expiringMap.put(1, \"one\");\n        assertEquals(\"one\", expiringMap.get(1));\n    }\n\n    @Test\n    public void testGetExpiredEntry() throws InterruptedException {\n        expiringMap.put(1, \"one\");\n        Thread.sleep(1500); // Wait for the entry to expire\n        assertNull(expiringMap.get(1));\n    }\n\n    @Test\n    public void testGetNonExistentEntry() {\n        assertNull(expiringMap.get(2));\n    }\n}\n"}]