[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PeekingIterator_elementTest {\n\n    private List<String> testList;\n    private static final String[] testArray = {\"a\", \"b\", \"c\"};\n\n    @SuppressWarnings(\"unchecked\")\n    @BeforeEach\n    protected void setUp() throws Exception {\n        testList = new ArrayList<>(Arrays.asList((String[]) testArray));\n    }\n\n    @Test\n    public void testElementWithValidSlot() {\n        PeekingIterator<String> it = new PeekingIterator<>(testList.iterator());\n        it.peek(); // Fill the slot\n        assertEquals(\"a\", it.element());\n    }\n\n    @Test\n    public void testElementWithExhaustedIterator() {\n        PeekingIterator<String> it = new PeekingIterator<>(testList.iterator());\n        while (it.hasNext()) {\n            it.next();\n        }\n        assertThrows(NoSuchElementException.class, () -> it.element());\n    }\n}\n"}]