[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_containsKeyTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(1000L), new HashMap<>());\n    }\n\n    @Test\n    public void testContainsKey_KeyExistsAndNotExpired() {\n        expiringMap.put(1, \"one\");\n        assertTrue(expiringMap.containsKey(1));\n    }\n\n    @Test\n    public void testContainsKey_KeyExistsButExpired() throws InterruptedException {\n        expiringMap.put(1, \"one\");\n        Thread.sleep(1500); // Wait for the entry to expire\n        assertFalse(expiringMap.containsKey(1));\n    }\n\n    @Test\n    public void testContainsKey_KeyDoesNotExist() {\n        assertFalse(expiringMap.containsKey(2));\n    }\n}\n"}]