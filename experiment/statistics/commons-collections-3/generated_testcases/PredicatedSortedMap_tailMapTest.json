[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.SortedMap;\nimport java.util.TreeMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PredicatedSortedMap_tailMapTest {\n\n    private static final Predicate<Object> testPredicate = TruePredicate.truePredicate();\n    private PredicatedSortedMap<String, String> predicatedSortedMap;\n\n    @BeforeEach\n    public void setUp() {\n        SortedMap<String, String> map = new TreeMap<>();\n        predicatedSortedMap = PredicatedSortedMap.predicatedSortedMap(map, testPredicate, testPredicate);\n    }\n\n    @Test\n    public void testTailMap() {\n        predicatedSortedMap.put(\"A\", \"a\");\n        predicatedSortedMap.put(\"B\", \"b\");\n        predicatedSortedMap.put(\"C\", \"c\");\n\n        SortedMap<String, String> tailMap = predicatedSortedMap.tailMap(\"B\");\n        assertNotNull(tailMap);\n        assertEquals(2, tailMap.size());\n        assertEquals(\"B\", tailMap.firstKey());\n        assertEquals(\"C\", tailMap.lastKey());\n    }\n\n    @Test\n    public void testTailMapWithInvalidKey() {\n        predicatedSortedMap.put(\"A\", \"a\");\n        predicatedSortedMap.put(\"B\", \"b\");\n        predicatedSortedMap.put(\"C\", \"c\");\n\n        assertThrows(NullPointerException.class, () -> predicatedSortedMap.tailMap(null));\n    }\n}\n"}]