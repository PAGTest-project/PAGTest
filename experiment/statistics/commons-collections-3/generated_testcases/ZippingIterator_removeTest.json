[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ZippingIterator_removeTest {\n\n    private ArrayList<Integer> evens;\n    private ZippingIterator<Integer> zippingIterator;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        evens = new ArrayList<>();\n        for (int i = 0; i < 20; i++) {\n            if (0 == i % 2) {\n                evens.add(i);\n            }\n        }\n        zippingIterator = new ZippingIterator<>(evens.iterator(), evens.iterator());\n    }\n\n    @Test\n    public void testRemoveWithoutNext() {\n        assertThrows(IllegalStateException.class, () -> zippingIterator.remove());\n    }\n\n    @Test\n    public void testRemoveAfterNext() {\n        zippingIterator.next(); // Ensure lastReturned is set\n        zippingIterator.remove();\n        assertThrows(IllegalStateException.class, () -> zippingIterator.remove());\n    }\n}\n"}]