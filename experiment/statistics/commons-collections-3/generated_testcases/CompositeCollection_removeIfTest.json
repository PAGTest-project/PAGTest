[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.function.Predicate;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_removeIfTest {\n\n    private CompositeCollection<String> compositeCollection;\n    private Collection<String> collection1;\n    private Collection<String> collection2;\n\n    @BeforeEach\n    public void setUp() {\n        compositeCollection = new CompositeCollection<>();\n        collection1 = new ArrayList<>();\n        collection2 = new ArrayList<>();\n        compositeCollection.addComposited(collection1);\n        compositeCollection.addComposited(collection2);\n    }\n\n    @Test\n    public void testRemoveIf_NullFilter() {\n        assertFalse(compositeCollection.removeIf(null));\n    }\n\n    @Test\n    public void testRemoveIf_NoChange() {\n        collection1.add(\"A\");\n        collection2.add(\"B\");\n\n        Predicate<String> filter = s -> s.equals(\"C\");\n        assertFalse(compositeCollection.removeIf(filter));\n        assertTrue(collection1.contains(\"A\"));\n        assertTrue(collection2.contains(\"B\"));\n    }\n\n    @Test\n    public void testRemoveIf_WithChange() {\n        collection1.add(\"A\");\n        collection2.add(\"B\");\n\n        Predicate<String> filter = s -> s.equals(\"A\");\n        assertTrue(compositeCollection.removeIf(filter));\n        assertFalse(collection1.contains(\"A\"));\n        assertTrue(collection2.contains(\"B\"));\n    }\n\n    @Test\n    public void testRemoveIf_MultipleCollections() {\n        collection1.add(\"A\");\n        collection2.add(\"A\");\n\n        Predicate<String> filter = s -> s.equals(\"A\");\n        assertTrue(compositeCollection.removeIf(filter));\n        assertFalse(collection1.contains(\"A\"));\n        assertFalse(collection2.contains(\"A\"));\n    }\n}\n"}]