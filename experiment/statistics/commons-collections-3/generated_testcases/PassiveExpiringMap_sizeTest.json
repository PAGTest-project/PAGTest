[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class PassiveExpiringMap_sizeTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(1000L), new HashMap<>());\n    }\n\n    @Test\n    public void testSizeWithExpiredEntries() {\n        expiringMap.put(1, \"one\");\n        expiringMap.put(2, \"two\");\n\n        // Wait for entries to expire\n        try {\n            Thread.sleep(1500);\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n\n        assertEquals(0, expiringMap.size());\n    }\n\n    @Test\n    public void testSizeWithNonExpiredEntries() {\n        expiringMap.put(1, \"one\");\n        expiringMap.put(2, \"two\");\n\n        assertEquals(2, expiringMap.size());\n    }\n}\n"}]