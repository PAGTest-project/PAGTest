[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.SortedMap;\nimport java.util.TreeMap;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PredicatedSortedMap_headMapTest {\n\n    private static final Predicate<Object> testPredicate = TruePredicate.truePredicate();\n    private PredicatedSortedMap<String, String> predicatedSortedMap;\n\n    @BeforeEach\n    public void setUp() {\n        SortedMap<String, String> baseMap = new TreeMap<>();\n        baseMap.put(\"A\", \"a\");\n        baseMap.put(\"B\", \"b\");\n        baseMap.put(\"C\", \"c\");\n        predicatedSortedMap = PredicatedSortedMap.predicatedSortedMap(baseMap, testPredicate, testPredicate);\n    }\n\n    @Test\n    public void testHeadMap() {\n        SortedMap<String, String> headMap = predicatedSortedMap.headMap(\"B\");\n        assertNotNull(headMap);\n        assertEquals(1, headMap.size());\n        assertTrue(headMap.containsKey(\"A\"));\n        assertEquals(\"a\", headMap.get(\"A\"));\n    }\n}\n"}]