[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_removeTest {\n\n    private CompositeCollection<String> compositeCollection;\n    private Collection<String> collection1;\n    private Collection<String> collection2;\n    private CompositeCollection.CollectionMutator<String> mockMutator;\n\n    @BeforeEach\n    public void setUp() {\n        compositeCollection = new CompositeCollection<>();\n        collection1 = new ArrayList<>();\n        collection2 = new ArrayList<>();\n        mockMutator = new CompositeCollection.CollectionMutator<String>() {\n            @Override\n            public boolean add(CompositeCollection<String> composite, List<Collection<String>> collections, String obj) {\n                return false;\n            }\n\n            @Override\n            public boolean addAll(CompositeCollection<String> composite, List<Collection<String>> collections, Collection<? extends String> coll) {\n                return false;\n            }\n\n            @Override\n            public boolean remove(CompositeCollection<String> composite, List<Collection<String>> collections, Object obj) {\n                return collections.get(0).remove(obj);\n            }\n        };\n        compositeCollection.setMutator(mockMutator);\n        compositeCollection.addComposited(collection1);\n        compositeCollection.addComposited(collection2);\n    }\n\n    @Test\n    public void testRemoveWithMutator() {\n        collection1.add(\"element1\");\n        collection2.add(\"element2\");\n\n        assertTrue(compositeCollection.remove(\"element1\"));\n        assertFalse(collection1.contains(\"element1\"));\n        assertTrue(collection2.contains(\"element2\"));\n    }\n\n    @Test\n    public void testRemoveWithoutMutator() {\n        compositeCollection.setMutator(null);\n        assertThrows(UnsupportedOperationException.class, () -> {\n            compositeCollection.remove(\"element1\");\n        });\n    }\n}\n"}]