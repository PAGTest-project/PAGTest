[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\nimport org.openapitools.openapidiff.core.model.ChangedHeaders.Header;\nimport static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_HEADERS_DECREASED;\n\npublic class ChangedHeaders_isCoreChangedTest {\n\n    private ChangedHeaders changedHeaders;\n    private DiffContext context;\n    private Map<String, ChangedHeaders.Header> oldHeaders;\n    private Map<String, ChangedHeaders.Header> newHeaders;\n\n    @BeforeEach\n    public void setUp() {\n        oldHeaders = new HashMap<>();\n        newHeaders = new HashMap<>();\n        context = mock(DiffContext.class);\n        changedHeaders = new ChangedHeaders(oldHeaders, newHeaders, context);\n    }\n\n    @Test\n    public void testIsCoreChanged_NoChanges() {\n        changedHeaders.setIncreased(new HashMap<>()).setMissing(new HashMap<>());\n        assertEquals(DiffResult.NO_CHANGES, changedHeaders.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChanged_Compatible() {\n        Map<String, ChangedHeaders.Header> increased = new HashMap<>();\n        increased.put(\"header1\", new ChangedHeaders.Header());\n        changedHeaders.setIncreased(increased).setMissing(new HashMap<>());\n        assertEquals(DiffResult.COMPATIBLE, changedHeaders.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChanged_Incompatible() {\n        Map<String, ChangedHeaders.Header> missing = new HashMap<>();\n        missing.put(\"header1\", new ChangedHeaders.Header());\n        changedHeaders.setIncreased(new HashMap<>()).setMissing(missing);\n        when(RESPONSE_HEADERS_DECREASED.enabled(context)).thenReturn(true);\n        assertEquals(DiffResult.INCOMPATIBLE, changedHeaders.isCoreChanged());\n    }\n}\n"}]