[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Optional;\nimport java.util.function.Consumer;\nimport org.junit.jupiter.api.Test;\n\npublic class PendingChanged_ifPresentTest {\n\n    @Test\n    public void testIfPresent_ValueSetAndPresent() {\n        // Given\n        PendingChanged<String> pendingChanged = new PendingChanged<>();\n        pendingChanged.setValue(Optional.of(\"testValue\"));\n        StringBuilder result = new StringBuilder();\n        Consumer<String> consumer = result::append;\n\n        // When\n        pendingChanged.ifPresent(consumer);\n\n        // Then\n        assertTrue(pendingChanged.isPresent());\n        assertEquals(\"testValue\", result.toString());\n    }\n\n    @Test\n    public void testIfPresent_ValueNotSet() {\n        // Given\n        PendingChanged<String> pendingChanged = new PendingChanged<>();\n        StringBuilder result = new StringBuilder();\n        Consumer<String> consumer = result::append;\n\n        // When\n        pendingChanged.ifPresent(consumer);\n\n        // Then\n        assertEquals(1, pendingChanged.getIfPresentConsumers().size());\n        assertEquals(consumer, pendingChanged.getIfPresentConsumers().get(0));\n    }\n}\n"}]