[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\nimport org.slf4j.Logger;\n\nimport java.util.concurrent.atomic.AtomicInteger;\n\nimport static org.mockito.Mockito.verify;\n\npublic class PendingChanged_logResolvedTest {\n\n    @Test\n    public void testLogResolved() {\n        // Given\n        PendingChanged<String> pendingChanged = new PendingChanged<String>() {\n            @Override\n            public void logResolved() {\n                int deferred = getDeferredCounter().get();\n                int resolved = getResolvedCounter().get();\n                getLog().debug(\n                    \"Outstanding: {}  Deferred: {}  Resolved {}\", deferred - resolved, deferred, resolved);\n            }\n        };\n        Logger mockLog = Mockito.mock(Logger.class);\n        pendingChanged.setLog(mockLog);\n\n        AtomicInteger deferredCounter = new AtomicInteger(5);\n        AtomicInteger resolvedCounter = new AtomicInteger(3);\n        pendingChanged.setDeferredCounter(deferredCounter);\n        pendingChanged.setResolvedCounter(resolvedCounter);\n\n        // When\n        pendingChanged.logResolved();\n\n        // Then\n        verify(mockLog).debug(\"Outstanding: {}  Deferred: {}  Resolved {}\", 2, 5, 3);\n    }\n}\n"}]