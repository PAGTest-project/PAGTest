[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.responses.ApiResponse;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\npublic class ChangedResponse_equalsTest {\n\n    private ChangedResponse changedResponse;\n    private ApiResponse oldApiResponse;\n    private ApiResponse newApiResponse;\n    private DiffContext context;\n\n    @BeforeEach\n    public void setUp() {\n        oldApiResponse = new ApiResponse().description(\"Old Response\");\n        newApiResponse = new ApiResponse().description(\"New Response\");\n        context = new DiffContext(new OpenApiDiffOptions());\n        changedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n    }\n\n    @Test\n    public void testEquals_SameInstance() {\n        assertTrue(changedResponse.equals(changedResponse));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        assertFalse(changedResponse.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        assertFalse(changedResponse.equals(new Object()));\n    }\n\n    @Test\n    public void testEquals_DifferentOldApiResponse() {\n        ApiResponse differentOldApiResponse = new ApiResponse().description(\"Different Old Response\");\n        ChangedResponse differentChangedResponse = new ChangedResponse(differentOldApiResponse, newApiResponse, context);\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_DifferentNewApiResponse() {\n        ApiResponse differentNewApiResponse = new ApiResponse().description(\"Different New Response\");\n        ChangedResponse differentChangedResponse = new ChangedResponse(oldApiResponse, differentNewApiResponse, context);\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_DifferentContext() {\n        DiffContext differentContext = new DiffContext(new OpenApiDiffOptions());\n        ChangedResponse differentChangedResponse = new ChangedResponse(oldApiResponse, newApiResponse, differentContext);\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_DifferentDescription() {\n        ChangedMetadata differentDescription = new ChangedMetadata().setLeft(\"Different Description\");\n        changedResponse.setDescription(differentDescription);\n        ChangedResponse differentChangedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        differentChangedResponse.setDescription(new ChangedMetadata().setLeft(\"Another Description\"));\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_DifferentHeaders() {\n        ChangedHeaders differentHeaders = new ChangedHeaders(null, null, context);\n        changedResponse.setHeaders(differentHeaders);\n        ChangedResponse differentChangedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        differentChangedResponse.setHeaders(new ChangedHeaders(null, null, context));\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_DifferentContent() {\n        ChangedContent differentContent = new ChangedContent(null, null, context);\n        changedResponse.setContent(differentContent);\n        ChangedResponse differentChangedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        differentChangedResponse.setContent(new ChangedContent(null, null, context));\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_DifferentExtensions() {\n        ChangedExtensions differentExtensions = new ChangedExtensions(null, null, context);\n        changedResponse.setExtensions(differentExtensions);\n        ChangedResponse differentChangedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        differentChangedResponse.setExtensions(new ChangedExtensions(null, null, context));\n        assertFalse(changedResponse.equals(differentChangedResponse));\n    }\n\n    @Test\n    public void testEquals_SameFields() {\n        ChangedResponse sameChangedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        assertTrue(changedResponse.equals(sameChangedResponse));\n    }\n}\n"}]