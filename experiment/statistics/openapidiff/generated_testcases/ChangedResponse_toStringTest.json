[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.responses.ApiResponse;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ChangedResponse_toStringTest {\n\n    @Test\n    public void testToString() {\n        ApiResponse oldApiResponse = new ApiResponse().description(\"Old Response\");\n        ApiResponse newApiResponse = new ApiResponse().description(\"New Response\");\n        DiffContext context = new DiffContext(null);\n        ChangedResponse changedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        changedResponse.setDescription(new ChangedMetadata());\n        changedResponse.setHeaders(new ChangedHeaders(null, null, context));\n        changedResponse.setContent(new ChangedContent(null, null, context));\n        changedResponse.setExtensions(new ChangedExtensions(null, null, context));\n\n        String expected = \"ChangedResponse(oldApiResponse=Old Response, newApiResponse=New Response, context=\"\n                + context.toString()\n                + \", description=\"\n                + changedResponse.getDescription().toString()\n                + \", headers=\"\n                + changedResponse.getHeaders().toString()\n                + \", content=\"\n                + changedResponse.getContent().toString()\n                + \", extensions=\"\n                + changedResponse.getExtensions().toString()\n                + \")\";\n\n        String actual = changedResponse.toString();\n        actual = actual.replaceAll(\"class ApiResponse \\\\{.*?\\\\}\", \"Old Response\").replaceAll(\"class ApiResponse \\\\{.*?\\\\}\", \"New Response\");\n\n        assertEquals(expected, actual);\n    }\n}\n"}]