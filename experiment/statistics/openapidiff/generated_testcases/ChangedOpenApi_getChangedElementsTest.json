[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\npublic class ChangedOpenApi_getChangedElementsTest {\n\n    private ChangedOpenApi changedOpenApi;\n    private List<ChangedOperation> changedOperations;\n    private List<ChangedSchema> changedSchemas;\n    private ChangedExtensions changedExtensions;\n\n    @BeforeEach\n    public void setUp() {\n        OpenApiDiffOptions options = mock(OpenApiDiffOptions.class);\n        changedOpenApi = new ChangedOpenApi(options);\n\n        changedOperations = Arrays.asList(mock(ChangedOperation.class), mock(ChangedOperation.class));\n        changedSchemas = Arrays.asList(mock(ChangedSchema.class), mock(ChangedSchema.class));\n        changedExtensions = mock(ChangedExtensions.class);\n\n        changedOpenApi.setChangedOperations(changedOperations);\n        changedOpenApi.setChangedSchemas(changedSchemas);\n        changedOpenApi.setChangedExtensions(changedExtensions);\n    }\n\n    @Test\n    public void testGetChangedElements() {\n        List<Changed> changedElements = changedOpenApi.getChangedElements();\n\n        assertEquals(changedOperations.size() + changedSchemas.size() + 1, changedElements.size());\n        assertEquals(changedOperations, changedElements.subList(0, changedOperations.size()));\n        assertEquals(changedExtensions, changedElements.get(changedOperations.size()));\n        assertEquals(changedSchemas, changedElements.subList(changedOperations.size() + 1, changedElements.size()));\n    }\n}\n"}]