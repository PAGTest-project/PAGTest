[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Optional;\nimport java.util.function.Function;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class PendingChanged_mapOptionalTest {\n\n    @Test\n    public void testMapOptional_ValueSet() {\n        PendingChanged<String> pendingChanged = new PendingChanged<>();\n        pendingChanged.setValue(Optional.of(\"test\"));\n\n        Function<Optional<String>, Optional<Integer>> function = opt -> opt.map(String::length);\n        DeferredChanged<Integer> result = pendingChanged.mapOptional(function);\n\n        assertTrue(result instanceof RealizedChanged);\n        assertEquals(Optional.of(4), ((RealizedChanged<Integer>) result).get());\n    }\n\n    @Test\n    public void testMapOptional_ValueNotSet() {\n        PendingChanged<String> pendingChanged = new PendingChanged<>();\n\n        Function<Optional<String>, Optional<Integer>> function = opt -> opt.map(String::length);\n        DeferredChanged<Integer> result = pendingChanged.mapOptional(function);\n\n        assertTrue(result instanceof PendingChanged);\n\n        pendingChanged.setValue(Optional.of(\"test\"));\n        assertEquals(Optional.of(4), ((PendingChanged<Integer>) result).get());\n    }\n}\n"}]