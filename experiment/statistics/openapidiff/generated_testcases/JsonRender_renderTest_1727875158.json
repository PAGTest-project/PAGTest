[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.output;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.exception.RendererException;\nimport org.openapitools.openapidiff.core.model.ChangedOpenApi;\n\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.StringWriter;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.Mockito.*;\n\nclass JsonRender_renderTest {\n\n    private JsonRender jsonRender;\n    private ObjectMapper mockObjectMapper;\n    private OutputStreamWriter mockOutputStreamWriter;\n\n    @BeforeEach\n    void setUp() {\n        mockObjectMapper = mock(ObjectMapper.class);\n        mockOutputStreamWriter = mock(OutputStreamWriter.class);\n        jsonRender = new JsonRender() {\n            @Override\n            ObjectMapper initializeObjectMapper() {\n                return mockObjectMapper;\n            }\n        };\n    }\n\n    @Test\n    void testRender_Success() throws IOException {\n        ChangedOpenApi diff = new ChangedOpenApi(null);\n        StringWriter stringWriter = new StringWriter();\n        OutputStreamWriter outputStreamWriter = new OutputStreamWriter(stringWriter);\n\n        jsonRender.render(diff, outputStreamWriter);\n\n        verify(mockObjectMapper).writeValue(outputStreamWriter, diff);\n        outputStreamWriter.close();\n    }\n\n    @Test\n    void testRender_JsonProcessingException() throws IOException {\n        ChangedOpenApi diff = new ChangedOpenApi(null);\n        when(mockObjectMapper.writeValue(any(OutputStreamWriter.class), eq(diff)))\n                .thenThrow(new JsonProcessingException(\"Test Exception\") {});\n\n        assertThrows(RendererException.class, () -> jsonRender.render(diff, mockOutputStreamWriter));\n    }\n\n    @Test\n    void testRender_IOException() throws IOException {\n        ChangedOpenApi diff = new ChangedOpenApi(null);\n        when(mockObjectMapper.writeValue(any(OutputStreamWriter.class), eq(diff)))\n                .thenThrow(new IOException(\"Test Exception\"));\n\n        assertThrows(RendererException.class, () -> jsonRender.render(diff, mockOutputStreamWriter));\n    }\n}\n"}]