{"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/DeferredBuilderChangedTest.java", "testclass_name": "DeferredBuilderChangedTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import java.util.Optional;", "import java.util.concurrent.atomic.AtomicBoolean;", "import org.junit.jupiter.api.Assertions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedReadOnly;", "import org.openapitools.openapidiff.core.model.schema.ChangedWriteOnly;"], "name": "DeferredBuilderChangedTest", "description": "Test suite for the DeferredBuilderChanged class, focusing on various scenarios involving PendingChanged and RealizedChanged objects.", "class_members": {"variables": [{"name": "changed", "type": "PendingChanged<ChangedReadOnly>"}, {"name": "whenSet", "type": "Optional<ChangedReadOnly>"}, {"name": "mappedValue", "type": "ChangedWriteOnly"}, {"name": "chainedValue", "type": "Optional<?>"}], "methods": [], "nested_classes": [{"name": "ChangedAssertion", "description": "Helper class for asserting changes in DeferredChanged objects."}]}, "fixtures": ["beforeEach"], "test_cases": [{"name": "testPendingChangedValueSetBeforeListeners", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests setting a value in PendingChanged before listeners are added."}, {"name": "testPendingChangedValueSetAfterListeners", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests setting a value in PendingChanged after listeners are added."}, {"name": "testPendingChangedValueEMpty", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests setting an empty value in PendingChanged."}, {"name": "testRealizedChange", "primary_tested": ["RealizedChanged.RealizedChanged(String)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["RealizedChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the RealizedChanged constructor with a non-empty value."}, {"name": "testRealizedChangeEmpty", "primary_tested": ["RealizedChanged.RealizedChanged(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["RealizedChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the RealizedChanged constructor with an empty value."}, {"name": "testFlatMap", "primary_tested": ["PendingChanged.flatMap(Function<ChangedReadOnly, DeferredChanged<ChangedWriteOnly>>)"], "associated_methods": ["PendingChanged.whenSet(Consumer<Optional<ChangedReadOnly>>)", "DeferredChanged.ifPresent(Consumer<ChangedWriteOnly>)"], "external_dependencies": {"modules": ["PendingChanged", "DeferredChanged", "ChangedWriteOnly", "ChangedReadOnly"], "class_members": [{"name": "changed", "type": "variable"}, {"name": "whenSet", "type": "variable"}, {"name": "chainedValue", "type": "variable"}, {"name": "mappedValue", "type": "variable"}]}, "category": "unit", "fixtures_used": ["beforeEach"], "description": "Tests the flatMap functionality of PendingChanged."}, {"name": "testDeferredBuilderEmpty", "primary_tested": ["DeferredBuilder.build()"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["DeferredBuilder", "ChangedAssertion"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests building an empty DeferredBuilder."}, {"name": "testDeferredBuilderAllRealized", "primary_tested": ["DeferredBuilder.add(RealizedChanged<String>)", "DeferredBuilder.build()"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["DeferredBuilder", "RealizedChanged", "ChangedAssertion"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests adding all RealizedChanged objects to DeferredBuilder."}, {"name": "testDeferredBuilderPending", "primary_tested": ["DeferredBuilder.add(RealizedChanged<String>)", "DeferredBuilder.add(PendingChanged<String>)", "DeferredBuilder.build()"], "associated_methods": ["ChangedAssertion.assertNotSet()", "ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["DeferredBuilder", "RealizedChanged", "PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests adding a mix of RealizedChanged and PendingChanged objects to DeferredBuilder."}]}