[{"strategy": "generate", "code": "\npackage io.cucumber.cucumberexpressions;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ParameterType_compareToTest {\n\n    private ParameterType<String> paramTypePrefer;\n    private ParameterType<String> paramTypeNotPrefer;\n    private ParameterType<String> paramTypeNullName;\n    private ParameterType<String> paramTypeEmptyName;\n\n    @BeforeEach\n    public void setUp() {\n        paramTypePrefer = new ParameterType<>(\"name1\", \"regexp1\", String.class, (String arg) -> arg, true, true);\n        paramTypeNotPrefer = new ParameterType<>(\"name2\", \"regexp2\", String.class, (String arg) -> arg, true, false);\n        paramTypeNullName = new ParameterType<>(null, \"regexp3\", String.class, (String arg) -> arg, true, false);\n        paramTypeEmptyName = new ParameterType<>(\"\", \"regexp4\", String.class, (String arg) -> arg, true, false);\n    }\n\n    @Test\n    public void testCompareToPreferForRegexpMatch() {\n        assertEquals(-1, paramTypePrefer.compareTo(paramTypeNotPrefer));\n    }\n\n    @Test\n    public void testCompareToNotPreferForRegexpMatch() {\n        assertEquals(1, paramTypeNotPrefer.compareTo(paramTypePrefer));\n    }\n\n    @Test\n    public void testCompareToBothPreferForRegexpMatch() {\n        ParameterType<String> paramTypePrefer2 = new ParameterType<>(\"name3\", \"regexp5\", String.class, (String arg) -> arg, true, true);\n        assertEquals(0, paramTypePrefer.compareTo(paramTypePrefer2));\n    }\n\n    @Test\n    public void testCompareToNullName() {\n        assertEquals(0, paramTypeNullName.compareTo(paramTypeEmptyName));\n    }\n\n    @Test\n    public void testCompareToEmptyName() {\n        assertEquals(0, paramTypeEmptyName.compareTo(paramTypeNullName));\n    }\n\n    @Test\n    public void testCompareToNameOrder() {\n        ParameterType<String> paramTypeNameOrder = new ParameterType<>(\"name0\", \"regexp6\", String.class, (String arg) -> arg, true, false);\n        assertEquals(-1, paramTypeNameOrder.compareTo(paramTypeNotPrefer));\n    }\n}\n"}]