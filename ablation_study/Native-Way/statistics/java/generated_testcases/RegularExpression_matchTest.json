[{"strategy": "retry", "code": "\npackage io.cucumber.cucumberexpressions;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.regex.Pattern;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegularExpression_matchTest {\n    private RegularExpression regularExpression;\n    private ParameterTypeRegistry parameterTypeRegistry;\n\n    @BeforeEach\n    public void setUp() {\n        Pattern pattern = Pattern.compile(\"\\\\d+\");\n        parameterTypeRegistry = new ParameterTypeRegistry(java.util.Locale.getDefault());\n        regularExpression = new RegularExpression(pattern, parameterTypeRegistry);\n    }\n\n    @Test\n    public void testMatchWithValidText() {\n        String text = \"123\";\n        assertNotNull(regularExpression.match(text));\n    }\n\n    @Test\n    public void testMatchWithInvalidText() {\n        String text = \"abc\";\n        assertNull(regularExpression.match(text));\n    }\n\n    @Test\n    public void testMatchWithTypeHint() {\n        String text = \"123\";\n        assertNotNull(regularExpression.match(text, Integer.class));\n    }\n\n    @Test\n    public void testMatchWithMultipleTypeHints() {\n        String text = \"123\";\n        assertNotNull(regularExpression.match(text, Integer.class, String.class));\n    }\n\n    @Test\n    public void testMatchWithNoTypeHints() {\n        String text = \"123\";\n        assertNotNull(regularExpression.match(text));\n    }\n\n    @Test\n    public void testMatchWithEmptyText() {\n        String text = \"\";\n        assertNull(regularExpression.match(text));\n    }\n\n    @Test\n    public void testMatchWithNullText() {\n        String text = null;\n        assertThrows(NullPointerException.class, () -> regularExpression.match(text));\n    }\n}\n"}]