[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class StaticBucketMap_sizeTest {\n    private StaticBucketMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new StaticBucketMap<>(17);\n    }\n\n    @Test\n    public void testSizeEmptyMap() {\n        assertEquals(0, map.size());\n    }\n\n    @Test\n    public void testSizeAfterPut() {\n        map.put(\"key1\", \"value1\");\n        assertEquals(1, map.size());\n    }\n\n    @Test\n    public void testSizeAfterMultiplePuts() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        map.put(\"key3\", \"value3\");\n        assertEquals(3, map.size());\n    }\n\n    @Test\n    public void testSizeAfterRemove() {\n        map.put(\"key1\", \"value1\");\n        map.remove(\"key1\");\n        assertEquals(0, map.size());\n    }\n\n    @Test\n    public void testSizeAfterClear() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        map.clear();\n        assertEquals(0, map.size());\n    }\n\n    @Test\n    public void testSizeAfterPutAndRemoveDifferentBuckets() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        map.remove(\"key1\");\n        assertEquals(1, map.size());\n    }\n\n    @Test\n    public void testSizeAfterPutAndRemoveSameBucket() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        map.remove(\"key1\");\n        map.remove(\"key2\");\n        assertEquals(0, map.size());\n    }\n\n    @Test\n    public void testSizeAfterPutAndRemoveNonExistentKey() {\n        map.put(\"key1\", \"value1\");\n        map.remove(\"nonExistentKey\");\n        assertEquals(1, map.size());\n    }\n\n    @Test\n    public void testSizeAfterPutNullKey() {\n        map.put(null, \"value1\");\n        assertEquals(1, map.size());\n    }\n\n    @Test\n    public void testSizeAfterRemoveNullKey() {\n        map.put(null, \"value1\");\n        map.remove(null);\n        assertEquals(0, map.size());\n    }\n}\n"}]