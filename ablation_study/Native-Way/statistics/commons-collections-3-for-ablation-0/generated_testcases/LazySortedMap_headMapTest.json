[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.apache.commons.collections4.map.LazySortedMap.lazySortedMap;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertInstanceOf;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.SortedMap;\nimport java.util.TreeMap;\nimport org.apache.commons.collections4.Factory;\nimport org.apache.commons.collections4.FactoryUtils;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class LazySortedMap_headMapTest {\n\n    private static final Factory<Integer> oneFactory = FactoryUtils.constantFactory(1);\n    private LazySortedMap<String, Integer> lazySortedMap;\n\n    @BeforeEach\n    public void setUp() {\n        SortedMap<String, Integer> sortedMap = new TreeMap<>();\n        sortedMap.put(\"A\", 5);\n        sortedMap.put(\"C\", 8);\n        lazySortedMap = lazySortedMap(sortedMap, oneFactory);\n    }\n\n    @Test\n    public void testHeadMap() {\n        SortedMap<String, Integer> headMap = lazySortedMap.headMap(\"C\");\n        assertInstanceOf(LazySortedMap.class, headMap);\n        assertEquals(1, headMap.size());\n        assertEquals(Integer.valueOf(5), headMap.get(\"A\"));\n    }\n\n    @Test\n    public void testHeadMapWithNonExistentKey() {\n        SortedMap<String, Integer> headMap = lazySortedMap.headMap(\"B\");\n        assertInstanceOf(LazySortedMap.class, headMap);\n        assertEquals(1, headMap.size());\n        assertEquals(Integer.valueOf(5), headMap.get(\"A\"));\n    }\n\n    @Test\n    public void testHeadMapWithNullKey() {\n        assertThrows(NullPointerException.class, () -> lazySortedMap.headMap(null));\n    }\n}\n"}]