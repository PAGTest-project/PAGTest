[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashSet;\nimport java.util.Set;\nimport org.apache.commons.collections4.SetUtils.SetView;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SetUtils_unionTest {\n    private Set<Integer> setA;\n    private Set<Integer> setB;\n\n    @BeforeEach\n    public void setUp() {\n        setA = new HashSet<>();\n        setA.add(1);\n        setA.add(2);\n        setA.add(3);\n        setA.add(4);\n        setA.add(5);\n\n        setB = new HashSet<>();\n        setB.add(3);\n        setB.add(4);\n        setB.add(5);\n        setB.add(6);\n        setB.add(7);\n    }\n\n    @Test\n    public void testUnion() {\n        final SetView<Integer> set = SetUtils.union(setA, setB);\n        assertEquals(7, set.size());\n        assertTrue(set.contains(1));\n        assertTrue(set.contains(2));\n        assertTrue(set.contains(3));\n        assertTrue(set.contains(4));\n        assertTrue(set.contains(5));\n        assertTrue(set.contains(6));\n        assertTrue(set.contains(7));\n\n        final SetView<Integer> emptyUnion = SetUtils.union(setA, SetUtils.<Integer>emptySet());\n        assertEquals(setA.size(), emptyUnion.size());\n        assertTrue(emptyUnion.containsAll(setA));\n\n        assertAll(\n                () -> assertThrows(NullPointerException.class, () -> SetUtils.union(setA, null),\n                        \"Expecting NullPointerException\"),\n                () -> assertThrows(NullPointerException.class, () -> SetUtils.union(null, setB),\n                        \"Expecting NullPointerException\")\n        );\n    }\n}\n"}]