[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ListOrderedSet_retainAllTest {\n\n    private ListOrderedSet<Integer> orderedSet;\n\n    @BeforeEach\n    public void setUp() {\n        List<Integer> list = new ArrayList<>();\n        Set<Integer> set = new HashSet<>();\n        orderedSet = ListOrderedSet.listOrderedSet(set, list);\n        for (int i = 0; i < 10; ++i) {\n            orderedSet.add(10 - i - 1);\n        }\n    }\n\n    @Test\n    public void testRetainAll_ElementsRetained() {\n        Collection<Integer> retained = new ArrayList<>();\n        for (int i = 0; i < 5; ++i) {\n            retained.add(i * 2);\n        }\n\n        assertTrue(orderedSet.retainAll(retained));\n        assertEquals(5, orderedSet.size());\n        assertEquals(Integer.valueOf(8), orderedSet.get(0));\n        assertEquals(Integer.valueOf(6), orderedSet.get(1));\n        assertEquals(Integer.valueOf(4), orderedSet.get(2));\n        assertEquals(Integer.valueOf(2), orderedSet.get(3));\n        assertEquals(Integer.valueOf(0), orderedSet.get(4));\n    }\n\n    @Test\n    public void testRetainAll_NoElementsRetained() {\n        Collection<Integer> retained = new ArrayList<>();\n\n        assertTrue(orderedSet.retainAll(retained));\n        assertTrue(orderedSet.isEmpty());\n    }\n\n    @Test\n    public void testRetainAll_AllElementsRetained() {\n        Collection<Integer> retained = new ArrayList<>(orderedSet);\n\n        assertTrue(orderedSet.retainAll(retained));\n        assertEquals(10, orderedSet.size());\n        for (int i = 0; i < 10; ++i) {\n            assertEquals(Integer.valueOf(10 - i - 1), orderedSet.get(i));\n        }\n    }\n\n    @Test\n    public void testRetainAll_PartialElementsRetained() {\n        Collection<Integer> retained = new ArrayList<>();\n        for (int i = 0; i < 5; ++i) {\n            retained.add(i * 2);\n        }\n        retained.add(11); // Element not in the set\n\n        assertTrue(orderedSet.retainAll(retained));\n        assertEquals(5, orderedSet.size());\n        assertEquals(Integer.valueOf(8), orderedSet.get(0));\n        assertEquals(Integer.valueOf(6), orderedSet.get(1));\n        assertEquals(Integer.valueOf(4), orderedSet.get(2));\n        assertEquals(Integer.valueOf(2), orderedSet.get(3));\n        assertEquals(Integer.valueOf(0), orderedSet.get(4));\n    }\n}\n"}]