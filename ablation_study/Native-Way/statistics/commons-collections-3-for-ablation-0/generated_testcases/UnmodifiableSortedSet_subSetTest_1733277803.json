[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class UnmodifiableSortedSet_subSetTest {\n\n    private SortedSet<Integer> originalSet;\n    private UnmodifiableSortedSet<Integer> unmodifiableSet;\n\n    @BeforeEach\n    public void setUp() {\n        originalSet = new TreeSet<>(Arrays.asList(1, 2, 3, 4, 5));\n        unmodifiableSet = new UnmodifiableSortedSet<>(originalSet);\n    }\n\n    @Test\n    public void testSubSetValidRange() {\n        SortedSet<Integer> subSet = unmodifiableSet.subSet(2, 4);\n        assertEquals(2, subSet.size());\n        assertTrue(subSet.contains(2));\n        assertTrue(subSet.contains(3));\n    }\n\n    @Test\n    public void testSubSetInvalidRange() {\n        assertThrows(IllegalArgumentException.class, () -> unmodifiableSet.subSet(4, 2));\n    }\n\n    @Test\n    public void testSubSetUnmodifiable() {\n        SortedSet<Integer> subSet = unmodifiableSet.subSet(2, 4);\n        assertThrows(UnsupportedOperationException.class, () -> subSet.add(3));\n    }\n\n    @Test\n    public void testSubSetEmptyRange() {\n        SortedSet<Integer> subSet = unmodifiableSet.subSet(3, 3);\n        assertEquals(0, subSet.size());\n    }\n}\n"}]