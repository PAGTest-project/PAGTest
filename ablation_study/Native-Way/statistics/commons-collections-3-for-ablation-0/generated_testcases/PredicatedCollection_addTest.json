[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PredicatedCollection_addTest {\n\n    @Test\n    public void testAddValidElement() {\n        Predicate<String> truePredicate = TruePredicate.truePredicate();\n        Collection<String> collection = new ArrayList<>();\n        PredicatedCollection<String> predicatedCollection = new PredicatedCollection<>(collection, truePredicate);\n\n        boolean result = predicatedCollection.add(\"validElement\");\n\n        assertTrue(result);\n        assertTrue(collection.contains(\"validElement\"));\n    }\n\n    @Test\n    public void testAddInvalidElement() {\n        Predicate<String> falsePredicate = object -> false;\n        Collection<String> collection = new ArrayList<>();\n        PredicatedCollection<String> predicatedCollection = new PredicatedCollection<>(collection, falsePredicate);\n\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            predicatedCollection.add(\"invalidElement\");\n        });\n\n        assertEquals(\"Cannot add Object 'invalidElement' - Predicate '\" + falsePredicate + \"' rejected it\", exception.getMessage());\n        assertFalse(collection.contains(\"invalidElement\"));\n    }\n}\n"}]