[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\nimport org.apache.commons.collections4.set.CompositeSet.SetMutator;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeSet_addAllTest {\n\n    private CompositeSet<String> compositeSet;\n\n    @BeforeEach\n    public void setUp() {\n        compositeSet = new CompositeSet<>();\n    }\n\n    @Test\n    public void testAddAllWithMutator() {\n        compositeSet.setMutator(new SetMutator<String>() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public boolean add(CompositeSet<String> composite, List<Set<String>> collections, String obj) {\n                return true;\n            }\n\n            @Override\n            public boolean addAll(CompositeSet<String> composite, List<Set<String>> collections, Collection<? extends String> coll) {\n                return true;\n            }\n\n            @Override\n            public void resolveCollision(CompositeSet<String> comp, Set<String> existing, Set<String> added, Collection<String> intersects) {\n                // noop\n            }\n        });\n\n        Set<String> set = new HashSet<>();\n        set.add(\"A\");\n        set.add(\"B\");\n\n        assertTrue(compositeSet.addAll(set));\n    }\n\n    @Test\n    public void testAddAllWithoutMutator() {\n        Set<String> set = new HashSet<>();\n        set.add(\"A\");\n        set.add(\"B\");\n\n        assertThrows(UnsupportedOperationException.class, () -> compositeSet.addAll(set));\n    }\n\n    @Test\n    public void testAddAllWithEmptyCollection() {\n        compositeSet.setMutator(new SetMutator<String>() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public boolean add(CompositeSet<String> composite, List<Set<String>> collections, String obj) {\n                return true;\n            }\n\n            @Override\n            public boolean addAll(CompositeSet<String> composite, List<Set<String>> collections, Collection<? extends String> coll) {\n                return false;\n            }\n\n            @Override\n            public void resolveCollision(CompositeSet<String> comp, Set<String> existing, Set<String> added, Collection<String> intersects) {\n                // noop\n            }\n        });\n\n        Set<String> set = new HashSet<>();\n        assertFalse(compositeSet.addAll(set));\n    }\n}\n"}]