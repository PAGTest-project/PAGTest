[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.NoSuchElementException;\nimport java.util.Iterator;\n\npublic class CircularFifoQueue_clearTest {\n\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(3);\n    }\n\n    @Test\n    public void testClearEmptyQueue() {\n        queue.clear();\n        assertTrue(queue.isEmpty());\n        assertEquals(0, queue.size());\n    }\n\n    @Test\n    public void testClearNonEmptyQueue() {\n        queue.add(\"A\");\n        queue.add(\"B\");\n        queue.add(\"C\");\n\n        queue.clear();\n        assertTrue(queue.isEmpty());\n        assertEquals(0, queue.size());\n    }\n\n    @Test\n    public void testClearAndAdd() {\n        queue.add(\"A\");\n        queue.add(\"B\");\n        queue.add(\"C\");\n\n        queue.clear();\n        assertTrue(queue.isEmpty());\n        assertEquals(0, queue.size());\n\n        queue.add(\"D\");\n        assertFalse(queue.isEmpty());\n        assertEquals(1, queue.size());\n        assertEquals(\"D\", queue.peek());\n    }\n\n    @Test\n    public void testClearAndIterator() {\n        queue.add(\"A\");\n        queue.add(\"B\");\n        queue.add(\"C\");\n\n        queue.clear();\n        Iterator<String> iterator = queue.iterator();\n        assertFalse(iterator.hasNext());\n        assertThrows(NoSuchElementException.class, iterator::next);\n    }\n\n    @Test\n    public void testClearAndRemove() {\n        queue.add(\"A\");\n        queue.add(\"B\");\n        queue.add(\"C\");\n\n        queue.clear();\n        assertThrows(NoSuchElementException.class, queue::remove);\n    }\n}\n"}]