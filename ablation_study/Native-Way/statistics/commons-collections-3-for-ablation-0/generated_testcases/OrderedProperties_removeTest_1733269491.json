[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.properties;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Properties;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class OrderedProperties_removeTest {\n\n    private OrderedProperties orderedProperties;\n\n    @BeforeEach\n    public void setUp() {\n        orderedProperties = new OrderedProperties();\n    }\n\n    @Test\n    public void testRemoveExistingKey() {\n        orderedProperties.put(\"key1\", \"value1\");\n        Object removedValue = orderedProperties.remove(\"key1\");\n        assertEquals(\"value1\", removedValue);\n        assertNull(orderedProperties.get(\"key1\"));\n        assertTrue(orderedProperties.orderedKeys.isEmpty());\n    }\n\n    @Test\n    public void testRemoveNonExistingKey() {\n        Object removedValue = orderedProperties.remove(\"nonExistingKey\");\n        assertNull(removedValue);\n        assertTrue(orderedProperties.orderedKeys.isEmpty());\n    }\n\n    @Test\n    public void testRemoveAfterMultiplePuts() {\n        orderedProperties.put(\"key1\", \"value1\");\n        orderedProperties.put(\"key2\", \"value2\");\n        orderedProperties.put(\"key3\", \"value3\");\n\n        Object removedValue = orderedProperties.remove(\"key2\");\n        assertEquals(\"value2\", removedValue);\n        assertNull(orderedProperties.get(\"key2\"));\n        assertEquals(2, orderedProperties.orderedKeys.size());\n        assertTrue(orderedProperties.orderedKeys.contains(\"key1\"));\n        assertTrue(orderedProperties.orderedKeys.contains(\"key3\"));\n    }\n\n    @Test\n    public void testRemoveAllKeys() {\n        orderedProperties.put(\"key1\", \"value1\");\n        orderedProperties.put(\"key2\", \"value2\");\n        orderedProperties.put(\"key3\", \"value3\");\n\n        orderedProperties.remove(\"key1\");\n        orderedProperties.remove(\"key2\");\n        orderedProperties.remove(\"key3\");\n\n        assertTrue(orderedProperties.orderedKeys.isEmpty());\n        assertTrue(orderedProperties.isEmpty());\n    }\n}\n"}]