[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Collection;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_putAllTest {\n\n    private CompositeMap<String, String> compositeMap;\n    private Map<String, String> mapOne;\n    private Map<String, String> mapTwo;\n\n    @BeforeEach\n    public void setUp() {\n        mapOne = new HashMap<>();\n        mapTwo = new HashMap<>();\n        compositeMap = new CompositeMap<>(mapOne, mapTwo, new CompositeMap.MapMutator<String, String>() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public String put(CompositeMap<String, String> map, Map<String, String>[] composited, String key, String value) {\n                return null;\n            }\n\n            @Override\n            public void putAll(CompositeMap<String, String> map, Map<String, String>[] composited, Map<? extends String, ? extends String> mapToAdd) {\n                for (Map.Entry<? extends String, ? extends String> entry : mapToAdd.entrySet()) {\n                    mapOne.put(entry.getKey(), entry.getValue());\n                }\n            }\n\n            @Override\n            public void resolveCollision(CompositeMap<String, String> composite, Map<String, String> existing, Map<String, String> added, Collection<String> intersect) {\n                throw new UnsupportedOperationException();\n            }\n        });\n    }\n\n    @Test\n    public void testPutAllWithMutator() {\n        Map<String, String> newMap = new HashMap<>();\n        newMap.put(\"key1\", \"value1\");\n        newMap.put(\"key2\", \"value2\");\n\n        compositeMap.putAll(newMap);\n\n        assertTrue(mapOne.containsKey(\"key1\"));\n        assertTrue(mapOne.containsKey(\"key2\"));\n        assertEquals(\"value1\", mapOne.get(\"key1\"));\n        assertEquals(\"value2\", mapOne.get(\"key2\"));\n    }\n\n    @Test\n    public void testPutAllWithoutMutator() {\n        compositeMap.setMutator(null);\n\n        Map<String, String> newMap = new HashMap<>();\n        newMap.put(\"key1\", \"value1\");\n        newMap.put(\"key2\", \"value2\");\n\n        assertThrows(UnsupportedOperationException.class, () -> {\n            compositeMap.putAll(newMap);\n        });\n    }\n}\n"}]