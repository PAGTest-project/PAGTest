[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.bidimap;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class DualTreeBidiMap_nextKeyTest {\n\n    private DualTreeBidiMap<Integer, String> bidiMap;\n\n    @BeforeEach\n    public void setUp() {\n        bidiMap = new DualTreeBidiMap<>(new TreeMap<>(), new TreeMap<>());\n        bidiMap.put(1, \"one\");\n        bidiMap.put(2, \"two\");\n        bidiMap.put(3, \"three\");\n    }\n\n    @Test\n    public void testNextKeyWithOrderedMap() {\n        bidiMap = new DualTreeBidiMap<>(new TreeMap<>(), new TreeMap<>());\n        bidiMap.put(1, \"one\");\n        bidiMap.put(2, \"two\");\n        bidiMap.put(3, \"three\");\n\n        assertEquals(2, bidiMap.nextKey(1));\n        assertEquals(3, bidiMap.nextKey(2));\n        assertNull(bidiMap.nextKey(3));\n    }\n\n    @Test\n    public void testNextKeyWithEmptyMap() {\n        bidiMap = new DualTreeBidiMap<>(new TreeMap<>(), new TreeMap<>());\n        assertNull(bidiMap.nextKey(1));\n    }\n\n    @Test\n    public void testNextKeyWithNonExistentKey() {\n        assertNull(bidiMap.nextKey(4));\n    }\n\n    @Test\n    public void testNextKeyWithTailMap() {\n        assertEquals(2, bidiMap.nextKey(1));\n        assertEquals(3, bidiMap.nextKey(2));\n        assertNull(bidiMap.nextKey(3));\n    }\n\n    @Test\n    public void testNextKeyWithHeadMap() {\n        bidiMap = new DualTreeBidiMap<>(new TreeMap<>(), new TreeMap<>());\n        bidiMap.put(1, \"one\");\n        bidiMap.put(2, \"two\");\n        bidiMap.put(3, \"three\");\n\n        assertEquals(2, bidiMap.nextKey(1));\n        assertEquals(3, bidiMap.nextKey(2));\n        assertNull(bidiMap.nextKey(3));\n    }\n\n    @Test\n    public void testNextKeyWithSubMap() {\n        bidiMap = new DualTreeBidiMap<>(new TreeMap<>(), new TreeMap<>());\n        bidiMap.put(1, \"one\");\n        bidiMap.put(2, \"two\");\n        bidiMap.put(3, \"three\");\n\n        assertEquals(2, bidiMap.nextKey(1));\n        assertEquals(3, bidiMap.nextKey(2));\n        assertNull(bidiMap.nextKey(3));\n    }\n}\n"}]