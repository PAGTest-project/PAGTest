[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ListOrderedSet_addAllTest {\n\n    private ListOrderedSet<Integer> listOrderedSet;\n\n    @BeforeEach\n    public void setUp() {\n        listOrderedSet = new ListOrderedSet<>();\n    }\n\n    @Test\n    public void testAddAll() {\n        List<Integer> collection = Arrays.asList(1, 2, 3);\n        assertTrue(listOrderedSet.addAll(collection));\n        assertEquals(3, listOrderedSet.size());\n        assertEquals(Integer.valueOf(1), listOrderedSet.get(0));\n        assertEquals(Integer.valueOf(2), listOrderedSet.get(1));\n        assertEquals(Integer.valueOf(3), listOrderedSet.get(2));\n    }\n\n    @Test\n    public void testAddAllWithDuplicates() {\n        List<Integer> collection = Arrays.asList(1, 2, 2, 3);\n        assertTrue(listOrderedSet.addAll(collection));\n        assertEquals(3, listOrderedSet.size());\n        assertEquals(Integer.valueOf(1), listOrderedSet.get(0));\n        assertEquals(Integer.valueOf(2), listOrderedSet.get(1));\n        assertEquals(Integer.valueOf(3), listOrderedSet.get(2));\n    }\n\n    @Test\n    public void testAddAllEmptyCollection() {\n        List<Integer> collection = new ArrayList<>();\n        assertFalse(listOrderedSet.addAll(collection));\n        assertEquals(0, listOrderedSet.size());\n    }\n\n    @Test\n    public void testAddAllWithExistingElements() {\n        listOrderedSet.add(1);\n        listOrderedSet.add(2);\n        List<Integer> collection = Arrays.asList(2, 3, 4);\n        assertTrue(listOrderedSet.addAll(collection));\n        assertEquals(4, listOrderedSet.size());\n        assertEquals(Integer.valueOf(1), listOrderedSet.get(0));\n        assertEquals(Integer.valueOf(2), listOrderedSet.get(1));\n        assertEquals(Integer.valueOf(3), listOrderedSet.get(2));\n        assertEquals(Integer.valueOf(4), listOrderedSet.get(3));\n    }\n}\n"}]