[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PeekingIterator_nextTest {\n\n    private PeekingIterator<String> peekingIterator;\n    private List<String> testList;\n\n    @BeforeEach\n    public void setUp() {\n        testList = new ArrayList<>(Arrays.asList(\"A\", \"B\", \"C\"));\n        peekingIterator = new PeekingIterator<>(testList.iterator());\n    }\n\n    @Test\n    public void testNextWithElements() {\n        assertEquals(\"A\", peekingIterator.next());\n        assertEquals(\"B\", peekingIterator.next());\n        assertEquals(\"C\", peekingIterator.next());\n    }\n\n    @Test\n    public void testNextWithEmptyIterator() {\n        Iterator<String> emptyIterator = new ArrayList<String>().iterator();\n        PeekingIterator<String> emptyPeekingIterator = new PeekingIterator<>(emptyIterator);\n        assertThrows(NoSuchElementException.class, () -> {\n            emptyPeekingIterator.next();\n        });\n    }\n\n    @Test\n    public void testNextAfterPeek() {\n        assertEquals(\"A\", peekingIterator.peek());\n        assertEquals(\"A\", peekingIterator.next());\n        assertEquals(\"B\", peekingIterator.peek());\n        assertEquals(\"B\", peekingIterator.next());\n    }\n\n    @Test\n    public void testNextAfterElement() {\n        assertEquals(\"A\", peekingIterator.element());\n        assertEquals(\"A\", peekingIterator.next());\n        assertEquals(\"B\", peekingIterator.element());\n        assertEquals(\"B\", peekingIterator.next());\n    }\n\n    @Test\n    public void testNextAfterHasNext() {\n        assertTrue(peekingIterator.hasNext());\n        assertEquals(\"A\", peekingIterator.next());\n        assertTrue(peekingIterator.hasNext());\n        assertEquals(\"B\", peekingIterator.next());\n        assertTrue(peekingIterator.hasNext());\n        assertEquals(\"C\", peekingIterator.next());\n        assertFalse(peekingIterator.hasNext());\n        assertThrows(NoSuchElementException.class, () -> {\n            peekingIterator.next();\n        });\n    }\n}\n"}]