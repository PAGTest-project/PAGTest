[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_removeTest {\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    protected void setUpTest() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>();\n        two = new HashSet<>();\n    }\n\n    @Test\n    @SuppressWarnings({ \"unchecked\", \"serial\" })\n    public void testRemoveWithMutator() {\n        setUpTest();\n        c.setMutator(new CompositeCollection.CollectionMutator<String>() {\n            private static final long serialVersionUID = 1L;\n\n            @Override\n            public boolean add(final CompositeCollection<String> composite,\n                    final List<Collection<String>> collections, final String obj) {\n                for (final Collection<String> collection : collections) {\n                    collection.add(obj);\n                }\n                return true;\n            }\n\n            @Override\n            public boolean addAll(final CompositeCollection<String> composite,\n                    final List<Collection<String>> collections, final Collection<? extends String> coll) {\n                for (final Collection<String> collection : collections) {\n                    collection.addAll(coll);\n                }\n                return true;\n            }\n\n            @Override\n            public boolean remove(final CompositeCollection<String> composite,\n                    final List<Collection<String>> collections, final Object obj) {\n                for (final Collection<String> collection : collections) {\n                    collection.remove(obj);\n                }\n                return true;\n            }\n        });\n\n        c.addComposited(one);\n        one.add(\"foo\"); // Directly add to the underlying collection\n        assertTrue(c.contains(\"foo\"));\n        assertTrue(one.contains(\"foo\"));\n\n        assertTrue(c.remove(\"foo\"));\n        assertFalse(c.contains(\"foo\"));\n        assertFalse(one.contains(\"foo\"));\n    }\n\n    @Test\n    public void testRemoveWithoutMutator() {\n        setUpTest();\n        c.addComposited(one);\n        one.add(\"foo\"); // Directly add to the underlying collection\n        assertTrue(c.contains(\"foo\"));\n        assertTrue(one.contains(\"foo\"));\n\n        assertThrows(UnsupportedOperationException.class, () -> c.remove(\"foo\"));\n    }\n}\n"}]