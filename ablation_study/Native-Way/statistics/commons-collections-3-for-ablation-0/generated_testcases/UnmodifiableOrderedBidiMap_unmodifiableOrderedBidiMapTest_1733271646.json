[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bidimap;\n\nimport org.apache.commons.collections4.OrderedBidiMap;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class UnmodifiableOrderedBidiMap_unmodifiableOrderedBidiMapTest {\n\n    private OrderedBidiMap<String, String> modifiableMap;\n    private OrderedBidiMap<String, String> unmodifiableMap;\n\n    @BeforeEach\n    public void setUp() {\n        modifiableMap = new DualHashBidiMap<>();\n        modifiableMap.put(\"key1\", \"value1\");\n        modifiableMap.put(\"key2\", \"value2\");\n\n        unmodifiableMap = UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(modifiableMap);\n    }\n\n    @Test\n    public void testUnmodifiableOrderedBidiMapWithModifiableMap() {\n        assertNotSame(modifiableMap, unmodifiableMap);\n        assertTrue(unmodifiableMap instanceof Unmodifiable);\n        assertEquals(modifiableMap.size(), unmodifiableMap.size());\n        assertEquals(\"value1\", unmodifiableMap.get(\"key1\"));\n    }\n\n    @Test\n    public void testUnmodifiableOrderedBidiMapWithUnmodifiableMap() {\n        OrderedBidiMap<String, String> alreadyUnmodifiableMap = UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(unmodifiableMap);\n        assertSame(unmodifiableMap, alreadyUnmodifiableMap);\n    }\n\n    @Test\n    public void testUnmodifiableOrderedBidiMapModification() {\n        assertThrows(UnsupportedOperationException.class, () -> unmodifiableMap.put(\"key3\", \"value3\"));\n        assertThrows(UnsupportedOperationException.class, () -> unmodifiableMap.remove(\"key1\"));\n        assertThrows(UnsupportedOperationException.class, () -> unmodifiableMap.clear());\n    }\n}\n"}]