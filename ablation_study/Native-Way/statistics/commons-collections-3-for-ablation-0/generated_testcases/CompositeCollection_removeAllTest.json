[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_removeAllTest {\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    public void setUp() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>(Arrays.asList(\"1\", \"2\", \"3\"));\n        two = new HashSet<>(Arrays.asList(\"4\", \"5\", \"6\"));\n        c.addComposited(one, two);\n    }\n\n    @Test\n    public void testRemoveAllWithNonEmptyCollection() {\n        Collection<String> toRemove = new ArrayList<>(Arrays.asList(\"1\", \"4\"));\n        assertTrue(c.removeAll(toRemove));\n        assertFalse(one.contains(\"1\"));\n        assertFalse(two.contains(\"4\"));\n    }\n\n    @Test\n    public void testRemoveAllWithEmptyCollection() {\n        Collection<String> toRemove = new ArrayList<>();\n        assertFalse(c.removeAll(toRemove));\n    }\n\n    @Test\n    public void testRemoveAllWithNullCollection() {\n        assertFalse(c.removeAll(null));\n    }\n\n    @Test\n    public void testRemoveAllWithAllElements() {\n        Collection<String> toRemove = new ArrayList<>(Arrays.asList(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"));\n        assertTrue(c.removeAll(toRemove));\n        assertTrue(one.isEmpty());\n        assertTrue(two.isEmpty());\n    }\n\n    @Test\n    public void testRemoveAllWithNonExistentElements() {\n        Collection<String> toRemove = new ArrayList<>(Arrays.asList(\"7\", \"8\"));\n        assertFalse(c.removeAll(toRemove));\n    }\n}\n"}]