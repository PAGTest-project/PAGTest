[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.apache.commons.collections4.functors.TruePredicate.truePredicate;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.NotNullPredicate;\nimport org.apache.commons.lang3.ArrayUtils;\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FilterIterator_removeTest {\n\n    private FilterIterator<String> iterator;\n    private String[] array;\n\n    @BeforeEach\n    public void setUp() {\n        array = new String[] { \"a\", \"b\", \"c\" };\n        initIterator();\n    }\n\n    private void initIterator() {\n        List<String> list = new ArrayList<>(Arrays.asList(array));\n        iterator = new FilterIterator<>(list.iterator(), truePredicate());\n    }\n\n    @Test\n    public void testRemoveWithoutNext() {\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.remove();\n        });\n    }\n\n    @Test\n    public void testRemoveAfterNext() {\n        iterator.next();\n        iterator.remove();\n        assertFalse(Arrays.asList(array).contains(\"a\"));\n    }\n\n    @Test\n    public void testRemoveAfterHasNext() {\n        iterator.hasNext();\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.remove();\n        });\n    }\n}\n"}]