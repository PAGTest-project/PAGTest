[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.apache.commons.collections4.map.AbstractHashedMap;\nimport org.apache.commons.collections4.keyvalue.MultiKey;\n\npublic class MultiKeyMap_multiKeyMapTest {\n\n    private static final Integer I1 = 1;\n    private static final Integer I2 = 2;\n\n    private AbstractHashedMap<MultiKey<? extends Integer>, String> hashedMap;\n\n    @BeforeEach\n    public void setUp() {\n        hashedMap = new AbstractHashedMap<MultiKey<? extends Integer>, String>() {\n            // Dummy implementation for testing purposes\n        };\n    }\n\n    @Test\n    public void testMultiKeyMapWithEmptyMap() {\n        MultiKeyMap<Integer, String> result = MultiKeyMap.multiKeyMap(hashedMap);\n        assertNotNull(result);\n        assertTrue(result.isEmpty());\n    }\n\n    @Test\n    public void testMultiKeyMapWithNonEmptyMap() {\n        hashedMap = new AbstractHashedMap<MultiKey<? extends Integer>, String>() {\n            // Dummy implementation for testing purposes\n        };\n        hashedMap.put(new MultiKey<>(I1, I2), \"1-2\");\n        assertThrows(IllegalArgumentException.class, () -> {\n            MultiKeyMap.multiKeyMap(hashedMap);\n        });\n    }\n\n    @Test\n    public void testMultiKeyMapWithNullMap() {\n        assertThrows(NullPointerException.class, () -> {\n            MultiKeyMap.multiKeyMap(null);\n        });\n    }\n}\n"}]