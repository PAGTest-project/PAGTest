[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_clearTest {\n\n    private CompositeMap<String, String> compositeMap;\n    private Map<String, String> mapOne;\n    private Map<String, String> mapTwo;\n\n    @BeforeEach\n    public void setUp() {\n        mapOne = new HashMap<>();\n        mapOne.put(\"1\", \"one\");\n        mapOne.put(\"2\", \"two\");\n\n        mapTwo = new HashMap<>();\n        mapTwo.put(\"3\", \"three\");\n        mapTwo.put(\"4\", \"four\");\n\n        compositeMap = new CompositeMap<>(mapOne, mapTwo);\n    }\n\n    @Test\n    public void testClear() {\n        compositeMap.clear();\n\n        assertTrue(mapOne.isEmpty());\n        assertTrue(mapTwo.isEmpty());\n        assertTrue(compositeMap.isEmpty());\n    }\n\n    @Test\n    public void testClearWithEmptyCompositeMap() {\n        CompositeMap<String, String> emptyCompositeMap = new CompositeMap<>();\n        emptyCompositeMap.clear();\n\n        assertTrue(emptyCompositeMap.isEmpty());\n    }\n\n    @Test\n    public void testClearWithSingleMap() {\n        CompositeMap<String, String> singleMapComposite = new CompositeMap<>(mapOne);\n        singleMapComposite.clear();\n\n        assertTrue(mapOne.isEmpty());\n        assertTrue(singleMapComposite.isEmpty());\n    }\n\n    @Test\n    public void testClearWithMultipleMaps() {\n        Map<String, String> mapThree = new HashMap<>();\n        mapThree.put(\"5\", \"five\");\n        compositeMap.addComposited(mapThree);\n\n        compositeMap.clear();\n\n        assertTrue(mapOne.isEmpty());\n        assertTrue(mapTwo.isEmpty());\n        assertTrue(mapThree.isEmpty());\n        assertTrue(compositeMap.isEmpty());\n    }\n\n    @Test\n    public void testClearWithNullMap() {\n        compositeMap.addComposited(null);\n        compositeMap.clear();\n\n        assertTrue(mapOne.isEmpty());\n        assertTrue(mapTwo.isEmpty());\n        assertTrue(compositeMap.isEmpty());\n    }\n}\n"}]