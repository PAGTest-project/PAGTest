[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_clearTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>();\n    }\n\n    @Test\n    public void testClear() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n\n        assertEquals(2, multiValueMap.size());\n        assertEquals(3, multiValueMap.totalSize());\n\n        multiValueMap.clear();\n\n        assertEquals(0, multiValueMap.size());\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testClearWithEmptyMap() {\n        assertEquals(0, multiValueMap.size());\n        assertEquals(0, multiValueMap.totalSize());\n\n        multiValueMap.clear();\n\n        assertEquals(0, multiValueMap.size());\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testClearWithNonEmptyMap() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n\n        assertEquals(2, multiValueMap.size());\n        assertEquals(3, multiValueMap.totalSize());\n\n        multiValueMap.clear();\n\n        assertEquals(0, multiValueMap.size());\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testClearWithMultipleKeys() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n        multiValueMap.put(\"key2\", \"value4\");\n\n        assertEquals(2, multiValueMap.size());\n        assertEquals(4, multiValueMap.totalSize());\n\n        multiValueMap.clear();\n\n        assertEquals(0, multiValueMap.size());\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testClearWithDifferentCollectionTypes() {\n        MultiValueMap<String, String> mapWithArrayList = MultiValueMap.multiValueMap(new HashMap<>(), ArrayList.class);\n        mapWithArrayList.put(\"key1\", \"value1\");\n        mapWithArrayList.put(\"key1\", \"value2\");\n\n        assertEquals(1, mapWithArrayList.size());\n        assertEquals(2, mapWithArrayList.totalSize());\n\n        mapWithArrayList.clear();\n\n        assertEquals(0, mapWithArrayList.size());\n        assertEquals(0, mapWithArrayList.totalSize());\n    }\n}\n"}]