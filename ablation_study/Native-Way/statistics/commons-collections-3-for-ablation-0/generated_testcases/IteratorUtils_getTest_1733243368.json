[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class IteratorUtils_getTest {\n\n    private List<String> list;\n    private Iterator<String> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n        iterator = list.iterator();\n    }\n\n    @Test\n    public void testGetElementAtIndex() {\n        assertEquals(\"A\", IteratorUtils.get(iterator, 0));\n        assertEquals(\"B\", IteratorUtils.get(iterator, 1));\n        assertEquals(\"C\", IteratorUtils.get(iterator, 2));\n    }\n\n    @Test\n    public void testGetElementWithNegativeIndex() {\n        assertThrows(IndexOutOfBoundsException.class, () -> IteratorUtils.get(iterator, -1));\n    }\n\n    @Test\n    public void testGetElementWithIndexOutOfBounds() {\n        assertThrows(IndexOutOfBoundsException.class, () -> IteratorUtils.get(iterator, 3));\n    }\n\n    @Test\n    public void testGetElementFromEmptyIterator() {\n        Iterator<String> emptyIterator = new ArrayList<String>().iterator();\n        assertThrows(IndexOutOfBoundsException.class, () -> IteratorUtils.get(emptyIterator, 0));\n    }\n}\n"}]