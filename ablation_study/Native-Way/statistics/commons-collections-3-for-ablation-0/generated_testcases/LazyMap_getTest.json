[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.Factory;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class LazyMap_getTest {\n\n    private Map<String, String> map;\n    private Factory<String> factory;\n    private LazyMap<String, String> lazyMap;\n\n    @BeforeEach\n    public void setUp() {\n        map = new HashMap<>();\n        factory = mock(Factory.class);\n        lazyMap = new LazyMap<>(map, key -> factory.create());\n    }\n\n    @Test\n    public void testGet_KeyNotInMap() {\n        String key = \"testKey\";\n        String value = \"testValue\";\n        when(factory.create()).thenReturn(value);\n\n        String result = lazyMap.get(key);\n\n        assertEquals(value, result);\n        verify(factory).create();\n        assertEquals(value, map.get(key));\n    }\n\n    @Test\n    public void testGet_KeyInMap() {\n        String key = \"testKey\";\n        String value = \"testValue\";\n        map.put(key, value);\n\n        String result = lazyMap.get(key);\n\n        assertEquals(value, result);\n        verify(factory, never()).create();\n    }\n}\n"}]