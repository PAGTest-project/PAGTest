[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_removeMappingTest {\n\n    private MultiValueMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new MultiValueMap<>();\n    }\n\n    @Test\n    public void testRemoveMapping_KeyExistsAndValueExists() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key1\", \"value2\");\n        assertTrue(map.removeMapping(\"key1\", \"value1\"));\n        assertFalse(map.containsValue(\"key1\", \"value1\"));\n        assertTrue(map.containsValue(\"key1\", \"value2\"));\n    }\n\n    @Test\n    public void testRemoveMapping_KeyExistsAndValueDoesNotExist() {\n        map.put(\"key1\", \"value1\");\n        assertFalse(map.removeMapping(\"key1\", \"value2\"));\n        assertTrue(map.containsValue(\"key1\", \"value1\"));\n    }\n\n    @Test\n    public void testRemoveMapping_KeyDoesNotExist() {\n        assertFalse(map.removeMapping(\"key1\", \"value1\"));\n    }\n\n    @Test\n    public void testRemoveMapping_KeyExistsAndCollectionBecomesEmpty() {\n        map.put(\"key1\", \"value1\");\n        assertTrue(map.removeMapping(\"key1\", \"value1\"));\n        assertNull(map.getCollection(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveMapping_MultipleValuesAndCollectionRemainsNonEmpty() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key1\", \"value2\");\n        assertTrue(map.removeMapping(\"key1\", \"value1\"));\n        assertFalse(map.containsValue(\"key1\", \"value1\"));\n        assertTrue(map.containsValue(\"key1\", \"value2\"));\n        assertNotNull(map.getCollection(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveMapping_MultipleKeysAndValues() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key1\", \"value2\");\n        map.put(\"key2\", \"value3\");\n        assertTrue(map.removeMapping(\"key1\", \"value1\"));\n        assertFalse(map.containsValue(\"key1\", \"value1\"));\n        assertTrue(map.containsValue(\"key1\", \"value2\"));\n        assertTrue(map.containsValue(\"key2\", \"value3\"));\n    }\n}\n"}]