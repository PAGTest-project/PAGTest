[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bloomfilter;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Shape_getProbabilityTest {\n\n    private Shape shape;\n\n    @BeforeEach\n    public void setUp() {\n        shape = Shape.fromKM(5, 1000);\n    }\n\n    @Test\n    public void testGetProbabilityWithNegativeNumberOfItems() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            shape.getProbability(-1);\n        });\n    }\n\n    @Test\n    public void testGetProbabilityWithZeroNumberOfItems() {\n        assertEquals(0.0, shape.getProbability(0));\n    }\n\n    @Test\n    public void testGetProbabilityWithValidNumberOfItems() {\n        double probability = shape.getProbability(100);\n        assertTrue(probability > 0.0 && probability < 1.0);\n    }\n\n    @Test\n    public void testGetProbabilityWithMaxNumberOfItems() {\n        double probability = shape.getProbability(1000);\n        assertTrue(probability > 0.0 && probability < 1.0);\n    }\n\n    @Test\n    public void testGetProbabilityWithLargeNumberOfItems() {\n        double probability = shape.getProbability(5000);\n        assertTrue(probability > 0.0 && probability < 1.0);\n    }\n}\n"}]