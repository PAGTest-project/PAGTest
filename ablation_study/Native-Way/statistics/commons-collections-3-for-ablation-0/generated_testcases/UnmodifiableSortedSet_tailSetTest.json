[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class UnmodifiableSortedSet_tailSetTest {\n\n    private SortedSet<Integer> originalSet;\n    private UnmodifiableSortedSet<Integer> unmodifiableSet;\n\n    @BeforeEach\n    public void setUp() {\n        originalSet = new TreeSet<>(Arrays.asList(1, 2, 3, 4, 5));\n        unmodifiableSet = UnmodifiableSortedSet.unmodifiableSortedSet(originalSet);\n    }\n\n    @Test\n    public void testTailSet() {\n        SortedSet<Integer> tailSet = unmodifiableSet.tailSet(3);\n        assertEquals(3, tailSet.first());\n        assertEquals(5, tailSet.last());\n        assertTrue(tailSet.containsAll(Arrays.asList(3, 4, 5)));\n    }\n\n    @Test\n    public void testTailSetWithInvalidElement() {\n        assertThrows(IllegalArgumentException.class, () -> unmodifiableSet.tailSet(6));\n    }\n\n    @Test\n    public void testTailSetWithNullElement() {\n        assertThrows(NullPointerException.class, () -> unmodifiableSet.tailSet(null));\n    }\n}\n"}]