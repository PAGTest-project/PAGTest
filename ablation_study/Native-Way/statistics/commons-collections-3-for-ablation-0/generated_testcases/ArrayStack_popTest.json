[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.EmptyStackException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ArrayStack_popTest {\n\n    private ArrayStack<String> stack;\n\n    @BeforeEach\n    public void setUp() {\n        stack = new ArrayStack<>();\n    }\n\n    @Test\n    public void testPopWithNonEmptyStack() {\n        stack.push(\"First Item\");\n        stack.push(\"Second Item\");\n        assertEquals(\"Second Item\", stack.pop(), \"Top item should be 'Second Item'\");\n        assertEquals(\"First Item\", stack.pop(), \"Next item should be 'First Item'\");\n    }\n\n    @Test\n    public void testPopWithEmptyStack() {\n        assertThrows(EmptyStackException.class, () -> {\n            stack.pop();\n        }, \"Popping from an empty stack should throw EmptyStackException\");\n    }\n\n    @Test\n    public void testPopWithSingleItemStack() {\n        stack.push(\"Single Item\");\n        assertEquals(\"Single Item\", stack.pop(), \"Only item should be 'Single Item'\");\n        assertThrows(EmptyStackException.class, () -> {\n            stack.pop();\n        }, \"Stack should be empty after popping the only item\");\n    }\n}\n"}]