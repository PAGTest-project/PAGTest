[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_equalsTest {\n\n    private Map<String, String> one;\n    private Map<String, String> two;\n\n    @BeforeEach\n    public void setUp() {\n        one = new HashMap<>();\n        one.put(\"1\", \"one\");\n        one.put(\"2\", \"two\");\n\n        two = new HashMap<>();\n        two.put(\"3\", \"three\");\n        two.put(\"4\", \"four\");\n    }\n\n    @Test\n    public void testEqualsWithEqualMaps() {\n        CompositeMap<String, String> compositeMap = new CompositeMap<>(one, two);\n        Map<String, String> combinedMap = new HashMap<>(one);\n        combinedMap.putAll(two);\n\n        assertTrue(compositeMap.equals(combinedMap));\n    }\n\n    @Test\n    public void testEqualsWithDifferentMaps() {\n        CompositeMap<String, String> compositeMap = new CompositeMap<>(one, two);\n        Map<String, String> differentMap = new HashMap<>(one);\n        differentMap.put(\"5\", \"five\");\n\n        assertFalse(compositeMap.equals(differentMap));\n    }\n\n    @Test\n    public void testEqualsWithNonMapObject() {\n        CompositeMap<String, String> compositeMap = new CompositeMap<>(one, two);\n        Object nonMapObject = new Object();\n\n        assertFalse(compositeMap.equals(nonMapObject));\n    }\n\n    @Test\n    public void testEqualsWithEmptyMap() {\n        CompositeMap<String, String> compositeMap = new CompositeMap<>(one, two);\n        Map<String, String> emptyMap = new HashMap<>();\n\n        assertFalse(compositeMap.equals(emptyMap));\n    }\n\n    @Test\n    public void testEqualsWithNull() {\n        CompositeMap<String, String> compositeMap = new CompositeMap<>(one, two);\n\n        assertFalse(compositeMap.equals(null));\n    }\n}\n"}]