[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PassiveExpiringMap_clearTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(new HashMap<>());\n    }\n\n    @Test\n    public void testClear() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        assertEquals(3, expiringMap.size());\n\n        expiringMap.clear();\n\n        assertEquals(0, expiringMap.size());\n        assertTrue(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testClearWithExpiredEntries() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        // Simulate expiration by setting expiration times to a past time\n        expiringMap.expirationMap.put(1, 0L);\n        expiringMap.expirationMap.put(2, 0L);\n        expiringMap.expirationMap.put(3, 0L);\n\n        expiringMap.clear();\n\n        assertEquals(0, expiringMap.size());\n        assertTrue(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testClearWithMixedEntries() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        // Simulate expiration for some entries\n        expiringMap.expirationMap.put(1, 0L);\n        expiringMap.expirationMap.put(3, 0L);\n\n        expiringMap.clear();\n\n        assertEquals(0, expiringMap.size());\n        assertTrue(expiringMap.isEmpty());\n    }\n}\n"}]