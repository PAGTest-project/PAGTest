[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FixedOrderComparator_addAsEqualTest {\n\n    private FixedOrderComparator<String> comparator;\n\n    @BeforeEach\n    public void setUp() {\n        comparator = new FixedOrderComparator<>();\n    }\n\n    @Test\n    public void testAddAsEqual_Success() {\n        comparator.add(\"existingObj\");\n        assertTrue(comparator.addAsEqual(\"existingObj\", \"newObj\"));\n    }\n\n    @Test\n    public void testAddAsEqual_ExistingObjNotKnown() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            comparator.addAsEqual(\"nonExistingObj\", \"newObj\");\n        });\n    }\n\n    @Test\n    public void testAddAsEqual_AlreadyKnown() {\n        comparator.add(\"existingObj\");\n        comparator.addAsEqual(\"existingObj\", \"newObj\");\n        assertFalse(comparator.addAsEqual(\"existingObj\", \"newObj\"));\n    }\n\n    @Test\n    public void testAddAsEqual_LockedComparator() {\n        comparator.add(\"existingObj\");\n        comparator.compare(\"existingObj\", \"existingObj\"); // Lock the comparator\n        assertThrows(UnsupportedOperationException.class, () -> {\n            comparator.addAsEqual(\"existingObj\", \"newObj\");\n        });\n    }\n}\n"}]