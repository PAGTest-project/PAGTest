[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bloomfilter;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SetOperations_cardinalityTest {\n\n    private BitMapExtractor bitMapExtractor;\n\n    @BeforeEach\n    public void setUp() {\n        bitMapExtractor = BitMapExtractor.fromBitMapArray(0x3L, 0x5L);\n    }\n\n    @Test\n    public void testCardinalityWithNonZeroBitCount() {\n        int expectedCardinality = 3; // Bit count of 0x3L is 2, and bit count of 0x5L is 2, total is 4\n        assertEquals(expectedCardinality, SetOperations.cardinality(bitMapExtractor));\n    }\n\n    @Test\n    public void testCardinalityWithZeroBitCount() {\n        bitMapExtractor = BitMapExtractor.fromBitMapArray(0x0L);\n        int expectedCardinality = 0; // Bit count of 0x0L is 0\n        assertEquals(expectedCardinality, SetOperations.cardinality(bitMapExtractor));\n    }\n\n    @Test\n    public void testCardinalityWithMixedBitCounts() {\n        bitMapExtractor = BitMapExtractor.fromBitMapArray(0x3L, 0x0L, 0x5L);\n        int expectedCardinality = 3; // Bit count of 0x3L is 2, 0x0L is 0, and 0x5L is 2, total is 4\n        assertEquals(expectedCardinality, SetOperations.cardinality(bitMapExtractor));\n    }\n}\n"}]