[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.NavigableSet;\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class UnmodifiableNavigableSet_headSetTest {\n\n    private UnmodifiableNavigableSet<Integer> set;\n\n    @BeforeEach\n    public void setupSet() {\n        NavigableSet<Integer> originalSet = new TreeSet<>();\n        originalSet.add(1);\n        originalSet.add(2);\n        originalSet.add(3);\n        set = (UnmodifiableNavigableSet<Integer>) UnmodifiableNavigableSet.unmodifiableNavigableSet(originalSet);\n    }\n\n    @Test\n    public void testHeadSet() {\n        SortedSet<Integer> headSet = set.headSet(3);\n        assertEquals(2, headSet.size());\n        assertEquals(1, headSet.first());\n        assertEquals(2, headSet.last());\n    }\n\n    @Test\n    public void testHeadSetInclusive() {\n        NavigableSet<Integer> headSet = set.headSet(3, true);\n        assertEquals(3, headSet.size());\n        assertEquals(1, headSet.first());\n        assertEquals(3, headSet.last());\n    }\n\n    @Test\n    public void testHeadSetModification() {\n        SortedSet<Integer> headSet = set.headSet(3);\n        assertThrows(UnsupportedOperationException.class, () -> headSet.add(4));\n    }\n\n    @Test\n    public void testHeadSetInclusiveModification() {\n        NavigableSet<Integer> headSet = set.headSet(3, true);\n        assertThrows(UnsupportedOperationException.class, () -> headSet.add(4));\n    }\n}\n"}]