[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_containsKeyTest {\n\n    private Map<String, String> one;\n    private Map<String, String> two;\n\n    @BeforeEach\n    public void setUp() {\n        one = new HashMap<>();\n        one.put(\"1\", \"one\");\n        one.put(\"2\", \"two\");\n\n        two = new HashMap<>();\n        two.put(\"3\", \"three\");\n        two.put(\"4\", \"four\");\n    }\n\n    @Test\n    public void testContainsKey_KeyPresentInFirstMap() {\n        CompositeMap<String, String> map = new CompositeMap<>(one, two);\n        assertTrue(map.containsKey(\"1\"));\n    }\n\n    @Test\n    public void testContainsKey_KeyPresentInSecondMap() {\n        CompositeMap<String, String> map = new CompositeMap<>(one, two);\n        assertTrue(map.containsKey(\"3\"));\n    }\n\n    @Test\n    public void testContainsKey_KeyNotPresent() {\n        CompositeMap<String, String> map = new CompositeMap<>(one, two);\n        assertFalse(map.containsKey(\"5\"));\n    }\n\n    @Test\n    public void testContainsKey_AfterAddingNewMap() {\n        CompositeMap<String, String> map = new CompositeMap<>(one, two);\n        Map<String, String> three = new HashMap<>();\n        three.put(\"5\", \"five\");\n        map.addComposited(three);\n        assertTrue(map.containsKey(\"5\"));\n    }\n\n    @Test\n    public void testContainsKey_AfterRemovingMap() {\n        CompositeMap<String, String> map = new CompositeMap<>(one, two);\n        Map<String, String> three = new HashMap<>();\n        three.put(\"5\", \"five\");\n        map.addComposited(three);\n        assertTrue(map.containsKey(\"5\"));\n\n        map.removeComposited(three);\n        assertFalse(map.containsKey(\"5\"));\n    }\n}\n"}]