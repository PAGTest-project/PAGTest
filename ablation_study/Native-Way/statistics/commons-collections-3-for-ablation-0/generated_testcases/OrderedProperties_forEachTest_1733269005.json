[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.properties;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.function.BiConsumer;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class OrderedProperties_forEachTest {\n\n    private OrderedProperties orderedProperties;\n\n    @BeforeEach\n    public void setUp() {\n        orderedProperties = new OrderedProperties();\n    }\n\n    @Test\n    public void testForEachWithEmptyProperties() {\n        orderedProperties.forEach((k, v) -> {\n            throw new AssertionError(\"Should not be called\");\n        });\n    }\n\n    @Test\n    public void testForEachWithSingleEntry() {\n        orderedProperties.put(\"key1\", \"value1\");\n        Map<Object, Object> result = new HashMap<>();\n        orderedProperties.forEach((k, v) -> result.put(k, v));\n        assertEquals(1, result.size());\n        assertEquals(\"value1\", result.get(\"key1\"));\n    }\n\n    @Test\n    public void testForEachWithMultipleEntries() {\n        orderedProperties.put(\"key1\", \"value1\");\n        orderedProperties.put(\"key2\", \"value2\");\n        orderedProperties.put(\"key3\", \"value3\");\n        Map<Object, Object> result = new HashMap<>();\n        orderedProperties.forEach((k, v) -> result.put(k, v));\n        assertEquals(3, result.size());\n        assertEquals(\"value1\", result.get(\"key1\"));\n        assertEquals(\"value2\", result.get(\"key2\"));\n        assertEquals(\"value3\", result.get(\"key3\"));\n    }\n\n    @Test\n    public void testForEachWithNullAction() {\n        BiConsumer<Object, Object> action = null;\n        try {\n            orderedProperties.forEach(action);\n        } catch (NullPointerException e) {\n            assertEquals(\"action\", e.getMessage());\n        }\n    }\n}\n"}]