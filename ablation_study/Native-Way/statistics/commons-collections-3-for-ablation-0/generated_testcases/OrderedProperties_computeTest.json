[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.properties;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\nimport java.util.function.BiFunction;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class OrderedProperties_computeTest {\n\n    private OrderedProperties orderedProperties;\n\n    @BeforeEach\n    public void setUp() {\n        orderedProperties = new OrderedProperties();\n    }\n\n    @Test\n    public void testComputeNewKey() {\n        BiFunction<Object, Object, Object> remappingFunction = (k, v) -> \"newValue\";\n        Object result = orderedProperties.compute(\"newKey\", remappingFunction);\n        assertEquals(\"newValue\", result);\n        assertTrue(orderedProperties.insertOrder.contains(\"newKey\"));\n    }\n\n    @Test\n    public void testComputeExistingKey() {\n        orderedProperties.put(\"existingKey\", \"oldValue\");\n        BiFunction<Object, Object, Object> remappingFunction = (k, v) -> \"newValue\";\n        Object result = orderedProperties.compute(\"existingKey\", remappingFunction);\n        assertEquals(\"newValue\", result);\n        assertTrue(orderedProperties.insertOrder.contains(\"existingKey\"));\n    }\n\n    @Test\n    public void testComputeNullValue() {\n        BiFunction<Object, Object, Object> remappingFunction = (k, v) -> null;\n        Object result = orderedProperties.compute(\"key\", remappingFunction);\n        assertNull(result);\n        assertFalse(orderedProperties.insertOrder.contains(\"key\"));\n    }\n\n    @Test\n    public void testComputeNullKey() {\n        BiFunction<Object, Object, Object> remappingFunction = (k, v) -> \"newValue\";\n        Object result = orderedProperties.compute(null, remappingFunction);\n        assertNull(result);\n        assertFalse(orderedProperties.insertOrder.contains(null));\n    }\n}\n"}]