[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Set;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class SetUtils_unmodifiableSetTest {\n\n    @BeforeEach\n    public void setUp() {\n        // No setup required for unmodifiableSet tests\n    }\n\n    @Test\n    public void testUnmodifiableSetWithNull() {\n        assertNull(SetUtils.unmodifiableSet((Object[]) null));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithEmptyArray() {\n        Set<Object> set = SetUtils.unmodifiableSet();\n        assertTrue(set.isEmpty());\n    }\n\n    @Test\n    public void testUnmodifiableSetWithNonEmptyArray() {\n        Set<String> set = SetUtils.unmodifiableSet(\"a\", \"b\", \"c\");\n        assertEquals(3, set.size());\n        assertTrue(set.contains(\"a\"));\n        assertTrue(set.contains(\"b\"));\n        assertTrue(set.contains(\"c\"));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithDuplicates() {\n        Set<String> set = SetUtils.unmodifiableSet(\"a\", \"b\", \"a\", \"c\", \"b\");\n        assertEquals(3, set.size());\n        assertTrue(set.contains(\"a\"));\n        assertTrue(set.contains(\"b\"));\n        assertTrue(set.contains(\"c\"));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithMixedTypes() {\n        Set<Object> set = SetUtils.unmodifiableSet(\"a\", 1, 2.0, true);\n        assertEquals(4, set.size());\n        assertTrue(set.contains(\"a\"));\n        assertTrue(set.contains(1));\n        assertTrue(set.contains(2.0));\n        assertTrue(set.contains(true));\n    }\n}\n"}]