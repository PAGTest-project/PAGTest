[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.function.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_removeIfTest {\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    protected void setUpTest() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>();\n        two = new HashSet<>();\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testRemoveIf_NullFilter() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        assertFalse(c.removeIf(null));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testRemoveIf_NoChange() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        Predicate<String> filter = s -> s.equals(\"3\");\n        assertFalse(c.removeIf(filter));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testRemoveIf_WithChange() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        Predicate<String> filter = s -> s.equals(\"1\");\n        assertTrue(c.removeIf(filter));\n        assertFalse(one.contains(\"1\"));\n        assertTrue(two.contains(\"2\"));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testRemoveIf_MultipleCollections() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        Predicate<String> filter = s -> s.equals(\"2\");\n        assertTrue(c.removeIf(filter));\n        assertTrue(one.contains(\"1\"));\n        assertFalse(two.contains(\"2\"));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testRemoveIf_AllCollections() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        Predicate<String> filter = s -> s.equals(\"1\") || s.equals(\"2\");\n        assertTrue(c.removeIf(filter));\n        assertTrue(one.isEmpty());\n        assertTrue(two.isEmpty());\n    }\n}\n"}]