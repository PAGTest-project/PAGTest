[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ListIterator;\nimport java.util.NoSuchElementException;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass UnmodifiableListIterator_unmodifiableListIteratorTest {\n\n    @Test\n    void testUnmodifiableListIteratorWithUnmodifiableIterator() {\n        ListIterator<String> mockIterator = mock(ListIterator.class);\n        when(mockIterator.hasNext()).thenReturn(true);\n        when(mockIterator.next()).thenReturn(\"test\");\n\n        ListIterator<String> unmodifiableIterator = UnmodifiableListIterator.unmodifiableListIterator(mockIterator);\n\n        assertTrue(unmodifiableIterator.hasNext());\n        assertEquals(\"test\", unmodifiableIterator.next());\n    }\n\n    @Test\n    void testUnmodifiableListIteratorWithModifiableIterator() {\n        ListIterator<String> mockIterator = mock(ListIterator.class);\n        when(mockIterator.hasNext()).thenReturn(true);\n        when(mockIterator.next()).thenReturn(\"test\");\n\n        ListIterator<String> unmodifiableIterator = UnmodifiableListIterator.unmodifiableListIterator(mockIterator);\n\n        assertTrue(unmodifiableIterator.hasNext());\n        assertEquals(\"test\", unmodifiableIterator.next());\n    }\n\n    @Test\n    void testUnmodifiableListIteratorWithNullIterator() {\n        assertThrows(NullPointerException.class, () -> {\n            UnmodifiableListIterator.unmodifiableListIterator(null);\n        });\n    }\n}\n"}]