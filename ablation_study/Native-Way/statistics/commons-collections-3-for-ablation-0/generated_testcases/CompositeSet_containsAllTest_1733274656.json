[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.Set;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeSet_containsAllTest {\n\n    private CompositeSet<Integer> compositeSet;\n    private Set<Integer> set1;\n    private Set<Integer> set2;\n\n    @BeforeEach\n    public void setUp() {\n        set1 = new HashSet<>();\n        set1.add(1);\n        set1.add(2);\n        set1.add(3);\n\n        set2 = new HashSet<>();\n        set2.add(3);\n        set2.add(4);\n        set2.add(5);\n\n        compositeSet = new CompositeSet<>(set1, set2);\n    }\n\n    @Test\n    public void testContainsAll_NullCollection() {\n        assertFalse(compositeSet.containsAll(null));\n    }\n\n    @Test\n    public void testContainsAll_EmptyCollection() {\n        assertTrue(compositeSet.containsAll(new HashSet<>()));\n    }\n\n    @Test\n    public void testContainsAll_AllElementsPresent() {\n        Set<Integer> testSet = new HashSet<>();\n        testSet.add(1);\n        testSet.add(4);\n        testSet.add(5);\n\n        assertTrue(compositeSet.containsAll(testSet));\n    }\n\n    @Test\n    public void testContainsAll_SomeElementsMissing() {\n        Set<Integer> testSet = new HashSet<>();\n        testSet.add(1);\n        testSet.add(4);\n        testSet.add(6);\n\n        assertFalse(compositeSet.containsAll(testSet));\n    }\n\n    @Test\n    public void testContainsAll_AllElementsMissing() {\n        Set<Integer> testSet = new HashSet<>();\n        testSet.add(6);\n        testSet.add(7);\n        testSet.add(8);\n\n        assertFalse(compositeSet.containsAll(testSet));\n    }\n}\n"}]