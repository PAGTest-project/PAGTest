[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_entrySetTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(1000L), new HashMap<>());\n    }\n\n    @Test\n    public void testEntrySetWithExpiredEntries() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        // Wait for entries to expire\n        try {\n            Thread.sleep(1500);\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n\n        Set<Map.Entry<Integer, String>> entrySet = expiringMap.entrySet();\n        assertTrue(entrySet.isEmpty());\n    }\n\n    @Test\n    public void testEntrySetWithNonExpiredEntries() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        Set<Map.Entry<Integer, String>> entrySet = expiringMap.entrySet();\n        assertEquals(3, entrySet.size());\n    }\n\n    @Test\n    public void testEntrySetAfterPartialExpiration() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        // Wait for entries to expire partially\n        try {\n            Thread.sleep(500);\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n\n        expiringMap.put(4, \"Four\");\n\n        Set<Map.Entry<Integer, String>> entrySet = expiringMap.entrySet();\n        assertEquals(4, entrySet.size());\n    }\n\n    @Test\n    public void testEntrySetAfterClear() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        expiringMap.clear();\n\n        Set<Map.Entry<Integer, String>> entrySet = expiringMap.entrySet();\n        assertTrue(entrySet.isEmpty());\n    }\n}\n"}]