[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.SortedSet;\nimport java.util.TreeSet;\nimport org.apache.commons.collections4.Predicate;\nimport org.apache.commons.collections4.functors.TruePredicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PredicatedSortedSet_tailSetTest {\n\n    private PredicatedSortedSet<Integer> predicatedSortedSet;\n    private SortedSet<Integer> testSet;\n    private Predicate<Integer> truePredicate;\n\n    @BeforeEach\n    public void setUp() {\n        testSet = new TreeSet<>(Arrays.asList(1, 2, 3, 4, 5));\n        truePredicate = TruePredicate.truePredicate();\n        predicatedSortedSet = new PredicatedSortedSet<>(testSet, truePredicate);\n    }\n\n    @Test\n    public void testTailSetValid() {\n        SortedSet<Integer> result = predicatedSortedSet.tailSet(3);\n        assertNotNull(result, \"tailSet should not return null\");\n        assertEquals(3, result.size(), \"tailSet should contain 3 elements\");\n        assertTrue(result.contains(3), \"tailSet should contain element 3\");\n        assertTrue(result.contains(4), \"tailSet should contain element 4\");\n        assertTrue(result.contains(5), \"tailSet should contain element 5\");\n    }\n\n    @Test\n    public void testTailSetInvalid() {\n        SortedSet<Integer> result = predicatedSortedSet.tailSet(6);\n        assertNotNull(result, \"tailSet should not return null\");\n        assertTrue(result.isEmpty(), \"tailSet should be empty for invalid fromElement\");\n    }\n\n    @Test\n    public void testTailSetNullPredicate() {\n        assertThrows(NullPointerException.class, () -> {\n            new PredicatedSortedSet<>(testSet, null).tailSet(3);\n        }, \"Null predicate should throw NullPointerException\");\n    }\n\n    @Test\n    public void testTailSetNullSet() {\n        assertThrows(NullPointerException.class, () -> {\n            new PredicatedSortedSet<>(null, truePredicate).tailSet(3);\n        }, \"Null set should throw NullPointerException\");\n    }\n}\n"}]