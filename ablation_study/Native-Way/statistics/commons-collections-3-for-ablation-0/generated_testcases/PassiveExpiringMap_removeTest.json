[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_removeTest {\n\n    private PassiveExpiringMap<String, String> map;\n    private Map<String, String> internalMap;\n\n    @BeforeEach\n    public void setUp() {\n        internalMap = new HashMap<>();\n        map = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(-1L), internalMap);\n    }\n\n    @Test\n    public void testRemove_KeyExists() {\n        internalMap.put(\"key1\", \"value1\");\n        map.put(\"key1\", \"value1\");\n\n        String result = map.remove(\"key1\");\n\n        assertEquals(\"value1\", result);\n        assertNull(internalMap.get(\"key1\"));\n        assertNull(map.get(\"key1\"));\n    }\n\n    @Test\n    public void testRemove_KeyDoesNotExist() {\n        String result = map.remove(\"key2\");\n\n        assertNull(result);\n        assertNull(internalMap.get(\"key2\"));\n        assertNull(map.get(\"key2\"));\n    }\n}\n"}]