[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.list;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SetUniqueList_setTest {\n\n    private SetUniqueList<String> setUniqueList;\n\n    @BeforeEach\n    public void setUp() {\n        List<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n        setUniqueList = SetUniqueList.setUniqueList(list);\n    }\n\n    @Test\n    public void testSetUniqueElement() {\n        String result = setUniqueList.set(1, \"D\");\n        assertEquals(\"B\", result);\n        assertEquals(3, setUniqueList.size());\n        assertTrue(setUniqueList.contains(\"D\"));\n        assertFalse(setUniqueList.contains(\"B\"));\n    }\n\n    @Test\n    public void testSetDuplicateElement() {\n        String result = setUniqueList.set(1, \"A\");\n        assertEquals(\"B\", result);\n        assertEquals(2, setUniqueList.size());\n        assertTrue(setUniqueList.contains(\"A\"));\n        assertFalse(setUniqueList.contains(\"B\"));\n    }\n\n    @Test\n    public void testSetSameElement() {\n        String result = setUniqueList.set(1, \"B\");\n        assertEquals(\"B\", result);\n        assertEquals(3, setUniqueList.size());\n        assertTrue(setUniqueList.contains(\"B\"));\n    }\n\n    @Test\n    public void testSetAtEndOfList() {\n        String result = setUniqueList.set(2, \"D\");\n        assertEquals(\"C\", result);\n        assertEquals(3, setUniqueList.size());\n        assertTrue(setUniqueList.contains(\"D\"));\n        assertFalse(setUniqueList.contains(\"C\"));\n    }\n\n    @Test\n    public void testSetAtBeginningOfList() {\n        String result = setUniqueList.set(0, \"D\");\n        assertEquals(\"A\", result);\n        assertEquals(3, setUniqueList.size());\n        assertTrue(setUniqueList.contains(\"D\"));\n        assertFalse(setUniqueList.contains(\"A\"));\n    }\n}\n"}]