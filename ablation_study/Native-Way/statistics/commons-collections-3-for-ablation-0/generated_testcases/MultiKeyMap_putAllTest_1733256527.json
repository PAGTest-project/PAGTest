[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.collections4.keyvalue.MultiKey;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_putAllTest {\n\n    private MultiKeyMap<String, String> multiKeyMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiKeyMap = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testPutAll() {\n        Map<MultiKey<String>, String> mapToCopy = new HashMap<>();\n        mapToCopy.put(new MultiKey<>(\"key1\", \"key2\"), \"value1\");\n        mapToCopy.put(new MultiKey<>(\"key3\", \"key4\"), \"value2\");\n\n        multiKeyMap.putAll(mapToCopy);\n\n        assertEquals(2, multiKeyMap.size());\n        assertEquals(\"value1\", multiKeyMap.get(\"key1\", \"key2\"));\n        assertEquals(\"value2\", multiKeyMap.get(\"key3\", \"key4\"));\n    }\n\n    @Test\n    public void testPutAllWithNullKey() {\n        Map<MultiKey<String>, String> mapToCopy = new HashMap<>();\n        mapToCopy.put(null, \"value1\");\n\n        assertThrows(NullPointerException.class, () -> {\n            multiKeyMap.putAll(mapToCopy);\n        });\n    }\n\n    @Test\n    public void testPutAllWithInvalidKey() {\n        Map<MultiKey<String>, String> mapToCopy = new HashMap<>();\n        mapToCopy.put(new MultiKey<>(\"key1\"), \"value1\");\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            multiKeyMap.putAll(mapToCopy);\n        });\n    }\n}\n"}]