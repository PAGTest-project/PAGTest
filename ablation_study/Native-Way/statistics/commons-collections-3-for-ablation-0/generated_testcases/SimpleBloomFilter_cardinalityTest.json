[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bloomfilter;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SimpleBloomFilter_cardinalityTest {\n    private SimpleBloomFilter filter;\n    private Shape testShape;\n\n    @BeforeEach\n    public void setUp() {\n        testShape = Shape.fromKM(1, 100); // Example shape\n        filter = new SimpleBloomFilter(testShape);\n    }\n\n    @Test\n    public void testCardinalityInitialState() {\n        assertEquals(0, filter.cardinality());\n    }\n\n    @Test\n    public void testCardinalityAfterMerge() {\n        filter.merge((BitMapExtractor) predicate -> {\n            predicate.test(2L);\n            return true;\n        });\n        assertEquals(1, filter.cardinality());\n    }\n\n    @Test\n    public void testCardinalityAfterMultipleMerges() {\n        filter.merge((BitMapExtractor) predicate -> {\n            predicate.test(2L);\n            return true;\n        });\n        filter.merge((BitMapExtractor) predicate -> {\n            predicate.test(4L);\n            return true;\n        });\n        assertEquals(2, filter.cardinality());\n    }\n\n    @Test\n    public void testCardinalityAfterClear() {\n        filter.merge((BitMapExtractor) predicate -> {\n            predicate.test(2L);\n            return true;\n        });\n        filter.clear();\n        assertEquals(0, filter.cardinality());\n    }\n}\n"}]