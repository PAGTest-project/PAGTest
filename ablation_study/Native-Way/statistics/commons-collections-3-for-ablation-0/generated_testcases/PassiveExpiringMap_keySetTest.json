[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_keySetTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(1, TimeUnit.SECONDS);\n    }\n\n    @Test\n    public void testKeySetWithExpiredEntries() throws InterruptedException {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        // Wait for entries to expire\n        Thread.sleep(1500);\n\n        Set<Integer> keySet = expiringMap.keySet();\n        assertTrue(keySet.isEmpty());\n    }\n\n    @Test\n    public void testKeySetWithoutExpiredEntries() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        Set<Integer> keySet = expiringMap.keySet();\n        assertEquals(3, keySet.size());\n    }\n\n    @Test\n    public void testKeySetAfterPartialExpiration() throws InterruptedException {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        // Wait for entries to expire\n        Thread.sleep(1500);\n\n        expiringMap.put(4, \"Four\");\n\n        Set<Integer> keySet = expiringMap.keySet();\n        assertEquals(1, keySet.size());\n        assertTrue(keySet.contains(4));\n    }\n\n    @Test\n    public void testKeySetWithNeverExpiringEntries() {\n        expiringMap = new PassiveExpiringMap<>(-1L);\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        Set<Integer> keySet = expiringMap.keySet();\n        assertEquals(3, keySet.size());\n    }\n\n    @Test\n    public void testKeySetWithZeroTimeToLive() {\n        expiringMap = new PassiveExpiringMap<>(0L);\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.put(3, \"Three\");\n\n        Set<Integer> keySet = expiringMap.keySet();\n        assertTrue(keySet.isEmpty());\n    }\n}\n"}]