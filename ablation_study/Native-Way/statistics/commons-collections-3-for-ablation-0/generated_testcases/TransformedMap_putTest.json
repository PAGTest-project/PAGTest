[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class TransformedMap_putTest {\n\n    private TransformedMap<String, String> transformedMap;\n    private Transformer<String, String> keyTransformer;\n    private Transformer<String, String> valueTransformer;\n\n    @BeforeEach\n    public void setUp() {\n        keyTransformer = new Transformer<String, String>() {\n            @Override\n            public String transform(String input) {\n                return \"transformed_\" + input;\n            }\n        };\n\n        valueTransformer = new Transformer<String, String>() {\n            @Override\n            public String transform(String input) {\n                return \"transformed_\" + input;\n            }\n        };\n\n        Map<String, String> originalMap = new HashMap<>();\n        transformedMap = TransformedMap.transformingMap(originalMap, keyTransformer, valueTransformer);\n    }\n\n    @Test\n    public void testPutWithTransformedKeyAndValue() {\n        String result = transformedMap.put(\"key\", \"value\");\n        assertNull(result);\n        assertEquals(\"transformed_value\", transformedMap.get(\"transformed_key\"));\n    }\n\n    @Test\n    public void testPutWithNullKeyTransformer() {\n        transformedMap = TransformedMap.transformingMap(new HashMap<>(), null, valueTransformer);\n        String result = transformedMap.put(\"key\", \"value\");\n        assertNull(result);\n        assertEquals(\"transformed_value\", transformedMap.get(\"key\"));\n    }\n\n    @Test\n    public void testPutWithNullValueTransformer() {\n        transformedMap = TransformedMap.transformingMap(new HashMap<>(), keyTransformer, null);\n        String result = transformedMap.put(\"key\", \"value\");\n        assertNull(result);\n        assertEquals(\"value\", transformedMap.get(\"transformed_key\"));\n    }\n\n    @Test\n    public void testPutWithNullTransformers() {\n        transformedMap = TransformedMap.transformingMap(new HashMap<>(), null, null);\n        String result = transformedMap.put(\"key\", \"value\");\n        assertNull(result);\n        assertEquals(\"value\", transformedMap.get(\"key\"));\n    }\n}\n"}]