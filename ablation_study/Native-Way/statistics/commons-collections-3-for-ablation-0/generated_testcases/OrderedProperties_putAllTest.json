[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.properties;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class OrderedProperties_putAllTest {\n\n    private OrderedProperties orderedProperties;\n\n    @BeforeEach\n    public void setUp() {\n        orderedProperties = new OrderedProperties();\n    }\n\n    @Test\n    public void testPutAll() {\n        Map<Object, Object> map = new HashMap<>();\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        map.put(\"key3\", \"value3\");\n\n        orderedProperties.putAll(map);\n\n        assertEquals(3, orderedProperties.size());\n        assertTrue(orderedProperties.keySet().containsAll(map.keySet()));\n    }\n\n    @Test\n    public void testPutAllEmptyMap() {\n        Map<Object, Object> map = new HashMap<>();\n\n        orderedProperties.putAll(map);\n\n        assertEquals(0, orderedProperties.size());\n    }\n\n    @Test\n    public void testPutAllWithExistingKeys() {\n        orderedProperties.put(\"key1\", \"oldValue1\");\n        orderedProperties.put(\"key2\", \"oldValue2\");\n\n        Map<Object, Object> map = new HashMap<>();\n        map.put(\"key1\", \"newValue1\");\n        map.put(\"key2\", \"newValue2\");\n        map.put(\"key3\", \"value3\");\n\n        orderedProperties.putAll(map);\n\n        assertEquals(3, orderedProperties.size());\n        assertEquals(\"newValue1\", orderedProperties.get(\"key1\"));\n        assertEquals(\"newValue2\", orderedProperties.get(\"key2\"));\n        assertEquals(\"value3\", orderedProperties.get(\"key3\"));\n    }\n}\n"}]