[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.function.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ListOrderedSet_removeIfTest {\n\n    private ListOrderedSet<Integer> listOrderedSet;\n\n    @BeforeEach\n    public void setUp() {\n        listOrderedSet = new ListOrderedSet<>();\n        listOrderedSet.add(1);\n        listOrderedSet.add(2);\n        listOrderedSet.add(3);\n        listOrderedSet.add(4);\n        listOrderedSet.add(5);\n    }\n\n    @Test\n    public void testRemoveIf_NullFilter() {\n        assertFalse(listOrderedSet.removeIf(null));\n        assertEquals(5, listOrderedSet.size());\n    }\n\n    @Test\n    public void testRemoveIf_EvenNumbers() {\n        Predicate<Integer> evenFilter = num -> num % 2 == 0;\n        assertTrue(listOrderedSet.removeIf(evenFilter));\n        assertEquals(3, listOrderedSet.size());\n        assertFalse(listOrderedSet.contains(2));\n        assertFalse(listOrderedSet.contains(4));\n    }\n\n    @Test\n    public void testRemoveIf_NoMatches() {\n        Predicate<Integer> oddFilter = num -> num % 2 != 0;\n        assertFalse(listOrderedSet.removeIf(oddFilter));\n        assertEquals(5, listOrderedSet.size());\n    }\n\n    @Test\n    public void testRemoveIf_AllElements() {\n        Predicate<Integer> allFilter = num -> true;\n        assertTrue(listOrderedSet.removeIf(allFilter));\n        assertTrue(listOrderedSet.isEmpty());\n    }\n\n    @Test\n    public void testRemoveIf_OrderPreserved() {\n        Predicate<Integer> greaterThanThree = num -> num > 3;\n        assertTrue(listOrderedSet.removeIf(greaterThanThree));\n        assertEquals(3, listOrderedSet.size());\n        List<Integer> expectedOrder = new ArrayList<>();\n        expectedOrder.add(1);\n        expectedOrder.add(2);\n        expectedOrder.add(3);\n        assertEquals(expectedOrder, listOrderedSet.asList());\n    }\n}\n"}]