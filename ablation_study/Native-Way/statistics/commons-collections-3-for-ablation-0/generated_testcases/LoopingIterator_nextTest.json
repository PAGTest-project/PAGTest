[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class LoopingIterator_nextTest {\n\n    private LoopingIterator<String> loop;\n    private List<String> list;\n\n    @BeforeEach\n    public void setUp() {\n        list = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\"));\n        loop = new LoopingIterator<>(list);\n    }\n\n    @Test\n    public void testNextWithElements() {\n        assertEquals(\"a\", loop.next());\n        assertEquals(\"b\", loop.next());\n        assertEquals(\"c\", loop.next());\n        assertEquals(\"a\", loop.next()); // Looping back to the start\n    }\n\n    @Test\n    public void testNextWithEmptyCollection() {\n        loop = new LoopingIterator<>(new ArrayList<>());\n        assertThrows(NoSuchElementException.class, () -> {\n            loop.next();\n        });\n    }\n\n    @Test\n    public void testNextWithReset() {\n        assertEquals(\"a\", loop.next());\n        assertEquals(\"b\", loop.next());\n        loop.reset();\n        assertEquals(\"a\", loop.next());\n    }\n\n    @Test\n    public void testNextWithRemove() {\n        assertEquals(\"a\", loop.next());\n        loop.remove();\n        assertEquals(2, loop.size());\n        assertEquals(\"b\", loop.next());\n        assertEquals(\"c\", loop.next());\n        assertEquals(\"b\", loop.next()); // Looping back to the start\n    }\n}\n"}]