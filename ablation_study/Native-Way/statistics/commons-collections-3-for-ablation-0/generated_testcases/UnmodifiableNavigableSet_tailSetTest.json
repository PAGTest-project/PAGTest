[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.NavigableSet;\nimport java.util.TreeSet;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class UnmodifiableNavigableSet_tailSetTest {\n\n    private UnmodifiableNavigableSet<Integer> set;\n\n    @BeforeEach\n    public void setupSet() {\n        NavigableSet<Integer> originalSet = new TreeSet<>(java.util.Arrays.asList(1, 2, 3, 4, 5));\n        set = (UnmodifiableNavigableSet<Integer>) UnmodifiableNavigableSet.unmodifiableNavigableSet(originalSet);\n    }\n\n    @Test\n    public void testTailSet() {\n        NavigableSet<Integer> tailSet = set.tailSet(3);\n        assertTrue(tailSet.contains(3));\n        assertTrue(tailSet.contains(4));\n        assertTrue(tailSet.contains(5));\n        assertThrows(UnsupportedOperationException.class, () -> tailSet.add(6));\n    }\n\n    @Test\n    public void testTailSetInclusive() {\n        NavigableSet<Integer> tailSet = set.tailSet(3, true);\n        assertTrue(tailSet.contains(3));\n        assertTrue(tailSet.contains(4));\n        assertTrue(tailSet.contains(5));\n        assertThrows(UnsupportedOperationException.class, () -> tailSet.add(6));\n    }\n\n    @Test\n    public void testTailSetExclusive() {\n        NavigableSet<Integer> tailSet = set.tailSet(3, false);\n        assertTrue(tailSet.contains(4));\n        assertTrue(tailSet.contains(5));\n        assertThrows(UnsupportedOperationException.class, () -> tailSet.add(6));\n    }\n}\n"}]