[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.list;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class TreeList_addTest {\n    private TreeList<String> treeList;\n\n    @BeforeEach\n    public void setUp() {\n        treeList = new TreeList<>();\n    }\n\n    @Test\n    public void testAddAtIndex() {\n        treeList.add(0, \"hugo\");\n        assertEquals(1, treeList.size());\n        assertEquals(\"hugo\", treeList.get(0));\n\n        treeList.add(0, \"erna\");\n        assertEquals(2, treeList.size());\n        assertEquals(\"erna\", treeList.get(0));\n        assertEquals(\"hugo\", treeList.get(1));\n\n        treeList.add(1, \"daniel\");\n        assertEquals(3, treeList.size());\n        assertEquals(\"erna\", treeList.get(0));\n        assertEquals(\"daniel\", treeList.get(1));\n        assertEquals(\"hugo\", treeList.get(2));\n\n        treeList.add(3, \"andres\");\n        assertEquals(4, treeList.size());\n        assertEquals(\"erna\", treeList.get(0));\n        assertEquals(\"daniel\", treeList.get(1));\n        assertEquals(\"hugo\", treeList.get(2));\n        assertEquals(\"andres\", treeList.get(3));\n\n        treeList.add(0, \"harald\");\n        assertEquals(5, treeList.size());\n        assertEquals(\"harald\", treeList.get(0));\n        assertEquals(\"erna\", treeList.get(1));\n        assertEquals(\"daniel\", treeList.get(2));\n        assertEquals(\"hugo\", treeList.get(3));\n        assertEquals(\"andres\", treeList.get(4));\n    }\n\n    @Test\n    public void testAddAtIndexOutOfBounds() {\n        assertThrows(IndexOutOfBoundsException.class, () -> treeList.add(-1, \"hugo\"));\n        assertThrows(IndexOutOfBoundsException.class, () -> treeList.add(1, \"hugo\"));\n    }\n\n    @Test\n    public void testAddAtIndexWithEmptyList() {\n        treeList.add(0, \"hugo\");\n        assertEquals(1, treeList.size());\n        assertEquals(\"hugo\", treeList.get(0));\n    }\n\n    @Test\n    public void testAddAtIndexWithNull() {\n        treeList.add(0, null);\n        assertEquals(1, treeList.size());\n        assertNull(treeList.get(0));\n    }\n}\n"}]