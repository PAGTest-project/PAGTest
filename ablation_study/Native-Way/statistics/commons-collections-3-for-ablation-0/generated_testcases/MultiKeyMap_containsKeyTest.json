[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_containsKeyTest {\n    private MultiKeyMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testContainsKeyWithExistingKeys() {\n        map.put(\"key1\", \"key2\", \"value\");\n        assertTrue(map.containsKey(\"key1\", \"key2\"));\n    }\n\n    @Test\n    public void testContainsKeyWithNonExistingKeys() {\n        map.put(\"key1\", \"key2\", \"value\");\n        assertFalse(map.containsKey(\"key3\", \"key4\"));\n    }\n\n    @Test\n    public void testContainsKeyWithNullKeys() {\n        map.put(null, \"key2\", \"value\");\n        assertTrue(map.containsKey(null, \"key2\"));\n        assertFalse(map.containsKey(\"key1\", null));\n    }\n\n    @Test\n    public void testContainsKeyWithEmptyMap() {\n        assertFalse(map.containsKey(\"key1\", \"key2\"));\n    }\n\n    @Test\n    public void testContainsKeyWithMultipleEntries() {\n        map.put(\"key1\", \"key2\", \"value1\");\n        map.put(\"key3\", \"key4\", \"value2\");\n        assertTrue(map.containsKey(\"key1\", \"key2\"));\n        assertTrue(map.containsKey(\"key3\", \"key4\"));\n        assertFalse(map.containsKey(\"key1\", \"key4\"));\n    }\n}\n"}]