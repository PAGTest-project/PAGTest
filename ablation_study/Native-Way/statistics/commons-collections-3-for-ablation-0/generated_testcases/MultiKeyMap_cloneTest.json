[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_cloneTest {\n\n    private MultiKeyMap<String, String> multiKeyMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiKeyMap = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testClone() {\n        multiKeyMap.put(\"key1\", \"key2\", \"value1\");\n        MultiKeyMap<String, String> clonedMap = multiKeyMap.clone();\n\n        assertEquals(multiKeyMap.size(), clonedMap.size());\n        assertEquals(\"value1\", clonedMap.get(\"key1\", \"key2\"));\n    }\n\n    @Test\n    public void testCloneEmptyMap() {\n        MultiKeyMap<String, String> clonedMap = multiKeyMap.clone();\n\n        assertEquals(0, clonedMap.size());\n    }\n\n    @Test\n    public void testCloneWithMultipleKeys() {\n        multiKeyMap.put(\"key1\", \"key2\", \"key3\", \"key4\", \"key5\", \"value2\");\n        MultiKeyMap<String, String> clonedMap = multiKeyMap.clone();\n\n        assertEquals(multiKeyMap.size(), clonedMap.size());\n        assertEquals(\"value2\", clonedMap.get(\"key1\", \"key2\", \"key3\", \"key4\", \"key5\"));\n    }\n\n    @Test\n    public void testCloneWithNullValue() {\n        multiKeyMap.put(\"key1\", \"key2\", null);\n        MultiKeyMap<String, String> clonedMap = multiKeyMap.clone();\n\n        assertEquals(multiKeyMap.size(), clonedMap.size());\n        assertNull(clonedMap.get(\"key1\", \"key2\"));\n    }\n}\n"}]