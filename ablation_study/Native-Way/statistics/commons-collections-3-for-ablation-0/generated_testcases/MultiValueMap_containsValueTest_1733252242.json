[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_containsValueTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>();\n    }\n\n    @Test\n    public void testContainsValue_ValuePresent() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n        assertTrue(multiValueMap.containsValue(\"value2\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueNotPresent() {\n        multiValueMap.put(\"key1\", \"value1\");\n        assertFalse(multiValueMap.containsValue(\"value3\"));\n    }\n\n    @Test\n    public void testContainsValue_EmptyMap() {\n        assertFalse(multiValueMap.containsValue(\"value1\"));\n    }\n\n    @Test\n    public void testContainsValue_NullValue() {\n        multiValueMap.put(\"key1\", null);\n        assertTrue(multiValueMap.containsValue(null));\n    }\n\n    @Test\n    public void testContainsValue_MultipleKeys() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key2\", \"value2\");\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n        assertTrue(multiValueMap.containsValue(\"value2\"));\n    }\n\n    @Test\n    public void testContainsValue_MultipleValuesInOneKey() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n        assertTrue(multiValueMap.containsValue(\"value2\"));\n        assertTrue(multiValueMap.containsValue(\"value3\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueInDifferentKeys() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key2\", \"value1\");\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueInCollection() {\n        multiValueMap.put(\"key1\", new ArrayList<>(Arrays.asList(\"value1\", \"value2\")));\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n        assertTrue(multiValueMap.containsValue(\"value2\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueInNestedCollection() {\n        Collection<String> nestedCollection = new ArrayList<>(Arrays.asList(\"value1\", \"value2\"));\n        multiValueMap.put(\"key1\", nestedCollection);\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n        assertTrue(multiValueMap.containsValue(\"value2\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueInMultipleCollections() {\n        multiValueMap.put(\"key1\", new ArrayList<>(Arrays.asList(\"value1\", \"value2\")));\n        multiValueMap.put(\"key2\", new ArrayList<>(Arrays.asList(\"value3\", \"value4\")));\n        assertTrue(multiValueMap.containsValue(\"value1\"));\n        assertTrue(multiValueMap.containsValue(\"value2\"));\n        assertTrue(multiValueMap.containsValue(\"value3\"));\n        assertTrue(multiValueMap.containsValue(\"value4\"));\n    }\n}\n"}]