[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bloomfilter;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SimpleBloomFilter_processBitMapsTest {\n    private SimpleBloomFilter filter;\n\n    @BeforeEach\n    public void setUp() {\n        filter = new SimpleBloomFilter(getTestShape());\n    }\n\n    private Shape getTestShape() {\n        // Assuming a method to create a test shape\n        return Shape.fromKM(1, 64); // Example shape\n    }\n\n    @Test\n    public void testProcessBitMapsAllTrue() {\n        filter.merge((BitMapExtractor) predicate -> {\n            predicate.test(0xFFFFFFFFFFFFFFFFL);\n            return true;\n        });\n        assertTrue(filter.processBitMaps(l -> l == 0xFFFFFFFFFFFFFFFFL));\n    }\n\n    @Test\n    public void testProcessBitMapsOneFalse() {\n        filter.merge((BitMapExtractor) predicate -> {\n            predicate.test(0xFFFFFFFFFFFFFFFFL);\n            return true;\n        });\n        assertFalse(filter.processBitMaps(l -> l == 0xFFFFFFFFFFFFFFFEL));\n    }\n\n    @Test\n    public void testProcessBitMapsEmptyFilter() {\n        assertTrue(filter.processBitMaps(l -> l == 0L));\n    }\n\n    @Test\n    public void testProcessBitMapsNullConsumer() {\n        assertThrows(NullPointerException.class, () -> filter.processBitMaps(null));\n    }\n}\n"}]