[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bag;\n\nimport org.apache.commons.collections4.SortedBag;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Arrays;\nimport java.util.Collection;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.when;\n\npublic class CollectionSortedBag_removeAllTest {\n\n    @Test\n    public void testRemoveAll_NonEmptyCollection() {\n        SortedBag<String> mockBag = Mockito.mock(SortedBag.class);\n        when(mockBag.remove(\"element1\", 1)).thenReturn(true);\n        when(mockBag.remove(\"element2\", 1)).thenReturn(false);\n        when(mockBag.getCount(\"element1\")).thenReturn(1);\n        when(mockBag.getCount(\"element2\")).thenReturn(1);\n\n        CollectionSortedBag<String> bag = new CollectionSortedBag<>(mockBag);\n        Collection<String> coll = Arrays.asList(\"element1\", \"element2\");\n\n        boolean result = bag.removeAll(coll);\n\n        assertTrue(result);\n    }\n\n    @Test\n    public void testRemoveAll_NullCollection() {\n        SortedBag<String> mockBag = Mockito.mock(SortedBag.class);\n        when(mockBag.removeAll(null)).thenReturn(false);\n\n        CollectionSortedBag<String> bag = new CollectionSortedBag<>(mockBag);\n\n        boolean result = bag.removeAll(null);\n\n        assertFalse(result);\n    }\n}\n"}]