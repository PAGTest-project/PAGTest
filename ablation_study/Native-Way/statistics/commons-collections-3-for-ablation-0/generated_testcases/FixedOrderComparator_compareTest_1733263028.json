[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FixedOrderComparator_compareTest {\n\n    private FixedOrderComparator<String> comparator;\n\n    @BeforeEach\n    public void setUp() {\n        comparator = new FixedOrderComparator<>();\n        comparator.add(\"apple\");\n        comparator.add(\"banana\");\n        comparator.add(\"cherry\");\n    }\n\n    @Test\n    public void testCompareKnownObjects() {\n        assertEquals(-1, comparator.compare(\"apple\", \"banana\"));\n        assertEquals(0, comparator.compare(\"apple\", \"apple\"));\n        assertEquals(1, comparator.compare(\"banana\", \"apple\"));\n    }\n\n    @Test\n    public void testCompareUnknownObjectBefore() {\n        comparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.BEFORE);\n        assertEquals(-1, comparator.compare(\"apple\", \"unknown\"));\n        assertEquals(1, comparator.compare(\"unknown\", \"apple\"));\n        assertEquals(0, comparator.compare(\"unknown\", \"unknown\"));\n    }\n\n    @Test\n    public void testCompareUnknownObjectAfter() {\n        comparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.AFTER);\n        assertEquals(1, comparator.compare(\"apple\", \"unknown\"));\n        assertEquals(-1, comparator.compare(\"unknown\", \"apple\"));\n        assertEquals(0, comparator.compare(\"unknown\", \"unknown\"));\n    }\n\n    @Test\n    public void testCompareUnknownObjectException() {\n        comparator.setUnknownObjectBehavior(FixedOrderComparator.UnknownObjectBehavior.EXCEPTION);\n        assertThrows(IllegalArgumentException.class, () -> comparator.compare(\"apple\", \"unknown\"));\n        assertThrows(IllegalArgumentException.class, () -> comparator.compare(\"unknown\", \"apple\"));\n    }\n\n    @Test\n    public void testCompareUnknownObjectBehaviorNull() {\n        comparator.setUnknownObjectBehavior(null);\n        assertThrows(UnsupportedOperationException.class, () -> comparator.compare(\"apple\", \"unknown\"));\n    }\n\n    @Test\n    public void testCompareAfterLock() {\n        comparator.compare(\"apple\", \"banana\");\n        assertThrows(UnsupportedOperationException.class, () -> comparator.add(\"date\"));\n    }\n}\n"}]