[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class MultiValueMap_totalSizeTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>();\n    }\n\n    @Test\n    public void testTotalSizeEmptyMap() {\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeSingleKeySingleValue() {\n        multiValueMap.put(\"key1\", \"value1\");\n        assertEquals(1, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeSingleKeyMultipleValues() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        assertEquals(2, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeMultipleKeysMultipleValues() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n        multiValueMap.put(\"key2\", \"value4\");\n        assertEquals(4, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeAfterRemove() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n        multiValueMap.put(\"key2\", \"value4\");\n        multiValueMap.removeMapping(\"key1\", \"value1\");\n        assertEquals(3, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeAfterClear() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n        multiValueMap.put(\"key2\", \"value4\");\n        multiValueMap.clear();\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAll() {\n        Map<String, List<String>> map = new HashMap<>();\n        map.put(\"key1\", Arrays.asList(\"value1\", \"value2\"));\n        map.put(\"key2\", Arrays.asList(\"value3\", \"value4\"));\n        multiValueMap.putAll(map);\n        assertEquals(4, multiValueMap.totalSize());\n    }\n}\n"}]