[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bidimap;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Set;\nimport java.util.TreeMap;\n\nimport org.apache.commons.collections4.OrderedBidiMap;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class UnmodifiableOrderedBidiMap_keySetTest {\n\n    private OrderedBidiMap<String, String> map;\n    private UnmodifiableOrderedBidiMap<String, String> unmodifiableMap;\n\n    @BeforeEach\n    public void setUp() {\n        map = new TreeBidiMap<>();\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        unmodifiableMap = new UnmodifiableOrderedBidiMap<>(map);\n    }\n\n    @Test\n    public void testKeySet() {\n        Set<String> keySet = unmodifiableMap.keySet();\n        assertEquals(2, keySet.size());\n        assertTrue(keySet.contains(\"key1\"));\n        assertTrue(keySet.contains(\"key2\"));\n    }\n\n    @Test\n    public void testKeySetUnmodifiable() {\n        Set<String> keySet = unmodifiableMap.keySet();\n        assertThrows(UnsupportedOperationException.class, () -> keySet.add(\"key3\"));\n    }\n}\n"}]