[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.keyvalue;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class TiedMapEntry_equalsTest {\n\n    private Map<String, String> map;\n    private TiedMapEntry<String, String> entry;\n\n    @BeforeEach\n    public void setUp() {\n        map = new HashMap<>();\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        entry = new TiedMapEntry<>(map, \"key1\");\n    }\n\n    @Test\n    public void testEquals_SameObject() {\n        assertTrue(entry.equals(entry));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        assertFalse(entry.equals(\"not a Map.Entry\"));\n    }\n\n    @Test\n    public void testEquals_DifferentKey() {\n        Map.Entry<String, String> otherEntry = new TiedMapEntry<>(map, \"key2\");\n        assertFalse(entry.equals(otherEntry));\n    }\n\n    @Test\n    public void testEquals_SameKeyDifferentValue() {\n        map.put(\"key1\", \"value2\");\n        Map.Entry<String, String> otherEntry = new TiedMapEntry<>(map, \"key1\");\n        assertFalse(entry.equals(otherEntry));\n    }\n\n    @Test\n    public void testEquals_NullKey() {\n        map.put(null, \"value1\");\n        TiedMapEntry<String, String> nullKeyEntry = new TiedMapEntry<>(map, null);\n        Map.Entry<String, String> otherEntry = new TiedMapEntry<>(map, null);\n        assertTrue(nullKeyEntry.equals(otherEntry));\n    }\n\n    @Test\n    public void testEquals_NullValue() {\n        map.put(\"key1\", null);\n        Map.Entry<String, String> otherEntry = new TiedMapEntry<>(map, \"key1\");\n        assertTrue(entry.equals(otherEntry));\n    }\n\n    @Test\n    public void testEquals_BothNullKeyAndValue() {\n        map.put(null, null);\n        TiedMapEntry<String, String> nullKeyEntry = new TiedMapEntry<>(map, null);\n        Map.Entry<String, String> otherEntry = new TiedMapEntry<>(map, null);\n        assertTrue(nullKeyEntry.equals(otherEntry));\n    }\n}\n"}]