[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.apache.commons.collections4.keyvalue.MultiKey;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_removeMultiKeyTest {\n    private MultiKeyMap<String, String> multiKeyMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiKeyMap = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testRemoveMultiKey_ExistingKey() {\n        multiKeyMap.put(\"key1\", \"key2\", \"value1\");\n        String removedValue = multiKeyMap.removeMultiKey(\"key1\", \"key2\");\n        assertEquals(\"value1\", removedValue);\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key2\"));\n    }\n\n    @Test\n    public void testRemoveMultiKey_NonExistingKey() {\n        String removedValue = multiKeyMap.removeMultiKey(\"key1\", \"key2\");\n        assertNull(removedValue);\n    }\n\n    @Test\n    public void testRemoveMultiKey_NullKey() {\n        multiKeyMap.put(null, \"key2\", \"value1\");\n        String removedValue = multiKeyMap.removeMultiKey(null, \"key2\");\n        assertEquals(\"value1\", removedValue);\n        assertFalse(multiKeyMap.containsKey(null, \"key2\"));\n    }\n\n    @Test\n    public void testRemoveMultiKey_MultipleEntries() {\n        multiKeyMap.put(\"key1\", \"key2\", \"value1\");\n        multiKeyMap.put(\"key3\", \"key4\", \"value2\");\n        String removedValue1 = multiKeyMap.removeMultiKey(\"key1\", \"key2\");\n        String removedValue2 = multiKeyMap.removeMultiKey(\"key3\", \"key4\");\n        assertEquals(\"value1\", removedValue1);\n        assertEquals(\"value2\", removedValue2);\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key2\"));\n        assertFalse(multiKeyMap.containsKey(\"key3\", \"key4\"));\n    }\n\n    @Test\n    public void testRemoveMultiKey_SameHashCodeDifferentKeys() {\n        multiKeyMap.put(\"AaAa\", \"BBBB\", \"value1\");\n        multiKeyMap.put(\"BBAa\", \"AaBB\", \"value2\");\n        String removedValue1 = multiKeyMap.removeMultiKey(\"AaAa\", \"BBBB\");\n        String removedValue2 = multiKeyMap.removeMultiKey(\"BBAa\", \"AaBB\");\n        assertEquals(\"value1\", removedValue1);\n        assertEquals(\"value2\", removedValue2);\n        assertFalse(multiKeyMap.containsKey(\"AaAa\", \"BBBB\"));\n        assertFalse(multiKeyMap.containsKey(\"BBAa\", \"AaBB\"));\n    }\n}\n"}]