[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport org.apache.commons.collections4.MultiMap;\nimport org.apache.commons.collections4.Transformer;\nimport org.apache.commons.collections4.map.MultiValueMap;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Iterator;\n\nimport static org.mockito.Mockito.*;\n\npublic class IndexedCollection_reindexTest {\n\n    private IndexedCollection<String, String> indexedCollection;\n    private MultiMap<String, String> mockIndex;\n    private Collection<String> mockCollection;\n    private Transformer<String, String> mockTransformer;\n\n    @BeforeEach\n    public void setUp() {\n        mockCollection = mock(Collection.class);\n        mockIndex = mock(MultiMap.class);\n        mockTransformer = mock(Transformer.class);\n        indexedCollection = new IndexedCollection<>(mockCollection, mockTransformer, mockIndex, false);\n    }\n\n    @Test\n    public void testReindex() {\n        // Given\n        String element1 = \"element1\";\n        String element2 = \"element2\";\n        Iterator<String> mockIterator = mock(Iterator.class);\n        when(mockCollection.iterator()).thenReturn(mockIterator);\n        when(mockIterator.hasNext()).thenReturn(true, true, false);\n        when(mockIterator.next()).thenReturn(element1, element2);\n        when(mockTransformer.transform(element1)).thenReturn(\"key1\");\n        when(mockTransformer.transform(element2)).thenReturn(\"key2\");\n\n        // When\n        indexedCollection.reindex();\n\n        // Then\n        verify(mockIndex).clear();\n        verify(mockIndex).put(\"key1\", element1);\n        verify(mockIndex).put(\"key2\", element2);\n    }\n}\n"}]