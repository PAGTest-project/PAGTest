[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class TransformedSortedSet_transformedSortedSetTest {\n\n    @Test\n    public void testTransformedSortedSetWithNonEmptySet() {\n        SortedSet<String> originalSet = new TreeSet<>();\n        originalSet.add(\"a\");\n        originalSet.add(\"b\");\n        originalSet.add(\"c\");\n\n        Transformer<String, String> transformer = s -> s.toUpperCase();\n\n        TransformedSortedSet<String> transformedSet = TransformedSortedSet.transformedSortedSet(originalSet, transformer);\n\n        assertEquals(0, originalSet.size());\n        assertEquals(3, transformedSet.size());\n        assertTrue(transformedSet.contains(\"A\"));\n        assertTrue(transformedSet.contains(\"B\"));\n        assertTrue(transformedSet.contains(\"C\"));\n    }\n\n    @Test\n    public void testTransformedSortedSetWithEmptySet() {\n        SortedSet<String> originalSet = new TreeSet<>();\n\n        Transformer<String, String> transformer = s -> s.toUpperCase();\n\n        TransformedSortedSet<String> transformedSet = TransformedSortedSet.transformedSortedSet(originalSet, transformer);\n\n        assertEquals(0, originalSet.size());\n        assertEquals(0, transformedSet.size());\n    }\n}\n"}]