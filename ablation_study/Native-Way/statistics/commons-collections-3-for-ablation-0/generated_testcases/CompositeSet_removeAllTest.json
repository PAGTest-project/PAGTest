[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.set;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.Set;\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeSet_removeAllTest {\n\n    private CompositeSet<String> compositeSet;\n    private Set<String> set1;\n    private Set<String> set2;\n\n    @BeforeEach\n    public void setUp() {\n        set1 = new HashSet<>(Arrays.asList(\"A\", \"B\", \"C\"));\n        set2 = new HashSet<>(Arrays.asList(\"D\", \"E\", \"F\"));\n        compositeSet = new CompositeSet<>(set1, set2);\n    }\n\n    @Test\n    public void testRemoveAllWithNonEmptyCollection() {\n        Collection<String> toRemove = Arrays.asList(\"A\", \"D\");\n        assertTrue(compositeSet.removeAll(toRemove));\n        assertFalse(set1.contains(\"A\"));\n        assertFalse(set2.contains(\"D\"));\n    }\n\n    @Test\n    public void testRemoveAllWithEmptyCollection() {\n        Collection<String> toRemove = Arrays.asList();\n        assertFalse(compositeSet.removeAll(toRemove));\n    }\n\n    @Test\n    public void testRemoveAllWithNullCollection() {\n        assertFalse(compositeSet.removeAll(null));\n    }\n\n    @Test\n    public void testRemoveAllWithNonExistentElements() {\n        Collection<String> toRemove = Arrays.asList(\"X\", \"Y\");\n        assertFalse(compositeSet.removeAll(toRemove));\n    }\n\n    @Test\n    public void testRemoveAllWithAllElements() {\n        Collection<String> toRemove = Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\");\n        assertTrue(compositeSet.removeAll(toRemove));\n        assertTrue(set1.isEmpty());\n        assertTrue(set2.isEmpty());\n    }\n}\n"}]