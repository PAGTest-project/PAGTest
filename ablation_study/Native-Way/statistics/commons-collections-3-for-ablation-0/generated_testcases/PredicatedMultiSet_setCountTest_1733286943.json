[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.multiset;\n\nimport org.apache.commons.collections4.MultiSet;\nimport org.apache.commons.collections4.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class PredicatedMultiSet_setCountTest {\n\n    private PredicatedMultiSet<String> predicatedMultiSet;\n    private MultiSet<String> decoratedMultiSet;\n    private Predicate<String> predicate;\n\n    @BeforeEach\n    public void setUp() {\n        decoratedMultiSet = mock(MultiSet.class);\n        predicate = mock(Predicate.class);\n        predicatedMultiSet = new PredicatedMultiSet<>(decoratedMultiSet, predicate);\n    }\n\n    @Test\n    public void testSetCount_ValidObject() {\n        String validObject = \"valid\";\n        int count = 5;\n\n        when(predicate.evaluate(validObject)).thenReturn(true);\n        when(decoratedMultiSet.setCount(validObject, count)).thenReturn(3);\n\n        int result = predicatedMultiSet.setCount(validObject, count);\n\n        assertEquals(3, result);\n        verify(predicate).evaluate(validObject);\n        verify(decoratedMultiSet).setCount(validObject, count);\n    }\n}\n"}]