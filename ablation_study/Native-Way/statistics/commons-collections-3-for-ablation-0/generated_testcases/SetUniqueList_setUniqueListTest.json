[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.list;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SetUniqueList_setUniqueListTest {\n\n    private List<String> list;\n\n    @BeforeEach\n    public void setUp() {\n        list = new ArrayList<>();\n    }\n\n    @Test\n    public void testSetUniqueListWithNonEmptyList() {\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n\n        SetUniqueList<String> uniqueList = SetUniqueList.setUniqueList(list);\n\n        assertEquals(3, uniqueList.size());\n        assertTrue(uniqueList.contains(\"A\"));\n        assertTrue(uniqueList.contains(\"B\"));\n        assertTrue(uniqueList.contains(\"C\"));\n    }\n\n    @Test\n    public void testSetUniqueListWithEmptyList() {\n        SetUniqueList<String> uniqueList = SetUniqueList.setUniqueList(list);\n\n        assertEquals(0, uniqueList.size());\n    }\n\n    @Test\n    public void testSetUniqueListWithDuplicates() {\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"A\");\n\n        SetUniqueList<String> uniqueList = SetUniqueList.setUniqueList(list);\n\n        assertEquals(2, uniqueList.size());\n        assertTrue(uniqueList.contains(\"A\"));\n        assertTrue(uniqueList.contains(\"B\"));\n    }\n\n    @Test\n    public void testSetUniqueListWithNullList() {\n        assertThrows(NullPointerException.class, () -> {\n            SetUniqueList.setUniqueList(null);\n        });\n    }\n}\n"}]