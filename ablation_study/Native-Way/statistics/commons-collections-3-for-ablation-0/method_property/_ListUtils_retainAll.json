{"target_method": "retainAll", "signature": "List<E> retainAll(Collection<E>, Collection<?>)", "direct_enhancements": [{"method_name": "removeAll(Collection<E>, Collection<?>)", "relation_type": "Behavioral Similarity", "confidence": 0.95, "reason": "Both methods involve filtering elements based on the presence in another collection, but retainAll keeps elements present in the second collection while removeAll removes them.", "is_external": false}, {"method_name": "intersection(List<? extends E>, List<? extends E>)", "relation_type": "Behavioral Similarity", "confidence": 0.9, "reason": "Both methods involve finding common elements between two collections, but retainAll modifies the original collection while intersection returns a new list.", "is_external": false}, {"method_name": "union(List<? extends E>, List<? extends E>)", "relation_type": "Behavioral Similarity", "confidence": 0.85, "reason": "Both methods involve combining elements from two collections, but retainAll retains only the elements present in the second collection while union combines all unique elements.", "is_external": false}, {"method_name": "subtract(List<E>, List<? extends E>)", "relation_type": "Behavioral Similarity", "confidence": 0.9, "reason": "Both methods involve modifying a collection based on elements from another collection, but retainAll retains elements present in the second collection while subtract removes them.", "is_external": false}, {"method_name": "select(Collection<? extends E>, Predicate<? super E>)", "relation_type": "Behavioral Similarity", "confidence": 0.8, "reason": "Both methods involve filtering elements based on a condition, but retainAll uses the presence in another collection as the condition while select uses a predicate.", "is_external": true, "class_name": "CollectionUtils"}, {"method_name": "selectRejected(Collection<? extends E>, Predicate<? super E>)", "relation_type": "Behavioral Similarity", "confidence": 0.8, "reason": "Both methods involve filtering elements based on a condition, but retainAll uses the presence in another collection as the condition while selectRejected uses a predicate to exclude elements.", "is_external": true, "class_name": "CollectionUtils"}]}