{"generated_testcases": [{"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[Collection<V>]getCollection(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/MultiMapUtils_getCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[Bag<V>]getValuesAsBag(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/MultiMapUtils_getValuesAsBagTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[List<V>]getValuesAsList(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/MultiMapUtils_getValuesAsListTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[Set<V>]getValuesAsSet(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/MultiMapUtils_getValuesAsSetTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[MultiValuedMap<K, V>]transformedMultiValuedMap(MultiValuedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/MultiMapUtils_transformedMultiValuedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils[Transformer<I, O>]ifTransformer(Predicate<? super I>,Transformer<? super I, ? extends O>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/TransformerUtils_ifTransformerTest.java"}, {"src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils[Transformer<I, O>]switchMapTransformer(Map<I, Transformer<I, O>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/TransformerUtils_switchMapTransformerTest.java"}, {"src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils[Transformer<I, O>]switchTransformer(Predicate<? super I>,Transformer<? super I, ? extends O>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/TransformerUtils_switchTransformerTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]difference(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_differenceTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]disjunction(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_disjunctionTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[int]hashCodeForSet(Collection<T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_hashCodeForSetTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[HashSet<E>]hashSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_hashSetTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]intersection(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_intersectionTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[boolean]isEqualSet(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_isEqualSetTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]union(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_unionTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[Set<E>]unmodifiableSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SetUtils_unmodifiableSetTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[int]hashCodeForList(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_hashCodeForListTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[int]indexOf(List<E>,Predicate<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_indexOfTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]intersection(List<? extends E>,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_intersectionTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[boolean]isEqualList(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_isEqualListTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[String]longestCommonSubsequence(CharSequence,CharSequence)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_longestCommonSubsequenceTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<List<T>>]partition(List<T>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_partitionTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]removeAll(Collection<E>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]retainAll(Collection<E>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]subtract(List<E>,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_subtractTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]union(List<? extends E>,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ListUtils_unionTest.java"}, {"src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack[E]peek()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ArrayStack_peekTest.java"}, {"src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack[E]pop()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ArrayStack_popTest.java"}, {"src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack[int]search(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ArrayStack_searchTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<E>]chainedComparator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ComparatorUtils_chainedComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[E]max(E,E,Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ComparatorUtils_maxTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[E]min(E,E,Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ComparatorUtils_minTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<E>]nullHighComparator(Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ComparatorUtils_nullHighComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<E>]nullLowComparator(Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ComparatorUtils_nullLowComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<I>]transformedComparator(Comparator<O>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ComparatorUtils_transformedComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/EnumerationUtils.java.EnumerationUtils[T]get(Enumeration<T>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/EnumerationUtils_getTest.java"}, {"src/main/java/org/apache/commons/collections4/EnumerationUtils.java.EnumerationUtils[List<String>]toList(StringTokenizer)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/EnumerationUtils_toListTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]asIterator(Enumeration<? extends E>,Collection<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_asIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]chainedIterator(Iterator<? extends E>,Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_chainedIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]collatedIterator(Comparator<? super E>,Collection<Iterator<? extends E>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_collatedIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[ListIterator<E>]filteredListIterator(ListIterator<? extends E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_filteredListIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[E]find(Iterator<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_findTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[void]forEach(Iterator<E>,Closure<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_forEachTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[E]forEachButLast(Iterator<E>,Closure<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_forEachButLastTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[E]get(Iterator<E>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_getTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<?>]getIterator(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_getIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[int]indexOf(Iterator<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_indexOfTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[boolean]matchesAll(Iterator<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_matchesAllTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[int]size(Iterator<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[List<E>]toList(Iterator<? extends E>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_toListTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[String]toString(Iterator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_toStringTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<O>]transformedIterator(Iterator<? extends I>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_transformedIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[ZippingIterator<E>]zippingIterator(Iterator<? extends E>,Iterator<? extends E>,Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/IteratorUtils_zippingIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/ClosureUtils.java.ClosureUtils[Closure<E>]ifClosure(Predicate<? super E>,Closure<? super E>,Closure<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ClosureUtils_ifClosureTest.java"}, {"src/main/java/org/apache/commons/collections4/ClosureUtils.java.ClosureUtils[Closure<E>]switchMapClosure(Map<? extends E, Closure<E>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/ClosureUtils_switchMapClosureTest.java"}, {"src/main/java/org/apache/commons/collections4/SplitMapUtils.java.SplitMapUtils[IterableMap<K, V>]readableMap(Get<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SplitMapUtils_readableMapTest.java"}, {"src/main/java/org/apache/commons/collections4/SplitMapUtils.java.SplitMapUtils[Map<K, V>]writableMap(Put<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/SplitMapUtils_writableMapTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[E]element()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_elementTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[boolean]offer(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_offerTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[E]peek()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_peekTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[E]poll()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_pollTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/SynchronizedQueue.java.SynchronizedQueue[E]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/SynchronizedQueue_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/TransformedQueue.java.TransformedQueue[TransformedQueue<E>]transformedQueue(Queue<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/TransformedQueue_transformedQueueTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/UnmodifiableQueue.java.UnmodifiableQueue[Queue<E>]unmodifiableQueue(Queue<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/UnmodifiableQueue_unmodifiableQueueTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_addTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[E]element()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_elementTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[E]get(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_getTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[Iterator<E>]iterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_iteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[E]peek()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_peekTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[E]poll()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_pollTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[E]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java.CircularFifoQueue[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/queue/CircularFifoQueue_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/TransformedBag.java.TransformedBag[Bag<E>]transformedBag(Bag<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/TransformedBag_transformedBagTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/TransformedBag.java.TransformedBag[Set<E>]uniqueSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/TransformedBag_uniqueSetTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/TreeBag.java.TreeBag[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/TreeBag_addTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag.java.UnmodifiableSortedBag[SortedBag<E>]unmodifiableSortedBag(SortedBag<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag_unmodifiableSortedBagTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag.java.UnmodifiableSortedBag[Set<E>]uniqueSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag_uniqueSetTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/UnmodifiableBag.java.UnmodifiableBag[Bag<E>]unmodifiableBag(Bag<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/UnmodifiableBag_unmodifiableBagTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/UnmodifiableBag.java.UnmodifiableBag[Set<E>]uniqueSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/UnmodifiableBag_uniqueSetTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java.CollectionSortedBag[boolean]add(E,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionSortedBag_addTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java.CollectionSortedBag[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionSortedBag_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java.CollectionSortedBag[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionSortedBag_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java.CollectionSortedBag[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionSortedBag_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/TransformedSortedBag.java.TransformedSortedBag[TransformedSortedBag<E>]transformedSortedBag(SortedBag<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/TransformedSortedBag_transformedSortedBagTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionBag.java.CollectionBag[boolean]add(E,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionBag_addTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionBag.java.CollectionBag[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionBag_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionBag.java.CollectionBag[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionBag_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/CollectionBag.java.CollectionBag[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/CollectionBag_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/bag/PredicatedBag.java.PredicatedBag[boolean]add(E,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bag/PredicatedBag_addTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java.UnmodifiableCollection[Collection<T>]unmodifiableCollection(Collection<? extends T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/UnmodifiableCollection_unmodifiableCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_addTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[void]addComposited(Collection<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_addCompositedTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]contains(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_containsTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]containsAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_containsAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]isEmpty()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_isEmptyTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[Iterator<E>]iterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_iteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]removeIf(Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_removeIfTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java.CompositeCollection[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/CompositeCollection_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java.UnmodifiableBoundedCollection[BoundedCollection<E>]unmodifiableBoundedCollection(BoundedCollection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection_unmodifiableBoundedCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java.PredicatedCollection[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/PredicatedCollection_addTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/PredicatedCollection.java.PredicatedCollection[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/PredicatedCollection_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java.TransformedCollection[TransformedCollection<E>]transformedCollection(Collection<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/TransformedCollection_transformedCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[IndexedCollection<K, C>]nonUniqueIndexedCollection(Collection<C>,Transformer<C, K>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_nonUniqueIndexedCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[IndexedCollection<K, C>]uniqueIndexedCollection(Collection<C>,Transformer<C, K>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_uniqueIndexedCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]add(C)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_addTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]addAll(Collection<? extends C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]contains(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_containsTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]containsAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_containsAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[C]get(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_getTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[void]reindex()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_reindexTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]removeIf(Predicate<? super C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_removeIfTest.java"}, {"src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java.IndexedCollection[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/collection/IndexedCollection_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/LazyMap.java.LazyMap[V]get(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/LazyMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/LazySortedMap.java.LazySortedMap[SortedMap<K, V>]headMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/LazySortedMap_headMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/LazySortedMap.java.LazySortedMap[SortedMap<K, V>]subMap(K,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/LazySortedMap_subMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/LazySortedMap.java.LazySortedMap[SortedMap<K, V>]tailMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/LazySortedMap_tailMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedMap.java.TransformedMap[TransformedMap<K, V>]transformedMap(Map<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedMap_transformedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedMap.java.TransformedMap[TransformedMap<K, V>]transformingMap(Map<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedMap_transformingMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedMap.java.TransformedMap[V]put(K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedMap.java.TransformedMap[void]putAll(Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/LinkedMap.java.LinkedMap[int]indexOf(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/LinkedMap_indexOfTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[boolean]containsValue(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_containsValueTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[Iterator<Entry<K, V>>]iterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_iteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[Object]put(K,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[boolean]putAll(K,Collection<V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[boolean]removeMapping(Object,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_removeMappingTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[int]size(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[int]totalSize()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_totalSizeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiValueMap.java.MultiValueMap[Collection<Object>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiValueMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableSortedMap.java.UnmodifiableSortedMap[SortedMap<K, V>]unmodifiableSortedMap(SortedMap<K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableSortedMap_unmodifiableSortedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/DefaultedMap.java.DefaultedMap[V]get(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/DefaultedMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[void]addComposited(Map<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_addCompositedTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[boolean]containsKey(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_containsKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[boolean]containsValue(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_containsValueTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[V]get(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[boolean]isEmpty()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_isEmptyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[V]put(K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[void]putAll(Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[V]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[Map<K, V>]removeComposited(Map<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_removeCompositedTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/CompositeMap.java.CompositeMap[Collection<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/CompositeMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[MultiKeyMap<K, V>]multiKeyMap(AbstractHashedMap<MultiKey<? extends K>, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_multiKeyMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[MultiKeyMap<K, V>]clone()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_cloneTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[boolean]containsKey(Object,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_containsKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[V]get(Object,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[V]put(K,K,K,K,K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[void]putAll(Map<? extends MultiKey<? extends K>, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[boolean]removeAll(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java.MultiKeyMap[V]removeMultiKey(Object,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/MultiKeyMap_removeMultiKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java.UnmodifiableOrderedMap[OrderedMap<K, V>]unmodifiableOrderedMap(OrderedMap<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap_unmodifiableOrderedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java.UnmodifiableOrderedMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java.UnmodifiableOrderedMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java.UnmodifiableOrderedMap[OrderedMapIterator<K, V>]mapIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap_mapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java.UnmodifiableOrderedMap[Collection<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[SingletonMap<K, V>]clone()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_cloneTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[V]get(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[V]put(K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[void]putAll(Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[V]setValue(V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_setValueTest.java"}, {"src/main/java/org/apache/commons/collections4/map/SingletonMap.java.SingletonMap[String]toString()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/SingletonMap_toStringTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[boolean]containsKey(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_containsKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[boolean]containsValue(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_containsValueTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[V]get(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[V]put(K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[void]putAll(Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[V]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java.StaticBucketMap[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/StaticBucketMap_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[boolean]containsKey(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_containsKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[boolean]containsValue(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_containsValueTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[Set<Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[V]get(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[boolean]isEmpty()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_isEmptyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[V]put(K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[void]putAll(Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[V]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java.PassiveExpiringMap[Collection<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[K]firstKey()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_firstKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[K]lastKey()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_lastKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[K]nextKey(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_nextKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[K]previousKey(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_previousKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[V]put(int,K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_putTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[void]putAll(int,Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[V]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java.ListOrderedMap[String]toString()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/ListOrderedMap_toStringTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java.UnmodifiableMap[Map<K, V>]unmodifiableMap(Map<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableMap_unmodifiableMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java.UnmodifiableMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java.UnmodifiableMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java.UnmodifiableMap[MapIterator<K, V>]mapIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableMap_mapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java.UnmodifiableMap[Collection<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/UnmodifiableMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java.TransformedSortedMap[TransformedSortedMap<K, V>]transformedSortedMap(SortedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedSortedMap_transformedSortedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java.TransformedSortedMap[TransformedSortedMap<K, V>]transformingSortedMap(SortedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedSortedMap_transformingSortedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java.TransformedSortedMap[SortedMap<K, V>]headMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedSortedMap_headMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java.TransformedSortedMap[SortedMap<K, V>]subMap(K,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedSortedMap_subMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/TransformedSortedMap.java.TransformedSortedMap[SortedMap<K, V>]tailMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/TransformedSortedMap_tailMapTest.java"}, {"src/main/java/org/apache/commons/collections4/map/LRUMap.java.LRUMap[V]get(Object,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/map/LRUMap_getTest.java"}, {"src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java.SequencesComparator[EditScript<T>]getScript()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/sequence/SequencesComparator_getScriptTest.java"}, {"src/main/java/org/apache/commons/collections4/functors/AllPredicate.java.AllPredicate[Predicate<T>]allPredicate(Collection<? extends Predicate<? super T>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/functors/AllPredicate_allPredicateTest.java"}, {"src/main/java/org/apache/commons/collections4/functors/AllPredicate.java.AllPredicate[boolean]test(T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/functors/AllPredicate_testTest.java"}, {"src/main/java/org/apache/commons/collections4/functors/EqualPredicate.java.EqualPredicate[Predicate<T>]equalPredicate(T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/functors/EqualPredicate_equalPredicateTest.java"}, {"src/main/java/org/apache/commons/collections4/functors/EqualPredicate.java.EqualPredicate[boolean]test(T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/functors/EqualPredicate_testTest.java"}, {"src/main/java/org/apache/commons/collections4/functors/ComparatorPredicate.java.ComparatorPredicate[Predicate<T>]comparatorPredicate(T,Comparator<T>,Criterion)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/functors/ComparatorPredicate_comparatorPredicateTest.java"}, {"src/main/java/org/apache/commons/collections4/functors/ComparatorPredicate.java.ComparatorPredicate[boolean]test(T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/functors/ComparatorPredicate_testTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java.TransformingComparator[int]compare(I,I)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/TransformingComparator_compareTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java.TransformingComparator[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/TransformingComparator_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/TransformingComparator.java.TransformingComparator[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/TransformingComparator_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java.BooleanComparator[int]compare(Boolean,Boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/BooleanComparator_compareTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java.BooleanComparator[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/BooleanComparator_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java.BooleanComparator[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/BooleanComparator_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java.FixedOrderComparator[boolean]add(T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/FixedOrderComparator_addTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java.FixedOrderComparator[boolean]addAsEqual(T,T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/FixedOrderComparator_addAsEqualTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java.FixedOrderComparator[int]compare(T,T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/FixedOrderComparator_compareTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java.FixedOrderComparator[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/FixedOrderComparator_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java.ComparatorChain[void]addComparator(Comparator<E>,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/ComparatorChain_addComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java.ComparatorChain[int]compare(E,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/ComparatorChain_compareTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java.ComparatorChain[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/ComparatorChain_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java.ComparatorChain[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/ComparatorChain_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java.ComparatorChain[void]setComparator(int,Comparator<E>,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/ComparatorChain_setComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/comparators/ReverseComparator.java.ReverseComparator[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/comparators/ReverseComparator_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/trie/UnmodifiableTrie.java.UnmodifiableTrie[Trie<K, V>]unmodifiableTrie(Trie<K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrie_unmodifiableTrieTest.java"}, {"src/main/java/org/apache/commons/collections4/trie/UnmodifiableTrie.java.UnmodifiableTrie[OrderedMapIterator<K, V>]mapIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/trie/UnmodifiableTrie_mapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/splitmap/TransformedSplitMap.java.TransformedSplitMap[TransformedSplitMap<J, K, U, V>]transformingMap(Map<K, V>,Transformer<? super J, ? extends K>,Transformer<? super U, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/splitmap/TransformedSplitMap_transformingMapTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/LoopingIterator.java.LoopingIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/LoopingIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/FilterListIterator.java.FilterListIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/FilterListIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/FilterListIterator.java.FilterListIterator[E]previous()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/FilterListIterator_previousTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ObjectArrayIterator.java.ObjectArrayIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ObjectArrayIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonIterator.java.SingletonIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonIterator.java.SingletonIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PermutationIterator.java.PermutationIterator[List<E>]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PermutationIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/UnmodifiableListIterator.java.UnmodifiableListIterator[ListIterator<E>]unmodifiableListIterator(ListIterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/UnmodifiableListIterator_unmodifiableListIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java.BoundedIterator[boolean]hasNext()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/BoundedIterator_hasNextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java.BoundedIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/BoundedIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java.BoundedIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/BoundedIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/UnmodifiableIterator.java.UnmodifiableIterator[Iterator<E>]unmodifiableIterator(Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/UnmodifiableIterator_unmodifiableIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PushbackIterator.java.PushbackIterator[PushbackIterator<E>]pushbackIterator(Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PushbackIterator_pushbackIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PeekingIterator.java.PeekingIterator[PeekingIterator<E>]peekingIterator(Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PeekingIterator_peekingIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PeekingIterator.java.PeekingIterator[E]element()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PeekingIterator_elementTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PeekingIterator.java.PeekingIterator[boolean]hasNext()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PeekingIterator_hasNextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PeekingIterator.java.PeekingIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PeekingIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/PeekingIterator.java.PeekingIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/PeekingIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/NodeListIterator.java.NodeListIterator[Node]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/NodeListIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SkippingIterator.java.SkippingIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SkippingIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SkippingIterator.java.SkippingIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SkippingIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ZippingIterator.java.ZippingIterator[boolean]hasNext()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ZippingIterator_hasNextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ZippingIterator.java.ZippingIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ZippingIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ZippingIterator.java.ZippingIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ZippingIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/FilterIterator.java.FilterIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/FilterIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/FilterIterator.java.FilterIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/FilterIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/FilterIterator.java.FilterIterator[void]setIterator(Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/FilterIterator_setIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/FilterIterator.java.FilterIterator[void]setPredicate(Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/FilterIterator_setPredicateTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/UnmodifiableMapIterator.java.UnmodifiableMapIterator[MapIterator<K, V>]unmodifiableMapIterator(MapIterator<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/UnmodifiableMapIterator_unmodifiableMapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/IteratorIterable.java.IteratorIterable[Iterator<E>]iterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/IteratorIterable_iteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java.ObjectGraphIterator[boolean]hasNext()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIterator_hasNextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java.ObjectGraphIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java.ObjectGraphIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/ObjectGraphIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java.CollatingIterator[void]addIterator(Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CollatingIterator_addIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java.CollatingIterator[int]getIteratorIndex()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CollatingIterator_getIteratorIndexTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java.CollatingIterator[boolean]hasNext()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CollatingIterator_hasNextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java.CollatingIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CollatingIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java.CollatingIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CollatingIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java.CollatingIterator[void]setIterator(int,Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CollatingIterator_setIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java.SingletonListIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonListIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java.SingletonListIterator[E]previous()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonListIterator_previousTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java.SingletonListIterator[void]remove()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonListIterator_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java.SingletonListIterator[void]reset()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonListIterator_resetTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java.SingletonListIterator[void]set(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/SingletonListIterator_setTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/UnmodifiableOrderedMapIterator.java.UnmodifiableOrderedMapIterator[OrderedMapIterator<K, V>]unmodifiableOrderedMapIterator(OrderedMapIterator<K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/UnmodifiableOrderedMapIterator_unmodifiableOrderedMapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/LoopingListIterator.java.LoopingListIterator[E]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/LoopingListIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/LoopingListIterator.java.LoopingListIterator[int]nextIndex()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/LoopingListIterator_nextIndexTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/LoopingListIterator.java.LoopingListIterator[E]previous()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/LoopingListIterator_previousTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/LoopingListIterator.java.LoopingListIterator[int]previousIndex()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/LoopingListIterator_previousIndexTest.java"}, {"src/main/java/org/apache/commons/collections4/iterators/CartesianProductIterator.java.CartesianProductIterator[List<E>]next()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/iterators/CartesianProductIterator_nextTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[Object]compute(Object,BiFunction<? super Object, ? super Object, ? extends Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_computeTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[Object]computeIfAbsent(Object,Function<? super Object, ? extends Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_computeIfAbsentTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[void]forEach(BiConsumer<? super Object, ? super Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_forEachTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[Object]merge(Object,Object,BiFunction<? super Object, ? super Object, ? extends Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_mergeTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[Object]put(Object,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_putTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[void]putAll(Map<? extends Object, ? extends Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[Object]putIfAbsent(Object,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_putIfAbsentTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[Object]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/OrderedProperties.java.OrderedProperties[String]toString()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/OrderedProperties_toStringTest.java"}, {"src/main/java/org/apache/commons/collections4/properties/SortedProperties.java.SortedProperties[Set<Map.Entry<Object, Object>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/properties/SortedProperties_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java.DualTreeBidiMap[SortedMap<K, V>]headMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap_headMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java.DualTreeBidiMap[K]nextKey(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap_nextKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java.DualTreeBidiMap[K]previousKey(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap_previousKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java.DualTreeBidiMap[SortedMap<K, V>]subMap(K,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap_subMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java.DualTreeBidiMap[SortedMap<K, V>]tailMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap_tailMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[SortedBidiMap<K, V>]unmodifiableSortedBidiMap(SortedBidiMap<K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_unmodifiableSortedBidiMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[SortedMap<K, V>]headMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_headMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[SortedBidiMap<V, K>]inverseBidiMap()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_inverseBidiMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[OrderedMapIterator<K, V>]mapIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_mapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[SortedMap<K, V>]subMap(K,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_subMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[SortedMap<K, V>]tailMap(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_tailMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap[Set<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap[OrderedBidiMap<K, V>]unmodifiableOrderedBidiMap(OrderedBidiMap<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap_unmodifiableOrderedBidiMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap[OrderedBidiMap<V, K>]inverseOrderedBidiMap()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap_inverseOrderedBidiMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap[OrderedMapIterator<K, V>]mapIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap_mapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap[Set<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap[BidiMap<K, V>]unmodifiableBidiMap(BidiMap<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap_unmodifiableBidiMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap[Set<Map.Entry<K, V>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap[BidiMap<V, K>]inverseBidiMap()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap_inverseBidiMapTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap[Set<K>]keySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap_keySetTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap[MapIterator<K, V>]mapIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap_mapIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap[Set<V>]values()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap_valuesTest.java"}, {"src/main/java/org/apache/commons/collections4/set/PredicatedNavigableSet.java.PredicatedNavigableSet[NavigableSet<E>]headSet(E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/PredicatedNavigableSet_headSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/PredicatedNavigableSet.java.PredicatedNavigableSet[NavigableSet<E>]subSet(E,boolean,E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/PredicatedNavigableSet_subSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/PredicatedNavigableSet.java.PredicatedNavigableSet[NavigableSet<E>]tailSet(E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/PredicatedNavigableSet_tailSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedSet.java.TransformedSet[Set<E>]transformedSet(Set<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedSet_transformedSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet.java.UnmodifiableNavigableSet[NavigableSet<E>]unmodifiableNavigableSet(NavigableSet<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet_unmodifiableNavigableSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet.java.UnmodifiableNavigableSet[SortedSet<E>]headSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet_headSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet.java.UnmodifiableNavigableSet[NavigableSet<E>]subSet(E,boolean,E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet_subSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet.java.UnmodifiableNavigableSet[SortedSet<E>]tailSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet_tailSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedSortedSet.java.TransformedSortedSet[TransformedSortedSet<E>]transformedSortedSet(SortedSet<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedSortedSet_transformedSortedSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedSortedSet.java.TransformedSortedSet[SortedSet<E>]headSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedSortedSet_headSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedSortedSet.java.TransformedSortedSet[SortedSet<E>]subSet(E,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedSortedSet_subSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedSortedSet.java.TransformedSortedSet[SortedSet<E>]tailSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedSortedSet_tailSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_addTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[void]addComposited(Set<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_addCompositedTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]contains(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_containsTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]containsAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_containsAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]isEmpty()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_isEmptyTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[Iterator<E>]iterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_iteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]remove(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]removeIf(Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_removeIfTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/CompositeSet.java.CompositeSet[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/CompositeSet_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedNavigableSet.java.TransformedNavigableSet[TransformedNavigableSet<E>]transformedNavigableSet(NavigableSet<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedNavigableSet_transformedNavigableSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedNavigableSet.java.TransformedNavigableSet[NavigableSet<E>]headSet(E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedNavigableSet_headSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedNavigableSet.java.TransformedNavigableSet[NavigableSet<E>]subSet(E,boolean,E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedNavigableSet_subSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/TransformedNavigableSet.java.TransformedNavigableSet[NavigableSet<E>]tailSet(E,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/TransformedNavigableSet_tailSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[ListOrderedSet<E>]listOrderedSet(List<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_listOrderedSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_addTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[E]remove(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[boolean]removeIf(Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_removeIfTest.java"}, {"src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java.ListOrderedSet[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/ListOrderedSet_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/set/PredicatedSortedSet.java.PredicatedSortedSet[SortedSet<E>]headSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/PredicatedSortedSet_headSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/PredicatedSortedSet.java.PredicatedSortedSet[SortedSet<E>]subSet(E,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/PredicatedSortedSet_subSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/PredicatedSortedSet.java.PredicatedSortedSet[SortedSet<E>]tailSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/PredicatedSortedSet_tailSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java.UnmodifiableSortedSet[SortedSet<E>]unmodifiableSortedSet(SortedSet<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableSortedSet_unmodifiableSortedSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java.UnmodifiableSortedSet[SortedSet<E>]headSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableSortedSet_headSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java.UnmodifiableSortedSet[SortedSet<E>]subSet(E,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableSortedSet_subSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java.UnmodifiableSortedSet[SortedSet<E>]tailSet(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableSortedSet_tailSetTest.java"}, {"src/main/java/org/apache/commons/collections4/set/UnmodifiableSet.java.UnmodifiableSet[Set<E>]unmodifiableSet(Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/set/UnmodifiableSet_unmodifiableSetTest.java"}, {"src/main/java/org/apache/commons/collections4/list/FixedSizeList.java.FixedSizeList[List<E>]subList(int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/FixedSizeList_subListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/LazyList.java.LazyList[E]get(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/LazyList_getTest.java"}, {"src/main/java/org/apache/commons/collections4/list/LazyList.java.LazyList[List<E>]subList(int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/LazyList_subListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[void]add(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_addTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[boolean]addAll(Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[E]get(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_getTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[int]indexOf(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_indexOfTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[Iterator<E>]iterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_iteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[ListIterator<E>]listIterator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_listIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[E]remove(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TreeList.java.TreeList[E]set(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TreeList_setTest.java"}, {"src/main/java/org/apache/commons/collections4/list/GrowthList.java.GrowthList[void]add(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/GrowthList_addTest.java"}, {"src/main/java/org/apache/commons/collections4/list/GrowthList.java.GrowthList[boolean]addAll(int,Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/GrowthList_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/list/GrowthList.java.GrowthList[E]set(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/GrowthList_setTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TransformedList.java.TransformedList[TransformedList<E>]transformedList(List<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TransformedList_transformedListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TransformedList.java.TransformedList[void]add(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TransformedList_addTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TransformedList.java.TransformedList[boolean]addAll(int,Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TransformedList_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TransformedList.java.TransformedList[E]set(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TransformedList_setTest.java"}, {"src/main/java/org/apache/commons/collections4/list/TransformedList.java.TransformedList[List<E>]subList(int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/TransformedList_subListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[SetUniqueList<E>]setUniqueList(List<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_setUniqueListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[boolean]add(E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_addTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[boolean]addAll(int,Collection<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[E]remove(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_removeTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[boolean]removeAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[boolean]removeIf(Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_removeIfTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[boolean]retainAll(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[E]set(int,E)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_setTest.java"}, {"src/main/java/org/apache/commons/collections4/list/SetUniqueList.java.SetUniqueList[List<E>]subList(int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/SetUniqueList_subListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/UnmodifiableList.java.UnmodifiableList[List<E>]unmodifiableList(List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/UnmodifiableList_unmodifiableListTest.java"}, {"src/main/java/org/apache/commons/collections4/list/UnmodifiableList.java.UnmodifiableList[List<E>]subList(int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/list/UnmodifiableList_subListTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter.java.LayeredBloomFilter[boolean]contains(BloomFilter)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter_containsTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter.java.LayeredBloomFilter[int]estimateUnion(BloomFilter)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter_estimateUnionTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter.java.LayeredBloomFilter[BloomFilter]flatten()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter_flattenTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/BitMaps.java.BitMaps[long]getLongBit(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/BitMaps_getLongBitTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/BitMaps.java.BitMaps[int]getLongIndex(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/BitMaps_getLongIndexTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/BitMaps.java.BitMaps[int]mod(long,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/BitMaps_modTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java.LayerManager[LayerManager<T>]copy()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayerManager_copyTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java.LayerManager[T]get(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayerManager_getTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java.LayerManager[T]getTarget()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayerManager_getTargetTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java.LayerManager[boolean]processBloomFilters(Predicate<BloomFilter>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/LayerManager_processBloomFiltersTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/EnhancedDoubleHasher.java.EnhancedDoubleHasher[IndexExtractor]indices(Shape)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/EnhancedDoubleHasher_indicesTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[Shape]fromNM(int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_fromNMTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[Shape]fromNMK(int,int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_fromNMKTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[Shape]fromNP(int,double)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_fromNPTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[Shape]fromPMK(double,int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_fromPMKTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[double]estimateN(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_estimateNTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[double]getProbability(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_getProbabilityTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/Shape.java.Shape[boolean]isSparse(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/Shape_isSparseTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SetOperations.java.SetOperations[int]cardinality(BitMapExtractor)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SetOperations_cardinalityTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SetOperations.java.SetOperations[double]cosineSimilarity(BitMapExtractor,BitMapExtractor)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SetOperations_cosineSimilarityTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SetOperations.java.SetOperations[double]jaccardSimilarity(BitMapExtractor,BitMapExtractor)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SetOperations_jaccardSimilarityTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter[int]cardinality()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter_cardinalityTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter[void]clear()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter_clearTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter[boolean]merge(BitMapExtractor)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter_mergeTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter[boolean]processBitMapPairs(BitMapExtractor,LongBiPredicate)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter_processBitMapPairsTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter[boolean]processBitMaps(LongPredicate)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter_processBitMapsTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter[boolean]processIndices(IntPredicate)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter_processIndicesTest.java"}, {"src/main/java/org/apache/commons/collections4/bloomfilter/IndexFilter.java.IndexFilter[boolean]test(int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/bloomfilter/IndexFilter_testTest.java"}, {"src/main/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMap.java.TransformedMultiValuedMap[TransformedMultiValuedMap<K, V>]transformedMap(MultiValuedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMap_transformedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMap.java.TransformedMultiValuedMap[TransformedMultiValuedMap<K, V>]transformingMap(MultiValuedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMap_transformingMapTest.java"}, {"src/main/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMap.java.TransformedMultiValuedMap[boolean]putAll(K,Iterable<? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMap_putAllTest.java"}, {"src/main/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMap.java.UnmodifiableMultiValuedMap[UnmodifiableMultiValuedMap<K, V>]unmodifiableMultiValuedMap(MultiValuedMap<? extends K, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMap_unmodifiableMultiValuedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMap.java.ArrayListValuedHashMap[void]trimToSize()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMap_trimToSizeTest.java"}, {"src/main/java/org/apache/commons/collections4/multiset/PredicatedMultiSet.java.PredicatedMultiSet[int]add(E,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multiset/PredicatedMultiSet_addTest.java"}, {"src/main/java/org/apache/commons/collections4/multiset/PredicatedMultiSet.java.PredicatedMultiSet[int]setCount(E,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multiset/PredicatedMultiSet_setCountTest.java"}, {"src/main/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet.java.UnmodifiableMultiSet[MultiSet<E>]unmodifiableMultiSet(MultiSet<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet_unmodifiableMultiSetTest.java"}, {"src/main/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet.java.UnmodifiableMultiSet[Set<MultiSet.Entry<E>>]entrySet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet_entrySetTest.java"}, {"src/main/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet.java.UnmodifiableMultiSet[Set<E>]uniqueSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet_uniqueSetTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/MultiKey.java.MultiKey[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/MultiKey_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java.TiedMapEntry[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/TiedMapEntry_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java.TiedMapEntry[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/TiedMapEntry_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java.TiedMapEntry[V]setValue(V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/TiedMapEntry_setValueTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java.DefaultKeyValue[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue_equalsTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java.DefaultKeyValue[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java.DefaultKeyValue[K]setKey(K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue_setKeyTest.java"}, {"src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java.DefaultKeyValue[V]setValue(V)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-0/src/test/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue_setValueTest.java"}]}