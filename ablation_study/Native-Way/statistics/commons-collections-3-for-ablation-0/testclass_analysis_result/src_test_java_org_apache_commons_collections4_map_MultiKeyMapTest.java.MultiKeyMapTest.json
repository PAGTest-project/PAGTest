{"file_path": "src/test/java/org/apache/commons/collections4/map/MultiKeyMapTest.java", "testclass_name": "MultiKeyMapTest", "dependencies": ["package org.apache.commons.collections4.map;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import static org.junit.jupiter.api.Assertions.assertSame;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.junit.jupiter.api.Assertions.fail;", "import java.util.Map;", "import org.apache.commons.collections4.MapIterator;", "import org.apache.commons.collections4.keyvalue.MultiKey;", "import org.junit.jupiter.api.Test;"], "name": "MultiKeyMapTest", "description": "Unit tests for the MultiKeyMap class, focusing on various operations like cloning, LRU behavior, key checks, value retrieval, and removal.", "class_members": {"variables": [{"name": "I1", "type": "static final Integer"}, {"name": "I2", "type": "static final Integer"}, {"name": "I3", "type": "static final Integer"}, {"name": "I4", "type": "static final Integer"}, {"name": "I5", "type": "static final Integer"}, {"name": "I6", "type": "static final Integer"}, {"name": "I7", "type": "static final Integer"}, {"name": "I8", "type": "static final Integer"}], "methods": [{"name": "getMultiKeyKeys", "signature": "@SuppressWarnings(\"unchecked\") private MultiKey<K>[] getMultiKeyKeys()"}, {"name": "getNewSampleValues", "signature": "@Override @SuppressWarnings(\"unchecked\") public V[] getNewSampleValues()"}, {"name": "getOtherKeys", "signature": "@Override @SuppressWarnings(\"unchecked\") public MultiKey<K>[] getOtherKeys()"}, {"name": "getSampleKeys", "signature": "@Override public MultiKey<K>[] getSampleKeys()"}, {"name": "getSampleValues", "signature": "@Override @SuppressWarnings(\"unchecked\") public V[] getSampleValues()"}, {"name": "isAllowNullKey", "signature": "@Override public boolean isAllowNullKey()"}, {"name": "makeObject", "signature": "@Override public MultiKeyMap<K, V> makeObject()"}], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testClone", "primary_tested": ["MultiKeyMap.clone()"], "external_dependencies": {"modules": ["MultiKeyMap", "MultiKey"], "class_members": [{"name": "I1", "type": "variable"}, {"name": "I2", "type": "variable"}]}, "category": "unit", "description": "Tests the cloning functionality of the MultiKeyMap."}, {"name": "testLRUMultiKeyMap", "primary_tested": ["MultiKeyMap.multiKeyMap(LRUMap)", "MultiKeyMap.put(K,K,V)", "MultiKeyMap.containsKey(K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "LRUMap", "MultiKey"], "class_members": [{"name": "I1", "type": "variable"}, {"name": "I2", "type": "variable"}, {"name": "I3", "type": "variable"}, {"name": "I4", "type": "variable"}, {"name": "I5", "type": "variable"}]}, "category": "unit", "description": "Tests the LRU behavior of the MultiKeyMap."}, {"name": "testMultiKeyContainsKey", "primary_tested": ["MultiKeyMap.containsKey(K,K)", "MultiKeyMap.containsKey(K,K,K)", "MultiKeyMap.containsKey(K,K,K,K)", "MultiKeyMap.containsKey(K,K,K,K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MultiKey"], "class_members": [{"name": "getMultiKeyKeys", "type": "method"}]}, "category": "unit", "description": "Tests the key containment checks in the MultiKeyMap."}, {"name": "testMultiKeyGet", "primary_tested": ["MultiKeyMap.get(K,K)", "MultiKeyMap.get(K,K,K)", "MultiKeyMap.get(K,K,K,K)", "MultiKeyMap.get(K,K,K,K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MultiKey"], "class_members": [{"name": "getMultiKeyKeys", "type": "method"}, {"name": "getSampleValues", "type": "method"}]}, "category": "unit", "description": "Tests the value retrieval functionality of the MultiKeyMap."}, {"name": "testMultiKeyPut", "primary_tested": ["MultiKeyMap.put(K,K,V)", "MultiKeyMap.put(K,K,K,V)", "MultiKeyMap.put(K,K,K,K,V)", "MultiKeyMap.put(K,K,K,K,K,V)"], "external_dependencies": {"modules": ["MultiKeyMap", "MultiKey"], "class_members": [{"name": "getMultiKeyKeys", "type": "method"}, {"name": "getSampleValues", "type": "method"}]}, "category": "unit", "description": "Tests the put functionality of the MultiKeyMap."}, {"name": "testMultiKeyPutWithNullKey", "primary_tested": ["MultiKeyMap.put(K,K,V)"], "external_dependencies": {"modules": ["MultiKeyMap"]}, "category": "unit", "description": "Tests the put functionality of the MultiKeyMap with null keys."}, {"name": "testMultiKeyRemove", "primary_tested": ["MultiKeyMap.removeMultiKey(K,K)", "MultiKeyMap.removeMultiKey(K,K,K)", "MultiKeyMap.removeMultiKey(K,K,K,K)", "MultiKeyMap.removeMultiKey(K,K,K,K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MultiKey"], "class_members": [{"name": "getMultiKeyKeys", "type": "method"}, {"name": "getSampleValues", "type": "method"}]}, "category": "unit", "description": "Tests the remove functionality of the MultiKeyMap."}, {"name": "testMultiKeyRemoveAll1", "primary_tested": ["MultiKeyMap.removeAll(K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MapIterator"], "class_members": [{"name": "I1", "type": "variable"}]}, "category": "unit", "description": "Tests the removeAll functionality of the MultiKeyMap with a single key."}, {"name": "testMultiKeyRemoveAll2", "primary_tested": ["MultiKeyMap.removeAll(K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MapIterator"], "class_members": [{"name": "I2", "type": "variable"}, {"name": "I3", "type": "variable"}]}, "category": "unit", "description": "Tests the removeAll functionality of the MultiKeyMap with two keys."}, {"name": "testMultiKeyRemoveAll3", "primary_tested": ["MultiKeyMap.removeAll(K,K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MapIterator"], "class_members": [{"name": "I1", "type": "variable"}, {"name": "I2", "type": "variable"}]}, "category": "unit", "description": "Tests the removeAll functionality of the MultiKeyMap with three keys."}, {"name": "testMultiKeyRemoveAll4", "primary_tested": ["MultiKeyMap.removeAll(K,K,K,K)"], "external_dependencies": {"modules": ["MultiKeyMap", "MapIterator"], "class_members": [{"name": "I1", "type": "variable"}, {"name": "I2", "type": "variable"}, {"name": "I3", "type": "variable"}]}, "category": "unit", "description": "Tests the removeAll functionality of the MultiKeyMap with four keys."}, {"name": "testNullHandling", "primary_tested": ["MultiKeyMap.get(K)", "MultiKeyMap.containsKey(K)", "MultiKeyMap.containsValue(V)", "MultiKeyMap.remove(K)", "MultiKeyMap.entrySet().contains(K)", "MultiKeyMap.put(K,V)"], "external_dependencies": {"modules": ["MultiKeyMap", "MultiKey"]}, "category": "unit", "description": "Tests the handling of null values and keys in the MultiKeyMap."}]}