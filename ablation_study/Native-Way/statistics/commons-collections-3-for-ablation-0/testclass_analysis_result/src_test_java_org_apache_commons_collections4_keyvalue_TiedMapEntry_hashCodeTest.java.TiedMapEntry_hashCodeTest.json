{"file_path": "src/test/java/org/apache/commons/collections4/keyvalue/TiedMapEntry_hashCodeTest.java", "testclass_name": "TiedMapEntry_hashCodeTest", "dependencies": ["package org.apache.commons.collections4.keyvalue;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "TiedMapEntry_hashCodeTest", "description": "Unit tests for the hashCode method of TiedMapEntry class.", "class_members": {"variables": [{"name": "map", "type": "Map<String, String>"}, {"name": "entry", "type": "TiedMapEntry<String, String>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testHashCodeWithNonNullKeyAndValue", "primary_tested": ["TiedMapEntry.hashCode()"], "external_dependencies": {"modules": ["TiedMapEntry", "Map"], "class_members": [{"name": "entry", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hashCode method with non-null key and value."}, {"name": "testHashCodeWithNullKey", "primary_tested": ["TiedMapEntry.hashCode()"], "external_dependencies": {"modules": ["TiedMapEntry", "Map"], "class_members": [{"name": "entry", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method with a null key."}, {"name": "testHashCodeWithNullValue", "primary_tested": ["TiedMapEntry.hashCode()"], "external_dependencies": {"modules": ["TiedMapEntry", "Map"], "class_members": [{"name": "entry", "type": "variable"}, {"name": "map", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the hashCode method with a null value."}, {"name": "testHashCodeWithNullKeyAndValue", "primary_tested": ["TiedMapEntry.hashCode()"], "external_dependencies": {"modules": ["TiedMapEntry", "Map"], "class_members": [{"name": "entry", "type": "variable"}, {"name": "map", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method with both null key and value."}]}