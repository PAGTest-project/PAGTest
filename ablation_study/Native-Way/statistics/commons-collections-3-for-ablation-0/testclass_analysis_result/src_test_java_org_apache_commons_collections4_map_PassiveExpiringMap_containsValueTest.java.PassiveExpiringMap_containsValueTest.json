{"file_path": "src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_containsValueTest.java", "testclass_name": "PassiveExpiringMap_containsValueTest", "dependencies": ["package org.apache.commons.collections4.map;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import java.util.HashMap;", "import java.util.Map;", "import java.util.concurrent.TimeUnit;"], "name": "PassiveExpiringMap_containsValueTest", "description": "Unit tests for the containsValue method of PassiveExpiringMap.", "class_members": {"variables": [{"name": "expiringMap", "type": "PassiveExpiringMap<Integer, String>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testContainsValue_ValuePresent", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns true when the value is present in the map."}, {"name": "testContainsValue_ValueNotPresent", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns false when the value is not present in the map."}, {"name": "testContainsValue_ValueExpired", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns false when the value has expired in the map."}, {"name": "testContainsValue_EmptyMap", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns false when the map is empty."}, {"name": "testContainsValue_NullValue", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns true when the value is null."}, {"name": "testContainsValue_MultipleValues", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns true when multiple values are present in the map."}, {"name": "testContainsValue_MultipleValuesWithExpired", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests that containsValue returns false when multiple values are present but some have expired."}, {"name": "testContainsValue_NeverExpire", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that containsValue returns true when the map is configured to never expire entries."}, {"name": "testContainsValue_AlwaysExpire", "primary_tested": ["PassiveExpiringMap.containsValue(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap"], "class_members": [{"name": "expiringMap", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests that containsValue returns false when the map is configured to always expire entries."}]}