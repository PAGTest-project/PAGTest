[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.hamcrest.MatcherAssert.assertThat;\nimport static org.hamcrest.Matchers.is;\n\npublic class TailList_clearTest {\n    private List<String> backingList;\n    private TailList<String> tailList;\n\n    @BeforeEach\n    public void setUp() {\n        backingList = new ArrayList<>();\n        backingList.add(\"a\");\n        backingList.add(\"b\");\n        backingList.add(\"c\");\n        tailList = new TailList<>(backingList, 1);\n    }\n\n    @Test\n    public void testClear() {\n        assertThat(backingList.size(), is(3));\n        assertThat(tailList.size(), is(2));\n\n        tailList.clear();\n\n        assertThat(backingList.size(), is(1));\n        assertThat(tailList.size(), is(0));\n    }\n\n    @Test\n    public void testClearEmptyList() {\n        TailList<String> emptyTailList = new TailList<>(new ArrayList<>(), 0);\n        assertThat(emptyTailList.size(), is(0));\n\n        emptyTailList.clear();\n\n        assertThat(emptyTailList.size(), is(0));\n    }\n\n    @Test\n    public void testClearWithStartGreaterThanSize() {\n        TailList<String> tailListWithStartGreater = new TailList<>(backingList, 5);\n        assertThat(tailListWithStartGreater.size(), is(0));\n\n        tailListWithStartGreater.clear();\n\n        assertThat(backingList.size(), is(3));\n        assertThat(tailListWithStartGreater.size(), is(0));\n    }\n}\n"}]