[{"strategy": "retry", "code": "\npackage net.hydromatic.morel;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.Arrays;\nimport java.util.List;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class Shell_createTest {\n\n    private InputStream inputStream;\n    private OutputStream outputStream;\n\n    @BeforeEach\n    public void setUp() {\n        inputStream = new ByteArrayInputStream(\"\".getBytes());\n        outputStream = new ByteArrayOutputStream();\n    }\n\n    @Test\n    public void testCreateShellWithDefaultConfig() throws IOException {\n        List<String> args = Arrays.asList(\"--banner=false\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithDumbTerminal() throws IOException {\n        List<String> args = Arrays.asList(\"--terminal=dumb\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithEcho() throws IOException {\n        List<String> args = Arrays.asList(\"--echo\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithHelp() throws IOException {\n        List<String> args = Arrays.asList(\"--help\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithSystemFalse() throws IOException {\n        List<String> args = Arrays.asList(\"--system=false\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithForeign() throws IOException {\n        List<String> args = Arrays.asList(\"--foreign=com.example.ForeignClass\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithDirectory() throws IOException {\n        List<String> args = Arrays.asList(\"--directory=/path/to/directory\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithMaxUseDepth() throws IOException {\n        List<String> args = Arrays.asList(\"--maxUseDepth=5\");\n        Shell shell = Shell.create(args, inputStream, outputStream);\n        assertNotNull(shell);\n    }\n\n    @Test\n    public void testCreateShellWithSystemStreams() throws IOException {\n        List<String> args = Arrays.asList(\"--banner=false\");\n        Shell shell = Shell.create(args, System.in, System.out);\n        assertNotNull(shell);\n    }\n}\n"}]