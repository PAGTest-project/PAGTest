[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.util;\n\nimport com.google.common.collect.ImmutableList;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Static_shorterThanTest {\n\n    @Test\n    public void testShorterThan_Collection() {\n        Collection<Integer> collection = Arrays.asList(1, 2, 3);\n        assertTrue(Static.shorterThan(collection, 4));\n        assertFalse(Static.shorterThan(collection, 3));\n    }\n\n    @Test\n    public void testShorterThan_Iterable() {\n        Iterable<Integer> iterable = Arrays.asList(1, 2, 3);\n        assertTrue(Static.shorterThan(iterable, 4));\n        assertFalse(Static.shorterThan(iterable, 3));\n    }\n\n    @Test\n    public void testShorterThan_NonCollectionIterable() {\n        Iterable<Integer> iterable = new Iterable<Integer>() {\n            @Override\n            public Iterator<Integer> iterator() {\n                return Arrays.asList(1, 2, 3).iterator();\n            }\n        };\n        assertTrue(Static.shorterThan(iterable, 4));\n        assertFalse(Static.shorterThan(iterable, 3));\n    }\n\n    @Test\n    public void testShorterThan_NonPositiveN() {\n        Iterable<Integer> iterable = Arrays.asList(1, 2, 3);\n        assertFalse(Static.shorterThan(iterable, 0));\n        assertFalse(Static.shorterThan(iterable, -1));\n    }\n}\n"}]