{"original": {}, "apt": {"net.hydromatic.morel.ast.Pos[Pair<@NonNull String, @NonNull Pos>]split(String,char,String)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.6666666666666666}, {"Line Coverage": 1.0}], "net.hydromatic.morel.ast.Pos[boolean]equals(Object)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.75}, {"Line Coverage": 1.0}], "net.hydromatic.morel.ast.Pos[Pos]sum(Iterable<Pos>)": [{"Instruction Coverage": 0.8333333333333334}, {"Branch Coverage": 0.5}, {"Line Coverage": 1.0}], "net.hydromatic.morel.ast.Pos[Pos]plus(Pos)": [{"Instruction Coverage": 0.6896551724137931}, {"Branch Coverage": 0.25}, {"Line Coverage": 0.8181818181818182}], "net.hydromatic.morel.compile.Extents[Map<String, ImmutableRangeSet<C>>]intersect(List<Map<String, ImmutableRangeSet<C>>>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.compile.Extents[Map<String, ImmutableRangeSet<C>>]union(List<Map<String, ImmutableRangeSet<C>>>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Ord[void]forEachIndexed(Iterable<E>,ObjIntConsumer<E>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Ord[void]forEach(List<E>,ObjIntConsumer<E>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[boolean]equals(Object)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.875}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[int]compareTo(Pair<T1, T2>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[Map<K, V>]toMap(Iterable<Pair<K, V>>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[List<Pair<K, V>>]zip(List<K>,List<V>,boolean)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[boolean]allMatch(Iterable<K>,Iterable<V>,BiPredicate<K, V>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[boolean]anyMatch(Iterable<K>,Iterable<V>,BiPredicate<K, V>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.8333333333333334}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[void]forEach(Iterable<K>,Iterable<V>,BiConsumer<K, V>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.75}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[void]forEachIndexed(Iterable<? extends K>,Iterable<? extends V>,PairWithOrdinalConsumer<K, V>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[List<Pair<K, V>>]zipMutable(List<K>,List<V>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[List<K>]left(List<? extends Map.Entry<K, V>>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[List<V>]right(List<? extends Map.Entry<K, V>>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[Iterable<Pair<T, T>>]adjacents(Iterable<T>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Pair[Iterable<Pair<T, T>>]firstAnd(Iterable<T>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[Collector<T, ImmutableList.Builder<T>, ImmutableList<T>>]toImmutableList()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[boolean]shorterThan(Iterable<E>,int)": [{"Instruction Coverage": 0.9444444444444444}, {"Branch Coverage": 0.9}, {"Line Coverage": 0.9}], "net.hydromatic.morel.util.Static[List<E>]minus(List<E>,E)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[Map<K, V>]plus(Map<K, V>,K,V)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[ImmutableList<T>]transformEager(Iterable<? extends E>,Function<E, T>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[int]find(List<? extends E>,Predicate<E>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.9}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[List<E>]intersect(List<E>,Iterable<? extends E>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Static[String]str(StringBuilder)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.hydromatic.morel.util.Sat[Variable]variable(String)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}]}}