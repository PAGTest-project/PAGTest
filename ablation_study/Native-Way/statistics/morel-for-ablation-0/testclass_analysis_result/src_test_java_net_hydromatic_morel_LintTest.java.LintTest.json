{"file_path": "src/test/java/net/hydromatic/morel/LintTest.java", "testclass_name": "LintTest", "dependencies": ["package net.hydromatic.morel;", "import org.apache.calcite.util.Puffin;", "import org.apache.calcite.util.Source;", "import org.apache.calcite.util.Sources;", "import org.junit.jupiter.api.Test;", "import java.io.File;", "import java.io.PrintWriter;", "import java.io.StringWriter;", "import java.util.ArrayList;", "import java.util.List;", "import static org.hamcrest.MatcherAssert.assertThat;", "import static org.hamcrest.Matchers.empty;", "import static org.junit.jupiter.api.Assumptions.assumeTrue;"], "name": "LintTest", "description": "Tests that source code has no flaws and checks for various linting rules.", "class_members": {"variables": [], "methods": [{"name": "makeProgram", "signature": "Puffin.Program<GlobalState> makeProgram()"}], "nested_classes": [{"name": "Message", "description": "Warning that code is not as it should be."}, {"name": "GlobalState", "description": "Internal state of the lint rules."}, {"name": "FileState", "description": "Internal state of the lint rules, per file."}]}, "fixtures": [], "test_cases": [{"name": "testLint", "primary_tested": ["Puffin.Program.execute(Stream<Source>,PrintWriter)"], "associated_methods": ["Puffin.Program.execute(Stream<Source>,PrintWriter)", "TestUnsafe.getTextFiles()"], "external_dependencies": {"modules": ["Puffin", "GlobalState", "File", "Sources", "PrintWriter", "StringWriter", "TestUnsafe", "MatcherAssert", "Matchers"], "class_members": [{"name": "makeProgram", "type": "method"}], "project_specific_resources": ["TestUnsafe.haveGit()"]}, "category": "unit", "fixtures_used": [], "description": "Tests that source code has no flaws by executing a linting program on a list of Java files and asserting that no linting messages are produced."}]}