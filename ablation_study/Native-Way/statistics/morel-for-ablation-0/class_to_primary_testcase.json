{"Environments": [{"method_name": "bind(IdPat,Object)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}, {"method_name": "bindAll(Iterable<Object>)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}], "Puffin": [{"method_name": "execute(Stream<Source>,PrintWriter)", "file_path": "src/test/java/net/hydromatic/morel/LintTest.java", "testclass_name": "LintTest", "testcase_name": "testLint"}], "Calcite": [{"method_name": "withDataSets(Map<String,DataSet>)", "file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "testcase_name": "testNestedSchema"}, {"method_name": "code(Environment,RelNode,Type)", "file_path": "src/test/java/net/hydromatic/morel/foreign/Calcite_codeTest.java", "testclass_name": "Calcite_codeTest", "testcase_name": "testCodeWithValidRelNode"}, {"method_name": "code(Environment,RelNode,Type)", "file_path": "src/test/java/net/hydromatic/morel/foreign/Calcite_codeTest.java", "testclass_name": "Calcite_codeTest", "testcase_name": "testCodeWithNullRelNode"}], "ScriptTest": [{"method_name": "checkRun(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "test"}, {"method_name": "checkRun(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "testScript"}], "Sat": [{"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testTrue"}, {"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testFalse"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/util/Sat_variableTest.java", "testclass_name": "Sat_variableTest", "testcase_name": "testVariableCreation"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/util/Sat_variableTest.java", "testclass_name": "Sat_variableTest", "testcase_name": "testVariableRetrieval"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/util/Sat_variableTest.java", "testclass_name": "Sat_variableTest", "testcase_name": "testVariableIdIncrement"}, {"method_name": "not(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testTrue"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testFalse"}], "Ml": [{"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromPredicate"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromView"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testMapFilterToFrom"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFilterMapFilterMapToFrom"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromFrom"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromEmptyFrom"}, {"method_name": "assertAnalyze(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testAnalyze"}, {"method_name": "assertPlan(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInline"}, {"method_name": "assertPlan(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFn"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFn"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFnUnit"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testLetAtomic"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineChained"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromPredicate"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromView"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testMapFilterToFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFilterMapFilterMapToFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromEmptyFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase2"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFnUnit"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testLetAtomic"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScott"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScott2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottOrder"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottJoin"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottJoin2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottJoin2Dot"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testQueryList"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testNative"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testHybridCalciteToMorel"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testFullCalcite"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testFullCalcite2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testFullCalcite3"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteFrom"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithVariable"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithVariableNoInlining"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithFunction"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithHybridFunction"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testUnion"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testExcept"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testIntersect"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testElem"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testNotElem"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testExists"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testNotExists"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testExistsCorrelated"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCorrelatedListSubQuery"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCorrelatedScalar"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testRecursive"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testRecursive2"}], "PairList": [{"method_name": "add(T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testBuilder"}, {"method_name": "add(Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(int,Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(int,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "remove(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "clear()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "addAll(int,PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "immutable()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "set(int,Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "set(int,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(ImmutableList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "addAll(ImmutablePairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "of(Map)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOfMap"}, {"method_name": "toImmutableMap()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOfMap"}, {"method_name": "withCapacity(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListWithCapacity"}, {"method_name": "of()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOf"}, {"method_name": "copyOf(T,U,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOf"}, {"method_name": "transform(BiFunction)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "transform2(BiFunction)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "anyMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "allMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "noMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "firstMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testBuilder"}], "TailList": [{"method_name": "clear()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "size()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "get(int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "set(int,E)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "add(int,E)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "addAll(Collection)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "isEmpty()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}], "FromBuilder": [{"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "OrderItem>)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}], "Ord": [{"method_name": "forEachIndexed(Iterable,BiConsumer)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testOrd"}, {"method_name": "forEachIndexed(List<String>,ObjIntConsumer<String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Ord_forEachIndexedTest.java", "testclass_name": "Ord_forEachIndexedTest", "testcase_name": "testForEachIndexed"}, {"method_name": "forEach(List<String>,ObjIntConsumer<String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Ord_forEachTest.java", "testclass_name": "Ord_forEachTest", "testcase_name": "testForEach"}], "MapList": [{"method_name": "of(int,IntFunction)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testMapList"}], "Folder": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "combineAll(List)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}], "Core": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testEq"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testBetween"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}, {"method_name": "isConstant()", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testConstant"}, {"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testSubTrue"}], "Static": [{"method_name": "shorterThan(Iterable,int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testShorterThan"}, {"method_name": "find(List,Predicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFind"}, {"method_name": "nextPowerOfTwo(int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPower"}, {"method_name": "transform(List,Function)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTransform"}, {"method_name": "intersect(List<Integer>,Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_intersectTest.java", "testclass_name": "Static_intersectTest", "testcase_name": "testIntersect"}, {"method_name": "toImmutableList()", "file_path": "src/test/java/net/hydromatic/morel/util/Static_toImmutableListTest.java", "testclass_name": "Static_toImmutableListTest", "testcase_name": "testToImmutableList"}, {"method_name": "plus(Map<String,Integer>,String,Integer)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_plusTest.java", "testclass_name": "Static_plusTest", "testcase_name": "testPlus"}, {"method_name": "transformEager(Iterable<String>,Function<String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_transformEagerTest.java", "testclass_name": "Static_transformEagerTest", "testcase_name": "testTransformEager_EmptyIterable"}, {"method_name": "transformEager(Iterable<String>,Function<String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_transformEagerTest.java", "testclass_name": "Static_transformEagerTest", "testcase_name": "testTransformEager_NonEmptyIterable"}, {"method_name": "minus(List<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_minusTest.java", "testclass_name": "Static_minusTest", "testcase_name": "testMinus_ElementPresent"}, {"method_name": "minus(List<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_minusTest.java", "testclass_name": "Static_minusTest", "testcase_name": "testMinus_ElementNotPresent"}, {"method_name": "minus(List<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_minusTest.java", "testclass_name": "Static_minusTest", "testcase_name": "testMinus_EmptyList"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "testcase_name": "testFindRandomAccessList"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "testcase_name": "testFindNonRandomAccessList"}, {"method_name": "find(List<Integer>,Predicate<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "testcase_name": "testFindNoMatch"}, {"method_name": "str(StringBuilder)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_strTest.java", "testclass_name": "Static_strTest", "testcase_name": "testStrWithNonEmptyStringBuilder"}, {"method_name": "str(StringBuilder)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_strTest.java", "testclass_name": "Static_strTest", "testcase_name": "testStrWithEmptyStringBuilder"}, {"method_name": "str(StringBuilder)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_strTest.java", "testclass_name": "Static_strTest", "testcase_name": "testStrWithMultipleCalls"}, {"method_name": "shorterThan(Collection<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThan_Collection"}, {"method_name": "shorterThan(Iterable<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThan_Iterable"}, {"method_name": "shorterThan(Iterable<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThan_NonCollectionIterable"}, {"method_name": "shorterThan(Iterable<Integer>,int)", "file_path": "src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java", "testclass_name": "Static_shorterThanTest", "testcase_name": "testShorterThan_NonPositiveN"}], "Pos": [{"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPos"}, {"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_splitTest.java", "testclass_name": "Pos_splitTest", "testcase_name": "testSplit_ValidInput"}, {"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_splitTest.java", "testclass_name": "Pos_splitTest", "testcase_name": "testSplit_InvalidInput"}, {"method_name": "toString()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPos"}, {"method_name": "plus(Pos)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_plusTest.java", "testclass_name": "Pos_plusTest", "testcase_name": "testPlus"}, {"method_name": "sum(List<Pos>)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_sumTest.java", "testclass_name": "Pos_sumTest", "testcase_name": "testSumWithList"}, {"method_name": "sum(Iterable<Pos>)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_sumTest.java", "testclass_name": "Pos_sumTest", "testcase_name": "testSumWithIterable"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_equalsTest.java", "testclass_name": "Pos_equalsTest", "testcase_name": "testEqualsSameObject"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_equalsTest.java", "testclass_name": "Pos_equalsTest", "testcase_name": "testEqualsDifferentType"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_equalsTest.java", "testclass_name": "Pos_equalsTest", "testcase_name": "testEqualsSameValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_equalsTest.java", "testclass_name": "Pos_equalsTest", "testcase_name": "testEqualsDifferentValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/ast/Pos_equalsTest.java", "testclass_name": "Pos_equalsTest", "testcase_name": "testEqualsNull"}], "Codes": [{"method_name": "floatToString(float)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testToString"}, {"method_name": "isNegative(float)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFloatBit"}], "Pair": [{"method_name": "anyMatch(Iterable,Iterable,BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "allMatch(Iterable,Iterable,BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "noneMatch(Iterable,Iterable,BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "Entry<String,Integer>>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_leftTest.java", "testclass_name": "Pair_leftTest", "testcase_name": "testLeft"}, {"method_name": "Entry<String,Integer>>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_rightTest.java", "testclass_name": "Pair_rightTest", "testcase_name": "testRight"}, {"method_name": "toMap(Iterable<Pair<String,Integer>>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_toMapTest.java", "testclass_name": "Pair_toMapTest", "testcase_name": "testToMap"}, {"method_name": "zipMutable(List<Integer>,List<String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipMutableTest.java", "testclass_name": "Pair_zipMutableTest", "testcase_name": "testZipMutable"}, {"method_name": "forEach(List<Integer>,List<String>,BiConsumer<Integer,String>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_forEachTest.java", "testclass_name": "Pair_forEachTest", "testcase_name": "testForEach"}, {"method_name": "firstAnd(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_firstAndTest.java", "testclass_name": "Pair_firstAndTest", "testcase_name": "testFirstAndWithEmptyIterable"}, {"method_name": "firstAnd(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_firstAndTest.java", "testclass_name": "Pair_firstAndTest", "testcase_name": "testFirstAndWithNonEmptyIterable"}, {"method_name": "adjacents(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_adjacentsTest.java", "testclass_name": "Pair_adjacentsTest", "testcase_name": "testAdjacentsWithEmptyIterable"}, {"method_name": "adjacents(Iterable<Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_adjacentsTest.java", "testclass_name": "Pair_adjacentsTest", "testcase_name": "testAdjacentsWithNonEmptyIterable"}, {"method_name": "zip(List<Integer>,List<String>,boolean)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipTest.java", "testclass_name": "Pair_zipTest", "testcase_name": "testZipStrictEqualSizes"}, {"method_name": "zip(List<Integer>,List<String>,boolean)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipTest.java", "testclass_name": "Pair_zipTest", "testcase_name": "testZipStrictDifferentSizes"}, {"method_name": "zip(List<Integer>,List<String>,boolean)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_zipTest.java", "testclass_name": "Pair_zipTest", "testcase_name": "testZipNonStrict"}, {"method_name": "forEachIndexed(List<String>,List<Integer>,BiConsumer<Integer,String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_forEachIndexedTest.java", "testclass_name": "Pair_forEachIndexedTest", "testcase_name": "testForEachIndexed"}, {"method_name": "forEachIndexed(List<String>,List<Integer>,BiConsumer<Integer,String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_forEachIndexedTest.java", "testclass_name": "Pair_forEachIndexedTest", "testcase_name": "testForEachIndexedWithDifferentLengths"}, {"method_name": "forEachIndexed(List<String>,List<Integer>,BiConsumer<Integer,String,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_forEachIndexedTest.java", "testclass_name": "Pair_forEachIndexedTest", "testcase_name": "testForEachIndexedWithEmptyLists"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_True"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_False"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_DifferentLengths"}, {"method_name": "anyMatch(List<Integer>,List<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java", "testclass_name": "Pair_anyMatchTest", "testcase_name": "testAnyMatch_EmptyIterables"}, {"method_name": "allMatch(Iterable<Integer>,Iterable<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_True"}, {"method_name": "allMatch(Iterable<Integer>,Iterable<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_False"}, {"method_name": "allMatch(Iterable<Integer>,Iterable<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_DifferentLengths"}, {"method_name": "allMatch(Iterable<Integer>,Iterable<Integer>,BiPredicate<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java", "testclass_name": "Pair_allMatchTest", "testcase_name": "testAllMatch_EmptyIterables"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_SameInstance"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_DifferentInstanceSameValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_DifferentInstanceDifferentValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_NotInstanceOfMapEntry"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_Null"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_MapEntryWithSameValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_equalsTest.java", "testclass_name": "Pair_equalsTest", "testcase_name": "testEquals_MapEntryWithDifferentValues"}, {"method_name": "compareTo(Pair<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareToEqual"}, {"method_name": "compareTo(Pair<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareToLeftLess"}, {"method_name": "compareTo(Pair<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareToLeftGreater"}, {"method_name": "compareTo(Pair<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareToRightLess"}, {"method_name": "compareTo(Pair<Integer,Integer>)", "file_path": "src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java", "testclass_name": "Pair_compareToTest", "testcase_name": "testCompareToRightGreater"}], "RangeExtent": [{"method_name": "iterable", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testRangeExtent"}], "Extents": [{"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2c"}, {"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2d"}, {"method_name": "union(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_unionTest.java", "testclass_name": "Extents_unionTest", "testcase_name": "testUnionWithEmptyList"}, {"method_name": "union(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_unionTest.java", "testclass_name": "Extents_unionTest", "testcase_name": "testUnionWithSingleMap"}, {"method_name": "union(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_unionTest.java", "testclass_name": "Extents_unionTest", "testcase_name": "testUnionWithMultipleMaps"}, {"method_name": "intersect(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_intersectTest.java", "testclass_name": "Extents_intersectTest", "testcase_name": "testIntersect_EmptyList"}, {"method_name": "intersect(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_intersectTest.java", "testclass_name": "Extents_intersectTest", "testcase_name": "testIntersect_SingleMap"}, {"method_name": "intersect(List<Map<String,ImmutableRangeSet<Integer>>>)", "file_path": "src/test/java/net/hydromatic/morel/compile/Extents_intersectTest.java", "testclass_name": "Extents_intersectTest", "testcase_name": "testIntersect_MultipleMaps"}], "Shell": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testShell"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testShellNoBanner"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testOneLine"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testTwoLines"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testReal"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testEmptyLines"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testSingleLineComment"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testSingleLineCommentWithQuote"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testMultiLineLet"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUse"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testMatchWarning"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseEmpty"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseMissing"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseSelfReferential"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testStringDepth"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testPrintDepth"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testPrintLength"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testLineWidth"}], "Main": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testRaw"}]}