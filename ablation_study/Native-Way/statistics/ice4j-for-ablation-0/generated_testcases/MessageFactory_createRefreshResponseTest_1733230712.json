[{"strategy": "retry", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createRefreshResponseTest {\n\n    @Test\n    public void testCreateRefreshResponse_Success() {\n        int lifetime = 3600;\n\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.REFRESH_RESPONSE);\n\n        LifetimeAttribute lifetimeAttribute = AttributeFactory.createLifetimeAttribute(lifetime);\n        expectedResponse.putAttribute(lifetimeAttribute);\n\n        Response actualResponse = MessageFactory.createRefreshResponse(lifetime);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.LIFETIME), actualResponse.getAttribute(Attribute.LIFETIME));\n    }\n\n    @Test\n    public void testCreateRefreshResponse_IllegalArgumentException() {\n        int lifetime = -1; // Invalid lifetime to trigger IllegalArgumentException\n\n        Response actualResponse = MessageFactory.createRefreshResponse(lifetime);\n        assertNull(actualResponse.getAttribute(Attribute.LIFETIME));\n    }\n}\n"}]