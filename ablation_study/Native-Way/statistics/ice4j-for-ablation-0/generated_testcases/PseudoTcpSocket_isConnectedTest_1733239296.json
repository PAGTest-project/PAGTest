[{"strategy": "generate", "code": "\npackage org.ice4j.pseudotcp;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.*;\nimport java.net.*;\nimport org.junit.jupiter.api.*;\n\npublic class PseudoTcpSocket_isConnectedTest {\n\n    private PseudoTcpSocket socket;\n    private PseudoTcpSocketImpl socketImpl;\n\n    @BeforeEach\n    public void setUp() throws SocketException {\n        socketImpl = new PseudoTcpSocketImpl();\n        socket = new PseudoTcpSocket(socketImpl);\n    }\n\n    @Test\n    public void testIsConnectedWhenConnected() throws IOException {\n        // Simulate a connected state\n        socketImpl.setState(PseudoTcpState.TCP_ESTABLISHED);\n        assertTrue(socket.isConnected());\n    }\n\n    @Test\n    public void testIsConnectedWhenNotConnected() throws IOException {\n        // Simulate a non-connected state\n        socketImpl.setState(PseudoTcpState.TCP_CLOSED);\n        assertFalse(socket.isConnected());\n    }\n\n    @Test\n    public void testIsConnectedAfterConnect() throws IOException {\n        // Simulate connecting the socket\n        socket.connect(new InetSocketAddress(\"localhost\", 8080), 5000);\n        assertTrue(socket.isConnected());\n    }\n\n    @Test\n    public void testIsConnectedAfterClose() throws IOException {\n        // Simulate connecting and then closing the socket\n        socket.connect(new InetSocketAddress(\"localhost\", 8080), 5000);\n        socket.close();\n        assertFalse(socket.isConnected());\n    }\n}\n"}]