[{"strategy": "retry", "code": "\npackage org.ice4j.pseudotcp;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.*;\nimport java.net.*;\nimport org.junit.jupiter.api.*;\n\npublic class PseudoTcpSocket_isClosedTest {\n\n    private PseudoTcpSocket socket;\n    private PseudoTcpSocketImpl socketImpl;\n\n    @BeforeEach\n    public void setUp() throws SocketException {\n        socketImpl = new PseudoTcpSocketImpl(0L, new DatagramSocket());\n        socket = new PseudoTcpSocket(socketImpl);\n    }\n\n    @Test\n    public void testIsClosedWhenSocketIsClosed() {\n        socketImpl.m_state = PseudoTcpState.TCP_CLOSED;\n        assertTrue(socket.isClosed());\n    }\n\n    @Test\n    public void testIsClosedWhenSocketIsNotClosed() {\n        socketImpl.m_state = PseudoTcpState.TCP_ESTABLISHED;\n        assertFalse(socket.isClosed());\n    }\n\n    @Test\n    public void testIsClosedAfterClosingSocket() throws IOException {\n        socketImpl.m_state = PseudoTcpState.TCP_ESTABLISHED;\n        assertFalse(socket.isClosed());\n        socket.close();\n        assertTrue(socket.isClosed());\n    }\n\n    @Test\n    public void testIsClosedAfterConnectingAndClosingSocket() throws IOException {\n        InetSocketAddress address = new InetSocketAddress(\"localhost\", 12345);\n        socket.connect(address, 5000);\n        assertFalse(socket.isClosed());\n        socket.close();\n        assertTrue(socket.isClosed());\n    }\n}\n"}]