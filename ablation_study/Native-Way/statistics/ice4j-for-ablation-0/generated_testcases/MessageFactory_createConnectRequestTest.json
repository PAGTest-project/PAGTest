[{"strategy": "retry", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createConnectRequestTest {\n\n    @Test\n    public void testCreateConnectRequest() {\n        TransportAddress peerAddress = new TransportAddress(\"127.0.0.1\", 3478, Transport.UDP);\n        byte[] transactionId = new byte[16];\n        Request expectedRequest = new Request();\n        expectedRequest.setMessageType(Message.CONNECT_REQUEST);\n        XorPeerAddressAttribute xorPeerAddressAttribute = AttributeFactory.createXorPeerAddressAttribute(peerAddress, transactionId);\n        expectedRequest.putAttribute(xorPeerAddressAttribute);\n\n        Request actualRequest = MessageFactory.createConnectRequest(peerAddress, transactionId);\n        assertEquals(expectedRequest, actualRequest);\n    }\n\n    @Test\n    public void testCreateConnectRequestWithNullTransactionId() {\n        TransportAddress peerAddress = new TransportAddress(\"127.0.0.1\", 3478, Transport.UDP);\n        byte[] transactionId = null;\n        assertThrows(NullPointerException.class, () -> {\n            MessageFactory.createConnectRequest(peerAddress, transactionId);\n        });\n    }\n\n    @Test\n    public void testCreateConnectRequestWithInvalidTransactionIdLength() {\n        TransportAddress peerAddress = new TransportAddress(\"127.0.0.1\", 3478, Transport.UDP);\n        byte[] transactionId = new byte[8];\n        assertThrows(ArrayIndexOutOfBoundsException.class, () -> {\n            MessageFactory.createConnectRequest(peerAddress, transactionId);\n        });\n    }\n}\n"}]