[{"strategy": "generate", "code": "\npackage org.ice4j.pseudotcp;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.*;\nimport java.net.*;\nimport org.junit.jupiter.api.*;\n\npublic class PseudoTcpSocket_isConnectingTest {\n\n    private PseudoTcpSocket socket;\n\n    @BeforeEach\n    public void setUp() throws SocketException {\n        socket = new PseudoTcpSocketFactory().createSocket();\n    }\n\n    @Test\n    public void testIsConnectingWhenConnecting() throws IOException {\n        socket.connect(new InetSocketAddress(\"localhost\", 8080), 5000);\n        assertTrue(socket.isConnecting());\n    }\n\n    @Test\n    public void testIsConnectingWhenConnected() throws IOException {\n        socket.connect(new InetSocketAddress(\"localhost\", 8080), 5000);\n        socket.accept(5000);\n        assertTrue(socket.isConnecting());\n    }\n\n    @Test\n    public void testIsConnectingWhenClosed() throws IOException {\n        socket.close();\n        assertFalse(socket.isConnecting());\n    }\n\n    @Test\n    public void testIsConnectingWhenNotConnected() {\n        assertFalse(socket.isConnecting());\n    }\n\n    @Test\n    public void testIsConnectingAfterClose() throws IOException {\n        socket.connect(new InetSocketAddress(\"localhost\", 8080), 5000);\n        socket.close();\n        assertFalse(socket.isConnecting());\n    }\n}\n"}]