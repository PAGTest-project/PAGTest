[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.*;\n\npublic class ErrorCodeAttribute_setErrorCodeTest {\n    private ErrorCodeAttribute errorCodeAttribute;\n\n    @BeforeEach\n    public void setUp() {\n        errorCodeAttribute = new ErrorCodeAttribute();\n    }\n\n    @Test\n    public void testSetErrorCodeValid() {\n        char errorCode = 400;\n        assertDoesNotThrow(() -> errorCodeAttribute.setErrorCode(errorCode));\n        assertEquals(4, errorCodeAttribute.getErrorClass());\n        assertEquals(0, errorCodeAttribute.getErrorNumber());\n    }\n\n    @Test\n    public void testSetErrorCodeInvalid() {\n        char invalidErrorCode = 700;\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class,\n            () -> errorCodeAttribute.setErrorCode(invalidErrorCode));\n        assertEquals(\"7 is not a valid error number!\", exception.getMessage());\n    }\n\n    @Test\n    public void testSetErrorCodeBoundary() {\n        char boundaryErrorCode = 699;\n        assertDoesNotThrow(() -> errorCodeAttribute.setErrorCode(boundaryErrorCode));\n        assertEquals(6, errorCodeAttribute.getErrorClass());\n        assertEquals(99, errorCodeAttribute.getErrorNumber());\n    }\n\n    @Test\n    public void testSetErrorCodeZero() {\n        char zeroErrorCode = 0;\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class,\n            () -> errorCodeAttribute.setErrorCode(zeroErrorCode));\n        assertEquals(\"0 is not a valid error number!\", exception.getMessage());\n    }\n\n    @Test\n    public void testSetErrorCodeMax() {\n        char maxErrorCode = 600;\n        assertDoesNotThrow(() -> errorCodeAttribute.setErrorCode(maxErrorCode));\n        assertEquals(6, errorCodeAttribute.getErrorClass());\n        assertEquals(0, errorCodeAttribute.getErrorNumber());\n    }\n}\n"}]