[{"strategy": "retry", "code": "\npackage org.ice4j.pseudotcp;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.IOException;\nimport java.net.SocketException;\nimport java.net.InetSocketAddress;\n\npublic class PseudoTcpSocket_setConversationIDTest {\n    private PseudoTcpSocket socket;\n    private PseudoTcpSocketImpl socketImpl;\n\n    @BeforeEach\n    public void setUp() throws SocketException {\n        socketImpl = new PseudoTcpSocketImpl(12345);\n        socket = new PseudoTcpSocket(socketImpl);\n    }\n\n    @Test\n    public void testSetConversationIDSuccess() {\n        assertDoesNotThrow(() -> socket.setConversationID(54321));\n        assertEquals(54321, socket.getConversationID());\n    }\n\n    @Test\n    public void testSetConversationIDOnConnectedSocket() throws IOException {\n        socket.connect(new InetSocketAddress(\"localhost\", 8080), 5000);\n        assertThrows(IllegalStateException.class, () -> socket.setConversationID(54321));\n    }\n\n    @Test\n    public void testSetConversationIDOnClosedSocket() throws IOException {\n        socket.close();\n        assertThrows(IllegalStateException.class, () -> socket.setConversationID(54321));\n    }\n}\n"}]