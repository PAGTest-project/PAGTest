[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Optional;\nimport java.util.function.Consumer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PendingChanged_ifPresentTest {\n\n    private PendingChanged<String> pendingChanged;\n\n    @BeforeEach\n    public void setUp() {\n        pendingChanged = new PendingChanged<>();\n    }\n\n    @Test\n    public void testIfPresent_ValueSetAndPresent() {\n        pendingChanged.setValue(Optional.of(\"test\"));\n        Consumer<String> consumer = value -> assertEquals(\"test\", value);\n        pendingChanged.ifPresent(consumer);\n    }\n\n    @Test\n    public void testIfPresent_ValueNotSet() {\n        Consumer<String> consumer = value -> assertTrue(false, \"Should not be called\");\n        pendingChanged.ifPresent(consumer);\n        assertEquals(1, pendingChanged.ifPresentConsumers.size());\n    }\n\n    @Test\n    public void testIfPresent_ValueSetButNotPresent() {\n        pendingChanged.setValue(Optional.empty());\n        Consumer<String> consumer = value -> assertTrue(false, \"Should not be called\");\n        pendingChanged.ifPresent(consumer);\n    }\n}\n"}]