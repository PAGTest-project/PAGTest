[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.responses.ApiResponse;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ChangedResponse_toStringTest {\n\n    @Test\n    public void testToString() {\n        ApiResponse oldApiResponse = new ApiResponse().description(\"Old Response\");\n        ApiResponse newApiResponse = new ApiResponse().description(\"New Response\");\n        DiffContext context = new DiffContext(null);\n        ChangedMetadata description = new ChangedMetadata();\n        ChangedHeaders headers = new ChangedHeaders(null, null, context);\n        ChangedContent content = new ChangedContent(null, null, context);\n        ChangedExtensions extensions = new ChangedExtensions(null, null, context);\n\n        ChangedResponse changedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context)\n                .setDescription(description)\n                .setHeaders(headers)\n                .setContent(content)\n                .setExtensions(extensions);\n\n        String expected = \"ChangedResponse(oldApiResponse=class ApiResponse {\\n\"\n                + \"description: Old Response\\n\"\n                + \"headers: null\\n\"\n                + \"content: null\\n\"\n                + \"links: null\\n\"\n                + \"extensions: null\\n\"\n                + \"$ref: null\\n\"\n                + \"}, newApiResponse=class ApiResponse {\\n\"\n                + \"description: New Response\\n\"\n                + \"headers: null\\n\"\n                + \"content: null\\n\"\n                + \"links: null\\n\"\n                + \"extensions: null\\n\"\n                + \"$ref: null\\n\"\n                + \"}, context=\"\n                + context\n                + \", description=\"\n                + description\n                + \", headers=\"\n                + headers\n                + \", content=\"\n                + content\n                + \", extensions=\"\n                + extensions\n                + \")\";\n\n        assertEquals(expected, changedResponse.toString());\n    }\n}\n"}]