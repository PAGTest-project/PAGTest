[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.headers.Header;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class ChangedHeaders_equalsTest {\n\n    @Test\n    public void testEquals_SameInstance() {\n        Map<String, Header> oldHeaders = new HashMap<>();\n        Map<String, Header> newHeaders = new HashMap<>();\n        DiffContext context = new DiffContext(null);\n        ChangedHeaders headers = new ChangedHeaders(oldHeaders, newHeaders, context);\n\n        assertTrue(headers.equals(headers));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        Map<String, Header> oldHeaders = new HashMap<>();\n        Map<String, Header> newHeaders = new HashMap<>();\n        DiffContext context = new DiffContext(null);\n        ChangedHeaders headers = new ChangedHeaders(oldHeaders, newHeaders, context);\n\n        assertFalse(headers.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        Map<String, Header> oldHeaders = new HashMap<>();\n        Map<String, Header> newHeaders = new HashMap<>();\n        DiffContext context = new DiffContext(null);\n        ChangedHeaders headers = new ChangedHeaders(oldHeaders, newHeaders, context);\n\n        assertFalse(headers.equals(new Object()));\n    }\n\n    @Test\n    public void testEquals_DifferentContent() {\n        Map<String, Header> oldHeaders1 = new HashMap<>();\n        oldHeaders1.put(\"key1\", new Header());\n        Map<String, Header> newHeaders1 = new HashMap<>();\n        DiffContext context1 = new DiffContext(null);\n        ChangedHeaders headers1 = new ChangedHeaders(oldHeaders1, newHeaders1, context1);\n\n        Map<String, Header> oldHeaders2 = new HashMap<>();\n        oldHeaders2.put(\"key2\", new Header());\n        Map<String, Header> newHeaders2 = new HashMap<>();\n        DiffContext context2 = new DiffContext(null);\n        ChangedHeaders headers2 = new ChangedHeaders(oldHeaders2, newHeaders2, context2);\n\n        assertFalse(headers1.equals(headers2));\n    }\n\n    @Test\n    public void testEquals_SameContent() {\n        Map<String, Header> oldHeaders = new HashMap<>();\n        oldHeaders.put(\"key1\", new Header());\n        Map<String, Header> newHeaders = new HashMap<>();\n        DiffContext context = new DiffContext(null);\n        ChangedHeaders headers1 = new ChangedHeaders(oldHeaders, newHeaders, context);\n        ChangedHeaders headers2 = new ChangedHeaders(oldHeaders, newHeaders, context);\n\n        assertTrue(headers1.equals(headers2));\n    }\n}\n"}]