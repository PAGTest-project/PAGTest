[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport io.swagger.v3.oas.models.OpenAPI;\nimport java.util.Collections;\nimport java.util.List;\nimport org.apache.commons.configuration2.CompositeConfiguration;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\npublic class ChangedOpenApi_equalsTest {\n\n    private ChangedOpenApi changedOpenApi;\n    private OpenApiDiffOptions options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new OpenApiDiffOptions(new CompositeConfiguration());\n        changedOpenApi = new ChangedOpenApi(options);\n    }\n\n    @Test\n    public void testEquals_SameInstance() {\n        assertTrue(changedOpenApi.equals(changedOpenApi));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        assertFalse(changedOpenApi.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        assertFalse(changedOpenApi.equals(new Object()));\n    }\n\n    @Test\n    public void testEquals_DifferentOldSpecOpenApi() {\n        OpenAPI oldSpecOpenApi1 = new OpenAPI();\n        OpenAPI oldSpecOpenApi2 = new OpenAPI();\n        changedOpenApi.setOldSpecOpenApi(oldSpecOpenApi1);\n        ChangedOpenApi other = new ChangedOpenApi(options).setOldSpecOpenApi(oldSpecOpenApi2);\n        assertFalse(changedOpenApi.equals(other));\n    }\n\n    @Test\n    public void testEquals_DifferentNewSpecOpenApi() {\n        OpenAPI newSpecOpenApi1 = new OpenAPI();\n        OpenAPI newSpecOpenApi2 = new OpenAPI();\n        changedOpenApi.setNewSpecOpenApi(newSpecOpenApi1);\n        ChangedOpenApi other = new ChangedOpenApi(options).setNewSpecOpenApi(newSpecOpenApi2);\n        assertFalse(changedOpenApi.equals(other));\n    }\n\n    @Test\n    public void testEquals_DifferentNewEndpoints() {\n        List<Endpoint> newEndpoints1 = Collections.singletonList(new Endpoint());\n        List<Endpoint> newEndpoints2 = Collections.singletonList(new Endpoint());\n        changedOpenApi.setNewEndpoints(newEndpoints1);\n        ChangedOpenApi other = new ChangedOpenApi(options).setNewEndpoints(newEndpoints2);\n        assertFalse(changedOpenApi.equals(other));\n    }\n\n    @Test\n    public void testEquals_DifferentMissingEndpoints() {\n        List<Endpoint> missingEndpoints1 = Collections.singletonList(new Endpoint());\n        List<Endpoint> missingEndpoints2 = Collections.singletonList(new Endpoint());\n        changedOpenApi.setMissingEndpoints(missingEndpoints1);\n        ChangedOpenApi other = new ChangedOpenApi(options).setMissingEndpoints(missingEndpoints2);\n        assertFalse(changedOpenApi.equals(other));\n    }\n\n    @Test\n    public void testEquals_DifferentChangedOperations() {\n        List<ChangedOperation> changedOperations1 = Collections.singletonList(new ChangedOperation(\"path\", null, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation()));\n        List<ChangedOperation> changedOperations2 = Collections.singletonList(new ChangedOperation(\"path\", null, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation()));\n        changedOpenApi.setChangedOperations(changedOperations1);\n        ChangedOpenApi other = new ChangedOpenApi(options).setChangedOperations(changedOperations2);\n        assertFalse(changedOpenApi.equals(other));\n    }\n\n    @Test\n    public void testEquals_DifferentChangedExtensions() {\n        ChangedExtensions changedExtensions1 = new ChangedExtensions(null, null, null);\n        ChangedExtensions changedExtensions2 = new ChangedExtensions(null, null, null);\n        changedOpenApi.setChangedExtensions(changedExtensions1);\n        ChangedOpenApi other = new ChangedOpenApi(options).setChangedExtensions(changedExtensions2);\n        assertFalse(changedOpenApi.equals(other));\n    }\n\n    @Test\n    public void testEquals_SameFields() {\n        OpenAPI oldSpecOpenApi = new OpenAPI();\n        OpenAPI newSpecOpenApi = new OpenAPI();\n        List<Endpoint> newEndpoints = Collections.singletonList(new Endpoint());\n        List<Endpoint> missingEndpoints = Collections.singletonList(new Endpoint());\n        List<ChangedOperation> changedOperations = Collections.singletonList(new ChangedOperation(\"path\", null, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation()));\n        ChangedExtensions changedExtensions = new ChangedExtensions(null, null, null);\n\n        changedOpenApi.setOldSpecOpenApi(oldSpecOpenApi)\n                      .setNewSpecOpenApi(newSpecOpenApi)\n                      .setNewEndpoints(newEndpoints)\n                      .setMissingEndpoints(missingEndpoints)\n                      .setChangedOperations(changedOperations)\n                      .setChangedExtensions(changedExtensions);\n\n        ChangedOpenApi other = new ChangedOpenApi(options)\n                                .setOldSpecOpenApi(oldSpecOpenApi)\n                                .setNewSpecOpenApi(newSpecOpenApi)\n                                .setNewEndpoints(newEndpoints)\n                                .setMissingEndpoints(missingEndpoints)\n                                .setChangedOperations(changedOperations)\n                                .setChangedExtensions(changedExtensions);\n\n        assertTrue(changedOpenApi.equals(other));\n    }\n}\n"}]