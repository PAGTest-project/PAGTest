[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport io.swagger.v3.oas.models.OpenAPI;\nimport java.util.Collections;\nimport java.util.List;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\nimport org.openapitools.openapidiff.core.model.ChangedExtensions;\nimport org.openapitools.openapidiff.core.model.ChangedOperation;\nimport org.openapitools.openapidiff.core.model.DiffContext;\nimport java.util.Map;\n\npublic class ChangedOpenApi_toStringTest {\n\n    private ChangedOpenApi changedOpenApi;\n    private OpenAPI oldSpecOpenApi;\n    private OpenAPI newSpecOpenApi;\n    private List<Endpoint> newEndpoints;\n    private List<Endpoint> missingEndpoints;\n    private List<ChangedOperation> changedOperations;\n    private ChangedExtensions changedExtensions;\n\n    @BeforeEach\n    public void setUp() {\n        changedOpenApi = new ChangedOpenApi(new OpenApiDiffOptions());\n        oldSpecOpenApi = new OpenAPI();\n        newSpecOpenApi = new OpenAPI();\n        newEndpoints = Collections.emptyList();\n        missingEndpoints = Collections.emptyList();\n        changedOperations = Collections.emptyList();\n        changedExtensions = new ChangedExtensions(Collections.emptyMap(), Collections.emptyMap(), new DiffContext());\n\n        changedOpenApi.setOldSpecOpenApi(oldSpecOpenApi)\n                      .setNewSpecOpenApi(newSpecOpenApi)\n                      .setNewEndpoints(newEndpoints)\n                      .setMissingEndpoints(missingEndpoints)\n                      .setChangedOperations(changedOperations)\n                      .setChangedExtensions(changedExtensions);\n    }\n\n    @Test\n    public void testToString() {\n        String expected = \"ChangedOpenApi(oldSpecOpenApi=\" + oldSpecOpenApi\n                + \", newSpecOpenApi=\" + newSpecOpenApi\n                + \", newEndpoints=\" + newEndpoints\n                + \", missingEndpoints=\" + missingEndpoints\n                + \", changedOperations=\" + changedOperations\n                + \", changedExtensions=\" + changedExtensions\n                + \")\";\n        assertEquals(expected, changedOpenApi.toString());\n    }\n\n    @Test\n    public void testToStringWithNullValues() {\n        changedOpenApi.setOldSpecOpenApi(null)\n                      .setNewSpecOpenApi(null)\n                      .setNewEndpoints(null)\n                      .setMissingEndpoints(null)\n                      .setChangedOperations(null)\n                      .setChangedExtensions(null);\n\n        String expected = \"ChangedOpenApi(oldSpecOpenApi=null\"\n                + \", newSpecOpenApi=null\"\n                + \", newEndpoints=null\"\n                + \", missingEndpoints=null\"\n                + \", changedOperations=null\"\n                + \", changedExtensions=null\"\n                + \")\";\n        assertEquals(expected, changedOpenApi.toString());\n    }\n\n    @Test\n    public void testToStringWithNonEmptyValues() {\n        newEndpoints = Collections.singletonList(new Endpoint());\n        missingEndpoints = Collections.singletonList(new Endpoint());\n        changedOperations = Collections.singletonList(new ChangedOperation(\"path\", io.swagger.v3.oas.models.PathItem.HttpMethod.GET, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation()));\n        changedExtensions = new ChangedExtensions(Collections.emptyMap(), Collections.emptyMap(), new DiffContext());\n\n        changedOpenApi.setNewEndpoints(newEndpoints)\n                      .setMissingEndpoints(missingEndpoints)\n                      .setChangedOperations(changedOperations)\n                      .setChangedExtensions(changedExtensions);\n\n        String expected = \"ChangedOpenApi(oldSpecOpenApi=\" + oldSpecOpenApi\n                + \", newSpecOpenApi=\" + newSpecOpenApi\n                + \", newEndpoints=\" + newEndpoints\n                + \", missingEndpoints=\" + missingEndpoints\n                + \", changedOperations=\" + changedOperations\n                + \", changedExtensions=\" + changedExtensions\n                + \")\";\n        assertEquals(expected, changedOpenApi.toString());\n    }\n\n    @Test\n    public void testEqualsAndHashCode() {\n        ChangedOpenApi changedOpenApi2 = new ChangedOpenApi(new OpenApiDiffOptions());\n        changedOpenApi2.setOldSpecOpenApi(oldSpecOpenApi)\n                       .setNewSpecOpenApi(newSpecOpenApi)\n                       .setNewEndpoints(newEndpoints)\n                       .setMissingEndpoints(missingEndpoints)\n                       .setChangedOperations(changedOperations)\n                       .setChangedExtensions(changedExtensions);\n\n        assertTrue(changedOpenApi.equals(changedOpenApi2));\n        assertEquals(changedOpenApi.hashCode(), changedOpenApi2.hashCode());\n    }\n}\n"}]