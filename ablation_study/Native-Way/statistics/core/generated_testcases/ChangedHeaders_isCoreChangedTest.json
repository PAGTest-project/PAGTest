[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\npublic class ChangedHeaders_isCoreChangedTest {\n    private ChangedHeaders changedHeaders;\n    private DiffContext context;\n\n    @BeforeEach\n    public void setUp() {\n        Map<String, ChangedHeaders.Header> oldHeaders = new HashMap<>();\n        Map<String, ChangedHeaders.Header> newHeaders = new HashMap<>();\n        context = new DiffContext(new OpenApiDiffOptions());\n        changedHeaders = new ChangedHeaders(oldHeaders, newHeaders, context);\n    }\n\n    @Test\n    public void testIsCoreChangedNoChanges() {\n        changedHeaders.setIncreased(new HashMap<>());\n        changedHeaders.setMissing(new HashMap<>());\n        assertEquals(DiffResult.NO_CHANGES, changedHeaders.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChangedCompatible() {\n        Map<String, ChangedHeaders.Header> increased = new HashMap<>();\n        increased.put(\"header1\", new ChangedHeaders.Header());\n        changedHeaders.setIncreased(increased);\n        changedHeaders.setMissing(new HashMap<>());\n        assertEquals(DiffResult.COMPATIBLE, changedHeaders.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChangedIncompatible() {\n        Map<String, ChangedHeaders.Header> missing = new HashMap<>();\n        missing.put(\"header1\", new ChangedHeaders.Header());\n        changedHeaders.setIncreased(new HashMap<>());\n        changedHeaders.setMissing(missing);\n        context.setResponse(true);\n        assertEquals(DiffResult.INCOMPATIBLE, changedHeaders.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChangedIncompatibleNotEnabled() {\n        Map<String, ChangedHeaders.Header> missing = new HashMap<>();\n        missing.put(\"header1\", new ChangedHeaders.Header());\n        changedHeaders.setIncreased(new HashMap<>());\n        changedHeaders.setMissing(missing);\n        context.setResponse(false);\n        assertEquals(DiffResult.COMPATIBLE, changedHeaders.isCoreChanged());\n    }\n}\n"}]