[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.util;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.validator.Arg;\nimport org.apache.commons.validator.Msg;\nimport org.apache.commons.validator.Var;\nimport org.junit.jupiter.api.Test;\n\npublic class ValidatorUtils_copyMapTest {\n\n    @Test\n    public void testCopyMapWithMsg() {\n        Map<String, Object> original = new HashMap<>();\n        Msg msg = new Msg();\n        original.put(\"key1\", msg);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"key1\"));\n        assertTrue(copy.get(\"key1\") instanceof Msg);\n        assertEquals(msg.toString(), copy.get(\"key1\").toString());\n    }\n\n    @Test\n    public void testCopyMapWithArg() {\n        Map<String, Object> original = new HashMap<>();\n        Arg arg = new Arg();\n        original.put(\"key2\", arg);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"key2\"));\n        assertTrue(copy.get(\"key2\") instanceof Arg);\n        assertEquals(arg.toString(), copy.get(\"key2\").toString());\n    }\n\n    @Test\n    public void testCopyMapWithVar() {\n        Map<String, Object> original = new HashMap<>();\n        Var var = new Var();\n        original.put(\"key3\", var);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"key3\"));\n        assertTrue(copy.get(\"key3\") instanceof Var);\n        assertEquals(var.toString(), copy.get(\"key3\").toString());\n    }\n\n    @Test\n    public void testCopyMapWithOtherType() {\n        Map<String, Object> original = new HashMap<>();\n        original.put(\"key4\", \"value4\");\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"key4\"));\n        assertEquals(\"value4\", copy.get(\"key4\"));\n    }\n\n    @Test\n    public void testCopyMapEmpty() {\n        Map<String, Object> original = new HashMap<>();\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.isEmpty());\n    }\n}\n"}]