[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Var_cloneTest {\n\n    private Var var;\n\n    @BeforeEach\n    public void setUp() {\n        var = new Var(\"testName\", \"testValue\", \"testJsType\");\n    }\n\n    @Test\n    public void testCloneSuccess() throws CloneNotSupportedException {\n        Var clonedVar = (Var) var.clone();\n        assertNotNull(clonedVar);\n        assertEquals(var.getName(), clonedVar.getName());\n        assertEquals(var.getValue(), clonedVar.getValue());\n        assertEquals(var.getJsType(), clonedVar.getJsType());\n    }\n\n    @Test\n    public void testCloneNotSupported() {\n        Var nonCloneableVar = new Var(\"nonCloneable\", \"value\", \"jsType\") {\n            @Override\n            public Object clone() throws CloneNotSupportedException {\n                throw new CloneNotSupportedException();\n            }\n        };\n\n        assertThrows(UnsupportedOperationException.class, () -> {\n            nonCloneableVar.clone();\n        });\n    }\n}\n"}]