[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ValidatorResources_addConstantTest {\n\n    private ValidatorResources validatorResources;\n\n    @BeforeEach\n    public void setUp() {\n        validatorResources = new ValidatorResources();\n    }\n\n    @Test\n    public void testAddConstant() {\n        validatorResources.addConstant(\"constantName\", \"constantValue\");\n        assertEquals(\"constantValue\", validatorResources.getConstants().get(\"constantName\"));\n    }\n\n    @Test\n    public void testAddConstantWithDebugLogging() {\n        // Assuming getLog().isDebugEnabled() returns true\n        validatorResources.addConstant(\"constantName\", \"constantValue\");\n        // Verify that the constant was added\n        assertEquals(\"constantValue\", validatorResources.getConstants().get(\"constantName\"));\n        // Verify that debug logging was called (this part is usually mocked in real tests)\n    }\n\n    @Test\n    public void testAddConstantWithNoDebugLogging() {\n        // Assuming getLog().isDebugEnabled() returns false\n        validatorResources.addConstant(\"constantName\", \"constantValue\");\n        // Verify that the constant was added\n        assertEquals(\"constantValue\", validatorResources.getConstants().get(\"constantName\"));\n        // Verify that debug logging was not called (this part is usually mocked in real tests)\n    }\n}\n"}]