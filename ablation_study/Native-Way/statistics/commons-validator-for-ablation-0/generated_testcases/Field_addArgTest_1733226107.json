[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Field_addArgTest {\n    private Field field;\n\n    @BeforeEach\n    public void setUp() {\n        field = new Field();\n    }\n\n    private Arg createArg(String key) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        return arg;\n    }\n\n    private Arg createArg(String key, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setPosition(position);\n        return arg;\n    }\n\n    private Arg createArg(String key, String name) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        return arg;\n    }\n\n    private Arg createArg(String key, String name, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        arg.setPosition(position);\n        return arg;\n    }\n\n    @Test\n    public void testAddArgWithValidArg() {\n        Arg arg = createArg(\"validKey\", \"validName\", 0);\n        field.addArg(arg);\n        assertEquals(1, field.getArgs(\"validName\").length, \"testAddArgWithValidArg(1) \");\n        assertEquals(\"validKey\", field.getArg(\"validName\", 0).getKey(), \"testAddArgWithValidArg(2) \");\n    }\n\n    @Test\n    public void testAddArgWithNullArg() {\n        field.addArg(null);\n        assertEquals(0, field.getArgs(Field.DEFAULT_ARG).length, \"testAddArgWithNullArg(1) \");\n    }\n\n    @Test\n    public void testAddArgWithNullKey() {\n        Arg arg = createArg(null, \"nullKeyName\", 0);\n        field.addArg(arg);\n        assertEquals(0, field.getArgs(Field.DEFAULT_ARG).length, \"testAddArgWithNullKey(1) \");\n    }\n\n    @Test\n    public void testAddArgWithEmptyKey() {\n        Arg arg = createArg(\"\", \"emptyKeyName\", 0);\n        field.addArg(arg);\n        assertEquals(0, field.getArgs(Field.DEFAULT_ARG).length, \"testAddArgWithEmptyKey(1) \");\n    }\n\n    @Test\n    public void testAddArgWithDefaultArg() {\n        Arg arg = createArg(\"defaultKey\", null, 0);\n        field.addArg(arg);\n        assertEquals(1, field.getArgs(Field.DEFAULT_ARG).length, \"testAddArgWithDefaultArg(1) \");\n        assertEquals(\"defaultKey\", field.getArg(Field.DEFAULT_ARG, 0).getKey(), \"testAddArgWithDefaultArg(2) \");\n    }\n\n    @Test\n    public void testAddArgWithPositionOverride() {\n        field.addArg(createArg(\"position1\", \"position\", 1));\n        field.addArg(createArg(\"position0\", \"position\", 0));\n        field.addArg(createArg(\"default0\"));\n        field.addArg(createArg(\"default1\"));\n\n        assertEquals(2, field.getArgs(\"position\").length, \"testAddArgWithPositionOverride(1) \");\n        assertEquals(\"position0\", field.getArg(\"position\", 0).getKey(), \"testAddArgWithPositionOverride(2) \");\n        assertEquals(\"position1\", field.getArg(\"position\", 1).getKey(), \"testAddArgWithPositionOverride(3) \");\n\n        assertEquals(2, field.getArgs(Field.DEFAULT_ARG).length, \"testAddArgWithPositionOverride(4) \");\n        assertEquals(\"default0\", field.getArg(Field.DEFAULT_ARG, 0).getKey(), \"testAddArgWithPositionOverride(5) \");\n        assertEquals(\"default1\", field.getArg(Field.DEFAULT_ARG, 1).getKey(), \"testAddArgWithPositionOverride(6) \");\n    }\n}\n"}]