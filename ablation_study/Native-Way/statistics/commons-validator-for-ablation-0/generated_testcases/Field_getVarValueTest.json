[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Field_getVarValueTest {\n    private Field field;\n\n    @BeforeEach\n    public void setUp() {\n        field = new Field();\n        // Initialize hVars with some test data\n        field.hVars.put(\"var-1-1\", new Var(\"var-1-1\", \"value-1-1\", \"jstype-1-1\"));\n        field.hVars.put(\"var-2-1\", new Var(\"var-2-1\", \"value-2-1\", \"jstype-2-1\"));\n    }\n\n    @Test\n    public void testGetVarValueExistingKey() {\n        String value = field.getVarValue(\"var-1-1\");\n        assertEquals(\"value-1-1\", value, \"Value for existing key is incorrect\");\n    }\n\n    @Test\n    public void testGetVarValueNonExistingKey() {\n        String value = field.getVarValue(\"non-existing-key\");\n        assertNull(value, \"Value for non-existing key should be null\");\n    }\n}\n"}]