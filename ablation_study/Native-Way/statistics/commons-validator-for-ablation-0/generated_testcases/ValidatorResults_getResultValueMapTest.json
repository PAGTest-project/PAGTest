[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ValidatorResults_getResultValueMapTest {\n\n    private ValidatorResults validatorResults;\n\n    @BeforeEach\n    public void setUp() {\n        validatorResults = new ValidatorResults();\n    }\n\n    @Test\n    public void testGetResultValueMap_WithNonBooleanResult() {\n        // Arrange\n        Field field = new Field();\n        field.setKey(\"testKey\");\n        validatorResults.add(field, \"testAction\", true, \"testValue\");\n\n        // Act\n        Map<String, Object> resultMap = validatorResults.getResultValueMap();\n\n        // Assert\n        assertEquals(1, resultMap.size());\n        assertEquals(\"testValue\", resultMap.get(\"testKey\"));\n    }\n\n    @Test\n    public void testGetResultValueMap_WithBooleanResult() {\n        // Arrange\n        Field field = new Field();\n        field.setKey(\"testKey\");\n        validatorResults.add(field, \"testAction\", true);\n\n        // Act\n        Map<String, Object> resultMap = validatorResults.getResultValueMap();\n\n        // Assert\n        assertTrue(resultMap.isEmpty());\n    }\n\n    @Test\n    public void testGetResultValueMap_WithNullResult() {\n        // Arrange\n        Field field = new Field();\n        field.setKey(\"testKey\");\n        validatorResults.add(field, \"testAction\", true, null);\n\n        // Act\n        Map<String, Object> resultMap = validatorResults.getResultValueMap();\n\n        // Assert\n        assertTrue(resultMap.isEmpty());\n    }\n\n    @Test\n    public void testGetResultValueMap_WithMultipleResults() {\n        // Arrange\n        Field field1 = new Field();\n        field1.setKey(\"key1\");\n        validatorResults.add(field1, \"action1\", true, \"value1\");\n\n        Field field2 = new Field();\n        field2.setKey(\"key2\");\n        validatorResults.add(field2, \"action2\", true, \"value2\");\n\n        // Act\n        Map<String, Object> resultMap = validatorResults.getResultValueMap();\n\n        // Assert\n        assertEquals(2, resultMap.size());\n        assertEquals(\"value1\", resultMap.get(\"key1\"));\n        assertEquals(\"value2\", resultMap.get(\"key2\"));\n    }\n\n    @Test\n    public void testGetResultValueMap_WithEmptyResults() {\n        // Act\n        Map<String, Object> resultMap = validatorResults.getResultValueMap();\n\n        // Assert\n        assertTrue(resultMap.isEmpty());\n    }\n}\n"}]