[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_getElementsMatchingOwnTextTest {\n    private Document doc;\n\n    @BeforeEach\n    public void setUp() {\n        doc = Jsoup.parse(\"<div>Test <span>Text</span></div>\");\n    }\n\n    @Test\n    public void testGetElementsMatchingOwnTextValidRegex() {\n        Elements elements = doc.getElementsMatchingOwnText(\"Test\");\n        assertEquals(1, elements.size());\n        assertEquals(\"div\", elements.get(0).tagName());\n    }\n\n    @Test\n    public void testGetElementsMatchingOwnTextInvalidRegex() {\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            doc.getElementsMatchingOwnText(\"[invalid regex\");\n        });\n        String expectedMessage = \"Pattern syntax error: [invalid regex\";\n        String actualMessage = exception.getMessage();\n        assertTrue(actualMessage.contains(expectedMessage));\n    }\n\n    @Test\n    public void testGetElementsMatchingOwnTextNoMatch() {\n        Elements elements = doc.getElementsMatchingOwnText(\"NoMatch\");\n        assertEquals(0, elements.size());\n    }\n}\n"}]