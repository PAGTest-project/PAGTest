[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.parser.ParseSettings;\nimport org.jsoup.parser.Parser;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Comment_asXmlDeclarationTest {\n    private Comment comment;\n    private Comment decl;\n\n    @BeforeEach\n    public void setUp() {\n        comment = new Comment(\"This is a comment\");\n        decl = new Comment(\"?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?\");\n    }\n\n    @Test\n    public void testAsXmlDeclarationValid() {\n        XmlDeclaration xmlDecl = decl.asXmlDeclaration();\n        assertNotNull(xmlDecl);\n        assertEquals(\"xml\", xmlDecl.name());\n    }\n\n    @Test\n    public void testAsXmlDeclarationInvalid() {\n        XmlDeclaration xmlDecl = comment.asXmlDeclaration();\n        assertNull(xmlDecl);\n    }\n\n    @Test\n    public void testAsXmlDeclarationBogus() {\n        Comment bogusDecl = new Comment(\"!bogus\");\n        XmlDeclaration xmlDecl = bogusDecl.asXmlDeclaration();\n        assertNull(xmlDecl);\n    }\n\n    @Test\n    public void testAsXmlDeclarationEmpty() {\n        Comment emptyDecl = new Comment(\"\");\n        XmlDeclaration xmlDecl = emptyDecl.asXmlDeclaration();\n        assertNull(xmlDecl);\n    }\n\n    @Test\n    public void testAsXmlDeclarationRecursive() {\n        Comment recursiveDecl = new Comment(\"?xml?xml\");\n        XmlDeclaration xmlDecl = recursiveDecl.asXmlDeclaration();\n        assertNull(xmlDecl);\n    }\n}\n"}]