[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_expectFirstTest {\n    private Document doc;\n\n    @BeforeEach\n    public void setUp() {\n        doc = Jsoup.parse(\"<div id='test'><p>One</p><p>Two</p></div>\");\n    }\n\n    @Test\n    public void testExpectFirstWithMatch() {\n        Element div = doc.select(\"div\").first();\n        Element p = div.expectFirst(\"p\");\n        assertNotNull(p);\n        assertEquals(\"One\", p.text());\n    }\n\n    @Test\n    public void testExpectFirstWithoutMatch() {\n        Element div = doc.select(\"div\").first();\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            div.expectFirst(\"span\");\n        });\n        String expectedMessage = \"No elements matched the query 'span' on element 'div'.\";\n        String actualMessage = exception.getMessage();\n        assertTrue(actualMessage.contains(expectedMessage));\n    }\n\n    @Test\n    public void testExpectFirstInDocumentWithoutMatch() {\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            doc.expectFirst(\"span\");\n        });\n        String expectedMessage = \"No elements matched the query 'span' in the document.\";\n        String actualMessage = exception.getMessage();\n        assertTrue(actualMessage.contains(expectedMessage));\n    }\n}\n"}]