[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class Elements_outerHtmlTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        elements = new Elements();\n    }\n\n    @Test\n    public void testOuterHtmlWithSingleElement() {\n        Element element = new Element(\"div\");\n        element.appendText(\"Hello, World!\");\n        elements.add(element);\n\n        String expectedHtml = \"<div>Hello, World!</div>\";\n        assertEquals(expectedHtml, elements.outerHtml());\n    }\n\n    @Test\n    public void testOuterHtmlWithMultipleElements() {\n        Element element1 = new Element(\"div\");\n        element1.appendText(\"First Element\");\n        Element element2 = new Element(\"span\");\n        element2.appendText(\"Second Element\");\n        elements.add(element1);\n        elements.add(element2);\n\n        String expectedHtml = \"<div>First Element</div>\\n<span>Second Element</span>\";\n        assertEquals(expectedHtml, elements.outerHtml());\n    }\n\n    @Test\n    public void testOuterHtmlWithEmptyElements() {\n        String expectedHtml = \"\";\n        assertEquals(expectedHtml, elements.outerHtml());\n    }\n\n    @Test\n    public void testOuterHtmlWithNestedElements() {\n        Element parent = new Element(\"div\");\n        Element child = new Element(\"p\");\n        child.appendText(\"Nested Content\");\n        parent.appendChild(child);\n        elements.add(parent);\n\n        String expectedHtml = \"<div><p>Nested Content</p></div>\";\n        assertEquals(expectedHtml, elements.outerHtml());\n    }\n\n    @Test\n    public void testOuterHtmlWithDocument() {\n        String html = \"<html><body><div>Content</div></body></html>\";\n        Document doc = Jsoup.parse(html);\n        elements = new Elements(doc.select(\"div\"));\n\n        String expectedHtml = \"<div>Content</div>\";\n        assertEquals(expectedHtml, elements.outerHtml());\n    }\n}\n"}]