[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_removeEnforcedAttributeTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n        safelist.addTags(\"a\", \"img\");\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        safelist.addAttributes(\"img\", \"src\", \"alt\");\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.addEnforcedAttribute(\"img\", \"alt\", \"image\");\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_existingTagAndAttribute() {\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n        assertFalse(safelist.getEnforcedAttributes(\"a\").hasKey(\"rel\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_existingTagNoAttributesLeft() {\n        safelist.removeEnforcedAttribute(\"img\", \"alt\");\n        assertFalse(safelist.getEnforcedAttributes(\"img\").hasKey(\"alt\"));\n        assertTrue(safelist.getEnforcedAttributes(\"img\").isEmpty());\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_nonExistingTag() {\n        safelist.removeEnforcedAttribute(\"nonExistingTag\", \"rel\");\n        assertFalse(safelist.getEnforcedAttributes(\"nonExistingTag\").hasKey(\"rel\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_nonExistingAttribute() {\n        safelist.removeEnforcedAttribute(\"a\", \"nonExistingAttribute\");\n        assertFalse(safelist.getEnforcedAttributes(\"a\").hasKey(\"nonExistingAttribute\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_allAttributesRemoved() {\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n        safelist.removeEnforcedAttribute(\"a\", \"class\");\n        assertTrue(safelist.getEnforcedAttributes(\"a\").isEmpty());\n    }\n}\n"}]