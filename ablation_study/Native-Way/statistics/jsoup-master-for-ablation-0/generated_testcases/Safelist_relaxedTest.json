[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.jsoup.nodes.Attribute;\n\npublic class Safelist_relaxedTest {\n\n    @Test\n    public void testRelaxedSafelist() {\n        Safelist relaxedSafelist = Safelist.relaxed();\n\n        // Test tags\n        assertTrue(relaxedSafelist.isSafeTag(\"a\"));\n        assertTrue(relaxedSafelist.isSafeTag(\"img\"));\n        assertTrue(relaxedSafelist.isSafeTag(\"table\"));\n        assertFalse(relaxedSafelist.isSafeTag(\"script\"));\n\n        // Test attributes\n        assertTrue(relaxedSafelist.isSafeAttribute(\"a\", new Attribute(\"href\", \"http://example.com\")));\n        assertTrue(relaxedSafelist.isSafeAttribute(\"img\", new Attribute(\"src\", \"http://example.com/image.jpg\")));\n        assertFalse(relaxedSafelist.isSafeAttribute(\"img\", new Attribute(\"onclick\", \"alert('xss')\")));\n\n        // Test protocols\n        assertTrue(relaxedSafelist.isSafeAttribute(\"a\", new Attribute(\"href\", \"http://example.com\")));\n        assertTrue(relaxedSafelist.isSafeAttribute(\"a\", new Attribute(\"href\", \"https://example.com\")));\n        assertFalse(relaxedSafelist.isSafeAttribute(\"a\", new Attribute(\"href\", \"javascript:alert('xss')\")));\n    }\n}\n"}]