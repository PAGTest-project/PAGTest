[{"strategy": "generate", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.stream.Stream;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_joiningTest {\n\n    @Test\n    void testJoiningWithDelimiter() {\n        String result = Stream.of(\"apple\", \"banana\", \"cherry\")\n                .collect(StringUtil.joining(\", \"));\n        assertEquals(\"apple, banana, cherry\", result);\n    }\n\n    @Test\n    void testJoiningWithEmptyStream() {\n        String result = Stream.of()\n                .collect(StringUtil.joining(\", \"));\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    void testJoiningWithSingleElement() {\n        String result = Stream.of(\"apple\")\n                .collect(StringUtil.joining(\", \"));\n        assertEquals(\"apple\", result);\n    }\n\n    @Test\n    void testJoiningWithNullDelimiter() {\n        String result = Stream.of(\"apple\", \"banana\", \"cherry\")\n                .collect(StringUtil.joining(null));\n        assertEquals(\"applebananacherry\", result);\n    }\n\n    @Test\n    void testJoiningWithEmptyDelimiter() {\n        String result = Stream.of(\"apple\", \"banana\", \"cherry\")\n                .collect(StringUtil.joining(\"\"));\n        assertEquals(\"applebananacherry\", result);\n    }\n}\n"}]