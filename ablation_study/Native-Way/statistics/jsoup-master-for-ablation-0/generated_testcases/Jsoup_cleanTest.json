[{"strategy": "retry", "code": "\npackage org.jsoup;\n\nimport org.jsoup.nodes.Document;\nimport org.jsoup.safety.Safelist;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Jsoup_cleanTest {\n\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = Safelist.basic();\n    }\n\n    @Test\n    public void testCleanWithValidHtml() {\n        String bodyHtml = \"<p>Hello, world!</p>\";\n        String baseUri = \"http://example.com\";\n        String cleanedHtml = Jsoup.clean(bodyHtml, baseUri, safelist);\n        assertEquals(\"<p>Hello, world!</p>\", cleanedHtml);\n    }\n\n    @Test\n    public void testCleanWithInvalidHtml() {\n        String bodyHtml = \"<script>alert('XSS')</script>\";\n        String baseUri = \"http://example.com\";\n        String cleanedHtml = Jsoup.clean(bodyHtml, baseUri, safelist);\n        assertEquals(\"\", cleanedHtml);\n    }\n\n    @Test\n    public void testCleanWithEmptyHtml() {\n        String bodyHtml = \"\";\n        String baseUri = \"http://example.com\";\n        String cleanedHtml = Jsoup.clean(bodyHtml, baseUri, safelist);\n        assertEquals(\"\", cleanedHtml);\n    }\n\n    @Test\n    public void testCleanWithNullHtml() {\n        String bodyHtml = null;\n        String baseUri = \"http://example.com\";\n        String cleanedHtml = Jsoup.clean(bodyHtml, baseUri, safelist);\n        assertEquals(\"\", cleanedHtml);\n    }\n\n    @Test\n    public void testCleanWithRelativeLinks() {\n        String bodyHtml = \"<a href=\\\"/relative\\\">Link</a>\";\n        String baseUri = \"http://example.com\";\n        String cleanedHtml = Jsoup.clean(bodyHtml, baseUri, safelist);\n        assertEquals(\"<a href=\\\"http://example.com/relative\\\">Link</a>\", cleanedHtml);\n    }\n}\n"}]