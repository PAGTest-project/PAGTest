[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_tagNameTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\", \"http://example.com\");\n    }\n\n    @Test\n    public void testTagNameWithValidInputs() {\n        element.tagName(\"span\", \"http://example.com\");\n        assertEquals(\"span\", element.tag().getName());\n        assertEquals(\"http://example.com\", element.tag().getNamespace());\n    }\n\n    @Test\n    public void testTagNameWithEmptyTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.tagName(\"\", \"http://example.com\");\n        });\n    }\n\n    @Test\n    public void testTagNameWithEmptyNamespace() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.tagName(\"span\", \"\");\n        });\n    }\n\n    @Test\n    public void testTagNameWithNullTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.tagName(null, \"http://example.com\");\n        });\n    }\n\n    @Test\n    public void testTagNameWithNullNamespace() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.tagName(\"span\", null);\n        });\n    }\n}\n"}]