[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_removeAttrTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div id='test' class='test-class' data-attr='test-data'></div>\");\n        elements = new Elements(doc.select(\"div\"));\n    }\n\n    @Test\n    public void testRemoveAttr() {\n        elements.removeAttr(\"class\");\n        for (Element element : elements) {\n            assertFalse(element.hasAttr(\"class\"));\n        }\n    }\n\n    @Test\n    public void testRemoveAttrMultipleElements() {\n        Document doc = Jsoup.parse(\"<div id='test1' class='test-class1'></div><div id='test2' class='test-class2'></div>\");\n        elements = new Elements(doc.select(\"div\"));\n        elements.removeAttr(\"class\");\n        for (Element element : elements) {\n            assertFalse(element.hasAttr(\"class\"));\n        }\n    }\n\n    @Test\n    public void testRemoveAttrNonExistent() {\n        elements.removeAttr(\"non-existent-attr\");\n        for (Element element : elements) {\n            assertTrue(element.hasAttr(\"data-attr\"));\n        }\n    }\n\n    @Test\n    public void testRemoveAttrEmptyElements() {\n        elements = new Elements();\n        elements.removeAttr(\"class\");\n        assertFalse(elements.hasAttr(\"class\"));\n    }\n\n    @Test\n    public void testRemoveAttrWithNullKey() {\n        assertThrows(IllegalArgumentException.class, () -> elements.removeAttr(null));\n    }\n\n    @Test\n    public void testRemoveAttrWithEmptyKey() {\n        elements.removeAttr(\"\");\n        for (Element element : elements) {\n            assertTrue(element.hasAttr(\"data-attr\"));\n        }\n    }\n}\n"}]