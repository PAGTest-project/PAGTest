[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FormElement_elementsTest {\n    private FormElement formElement;\n\n    @BeforeEach\n    public void setUp() {\n        formElement = new FormElement(Tag.valueOf(\"form\"), null, null);\n    }\n\n    @Test\n    public void testElementsWithNoLinkedElements() {\n        Elements elements = formElement.elements();\n        assertTrue(elements.isEmpty());\n    }\n\n    @Test\n    public void testElementsWithLinkedElements() {\n        Element element1 = new Element(Tag.valueOf(\"input\"), null);\n        Element element2 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.addElement(element1);\n        formElement.addElement(element2);\n\n        Elements elements = formElement.elements();\n        assertEquals(2, elements.size());\n        assertTrue(elements.contains(element1));\n        assertTrue(elements.contains(element2));\n    }\n\n    @Test\n    public void testElementsWithFormChildren() {\n        Element child1 = new Element(Tag.valueOf(\"input\"), null);\n        Element child2 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.appendChild(child1);\n        formElement.appendChild(child2);\n\n        Elements elements = formElement.elements();\n        assertEquals(2, elements.size());\n        assertTrue(elements.contains(child1));\n        assertTrue(elements.contains(child2));\n    }\n\n    @Test\n    public void testElementsWithLinkedAndFormChildren() {\n        Element child1 = new Element(Tag.valueOf(\"input\"), null);\n        Element child2 = new Element(Tag.valueOf(\"input\"), null);\n        Element linked1 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.appendChild(child1);\n        formElement.appendChild(child2);\n        formElement.addElement(linked1);\n\n        Elements elements = formElement.elements();\n        assertEquals(3, elements.size());\n        assertTrue(elements.contains(child1));\n        assertTrue(elements.contains(child2));\n        assertTrue(elements.contains(linked1));\n    }\n\n    @Test\n    public void testElementsWithDuplicateLinkedElements() {\n        Element child1 = new Element(Tag.valueOf(\"input\"), null);\n        Element linked1 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.appendChild(child1);\n        formElement.addElement(linked1);\n        formElement.addElement(linked1); // Duplicate linked element\n\n        Elements elements = formElement.elements();\n        assertEquals(2, elements.size());\n        assertTrue(elements.contains(child1));\n        assertTrue(elements.contains(linked1));\n    }\n}\n"}]