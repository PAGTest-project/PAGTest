[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_removeTest {\n    private Attributes attributes;\n\n    @BeforeEach\n    public void setUp() {\n        attributes = new Attributes();\n    }\n\n    @Test\n    public void testRemoveExistingKey() {\n        attributes.put(\"key1\", \"value1\");\n        attributes.remove(\"key1\");\n        assertFalse(attributes.hasKey(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveNonExistingKey() {\n        attributes.remove(\"nonExistingKey\");\n        assertFalse(attributes.hasKey(\"nonExistingKey\"));\n    }\n\n    @Test\n    public void testRemoveIgnoreCaseExistingKey() {\n        attributes.put(\"Key1\", \"value1\");\n        attributes.removeIgnoreCase(\"key1\");\n        assertFalse(attributes.hasKey(\"Key1\"));\n    }\n\n    @Test\n    public void testRemoveIgnoreCaseNonExistingKey() {\n        attributes.removeIgnoreCase(\"nonExistingKey\");\n        assertFalse(attributes.hasKey(\"nonExistingKey\"));\n    }\n\n    @Test\n    public void testRemoveWithIndex() {\n        attributes.put(\"key1\", \"value1\");\n        attributes.put(\"key2\", \"value2\");\n        attributes.remove(0);\n        assertFalse(attributes.hasKey(\"key1\"));\n        assertTrue(attributes.hasKey(\"key2\"));\n    }\n\n    @Test\n    public void testRemoveWithInvalidIndex() {\n        assertThrows(IndexOutOfBoundsException.class, () -> attributes.remove(1));\n    }\n\n    @Test\n    public void testRemoveWithEmptyAttributes() {\n        attributes.remove(\"key1\");\n        assertFalse(attributes.hasKey(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveWithMultipleKeys() {\n        attributes.put(\"key1\", \"value1\");\n        attributes.put(\"key2\", \"value2\");\n        attributes.put(\"key3\", \"value3\");\n        attributes.remove(\"key2\");\n        assertFalse(attributes.hasKey(\"key2\"));\n        assertTrue(attributes.hasKey(\"key1\"));\n        assertTrue(attributes.hasKey(\"key3\"));\n    }\n}\n"}]