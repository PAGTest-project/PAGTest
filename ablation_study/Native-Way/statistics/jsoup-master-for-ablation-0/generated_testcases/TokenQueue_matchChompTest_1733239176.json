[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_matchChompTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"One Two\");\n    }\n\n    @Test\n    public void testMatchChomp_MatchFound() {\n        assertTrue(tokenQueue.matchChomp(\"One\"));\n        assertEquals(\" Two\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_MatchNotFound() {\n        assertFalse(tokenQueue.matchChomp(\"Three\"));\n        assertEquals(\"One Two\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_EmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        assertFalse(tokenQueue.matchChomp(\"One\"));\n        assertEquals(\"\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_PartialMatch() {\n        assertFalse(tokenQueue.matchChomp(\"One \"));\n        assertEquals(\"One Two\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_ExactMatch() {\n        assertTrue(tokenQueue.matchChomp(\"One Two\"));\n        assertEquals(\"\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_CaseInsensitiveMatch() {\n        assertTrue(tokenQueue.matchChomp(\"one two\"));\n        assertEquals(\"\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_MultipleMatches() {\n        assertTrue(tokenQueue.matchChomp(\"One\"));\n        assertTrue(tokenQueue.matchChomp(\" Two\"));\n        assertEquals(\"\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testMatchChomp_MatchAtEnd() {\n        tokenQueue = new TokenQueue(\"One Two Three\");\n        assertTrue(tokenQueue.matchChomp(\"Three\"));\n        assertEquals(\"\", tokenQueue.remainder());\n    }\n}\n"}]