[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_getElementsByTagTest {\n    private Document doc;\n\n    @BeforeEach\n    public void setUp() {\n        doc = Jsoup.parse(\"<div><p>One</p><p>Two</p><p>Three</p></div>\");\n    }\n\n    @Test\n    public void testGetElementsByTag() {\n        Elements elements = doc.getElementsByTag(\"p\");\n        assertEquals(3, elements.size());\n        assertEquals(\"One\", elements.get(0).text());\n        assertEquals(\"Two\", elements.get(1).text());\n        assertEquals(\"Three\", elements.get(2).text());\n    }\n\n    @Test\n    public void testGetElementsByTagWithEmptyTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            doc.getElementsByTag(\"\");\n        });\n    }\n\n    @Test\n    public void testGetElementsByTagWithNullTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            doc.getElementsByTag(null);\n        });\n    }\n\n    @Test\n    public void testGetElementsByTagWithNonExistentTag() {\n        Elements elements = doc.getElementsByTag(\"span\");\n        assertEquals(0, elements.size());\n    }\n}\n"}]