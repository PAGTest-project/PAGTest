[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_chompToTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"initial data\");\n    }\n\n    @Test\n    public void testChompTo() {\n        tokenQueue = new TokenQueue(\"one < two </TEXTarea>\");\n        String data = tokenQueue.chompTo(\"</TEXTarea>\");\n        assertEquals(\"one < two \", data);\n\n        tokenQueue = new TokenQueue(\"<textarea> one two < three </oops>\");\n        data = tokenQueue.chompTo(\"</textarea>\");\n        assertEquals(\"<textarea> one two < three \", data);\n    }\n\n    @Test\n    public void testChompToWithNoMatch() {\n        tokenQueue = new TokenQueue(\"no match here\");\n        String data = tokenQueue.chompTo(\"</textarea>\");\n        assertEquals(\"no match here\", data);\n    }\n\n    @Test\n    public void testChompToWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        String data = tokenQueue.chompTo(\"</textarea>\");\n        assertEquals(\"\", data);\n    }\n\n    @Test\n    public void testChompToWithExactMatch() {\n        tokenQueue = new TokenQueue(\"</textarea>\");\n        String data = tokenQueue.chompTo(\"</textarea>\");\n        assertEquals(\"\", data);\n    }\n\n    @Test\n    public void testChompToWithPartialMatch() {\n        tokenQueue = new TokenQueue(\"</textare\");\n        String data = tokenQueue.chompTo(\"</textarea>\");\n        assertEquals(\"</textare\", data);\n    }\n}\n"}]