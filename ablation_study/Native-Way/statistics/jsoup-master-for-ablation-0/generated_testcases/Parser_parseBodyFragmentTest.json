[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Parser_parseBodyFragmentTest {\n\n    @Test\n    public void testParseBodyFragment() {\n        String bodyHtml = \"<div>Test</div>\";\n        String baseUri = \"http://example.com\";\n\n        Document doc = Parser.parseBodyFragment(bodyHtml, baseUri);\n        Element body = doc.body();\n\n        assertEquals(1, body.childNodeSize());\n        assertEquals(\"div\", body.child(0).nodeName());\n        assertEquals(\"Test\", body.text());\n    }\n\n    @Test\n    public void testParseBodyFragmentWithMultipleNodes() {\n        String bodyHtml = \"<div>Test1</div><p>Test2</p>\";\n        String baseUri = \"http://example.com\";\n\n        Document doc = Parser.parseBodyFragment(bodyHtml, baseUri);\n        Element body = doc.body();\n\n        assertEquals(2, body.childNodeSize());\n        assertEquals(\"div\", body.child(0).nodeName());\n        assertEquals(\"p\", body.child(1).nodeName());\n        assertEquals(\"Test1\", body.child(0).text());\n        assertEquals(\"Test2\", body.child(1).text());\n    }\n\n    @Test\n    public void testParseBodyFragmentWithEmptyBody() {\n        String bodyHtml = \"\";\n        String baseUri = \"http://example.com\";\n\n        Document doc = Parser.parseBodyFragment(bodyHtml, baseUri);\n        Element body = doc.body();\n\n        assertEquals(0, body.childNodeSize());\n    }\n\n    @Test\n    public void testParseBodyFragmentWithNestedNodes() {\n        String bodyHtml = \"<div><p>Nested</p></div>\";\n        String baseUri = \"http://example.com\";\n\n        Document doc = Parser.parseBodyFragment(bodyHtml, baseUri);\n        Element body = doc.body();\n\n        assertEquals(1, body.childNodeSize());\n        assertEquals(\"div\", body.child(0).nodeName());\n        assertEquals(1, body.child(0).childNodeSize());\n        assertEquals(\"p\", body.child(0).child(0).nodeName());\n        assertEquals(\"Nested\", body.child(0).child(0).text());\n    }\n\n    @Test\n    public void testParseBodyFragmentWithSpecialCharacters() {\n        String bodyHtml = \"<div>&lt;Test&gt;</div>\";\n        String baseUri = \"http://example.com\";\n\n        Document doc = Parser.parseBodyFragment(bodyHtml, baseUri);\n        Element body = doc.body();\n\n        assertEquals(1, body.childNodeSize());\n        assertEquals(\"div\", body.child(0).nodeName());\n        assertEquals(\"<Test>\", body.child(0).text());\n    }\n}\n"}]