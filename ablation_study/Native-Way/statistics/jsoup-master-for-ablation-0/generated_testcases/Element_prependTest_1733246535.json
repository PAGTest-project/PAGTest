[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.parser.Parser;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_prependTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testPrependValidHtml() {\n        String html = \"<p>Test</p>\";\n        element.prepend(html);\n        assertEquals(1, element.childNodeSize());\n        assertEquals(\"Test\", element.child(0).text());\n    }\n\n    @Test\n    public void testPrependNullHtml() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.prepend(null);\n        });\n    }\n\n    @Test\n    public void testPrependEmptyHtml() {\n        String html = \"\";\n        element.prepend(html);\n        assertEquals(0, element.childNodeSize());\n    }\n\n    @Test\n    public void testPrependMultipleElements() {\n        String html = \"<p>First</p><p>Second</p>\";\n        element.prepend(html);\n        assertEquals(2, element.childNodeSize());\n        assertEquals(\"First\", element.child(0).text());\n        assertEquals(\"Second\", element.child(1).text());\n    }\n\n    @Test\n    public void testPrependWithExistingChildren() {\n        element.append(\"<p>Existing</p>\");\n        String html = \"<p>New</p>\";\n        element.prepend(html);\n        assertEquals(2, element.childNodeSize());\n        assertEquals(\"New\", element.child(0).text());\n        assertEquals(\"Existing\", element.child(1).text());\n    }\n}\n"}]