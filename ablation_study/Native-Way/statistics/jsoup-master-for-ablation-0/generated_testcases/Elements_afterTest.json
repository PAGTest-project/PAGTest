[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_afterTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div id='test'><p>Hello</p></div>\");\n        elements = doc.select(\"p\");\n    }\n\n    @Test\n    public void testAfterWithSingleElement() {\n        elements.after(\"<span>World</span>\");\n        assertEquals(\"<p>Hello</p><span>World</span>\", elements.first().outerHtml());\n    }\n\n    @Test\n    public void testAfterWithMultipleElements() {\n        Document doc = Jsoup.parse(\"<div id='test'><p>Hello</p><p>Goodbye</p></div>\");\n        elements = doc.select(\"p\");\n        elements.after(\"<span>World</span>\");\n        assertEquals(\"<p>Hello</p><span>World</span><p>Goodbye</p><span>World</span>\", doc.getElementById(\"test\").html());\n    }\n\n    @Test\n    public void testAfterWithEmptyElements() {\n        elements = new Elements();\n        elements.after(\"<span>World</span>\");\n        assertEquals(0, elements.size());\n    }\n\n    @Test\n    public void testAfterWithNullHtml() {\n        assertThrows(IllegalArgumentException.class, () -> elements.after(null));\n    }\n\n    @Test\n    public void testAfterWithEmptyHtml() {\n        elements.after(\"\");\n        assertEquals(\"<p>Hello</p>\", elements.first().outerHtml());\n    }\n}\n"}]