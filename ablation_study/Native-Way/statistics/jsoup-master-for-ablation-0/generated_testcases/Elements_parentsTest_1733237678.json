[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashSet;\nimport java.util.LinkedHashSet;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_parentsTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div><p>One</p><p>Two</p></div>\");\n        elements = new Elements(doc.select(\"p\"));\n    }\n\n    @Test\n    public void testParents() {\n        Elements parents = elements.parents();\n        assertEquals(1, parents.size());\n        assertEquals(\"div\", parents.first().tagName());\n    }\n\n    @Test\n    public void testParentsWithNoParents() {\n        Elements noParents = new Elements(new Element(\"p\"));\n        Elements parents = noParents.parents();\n        assertTrue(parents.isEmpty());\n    }\n\n    @Test\n    public void testParentsWithMultipleElements() {\n        Document doc = Jsoup.parse(\"<div><p>One</p><p>Two</p></div><div><p>Three</p></div>\");\n        elements = new Elements(doc.select(\"p\"));\n        Elements parents = elements.parents();\n        assertEquals(2, parents.size());\n        assertEquals(\"div\", parents.get(0).tagName());\n        assertEquals(\"div\", parents.get(1).tagName());\n    }\n\n    @Test\n    public void testParentsWithNestedElements() {\n        Document doc = Jsoup.parse(\"<div><p><span>One</span></p><p>Two</p></div>\");\n        elements = new Elements(doc.select(\"span\"));\n        Elements parents = elements.parents();\n        assertEquals(2, parents.size());\n        assertEquals(\"p\", parents.get(0).tagName());\n        assertEquals(\"div\", parents.get(1).tagName());\n    }\n\n    @Test\n    public void testParentsWithDuplicateParents() {\n        Document doc = Jsoup.parse(\"<div><p>One</p><p>Two</p></div>\");\n        elements = new Elements(doc.select(\"p\"));\n        Elements parents = elements.parents();\n        assertEquals(1, parents.size());\n        assertEquals(\"div\", parents.first().tagName());\n    }\n}\n"}]