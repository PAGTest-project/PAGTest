[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeIterator_restartTest {\n    private String html;\n\n    @BeforeEach\n    public void setUp() {\n        html = \"<html><head></head><body><div id='1'><p>One</p><p>Two</p></div><div id='2'><p>Three</p><p>Four</p></div></body></html>\";\n    }\n\n    @Test\n    public void testRestartWithMatchingType() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = new NodeIterator<>(doc, Node.class);\n        it.restart(doc.body().child(0)); // Restart with a div node\n        assertTrue(it.hasNext());\n        assertEquals(\"div\", it.next().nodeName());\n    }\n\n    @Test\n    public void testRestartWithNonMatchingType() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Element> it = new NodeIterator<>(doc, Element.class);\n        it.restart(doc.body().child(0).child(0)); // Restart with a p node\n        assertTrue(it.hasNext());\n        assertEquals(\"p\", it.next().nodeName());\n    }\n\n    @Test\n    public void testRestartWithRootNode() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = new NodeIterator<>(doc, Node.class);\n        it.restart(doc); // Restart with the root node\n        assertTrue(it.hasNext());\n        assertEquals(\"html\", it.next().nodeName());\n    }\n\n    @Test\n    public void testRestartWithNullNode() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = new NodeIterator<>(doc, Node.class);\n        assertThrows(NullPointerException.class, () -> it.restart(null));\n    }\n}\n"}]