[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attributes;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_getEnforcedAttributesTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testGetEnforcedAttributes_noEnforcedAttributes() {\n        Attributes attrs = safelist.getEnforcedAttributes(\"a\");\n        assertTrue(attrs.isEmpty());\n    }\n\n    @Test\n    public void testGetEnforcedAttributes_withEnforcedAttributes() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        Attributes attrs = safelist.getEnforcedAttributes(\"a\");\n        assertEquals(1, attrs.size());\n        assertEquals(\"nofollow\", attrs.get(\"rel\"));\n    }\n\n    @Test\n    public void testGetEnforcedAttributes_multipleEnforcedAttributes() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.addEnforcedAttribute(\"a\", \"target\", \"_blank\");\n        Attributes attrs = safelist.getEnforcedAttributes(\"a\");\n        assertEquals(2, attrs.size());\n        assertEquals(\"nofollow\", attrs.get(\"rel\"));\n        assertEquals(\"_blank\", attrs.get(\"target\"));\n    }\n\n    @Test\n    public void testGetEnforcedAttributes_differentTags() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.addEnforcedAttribute(\"img\", \"alt\", \"image\");\n        Attributes attrsA = safelist.getEnforcedAttributes(\"a\");\n        Attributes attrsImg = safelist.getEnforcedAttributes(\"img\");\n        assertEquals(1, attrsA.size());\n        assertEquals(\"nofollow\", attrsA.get(\"rel\"));\n        assertEquals(1, attrsImg.size());\n        assertEquals(\"image\", attrsImg.get(\"alt\"));\n    }\n\n    @Test\n    public void testGetEnforcedAttributes_removeEnforcedAttribute() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n        Attributes attrs = safelist.getEnforcedAttributes(\"a\");\n        assertTrue(attrs.isEmpty());\n    }\n}\n"}]