[{"strategy": "retry", "code": "\npackage org.jsoup.helper;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.TextNode;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class W3CDom_sourceNodesTest {\n    private W3CDom w3cDom;\n\n    @BeforeEach\n    public void setUp() {\n        w3cDom = new W3CDom();\n    }\n\n    @Test\n    public void testSourceNodesWithTextNode() throws ParserConfigurationException {\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        Document doc = factory.newDocumentBuilder().newDocument();\n        Node textNode = doc.createTextNode(\"test text\");\n        textNode.setUserData(W3CDom.SourceProperty, new TextNode(\"test text\"), null);\n        doc.appendChild(textNode);\n        NodeList nodeList = doc.getChildNodes();\n\n        List<TextNode> textNodes = w3cDom.sourceNodes(nodeList, TextNode.class);\n        assertEquals(1, textNodes.size());\n        assertEquals(\"test text\", textNodes.get(0).getWholeText());\n    }\n\n    @Test\n    public void testSourceNodesWithElement() throws ParserConfigurationException {\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        Document doc = factory.newDocumentBuilder().newDocument();\n        Element element = Jsoup.parse(\"<div>test element</div>\").body().child(0);\n        Node w3cElement = doc.createElement(\"div\");\n        w3cElement.setUserData(W3CDom.SourceProperty, element, null);\n        doc.appendChild(w3cElement);\n        NodeList nodeList = doc.getChildNodes();\n\n        List<Element> elements = w3cDom.sourceNodes(nodeList, Element.class);\n        assertEquals(1, elements.size());\n        assertEquals(\"div\", elements.get(0).tagName());\n        assertEquals(\"test element\", elements.get(0).text());\n    }\n\n    @Test\n    public void testSourceNodesWithEmptyNodeList() {\n        NodeList emptyNodeList = new NodeList() {\n            @Override\n            public Node item(int index) {\n                return null;\n            }\n\n            @Override\n            public int getLength() {\n                return 0;\n            }\n        };\n\n        List<TextNode> textNodes = w3cDom.sourceNodes(emptyNodeList, TextNode.class);\n        assertTrue(textNodes.isEmpty());\n    }\n\n    @Test\n    public void testSourceNodesWithMixedNodes() throws ParserConfigurationException {\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        Document doc = factory.newDocumentBuilder().newDocument();\n        Element element = Jsoup.parse(\"<div>test element</div>\").body().child(0);\n        Node w3cElement = doc.createElement(\"div\");\n        w3cElement.setUserData(W3CDom.SourceProperty, element, null);\n        Node textNode = doc.createTextNode(\"test text\");\n        textNode.setUserData(W3CDom.SourceProperty, new TextNode(\"test text\"), null);\n        doc.appendChild(w3cElement);\n        doc.appendChild(textNode);\n        NodeList nodeList = doc.getChildNodes();\n\n        List<Element> elements = w3cDom.sourceNodes(nodeList, Element.class);\n        assertEquals(1, elements.size());\n        assertEquals(\"div\", elements.get(0).tagName());\n        assertEquals(\"test element\", elements.get(0).text());\n\n        List<TextNode> textNodes = w3cDom.sourceNodes(nodeList, TextNode.class);\n        assertEquals(1, textNodes.size());\n        assertEquals(\"test text\", textNodes.get(0).getWholeText());\n    }\n}\n"}]