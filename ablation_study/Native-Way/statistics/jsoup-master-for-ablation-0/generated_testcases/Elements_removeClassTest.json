[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_removeClassTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div class='test'>Test</div><div class='remove'>Remove</div>\");\n        elements = doc.select(\"div\");\n    }\n\n    @Test\n    public void testRemoveClass() {\n        elements.removeClass(\"remove\");\n        assertFalse(elements.get(0).hasClass(\"remove\"));\n        assertFalse(elements.get(1).hasClass(\"remove\"));\n    }\n\n    @Test\n    public void testRemoveClassNoClass() {\n        elements.removeClass(\"nonexistent\");\n        assertFalse(elements.get(0).hasClass(\"nonexistent\"));\n        assertFalse(elements.get(1).hasClass(\"nonexistent\"));\n    }\n\n    @Test\n    public void testRemoveClassEmptyClass() {\n        elements.removeClass(\"\");\n        assertFalse(elements.get(0).hasClass(\"\"));\n        assertFalse(elements.get(1).hasClass(\"\"));\n    }\n\n    @Test\n    public void testRemoveClassNullClass() {\n        elements.removeClass(null);\n        assertFalse(elements.get(0).hasClass(\"\"));\n        assertFalse(elements.get(1).hasClass(\"\"));\n    }\n\n    @Test\n    public void testRemoveClassMultipleClasses() {\n        Document doc = Jsoup.parse(\"<div class='test remove'>Test</div><div class='remove test'>Remove</div>\");\n        elements = doc.select(\"div\");\n        elements.removeClass(\"remove\");\n        assertFalse(elements.get(0).hasClass(\"remove\"));\n        assertFalse(elements.get(1).hasClass(\"remove\"));\n    }\n}\n"}]