[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_unescapeTest {\n\n    @BeforeEach\n    public void setUp() {\n        // No setup required for static method\n    }\n\n    @Test\n    public void testUnescapeWithNoEscapes() {\n        String input = \"no escapes here\";\n        String expected = \"no escapes here\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n\n    @Test\n    public void testUnescapeWithSingleEscape() {\n        String input = \"single\\\\escape\";\n        String expected = \"singleescape\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n\n    @Test\n    public void testUnescapeWithMultipleEscapes() {\n        String input = \"multi\\\\ple\\\\escapes\";\n        String expected = \"multiplescapes\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n\n    @Test\n    public void testUnescapeWithConsecutiveEscapes() {\n        String input = \"consecutive\\\\\\\\escapes\";\n        String expected = \"consecutive\\\\escapes\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n\n    @Test\n    public void testUnescapeWithEscapeAtEnd() {\n        String input = \"escape at end\\\\\";\n        String expected = \"escape at end\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n\n    @Test\n    public void testUnescapeWithEmptyString() {\n        String input = \"\";\n        String expected = \"\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n\n    @Test\n    public void testUnescapeWithOnlyEscapes() {\n        String input = \"\\\\\\\\\\\\\\\\\";\n        String expected = \"\\\\\\\\\";\n        assertEquals(expected, TokenQueue.unescape(input));\n    }\n}\n"}]