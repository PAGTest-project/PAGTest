[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_wrapTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div><p>Hello</p><p>World</p></div>\");\n        elements = doc.select(\"p\");\n    }\n\n    @Test\n    public void testWrapWithValidHtml() {\n        Elements result = elements.wrap(\"<div class='wrapper'></div>\");\n        assertEquals(\"<div class=\\\"wrapper\\\"><p>Hello</p></div><div class=\\\"wrapper\\\"><p>World</p></div>\", result.outerHtml().replaceAll(\"\\\\s+\", \"\"));\n    }\n\n    @Test\n    public void testWrapWithEmptyHtml() {\n        assertThrows(IllegalArgumentException.class, () -> elements.wrap(\"\"));\n    }\n\n    @Test\n    public void testWrapWithNullHtml() {\n        assertThrows(IllegalArgumentException.class, () -> elements.wrap(null));\n    }\n\n    @Test\n    public void testWrapWithInvalidHtml() {\n        assertThrows(IllegalArgumentException.class, () -> elements.wrap(\"invalid html\"));\n    }\n}\n"}]