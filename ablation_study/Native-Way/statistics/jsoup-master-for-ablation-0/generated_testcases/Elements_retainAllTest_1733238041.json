[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.Collections;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_retainAllTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        elements = new Elements();\n    }\n\n    @Test\n    public void testRetainAllWithEmptyCollection() {\n        elements.addAll(Arrays.asList(new Element(\"div\"), new Element(\"span\")));\n        assertFalse(elements.retainAll(Collections.emptyList()));\n        assertEquals(2, elements.size());\n    }\n\n    @Test\n    public void testRetainAllWithNonEmptyCollection() {\n        Element div = new Element(\"div\");\n        Element span = new Element(\"span\");\n        elements.addAll(Arrays.asList(div, span));\n        assertTrue(elements.retainAll(Collections.singletonList(div)));\n        assertEquals(1, elements.size());\n        assertTrue(elements.contains(div));\n        assertFalse(elements.contains(span));\n    }\n\n    @Test\n    public void testRetainAllWithAllElementsToRetain() {\n        Element div = new Element(\"div\");\n        Element span = new Element(\"span\");\n        elements.addAll(Arrays.asList(div, span));\n        assertFalse(elements.retainAll(Arrays.asList(div, span)));\n        assertEquals(2, elements.size());\n    }\n\n    @Test\n    public void testRetainAllWithNoElementsToRetain() {\n        Element div = new Element(\"div\");\n        Element span = new Element(\"span\");\n        elements.addAll(Arrays.asList(div, span));\n        assertTrue(elements.retainAll(Collections.singletonList(new Element(\"p\"))));\n        assertTrue(elements.isEmpty());\n    }\n\n    @Test\n    public void testRetainAllWithNullCollection() {\n        elements.addAll(Arrays.asList(new Element(\"div\"), new Element(\"span\")));\n        assertThrows(NullPointerException.class, () -> elements.retainAll(null));\n    }\n}\n"}]