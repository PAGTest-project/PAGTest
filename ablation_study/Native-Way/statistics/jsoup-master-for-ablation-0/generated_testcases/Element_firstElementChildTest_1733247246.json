[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_firstElementChildTest {\n\n    private Document doc;\n\n    @BeforeEach\n    public void setUp() {\n        String html = \"<body><div><p>One</p><span>Two</span></div><div>Three</div></body>\";\n        doc = Jsoup.parse(html);\n    }\n\n    @Test\n    public void testFirstElementChildWithElementChild() {\n        Element div = doc.selectFirst(\"div\");\n        assertNotNull(div);\n        Element firstElementChild = div.firstElementChild();\n        assertNotNull(firstElementChild);\n        assertEquals(\"p\", firstElementChild.tagName());\n        assertEquals(\"One\", firstElementChild.text());\n    }\n\n    @Test\n    public void testFirstElementChildWithoutElementChild() {\n        Element div = doc.select(\"div\").last();\n        assertNotNull(div);\n        Element firstElementChild = div.firstElementChild();\n        assertNull(firstElementChild);\n    }\n\n    @Test\n    public void testFirstElementChildWithNoChildren() {\n        Element emptyDiv = new Element(\"div\");\n        Element firstElementChild = emptyDiv.firstElementChild();\n        assertNull(firstElementChild);\n    }\n\n    @Test\n    public void testFirstElementChildWithMixedChildren() {\n        String html = \"<div><p>One</p><span>Two</span><text>Three</text></div>\";\n        Document mixedDoc = Jsoup.parse(html);\n        Element div = mixedDoc.selectFirst(\"div\");\n        assertNotNull(div);\n        Element firstElementChild = div.firstElementChild();\n        assertNotNull(firstElementChild);\n        assertEquals(\"p\", firstElementChild.tagName());\n        assertEquals(\"One\", firstElementChild.text());\n    }\n}\n"}]