[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeToAnyTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"one < two </TEXTarea>\");\n    }\n\n    @Test\n    public void testConsumeToAnyWithMatch() {\n        String result = tokenQueue.consumeToAny(\"</TEXTarea>\");\n        assertEquals(\"one < two \", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithoutMatch() {\n        tokenQueue = new TokenQueue(\"one < two </TEXTarea>\");\n        String result = tokenQueue.consumeToAny(\"</oops>\");\n        assertEquals(\"one < two </TEXTarea>\", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        String result = tokenQueue.consumeToAny(\"</TEXTarea>\");\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithMultipleMatches() {\n        tokenQueue = new TokenQueue(\"one < two </TEXTarea> three < four </TEXTarea>\");\n        String result = tokenQueue.consumeToAny(\"</TEXTarea>\", \"</TEXTarea>\");\n        assertEquals(\"one < two \", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithNoQueueAdvance() {\n        tokenQueue = new TokenQueue(\"one < two </TEXTarea>\");\n        tokenQueue.consumeToAny(\"</TEXTarea>\");\n        assertEquals(\"</TEXTarea>\", tokenQueue.remainder());\n    }\n}\n"}]