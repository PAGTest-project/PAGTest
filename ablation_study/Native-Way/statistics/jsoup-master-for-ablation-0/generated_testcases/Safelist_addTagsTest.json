[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_addTagsTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testAddTags_ValidTags() {\n        safelist.addTags(\"a\", \"b\", \"p\");\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"b\"));\n        assertTrue(safelist.isSafeTag(\"p\"));\n    }\n\n    @Test\n    public void testAddTags_NullTags() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addTags((String[]) null);\n        });\n    }\n\n    @Test\n    public void testAddTags_EmptyTag() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addTags(\"\");\n        });\n    }\n\n    @Test\n    public void testAddTags_UnsupportedTag() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addTags(\"noscript\");\n        });\n    }\n\n    @Test\n    public void testAddTags_MixedValidAndInvalidTags() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addTags(\"a\", \"noscript\", \"p\");\n        });\n    }\n}\n"}]