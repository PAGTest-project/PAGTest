[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Connection;\nimport org.jsoup.Jsoup;\nimport org.jsoup.helper.HttpConnection;\nimport org.jsoup.helper.Validate;\nimport org.jsoup.internal.SharedConstants;\nimport org.jsoup.internal.StringUtil;\nimport org.jsoup.parser.Tag;\nimport org.jsoup.select.Elements;\nimport org.jsoup.select.Evaluator;\nimport org.jsoup.select.QueryParser;\nimport org.jspecify.annotations.Nullable;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FormElement_submitTest {\n\n    private FormElement formElement;\n\n    @BeforeEach\n    public void setUp() {\n        formElement = new FormElement(Tag.valueOf(\"form\"), \"http://example.com\", null);\n    }\n\n    @Test\n    public void testSubmitWithActionAttribute() {\n        formElement.attr(\"action\", \"http://example.com/submit\");\n        formElement.attr(\"method\", \"POST\");\n\n        Connection connection = formElement.submit();\n        assertEquals(\"http://example.com/submit\", connection.request().url().toString());\n        assertEquals(Connection.Method.POST, connection.request().method());\n    }\n\n    @Test\n    public void testSubmitWithoutActionAttribute() {\n        formElement.attr(\"method\", \"GET\");\n\n        Connection connection = formElement.submit();\n        assertEquals(\"http://example.com\", connection.request().url().toString());\n        assertEquals(Connection.Method.GET, connection.request().method());\n    }\n\n    @Test\n    public void testSubmitWithOwnerDocument() {\n        Document owner = new Document(\"http://example.com\");\n        formElement.attr(\"action\", \"http://example.com/submit\");\n        formElement.attr(\"method\", \"POST\");\n        formElement.ownerDocument = () -> owner;\n\n        Connection connection = formElement.submit();\n        assertEquals(\"http://example.com/submit\", connection.request().url().toString());\n        assertEquals(Connection.Method.POST, connection.request().method());\n    }\n\n    @Test\n    public void testSubmitWithoutOwnerDocument() {\n        formElement.attr(\"action\", \"http://example.com/submit\");\n        formElement.attr(\"method\", \"POST\");\n\n        Connection connection = formElement.submit();\n        assertEquals(\"http://example.com/submit\", connection.request().url().toString());\n        assertEquals(Connection.Method.POST, connection.request().method());\n    }\n\n    @Test\n    public void testSubmitWithEmptyAction() {\n        formElement.attr(\"action\", \"\");\n        formElement.attr(\"method\", \"POST\");\n\n        assertThrows(IllegalArgumentException.class, () -> formElement.submit());\n    }\n\n    @Test\n    public void testSubmitWithInvalidMethod() {\n        formElement.attr(\"action\", \"http://example.com/submit\");\n        formElement.attr(\"method\", \"INVALID\");\n\n        Connection connection = formElement.submit();\n        assertEquals(\"http://example.com/submit\", connection.request().url().toString());\n        assertEquals(Connection.Method.GET, connection.request().method());\n    }\n}\n"}]