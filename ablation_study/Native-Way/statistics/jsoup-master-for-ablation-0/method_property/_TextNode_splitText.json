{"target_method": "splitText", "signature": "TextNode splitText(int)", "direct_enhancements": [{"method_name": "text(String)", "relation_type": "Behavioral Similarity", "confidence": 0.85, "reason": "Both methods manipulate text content, but 'text' sets the text while 'splitText' splits it.", "is_external": false}, {"method_name": "getWholeText()", "relation_type": "Behavioral Similarity", "confidence": 0.9, "reason": "Both methods deal with retrieving or manipulating the text content of the node.", "is_external": false}, {"method_name": "isBlank()", "relation_type": "Behavioral Similarity", "confidence": 0.8, "reason": "Both methods process text content, with 'isBlank' checking if the text is empty or only whitespace.", "is_external": false}, {"method_name": "escape(String, OutputSettings)", "relation_type": "Structural Similarity", "confidence": 0.75, "reason": "Both methods involve string manipulation and validation, though 'escape' focuses on HTML encoding.", "is_external": true, "class_name": "Entities"}, {"method_name": "unescape(String)", "relation_type": "Structural Similarity", "confidence": 0.7, "reason": "Both methods involve string manipulation, with 'unescape' decoding HTML entities.", "is_external": true, "class_name": "Entities"}, {"method_name": "normaliseWhitespace(String)", "relation_type": "Behavioral Similarity", "confidence": 0.8, "reason": "Both methods handle whitespace in text content, though 'normaliseWhitespace' specifically normalizes it.", "is_external": false}, {"method_name": "stripLeadingWhitespace(String)", "relation_type": "Behavioral Similarity", "confidence": 0.75, "reason": "Both methods deal with whitespace handling, with 'stripLeadingWhitespace' removing leading whitespace.", "is_external": false}, {"method_name": "createElement(String)", "relation_type": "Dependency", "confidence": 0.65, "reason": "Both methods involve creating or manipulating elements, though 'createElement' focuses on creating new elements.", "is_external": true, "class_name": "Document"}]}