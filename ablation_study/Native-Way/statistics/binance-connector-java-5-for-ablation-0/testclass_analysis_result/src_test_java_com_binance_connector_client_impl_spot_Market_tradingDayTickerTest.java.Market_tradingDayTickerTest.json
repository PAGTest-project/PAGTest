{"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_tradingDayTickerTest.java", "testclass_name": "Market_tradingDayTickerTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_tradingDayTickerTest", "description": "Unit tests for the tradingDayTicker method in the Market class, covering different scenarios with symbol and symbols parameters.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "path", "type": "final String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testTradingDayTickerWithSymbol", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Market", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "path", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method with a single symbol parameter."}, {"name": "testTradingDayTickerWithSymbols", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Market", "LinkedHashMap", "ArrayList", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "path", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method with multiple symbols parameter."}, {"name": "testTradingDayTickerWithBothSymbolAndSymbols", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "LinkedHashMap", "ArrayList", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method with both symbol and symbols parameters, expecting an exception."}, {"name": "testTradingDayTickerWithoutSymbolOrSymbols", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method without symbol or symbols parameters, expecting an exception."}]}