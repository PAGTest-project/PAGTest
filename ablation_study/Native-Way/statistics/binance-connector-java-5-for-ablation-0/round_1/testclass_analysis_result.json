[{"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkRequiredParameterTest.java", "testclass_name": "ParameterChecker_checkRequiredParameterTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import java.util.HashMap;", "import java.util.Map;"], "name": "ParameterChecker_checkRequiredParameterTest", "description": "Unit tests for the ParameterChecker.checkRequiredParameter method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCheckRequiredParameterPresent", "primary_tested": ["ParameterChecker.checkRequiredParameter(Map<String,Object>,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the ParameterChecker.checkRequiredParameter method does not throw an exception when the required parameter is present."}, {"name": "testCheckRequiredParameterMissing", "primary_tested": ["ParameterChecker.checkRequiredParameter(Map<String,Object>,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map", "BinanceConnectorException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the ParameterChecker.checkRequiredParameter method throws a BinanceConnectorException when the required parameter is missing."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_addKeyValueTest.java", "testclass_name": "JSONParser_addKeyValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.json.JSONObject;", "import org.junit.Test;", "import static org.junit.Assert.*;"], "name": "JSONParser_addKeyValueTest", "description": "Unit tests for the addKeyValue method in the JSONParser class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testAddKeyValueWithNullParameters", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method with null parameters."}, {"name": "testAddKeyValueWithExistingParameters", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method with existing parameters."}, {"name": "testAddKeyValueWithNullValue", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method with a null value."}, {"name": "testAddKeyValueWithExistingKey", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method with an existing key."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_getJSONIntValueTest.java", "testclass_name": "JSONParser_getJSONIntValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONException;", "import org.junit.Test;"], "name": "JSONParser_getJSONIntValueTest", "description": "Unit tests for the JSONParser.getJSONIntValue method.", "class_members": {"variables": [{"name": "mockJson", "type": "String"}]}, "fixtures": [], "test_cases": [{"name": "testGetJSONIntValueSuccess", "primary_tested": ["JSONParser.getJSONIntValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "mockJson", "type": "variable"}]}, "category": "unit", "description": "Tests the successful retrieval of an integer value from a JSON string using JSONParser."}, {"name": "testGetJSONIntValueThrowException", "primary_tested": ["JSONParser.getJSONIntValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "mockJson", "type": "variable"}]}, "category": "unit", "description": "Tests that JSONParser.getJSONIntValue throws a JSONException when an invalid key is provided."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_sortJSONObjectTest.java", "testclass_name": "JSONParser_sortJSONObjectTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.json.JSONObject;", "import org.junit.Before;", "import org.junit.Test;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import static org.junit.Assert.assertEquals;"], "name": "JSONParser_sortJSONObjectTest", "description": "Unit tests for the JSONParser.sortJSONObject method.", "class_members": {"variables": [{"name": "testJson", "type": "JSONObject"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSortJSONObject", "primary_tested": ["JSONParser.sortJSONObject(JSONObject)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser", "LinkedHashMap", "Map"], "class_members": [{"name": "testJson", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the sorting functionality of the JSONParser.sortJSONObject method with a non-empty JSON object."}, {"name": "testSortJSONObjectEmpty", "primary_tested": ["JSONParser.sortJSONObject(JSONObject)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser", "LinkedHashMap", "Map"]}, "category": "unit", "description": "Tests the sorting functionality of the JSONParser.sortJSONObject method with an empty JSON object."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_smallLiabilityExchangeHistoryTest.java", "testclass_name": "Margin_smallLiabilityExchangeHistoryTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Margin_smallLiabilityExchangeHistoryTest", "description": "Test for the small liability exchange history functionality in the Margin module of the SpotClient.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSmallLiabilityExchangeHistory", "primary_tested": ["Margin.smallLiabilityExchangeHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the small liability exchange history functionality of the Margin module in the SpotClient."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkParameterTypeTest.java", "testclass_name": "ParameterChecker_checkParameterTypeTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import java.util.HashMap;", "import java.util.Map;"], "name": "ParameterChecker_checkParameterTypeTest", "description": "Unit tests for the ParameterChecker.checkParameterType method, focusing on valid and invalid parameter types.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCheckParameterTypeValid", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ParameterChecker.checkParameterType method with a valid parameter type."}, {"name": "testCheckParameterTypeInvalid", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map", "BinanceConnectorException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ParameterChecker.checkParameterType method with an invalid parameter type, expecting a BinanceConnectorException."}, {"name": "testCheckParameterTypeEmptyString", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map", "BinanceConnectorException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ParameterChecker.checkParameterType method with an empty string parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_buildStreamUrlTest.java", "testclass_name": "UrlBuilder_buildStreamUrlTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.assertEquals;", "import java.util.ArrayList;"], "name": "UrlBuilder_buildStreamUrlTest", "description": "Unit tests for the buildStreamUrl method in the UrlBuilder class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testBuildStreamUrlWithEmptyStreams", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList"]}, "category": "unit", "description": "Tests the buildStreamUrl method with an empty list of streams."}, {"name": "testBuildStreamUrlWithSingleStream", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList"]}, "category": "unit", "description": "Tests the buildStreamUrl method with a single stream in the list."}, {"name": "testBuildStreamUrlWithMultipleStreams", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList"]}, "category": "unit", "description": "Tests the buildStreamUrl method with multiple streams in the list."}, {"name": "testBuildStreamUrlWithNullStreams", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList"]}, "category": "unit", "description": "Tests the buildStreamUrl method with a null list of streams."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_joinStreamUrlsTest.java", "testclass_name": "UrlBuilder_joinStreamUrlsTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import java.util.ArrayList;"], "name": "UrlBuilder_joinStreamUrlsTest", "description": "Unit tests for the joinStreamUrls method in the UrlBuilder class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testJoinStreamUrlsWithEmptyStreams", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList", "StringBuilder"]}, "category": "unit", "description": "Tests the joinStreamUrls method with an empty list of streams."}, {"name": "testJoinStreamUrlsWithNullStreams", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList", "StringBuilder"]}, "category": "unit", "description": "Tests the joinStreamUrls method with a null list of streams."}, {"name": "testJoinStreamUrlsWithSingleStream", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList", "StringBuilder"]}, "category": "unit", "description": "Tests the joinStreamUrls method with a single stream in the list."}, {"name": "testJoinStreamUrlsWithMultipleStreams", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList", "StringBuilder"]}, "category": "unit", "description": "Tests the joinStreamUrls method with multiple streams in the list."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_getJSONStringValueTest.java", "testclass_name": "JSONParser_getJSONStringValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONException;", "import org.junit.Test;"], "name": "JSONParser_getJSONStringValueTest", "description": "Unit tests for the JSONParser.getJSONStringValue method.", "class_members": {"variables": [{"name": "validJson", "type": "String"}, {"name": "invalidJson", "type": "String"}]}, "test_cases": [{"name": "testGetJSONStringValueSuccess", "primary_tested": ["JSONParser.getJSONStringValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "validJson", "type": "variable"}]}, "category": "unit", "description": "Tests the successful retrieval of a JSON string value when the key is valid."}, {"name": "testGetJSONStringValueInvalidKey", "primary_tested": ["JSONParser.getJSONStringValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "validJson", "type": "variable"}]}, "category": "unit", "description": "Tests that a JSONException is thrown when the key is invalid."}, {"name": "testGetJSONStringValueInvalidJson", "primary_tested": ["JSONParser.getJSONStringValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "invalidJson", "type": "variable"}]}, "category": "unit", "description": "Tests that a JSONException is thrown when the JSON string is invalid."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkOneOfParametersRequiredTest.java", "testclass_name": "ParameterChecker_checkOneOfParametersRequiredTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONObject;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;"], "name": "ParameterChecker_checkOneOfParametersRequiredTest", "description": "Unit tests for the ParameterChecker.checkOneOfParametersRequired method, which validates that at least one of the specified parameters is present in the provided JSONObject.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCheckOneOfParametersRequired_AllParametersMissing", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "BinanceConnectorException", "ParameterChecker"]}, "category": "unit", "description": "Tests that a BinanceConnectorException is thrown when none of the specified parameters are present in the JSONObject."}, {"name": "testCheckOneOfParametersRequired_OneParameterPresent", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"]}, "category": "unit", "description": "Tests that no exception is thrown when at least one of the specified parameters is present in the JSONObject."}, {"name": "testCheckOneOfParametersRequired_NullParams", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["BinanceConnectorException", "ParameterChecker"]}, "category": "unit", "description": "Tests that a BinanceConnectorException is thrown when the provided JSONObject is null."}, {"name": "testCheckOneOfParametersRequired_AllParametersPresent", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"]}, "category": "unit", "description": "Tests that no exception is thrown when all of the specified parameters are present in the JSONObject."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_processIdTest.java", "testclass_name": "ParameterChecker_processIdTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import java.util.UUID;"], "name": "ParameterChecker_processIdTest", "description": "Unit tests for the ParameterChecker.processId method with various input types.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testProcessIdWithInteger", "primary_tested": ["ParameterChecker.processId(int,String)"], "external_dependencies": {"modules": ["ParameterChecker"]}, "category": "unit", "description": "Tests the processId method with an integer input."}, {"name": "testProcessIdWithNonEmptyString", "primary_tested": ["ParameterChecker.processId(String,String)"], "external_dependencies": {"modules": ["ParameterChecker"]}, "category": "unit", "description": "Tests the processId method with a non-empty string input."}, {"name": "testProcessIdWithEmptyString", "primary_tested": ["ParameterChecker.processId(String,String)"], "external_dependencies": {"modules": ["ParameterChecker"]}, "category": "unit", "description": "Tests the processId method with an empty string input."}, {"name": "testProcessIdWithNull", "primary_tested": ["ParameterChecker.processId(Object,String)"], "external_dependencies": {"modules": ["ParameterChecker"]}, "category": "unit", "description": "Tests the processId method with a null input."}, {"name": "testProcessIdWithInvalidType", "primary_tested": ["ParameterChecker.processId(Object,String)"], "external_dependencies": {"modules": ["ParameterChecker", "BinanceConnectorException"]}, "category": "unit", "description": "Tests the processId method with an invalid type input, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkOnlyOneOfParametersTest.java", "testclass_name": "ParameterChecker_checkOnlyOneOfParametersTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONObject;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;"], "name": "ParameterChecker_checkOnlyOneOfParametersTest", "description": "Unit tests for the ParameterChecker.checkOnlyOneOfParameters method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCheckOnlyOneOfParameters_NoParameters", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method with no parameters."}, {"name": "testCheckOnlyOneOfParameters_OneParameter", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method with one parameter."}, {"name": "testCheckOnlyOneOfParameters_MultipleParameters", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker", "BinanceConnectorException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method with multiple parameters, expecting a BinanceConnectorException."}, {"name": "testCheckOnlyOneOfParameters_NullParams", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method with null parameters."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubDepositTest.java", "testclass_name": "SubAccount_managedSubDepositTest", "dependencies": ["package unit.spot.subaccount;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_managedSubDepositTest", "description": "Tests for the managed sub-account deposit functionality using the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testManagedSubDepositWithoutParameters", "primary_tested": ["SubAccount.managedSubDeposit(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account deposit functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testManagedSubDeposit", "primary_tested": ["SubAccount.managedSubDeposit(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account deposit functionality with parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_pullValueTest.java", "testclass_name": "JSONParser_pullValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.json.JSONObject;", "import org.junit.Before;", "import org.junit.Test;", "import static org.junit.Assert.*;"], "name": "JSONParser_pullValueTest", "description": "Unit tests for the JSONParser.pullValue method.", "class_members": {"variables": [{"name": "parameters", "type": "JSONObject"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testPullValueExistingKey", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"], "class_members": [{"name": "parameters", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the pullValue method with an existing key in the JSONObject."}, {"name": "testPullValueNonExistingKey", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"], "class_members": [{"name": "parameters", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the pullValue method with a non-existing key in the JSONObject."}, {"name": "testPullValueNullParameters", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "external_dependencies": {"modules": ["JSONParser"]}, "category": "unit", "description": "Tests the pullValue method with null parameters."}, {"name": "testPullValueMultipleKeys", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"], "class_members": [{"name": "parameters", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the pullValue method with multiple keys in the JSONObject."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_newOrderTest.java", "testclass_name": "Trade_newOrderTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Trade_newOrderTest", "description": "Unit tests for the newOrder method in the Trade class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "trade", "type": "Trade"}]}, "fixtures": ["init"], "test_cases": [{"name": "testNewOrderWithoutParameters", "primary_tested": ["Trade.newOrder(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "BinanceConnectorException", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "trade", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the newOrder method in Trade class without providing any parameters, expecting a BinanceConnectorException."}, {"name": "testNewOrderWithValidParameters", "primary_tested": ["Trade.newOrder(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "trade", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the newOrder method in Trade class with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_earningListTest.java", "testclass_name": "Mining_earningListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_earningListTest", "description": "Tests for the earning list functionality in the Mining module of the SpotClient.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testEarningListWithoutParameters", "primary_tested": ["Mining.earningList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the earning list functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testEarningListWithParameters", "primary_tested": ["Mining.earningList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the earning list functionality with parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_collateralRepayRateTest.java", "testclass_name": "CryptoLoans_collateralRepayRateTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_collateralRepayRateTest", "description": "Tests for the collateral repay rate functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testCollateralRepayRateWithoutParameters", "primary_tested": ["CryptoLoans.collateralRepayRate(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the collateral repay rate functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testCollateralRepayRateWithParameters", "primary_tested": ["CryptoLoans.collateralRepayRate(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the collateral repay rate functionality with parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_bookTickerTest.java", "testclass_name": "Market_bookTickerTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_bookTickerTest", "description": "Tests for the bookTicker functionality in the Market class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testBookTickerWithSymbol", "primary_tested": ["Market.bookTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the bookTicker method with a single symbol."}, {"name": "testBookTickerWithSymbols", "primary_tested": ["Market.bookTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the bookTicker method with multiple symbols."}, {"name": "testBookTickerWithSymbolAndSymbols", "primary_tested": ["Market.bookTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the bookTicker method with both a single symbol and multiple symbols, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_cancelReplaceTest.java", "testclass_name": "Trade_cancelReplaceTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Trade_cancelReplaceTest", "description": "Tests for the cancelReplace functionality in the Trade API of the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testCancelReplace", "primary_tested": ["Trade.cancelReplace(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cancelReplace functionality with required parameters."}, {"name": "testCancelReplaceWithoutRequiredParameters", "primary_tested": ["Trade.cancelReplace(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cancelReplace functionality without required parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedSubscriptionPreviewTest.java", "testclass_name": "SimpleEarn_lockedSubscriptionPreviewTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_lockedSubscriptionPreviewTest", "description": "Tests for the locked subscription preview functionality in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testLockedSubscriptionPreviewWithoutParameters", "primary_tested": ["SimpleEarn.lockedSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the locked subscription preview method when no parameters are provided, expecting a BinanceConnectorException."}, {"name": "testLockedSubscriptionPreviewWithParameters", "primary_tested": ["SimpleEarn.lockedSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the locked subscription preview method with parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresInternalTransferTest.java", "testclass_name": "SubAccount_futuresInternalTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_futuresInternalTransferTest", "description": "Tests for internal futures transfers between sub-accounts.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesInternalTransfer", "primary_tested": ["SubAccount.futuresInternalTransfer(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the internal futures transfer functionality between sub-accounts."}, {"name": "testFuturesInternalTransferMissingParameters", "primary_tested": ["SubAccount.futuresInternalTransfer(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when required parameters for internal futures transfer are missing."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_getIpRestrictionTest.java", "testclass_name": "SubAccount_getIpRestrictionTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_getIpRestrictionTest", "description": "Tests for the IP restriction functionality of the SubAccount API.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testGetIpRestriction", "primary_tested": ["SubAccount.getIpRestriction(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the IP restriction retrieval functionality for a sub-account with valid parameters."}, {"name": "testGetIpRestrictionWithoutParameters", "primary_tested": ["SubAccount.getIpRestriction(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the IP restriction retrieval functionality for a sub-account without required parameters, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_accountListTest.java", "testclass_name": "Mining_accountListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_accountListTest", "description": "Tests for the account list functionality in the Mining module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testAccountList", "primary_tested": ["Mining.accountList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the account list functionality with valid parameters."}, {"name": "testAccountListWithoutParameters", "primary_tested": ["Mining.accountList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the account list functionality without required parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_statsticsListTest.java", "testclass_name": "Mining_statsticsListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_statsticsListTest", "description": "Tests for the Mining statistics list functionality in the SpotClientImpl class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testStatsticsList", "primary_tested": ["SpotClientImpl.createMining().statsticsList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the statsticsList method of the Mining API with valid parameters."}, {"name": "testStatsticsListWithoutParameters", "primary_tested": ["SpotClientImpl.createMining().statsticsList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the statsticsList method of the Mining API without parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_updateIpRestrictionTest.java", "testclass_name": "SubAccount_updateIpRestrictionTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_updateIpRestrictionTest", "description": "Tests for updating IP restriction for sub-accounts in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testUpdateIpRestriction", "primary_tested": ["SubAccount.updateIpRestriction(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of updating IP restriction for a sub-account with valid parameters."}, {"name": "testUpdateIpRestrictionWithoutParameters", "primary_tested": ["SubAccount.updateIpRestriction(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of updating IP restriction for a sub-account without providing necessary parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubWithdrawTest.java", "testclass_name": "SubAccount_managedSubWithdrawTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_managedSubWithdrawTest", "description": "Tests for the managed sub-account withdrawal functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testManagedSubWithdraw", "primary_tested": ["SubAccount.managedSubWithdraw(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account withdrawal functionality with all required parameters."}, {"name": "testManagedSubWithdrawWithoutRequiredParameters", "primary_tested": ["SubAccount.managedSubWithdraw(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account withdrawal functionality without the required 'amount' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresAccountV2Test.java", "testclass_name": "SubAccount_futuresAccountV2Test", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_futuresAccountV2Test", "description": "Tests for the futures account V2 functionality of the SubAccount service in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesAccountV2", "primary_tested": ["SubAccount.futuresAccountV2(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the futures account V2 functionality with valid parameters."}, {"name": "testFuturesAccountV2WithoutParameters", "primary_tested": ["SubAccount.futuresAccountV2(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the futures account V2 functionality without providing parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_subAccountToSubAccountTest.java", "testclass_name": "SubAccount_subAccountToSubAccountTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_subAccountToSubAccountTest", "description": "Tests for the sub-account to sub-account transfer functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSubAccountToSubAccountWithoutParameters", "primary_tested": ["SubAccount.subAccountToSubAccount(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the sub-account to sub-account transfer functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testSubAccountToSubAccountWithValidParameters", "primary_tested": ["SubAccount.subAccountToSubAccount(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the sub-account to sub-account transfer functionality with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_deleteIpListTest.java", "testclass_name": "SubAccount_deleteIpListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_deleteIpListTest", "description": "Tests for deleting IP list for sub-accounts in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testDeleteIpListWithoutParameters", "primary_tested": ["SubAccount.deleteIpList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deletion of IP list for sub-accounts without providing parameters, expecting a BinanceConnectorException."}, {"name": "testDeleteIpListWithParameters", "primary_tested": ["SubAccount.deleteIpList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deletion of IP list for sub-accounts with provided parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_testNewOrderTest.java", "testclass_name": "Trade_testNewOrderTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.RequestHandler;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Trade_testNewOrderTest", "description": "Unit tests for the Trade class's testNewOrder method.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "trade", "type": "Trade"}]}, "fixtures": ["init"], "test_cases": [{"name": "testTestNewOrderSuccess", "primary_tested": ["Trade.testNewOrder(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "HttpMethod", "Trade", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "trade", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful execution of the testNewOrder method with valid parameters."}, {"name": "testTestNewOrderMissingParameters", "primary_tested": ["Trade.testNewOrder(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "HttpMethod", "Trade", "LinkedHashMap", "Dispatcher", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "trade", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the testNewOrder method when required parameters are missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_setFlexibleAutoSubscribeTest.java", "testclass_name": "SimpleEarn_setFlexibleAutoSubscribeTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_setFlexibleAutoSubscribeTest", "description": "Tests for setting flexible auto-subscribe functionality in the SimpleEarn module.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSetFlexibleAutoSubscribe", "primary_tested": ["SimpleEarn.setFlexibleAutoSubscribe(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of setting flexible auto-subscribe with valid parameters."}, {"name": "testSetFlexibleAutoSubscribeWithoutParameters", "primary_tested": ["SimpleEarn.setFlexibleAutoSubscribe(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of setting flexible auto-subscribe without providing any parameters, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_minerListTest.java", "testclass_name": "Mining_minerListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_minerListTest", "description": "Tests for the miner list functionality in the Mining API of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testMinerList", "primary_tested": ["Mining.minerList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the miner list functionality with all required parameters."}, {"name": "testMinerListWithoutAlgo", "primary_tested": ["Mining.minerList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockData"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the miner list functionality without the 'algo' parameter, expecting a BinanceConnectorException."}, {"name": "testMinerListWithoutUserName", "primary_tested": ["Mining.minerList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockData"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the miner list functionality without the 'userName' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_flexibleSubscriptionPreviewTest.java", "testclass_name": "SimpleEarn_flexibleSubscriptionPreviewTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_flexibleSubscriptionPreviewTest", "description": "Tests for the flexible subscription preview functionality in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "amount", "type": "static final double"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testFlexibleSubscriptionPreview", "primary_tested": ["SimpleEarn.flexibleSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "amount", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible subscription preview functionality with valid parameters."}, {"name": "testFlexibleSubscriptionPreviewMissingProductId", "primary_tested": ["SimpleEarn.flexibleSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}, {"name": "amount", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible subscription preview functionality when the productId parameter is missing, expecting a BinanceConnectorException."}, {"name": "testFlexibleSubscriptionPreviewMissingAmount", "primary_tested": ["SimpleEarn.flexibleSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible subscription preview functionality when the amount parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanRepayTest.java", "testclass_name": "CryptoLoans_flexibleLoanRepayTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_flexibleLoanRepayTest", "description": "Unit tests for the flexible loan repay functionality in the CryptoLoans class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "apiKey", "type": "final String"}, {"name": "secretKey", "type": "final String"}, {"name": "showLimitUsage", "type": "final boolean"}, {"name": "proxy", "type": "final ProxyAuth"}]}, "fixtures": ["init"], "test_cases": [{"name": "testFlexibleLoanRepayWithoutParameters", "primary_tested": ["CryptoLoans.flexibleLoanRepay(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "BinanceConnectorException", "CryptoLoans", "HmacSignatureGenerator", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "apiKey", "type": "variable"}, {"name": "secretKey", "type": "variable"}, {"name": "showLimitUsage", "type": "variable"}, {"name": "proxy", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan repay functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testFlexibleLoanRepayWithValidParameters", "primary_tested": ["CryptoLoans.flexibleLoanRepay(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "CryptoLoans", "HmacSignatureGenerator", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "apiKey", "type": "variable"}, {"name": "secretKey", "type": "variable"}, {"name": "showLimitUsage", "type": "variable"}, {"name": "proxy", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan repay functionality with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_setLockedAutoSubscribeTest.java", "testclass_name": "SimpleEarn_setLockedAutoSubscribeTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_setLockedAutoSubscribeTest", "description": "Tests for setting locked auto-subscribe functionality in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSetLockedAutoSubscribe", "primary_tested": ["SimpleEarn.setLockedAutoSubscribe(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of setting locked auto-subscribe with valid parameters."}, {"name": "testSetLockedAutoSubscribeWithoutPositionId", "primary_tested": ["SimpleEarn.setLockedAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap", "Map"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception handling when setting locked auto-subscribe without providing the positionId."}, {"name": "testSetLockedAutoSubscribeWithoutAutoSubscribe", "primary_tested": ["SimpleEarn.setLockedAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap", "Map"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception handling when setting locked auto-subscribe without providing the autoSubscribe flag."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_klinesTest.java", "testclass_name": "Market_klinesTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_klinesTest", "description": "Unit tests for the klines functionality of the SpotClientImpl class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testKlinesWithoutSymbol", "primary_tested": ["Market.klines(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the klines functionality without a symbol parameter, expecting a BinanceConnectorException."}, {"name": "testKlinesWithoutInterval", "primary_tested": ["Market.klines(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the klines functionality without an interval parameter, expecting a BinanceConnectorException."}, {"name": "testKlinesWithValidParameters", "primary_tested": ["Market.klines(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the klines functionality with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_busdConvertHistoryTest.java", "testclass_name": "Wallet_busdConvertHistoryTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_busdConvertHistoryTest", "description": "Tests for the BUSD convert history functionality in the Wallet module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testBusdConvertHistory", "primary_tested": ["Wallet.busdConvertHistory(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the BUSD convert history functionality with all required parameters."}, {"name": "testBusdConvertHistoryWithoutStartTime", "primary_tested": ["Wallet.busdConvertHistory(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the BUSD convert history functionality without the startTime parameter, expecting a BinanceConnectorException."}, {"name": "testBusdConvertHistoryWithoutEndTime", "primary_tested": ["Wallet.busdConvertHistory(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the BUSD convert history functionality without the endTime parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Futures_futuresTransferTest.java", "testclass_name": "Futures_futuresTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Futures_futuresTransferTest", "description": "Unit tests for the futures transfer functionality in the Futures class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "futures", "type": "Futures"}]}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesTransferSuccess", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Dispatcher", "HttpMethod", "BinanceConnectorException", "HmacSignatureGenerator", "MockData", "MockWebServerDispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "futures", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful execution of the futures transfer functionality."}, {"name": "testFuturesTransferMissingAsset", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException"], "class_members": [{"name": "futures", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing 'asset' parameter in the futures transfer functionality."}, {"name": "testFuturesTransferMissingAmount", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException"], "class_members": [{"name": "futures", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing 'amount' parameter in the futures transfer functionality."}, {"name": "testFuturesTransferMissingType", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException"], "class_members": [{"name": "futures", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing 'type' parameter in the futures transfer functionality."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/UserData_closeIsolatedMarginListenKeyTest.java", "testclass_name": "UserData_closeIsolatedMarginListenKeyTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "UserData_closeIsolatedMarginListenKeyTest", "description": "Tests for closing isolated margin listen keys using the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testCloseIsolatedMarginListenKey", "primary_tested": ["UserData.closeIsolatedMarginListenKey(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of closing an isolated margin listen key with both symbol and listenKey parameters provided."}, {"name": "testCloseIsolatedMarginListenKeyWithoutSymbol", "primary_tested": ["UserData.closeIsolatedMarginListenKey(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when attempting to close an isolated margin listen key without providing the symbol parameter, expecting a BinanceConnectorException."}, {"name": "testCloseIsolatedMarginListenKeyWithoutListenKey", "primary_tested": ["UserData.closeIsolatedMarginListenKey(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when attempting to close an isolated margin listen key without providing the listenKey parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_enableLeverageTokenTest.java", "testclass_name": "SubAccount_enableLeverageTokenTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_enableLeverageTokenTest", "description": "Tests for enabling leverage token for sub-accounts in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testEnableLeverageToken", "primary_tested": ["SubAccount.enableLeverageToken(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of enabling leverage token for a sub-account with valid parameters."}, {"name": "testEnableLeverageTokenWithoutEmail", "primary_tested": ["SubAccount.enableLeverageToken(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when enabling leverage token without providing the email parameter, expecting a BinanceConnectorException."}, {"name": "testEnableLeverageTokenWithoutEnableBlvt", "primary_tested": ["SubAccount.enableLeverageToken(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when enabling leverage token without providing the enableBlvt parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_switchBusdAutoConversionTest.java", "testclass_name": "Wallet_switchBusdAutoConversionTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_switchBusdAutoConversionTest", "description": "Tests for the BUSD auto-conversion switch functionality in the Wallet module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSwitchBusdAutoConversionSuccess", "primary_tested": ["Wallet.switchBusdAutoConversion(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful switching of BUSD auto-conversion with all required parameters."}, {"name": "testSwitchBusdAutoConversionWithoutCoin", "primary_tested": ["Wallet.switchBusdAutoConversion(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when the 'coin' parameter is missing, expecting a BinanceConnectorException."}, {"name": "testSwitchBusdAutoConversionWithoutEnable", "primary_tested": ["Wallet.switchBusdAutoConversion(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when the 'enable' parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubAccountSnapshotTest.java", "testclass_name": "SubAccount_managedSubAccountSnapshotTest", "dependencies": ["package unit.spot.subaccount;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_managedSubAccountSnapshotTest", "description": "Tests for the managed sub-account snapshot functionality using the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testManagedSubAccountSnapshot", "primary_tested": ["SubAccount.managedSubAccountSnapshot(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account snapshot functionality with valid parameters."}, {"name": "testManagedSubAccountSnapshotWithoutEmail", "primary_tested": ["SubAccount.managedSubAccountSnapshot(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account snapshot functionality without providing the email parameter, expecting a BinanceConnectorException."}, {"name": "testManagedSubAccountSnapshotWithoutType", "primary_tested": ["SubAccount.managedSubAccountSnapshot(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account snapshot functionality without providing the type parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/RequestBuilder_buildPublicRequestTest.java", "testclass_name": "RequestBuilder_buildPublicRequestTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import okhttp3.Request;"], "name": "RequestBuilder_buildPublicRequestTest", "description": "Unit tests for the buildPublicRequest method in the RequestBuilder class, covering various HTTP methods and error scenarios.", "class_members": {"variables": [{"name": "VALID_URL", "type": "static final String"}, {"name": "INVALID_URL", "type": "static final String"}]}, "test_cases": [{"name": "testBuildPublicRequestPost", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with POST HTTP method."}, {"name": "testBuildPublicRequestGet", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with GET HTTP method."}, {"name": "testBuildPublicRequestPut", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with PUT HTTP method."}, {"name": "testBuildPublicRequestDelete", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with DELETE HTTP method."}, {"name": "testBuildPublicRequestInvalidMethod", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with an invalid HTTP method, expecting a BinanceConnectorException."}, {"name": "testBuildPublicRequestInvalidUrl", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "INVALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with an invalid URL, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_bonusListTest.java", "testclass_name": "Mining_bonusListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_bonusListTest", "description": "Tests for the bonus list functionality in the Mining module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testBonusList", "primary_tested": ["Mining.bonusList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the bonus list functionality with all required parameters."}, {"name": "testBonusListWithoutAlgo", "primary_tested": ["Mining.bonusList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the bonus list functionality without the 'algo' parameter, expecting a BinanceConnectorException."}, {"name": "testBonusListWithoutUserName", "primary_tested": ["Mining.bonusList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the bonus list functionality without the 'userName' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_ticker24HTest.java", "testclass_name": "Market_ticker24HTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_ticker24HTest", "description": "Tests for the 24-hour ticker functionality in the Market class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testTicker24HWithSymbol", "primary_tested": ["Market.ticker24H(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Market", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the 24-hour ticker functionality with a single symbol."}, {"name": "testTicker24HWithSymbols", "primary_tested": ["Market.ticker24H(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Market", "LinkedHashMap", "ArrayList", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the 24-hour ticker functionality with multiple symbols."}, {"name": "testTicker24HWithDoubleParameter", "primary_tested": ["Market.ticker24H(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "LinkedHashMap", "ArrayList", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the 24-hour ticker functionality with double parameters, expecting an exception."}, {"name": "testTicker24HWithInvalidSymbolsType", "primary_tested": ["Market.ticker24H(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the 24-hour ticker functionality with an invalid type for symbols, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanAdjustLTVTest.java", "testclass_name": "CryptoLoans_loanAdjustLTVTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_loanAdjustLTVTest", "description": "Unit tests for the loanAdjustLTV method in the CryptoLoans class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "orderId", "type": "static final long"}, {"name": "amount", "type": "static final double"}]}, "fixtures": ["init"], "test_cases": [{"name": "testLoanAdjustLTVWithoutParameters", "primary_tested": ["CryptoLoans.loanAdjustLTV(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Dispatcher", "CryptoLoans", "BinanceConnectorException", "HmacSignatureGenerator", "ProxyAuth", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loanAdjustLTV method in CryptoLoans without parameters, expecting a BinanceConnectorException."}, {"name": "testLoanAdjustLTVWithParameters", "primary_tested": ["CryptoLoans.loanAdjustLTV(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Dispatcher", "CryptoLoans", "HmacSignatureGenerator", "ProxyAuth", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "orderId", "type": "variable"}, {"name": "amount", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loanAdjustLTV method in CryptoLoans with parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_universalTransferTest.java", "testclass_name": "Wallet_universalTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_universalTransferTest", "description": "Tests for the universal transfer functionality in the Wallet service of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testUniversalTransferSuccess", "primary_tested": ["Wallet.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful universal transfer with all required parameters."}, {"name": "testUniversalTransferWithoutType", "primary_tested": ["Wallet.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the universal transfer without the 'type' parameter, expecting a BinanceConnectorException."}, {"name": "testUniversalTransferWithoutAsset", "primary_tested": ["Wallet.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the universal transfer without the 'asset' parameter, expecting a BinanceConnectorException."}, {"name": "testUniversalTransferWithoutAmount", "primary_tested": ["Wallet.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the universal transfer without the 'amount' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_delegationHistoryTest.java", "testclass_name": "Wallet_delegationHistoryTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_delegationHistoryTest", "description": "Tests for the delegation history functionality in the Wallet module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testDelegationHistory", "primary_tested": ["Wallet.delegationHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the delegation history functionality with all required parameters."}, {"name": "testDelegationHistoryWithoutEmail", "primary_tested": ["Wallet.delegationHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the delegation history functionality without the 'email' parameter, expecting a BinanceConnectorException."}, {"name": "testDelegationHistoryWithoutStartTime", "primary_tested": ["Wallet.delegationHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the delegation history functionality without the 'startTime' parameter, expecting a BinanceConnectorException."}, {"name": "testDelegationHistoryWithoutEndTime", "primary_tested": ["Wallet.delegationHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the delegation history functionality without the 'endTime' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_hashrateResaleRequestTest.java", "testclass_name": "Mining_hashrateResaleRequestTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_hashrateResaleRequestTest", "description": "Tests for the hashrate resale request functionality in the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testHashrateResaleRequest", "primary_tested": ["Mining.hashrateResaleRequest(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the hashrate resale request functionality with valid parameters."}, {"name": "testHashrateResaleRequestWithoutParameters", "primary_tested": ["Mining.hashrateResaleRequest(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the hashrate resale request functionality without providing any parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_redeemIndexPlanTest.java", "testclass_name": "AutoInvest_redeemIndexPlanTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "AutoInvest_redeemIndexPlanTest", "description": "Tests for redeeming index plans in the AutoInvest feature of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "client", "type": "SpotClient"}]}, "fixtures": ["init"], "test_cases": [{"name": "testRedeemIndexPlanWithoutParameters", "primary_tested": ["AutoInvest.redeemIndexPlan(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException", "SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "client", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of redeemIndexPlan method when no parameters are provided, expecting a BinanceConnectorException."}, {"name": "testRedeemIndexPlanWithValidParameters", "primary_tested": ["AutoInvest.redeemIndexPlan(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "client", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the redeemIndexPlan method with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_sorOrderTest.java", "testclass_name": "Trade_sorOrderTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Trade_sorOrderTest", "description": "Tests for the sorOrder method in the Trade class, including scenarios with and without required parameters.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSorOrder", "primary_tested": ["Trade.sorOrder(Map<String,Object>)"], "associated_methods": ["SpotClientImpl.createTrade()"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "SpotClientImpl", "Trade", "LinkedHashMap", "Dispatcher", "HttpMethod", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the sorOrder method with valid parameters and verifies the response."}, {"name": "testSorOrderWithoutParameters", "primary_tested": ["Trade.sorOrder(Map<String,Object>)"], "associated_methods": ["SpotClientImpl.createTrade()"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "SpotClientImpl", "Trade", "LinkedHashMap", "Dispatcher", "HttpMethod", "MockData", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the sorOrder method without required parameters and expects a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_marginTransferTest.java", "testclass_name": "SubAccount_marginTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_marginTransferTest", "description": "Tests for the margin transfer functionality of the SubAccount in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testMarginTransferWithoutParameters", "primary_tested": ["SubAccount.marginTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the margin transfer functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testMarginTransferWithValidParameters", "primary_tested": ["SubAccount.marginTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the margin transfer functionality with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_cloudMiningHistoryTest.java", "testclass_name": "Wallet_cloudMiningHistoryTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_cloudMiningHistoryTest", "description": "Tests for the cloud mining history functionality in the Wallet service of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testCloudMiningHistory", "primary_tested": ["Wallet.cloudMiningHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cloud mining history functionality with both startTime and endTime parameters."}, {"name": "testCloudMiningHistoryWithoutStartTime", "primary_tested": ["Wallet.cloudMiningHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cloud mining history functionality without the startTime parameter, expecting a BinanceConnectorException."}, {"name": "testCloudMiningHistoryWithoutEndTime", "primary_tested": ["Wallet.cloudMiningHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cloud mining history functionality without the endTime parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_ocoOrderTest.java", "testclass_name": "Trade_ocoOrderTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Trade_ocoOrderTest", "description": "Tests for the OCO order functionality in the SpotClientImpl class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testOcoOrderSuccess", "primary_tested": ["Trade.ocoOrder(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful creation of an OCO order."}, {"name": "testOcoOrderMissingRequiredParameters", "primary_tested": ["Trade.ocoOrder(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing required parameters for an OCO order, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_busdConvertTest.java", "testclass_name": "Wallet_busdConvertTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import com.binance.connector.client.utils.RequestHandler;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_busdConvertTest", "description": "Tests for the BUSD convert functionality in the Wallet service of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testBusdConvertSuccess", "primary_tested": ["Wallet.busdConvert(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "HttpMethod", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful conversion of BUSD to another asset."}, {"name": "testBusdConvertWithoutClientTranId", "primary_tested": ["Wallet.busdConvert(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "HttpMethod", "MockData", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when the client transaction ID is missing, expecting a BinanceConnectorException."}, {"name": "testBusdConvertWithoutAsset", "primary_tested": ["Wallet.busdConvert(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "HttpMethod", "MockData", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when the asset parameter is missing, expecting a BinanceConnectorException."}, {"name": "testBusdConvertWithoutAmount", "primary_tested": ["Wallet.busdConvert(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "HttpMethod", "MockData", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when the amount parameter is missing, expecting a BinanceConnectorException."}, {"name": "testBusdConvertWithoutTargetAsset", "primary_tested": ["Wallet.busdConvert(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "HttpMethod", "MockData", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior when the target asset parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanBorrowTest.java", "testclass_name": "CryptoLoans_loanBorrowTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_loanBorrowTest", "description": "Unit tests for the loan borrow functionality in the CryptoLoans service.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testLoanBorrowWithoutParameters", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality without providing any parameters, expecting a BinanceConnectorException."}, {"name": "testLoanBorrowWithValidParameters", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality with valid parameters, expecting a successful response."}, {"name": "testLoanBorrowWithMissingLoanCoin", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality with missing 'loanCoin' parameter, expecting a BinanceConnectorException."}, {"name": "testLoanBorrowWithMissingCollateralCoin", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality with missing 'collateralCoin' parameter, expecting a BinanceConnectorException."}, {"name": "testLoanBorrowWithMissingLoanTerm", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality with missing 'loanTerm' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_subscribeFlexibleProductTest.java", "testclass_name": "SimpleEarn_subscribeFlexibleProductTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_subscribeFlexibleProductTest", "description": "Tests for subscribing to a flexible product in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSubscribeFlexibleProduct", "primary_tested": ["SimpleEarn.subscribeFlexibleProduct(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the subscription to a flexible product with valid parameters."}, {"name": "testSubscribeFlexibleProductWithoutProductId", "primary_tested": ["SimpleEarn.subscribeFlexibleProduct(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the subscription to a flexible product without providing the productId, expecting a BinanceConnectorException."}, {"name": "testSubscribeFlexibleProductWithoutAmount", "primary_tested": ["SimpleEarn.subscribeFlexibleProduct(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the subscription to a flexible product without providing the amount, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_uiKlinesTest.java", "testclass_name": "Market_uiKlinesTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_uiKlinesTest", "description": "Tests for the uiKlines method in the Market API of the Binance Connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testUiKlines", "primary_tested": ["Market.uiKlines(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the uiKlines method with valid parameters."}, {"name": "testUiKlinesMissingSymbol", "primary_tested": ["Market.uiKlines(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the uiKlines method when the symbol parameter is missing, expecting a BinanceConnectorException."}, {"name": "testUiKlinesMissingInterval", "primary_tested": ["Market.uiKlines(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the uiKlines method when the interval parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_tradingDayTickerTest.java", "testclass_name": "Market_tradingDayTickerTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_tradingDayTickerTest", "description": "Unit tests for the tradingDayTicker method in the Market class, covering different scenarios with symbol and symbols parameters.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "path", "type": "final String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testTradingDayTickerWithSymbol", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Market", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "path", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method with a single symbol parameter."}, {"name": "testTradingDayTickerWithSymbols", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "Market", "LinkedHashMap", "ArrayList", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "path", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method with multiple symbols parameter."}, {"name": "testTradingDayTickerWithBothSymbolAndSymbols", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "LinkedHashMap", "ArrayList", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method with both symbol and symbols parameters, expecting an exception."}, {"name": "testTradingDayTickerWithoutSymbolOrSymbols", "primary_tested": ["Market.tradingDayTicker(Map<String,Object>)"], "external_dependencies": {"modules": ["Market", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": []}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the tradingDayTicker method without symbol or symbols parameters, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_depositAddressTest.java", "testclass_name": "SubAccount_depositAddressTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_depositAddressTest", "description": "Tests for the deposit address functionality of the SubAccount in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testDepositAddress", "primary_tested": ["SubAccount.depositAddress(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deposit address functionality with valid parameters."}, {"name": "testDepositAddressWithoutEmail", "primary_tested": ["SubAccount.depositAddress(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deposit address functionality without the email parameter, expecting an exception."}, {"name": "testDepositAddressWithoutCoin", "primary_tested": ["SubAccount.depositAddress(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deposit address functionality without the coin parameter, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanBorrowTest.java", "testclass_name": "CryptoLoans_flexibleLoanBorrowTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_flexibleLoanBorrowTest", "description": "Tests for the flexible loan borrow functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testFlexibleLoanBorrow", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException", "ParameterChecker"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality with both loanCoin and collateralCoin parameters."}, {"name": "testFlexibleLoanBorrowWithoutLoanCoin", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException", "ParameterChecker"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality without the loanCoin parameter, expecting a BinanceConnectorException."}, {"name": "testFlexibleLoanBorrowWithoutCollateralCoin", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException", "ParameterChecker"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality without the collateralCoin parameter, expecting a BinanceConnectorException."}, {"name": "testFlexibleLoanBorrowWithoutParameters", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException", "ParameterChecker"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality without any parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_borrowTest.java", "testclass_name": "VIPLoans_borrowTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "VIPLoans_borrowTest", "description": "Unit tests for the VIP loans borrow functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testBorrowSuccess", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful borrowing functionality of the VIP loans."}, {"name": "testBorrowMissingLoanAccountId", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the borrowing functionality when the loan account ID is missing, expecting a BinanceConnectorException."}, {"name": "testBorrowMissingLoanCoin", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the borrowing functionality when the loan coin is missing, expecting a BinanceConnectorException."}, {"name": "testBorrowMissingLoanAmount", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the borrowing functionality when the loan amount is missing, expecting a BinanceConnectorException."}, {"name": "testBorrowMissingCollateralAccountId", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the borrowing functionality when the collateral account ID is missing, expecting a BinanceConnectorException."}, {"name": "testBorrowMissingCollateralCoin", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the borrowing functionality when the collateral coin is missing, expecting a BinanceConnectorException."}, {"name": "testBorrowMissingIsFlexibleRate", "primary_tested": ["VIPLoans.borrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the borrowing functionality when the isFlexibleRate parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_hashrateResaleDetailTest.java", "testclass_name": "Mining_hashrateResaleDetailTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_hashrateResaleDetailTest", "description": "Tests for the hashrate resale detail functionality in the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testHashrateResaleDetail", "primary_tested": ["Mining.hashrateResaleDetail(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the hashrate resale detail functionality with valid parameters."}, {"name": "testHashrateResaleDetailWithoutConfigId", "primary_tested": ["Mining.hashrateResaleDetail(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the hashrate resale detail functionality without the required configId parameter, expecting a BinanceConnectorException."}, {"name": "testHashrateResaleDetailWithoutUserName", "primary_tested": ["Mining.hashrateResaleDetail(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the hashrate resale detail functionality without the required userName parameter, expecting a BinanceConnectorException."}]}]