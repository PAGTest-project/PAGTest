[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.json.JSONObject;\nimport org.junit.Before;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class JSONParser_pullValueTest {\n\n    private JSONObject parameters;\n\n    @Before\n    public void setUp() {\n        parameters = new JSONObject();\n        parameters.put(\"key1\", \"value1\");\n        parameters.put(\"key2\", 123);\n    }\n\n    @Test\n    public void testPullValueExistingKey() {\n        Object value = JSONParser.pullValue(parameters, \"key1\");\n        assertEquals(\"value1\", value);\n        assertFalse(parameters.has(\"key1\"));\n    }\n\n    @Test\n    public void testPullValueNonExistingKey() {\n        Object value = JSONParser.pullValue(parameters, \"key3\");\n        assertNull(value);\n        assertFalse(parameters.has(\"key3\"));\n    }\n\n    @Test\n    public void testPullValueNullParameters() {\n        Object value = JSONParser.pullValue(null, \"key1\");\n        assertNull(value);\n    }\n\n    @Test\n    public void testPullValueMultipleKeys() {\n        Object value1 = JSONParser.pullValue(parameters, \"key1\");\n        Object value2 = JSONParser.pullValue(parameters, \"key2\");\n        assertEquals(\"value1\", value1);\n        assertEquals(123, value2);\n        assertFalse(parameters.has(\"key1\"));\n        assertFalse(parameters.has(\"key2\"));\n    }\n}\n"}]