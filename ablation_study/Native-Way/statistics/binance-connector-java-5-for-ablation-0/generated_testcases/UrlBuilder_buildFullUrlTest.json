[{"strategy": "retry", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class UrlBuilder_buildFullUrlTest {\n\n    @Test\n    public void testBuildFullUrlWithParameters() {\n        String baseUrl = \"https://api.binance.com\";\n        String urlPath = \"/api/v3/order\";\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"symbol\", \"BTCUSDT\");\n        parameters.put(\"side\", \"BUY\");\n        parameters.put(\"type\", \"LIMIT\");\n        parameters.put(\"timeInForce\", \"GTC\");\n        parameters.put(\"quantity\", 1.0);\n        parameters.put(\"price\", 50000.0);\n\n        String expectedUrl = \"https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=50000\";\n        String actualUrl = UrlBuilder.buildFullUrl(baseUrl, urlPath, parameters);\n        assertEquals(expectedUrl, actualUrl);\n    }\n\n    @Test\n    public void testBuildFullUrlWithoutParameters() {\n        String baseUrl = \"https://api.binance.com\";\n        String urlPath = \"/api/v3/order\";\n        Map<String, Object> parameters = null;\n\n        String expectedUrl = \"https://api.binance.com/api/v3/order\";\n        assertEquals(expectedUrl, UrlBuilder.buildFullUrl(baseUrl, urlPath, parameters));\n    }\n\n    @Test\n    public void testBuildFullUrlWithEmptyParameters() {\n        String baseUrl = \"https://api.binance.com\";\n        String urlPath = \"/api/v3/order\";\n        Map<String, Object> parameters = new HashMap<>();\n\n        String expectedUrl = \"https://api.binance.com/api/v3/order\";\n        assertEquals(expectedUrl, UrlBuilder.buildFullUrl(baseUrl, urlPath, parameters));\n    }\n}\n"}]