[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertThrows;\nimport org.junit.Test;\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\nimport okhttp3.Request;\n\npublic class RequestBuilder_buildApiKeyRequestTest {\n\n    private static final String VALID_URL = \"https://api.binance.com/api/v3/order\";\n    private static final String INVALID_URL = \"invalid-url\";\n    private static final String API_KEY = \"test-api-key\";\n\n    @Test\n    public void testBuildApiKeyRequestPost() {\n        Request request = RequestBuilder.buildApiKeyRequest(VALID_URL, HttpMethod.POST, API_KEY);\n        assertEquals(VALID_URL, request.url().toString());\n        assertEquals(API_KEY, request.header(\"X-MBX-APIKEY\"));\n    }\n\n    @Test\n    public void testBuildApiKeyRequestGet() {\n        Request request = RequestBuilder.buildApiKeyRequest(VALID_URL, HttpMethod.GET, API_KEY);\n        assertEquals(VALID_URL, request.url().toString());\n        assertEquals(API_KEY, request.header(\"X-MBX-APIKEY\"));\n    }\n\n    @Test\n    public void testBuildApiKeyRequestPut() {\n        Request request = RequestBuilder.buildApiKeyRequest(VALID_URL, HttpMethod.PUT, API_KEY);\n        assertEquals(VALID_URL, request.url().toString());\n        assertEquals(API_KEY, request.header(\"X-MBX-APIKEY\"));\n    }\n\n    @Test\n    public void testBuildApiKeyRequestDelete() {\n        Request request = RequestBuilder.buildApiKeyRequest(VALID_URL, HttpMethod.DELETE, API_KEY);\n        assertEquals(VALID_URL, request.url().toString());\n        assertEquals(API_KEY, request.header(\"X-MBX-APIKEY\"));\n    }\n\n    @Test\n    public void testBuildApiKeyRequestInvalidHttpMethod() {\n        assertThrows(BinanceConnectorException.class, () -> {\n            RequestBuilder.buildApiKeyRequest(VALID_URL, null, API_KEY);\n        });\n    }\n\n    @Test\n    public void testBuildApiKeyRequestInvalidUrl() {\n        assertThrows(BinanceConnectorException.class, () -> {\n            RequestBuilder.buildApiKeyRequest(INVALID_URL, HttpMethod.GET, API_KEY);\n        });\n    }\n}\n"}]