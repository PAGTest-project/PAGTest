[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\n\npublic class Util_replaceTest {\n\n    @Test\n    public void testReplaceElementNotInList() {\n        List<Integer> list = Arrays.asList(1, 2, 3);\n        List<Integer> replacements = Arrays.asList(4, 5);\n        List<Integer> result = Util.replace(list, 6, replacements);\n        assertEquals(Arrays.asList(1, 2, 3, 4, 5), result);\n    }\n\n    @Test\n    public void testReplaceElementInList() {\n        List<Integer> list = Arrays.asList(1, 2, 3);\n        List<Integer> replacements = Arrays.asList(4, 5);\n        List<Integer> result = Util.replace(list, 2, replacements);\n        assertEquals(Arrays.asList(1, 3, 4, 5), result);\n    }\n\n    @Test\n    public void testReplaceElementWithEmptyReplacements() {\n        List<Integer> list = Arrays.asList(1, 2, 3);\n        List<Integer> replacements = Arrays.asList();\n        List<Integer> result = Util.replace(list, 2, replacements);\n        assertEquals(Arrays.asList(1, 3), result);\n    }\n\n    @Test\n    public void testReplaceElementWithNullReplacements() {\n        List<Integer> list = Arrays.asList(1, 2, 3);\n        List<Integer> replacements = null;\n        List<Integer> result = Util.replace(list, 2, replacements);\n        assertEquals(Arrays.asList(1, 3), result);\n    }\n\n    @Test\n    public void testReplaceElementWithNullList() {\n        List<Integer> list = null;\n        List<Integer> replacements = Arrays.asList(4, 5);\n        List<Integer> result = Util.replace(list, 2, replacements);\n        assertTrue(result.isEmpty());\n    }\n}\n"}]