[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree;\n\nimport com.github.davidmoten.rtree.geometry.HasGeometry;\nimport com.github.davidmoten.rtree.geometry.ListPair;\nimport org.junit.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class SplitterRStar_splitTest {\n\n    @Test\n    public void testSplit() {\n        // Given\n        SplitterRStar splitter = new SplitterRStar();\n        List<HasGeometry> items = new ArrayList<>();\n        HasGeometry item1 = mock(HasGeometry.class);\n        HasGeometry item2 = mock(HasGeometry.class);\n        items.add(item1);\n        items.add(item2);\n        int minSize = 1;\n\n        // When\n        ListPair<HasGeometry> result = splitter.split(items, minSize);\n\n        // Then\n        assertEquals(2, result.group1().size() + result.group2().size());\n    }\n\n    @Test(expected = IllegalArgumentException.class)\n    public void testSplitWithEmptyList() {\n        // Given\n        SplitterRStar splitter = new SplitterRStar();\n        List<HasGeometry> items = new ArrayList<>();\n        int minSize = 1;\n\n        // When\n        splitter.split(items, minSize);\n\n        // Then (exception is expected)\n    }\n}\n"}]