[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.geometry;\n\nimport static org.junit.Assert.assertEquals;\nimport org.junit.Test;\n\npublic class Geometries_rectangleGeographicTest {\n\n    private static final double PRECISION = 0.000001;\n\n    @Test\n    public void testRectangleGeographicNormalCase() {\n        Rectangle result = Geometries.rectangleGeographic(10, 20, 30, 40);\n        assertEquals(10, result.x1(), PRECISION);\n        assertEquals(20, result.y1(), PRECISION);\n        assertEquals(30, result.x2(), PRECISION);\n        assertEquals(40, result.y2(), PRECISION);\n    }\n\n    @Test\n    public void testRectangleGeographicCrossingAntiMeridian() {\n        Rectangle result = Geometries.rectangleGeographic(170, 20, -170, 40);\n        assertEquals(170, result.x1(), PRECISION);\n        assertEquals(20, result.y1(), PRECISION);\n        assertEquals(-170, result.x2(), PRECISION);\n        assertEquals(40, result.y2(), PRECISION);\n    }\n\n    @Test\n    public void testRectangleGeographicSameLongitude() {\n        Rectangle result = Geometries.rectangleGeographic(10, 20, 10, 40);\n        assertEquals(10, result.x1(), PRECISION);\n        assertEquals(20, result.y1(), PRECISION);\n        assertEquals(10, result.x2(), PRECISION);\n        assertEquals(40, result.y2(), PRECISION);\n    }\n\n    @Test\n    public void testRectangleGeographicNegativeLongitude() {\n        Rectangle result = Geometries.rectangleGeographic(-10, 20, -30, 40);\n        assertEquals(-10, result.x1(), PRECISION);\n        assertEquals(20, result.y1(), PRECISION);\n        assertEquals(-30, result.x2(), PRECISION);\n        assertEquals(40, result.y2(), PRECISION);\n    }\n\n    @Test\n    public void testRectangleGeographicNormalizeLongitude() {\n        Rectangle result = Geometries.rectangleGeographic(190, 20, 210, 40);\n        assertEquals(-170, result.x1(), PRECISION);\n        assertEquals(20, result.y1(), PRECISION);\n        assertEquals(-150, result.x2(), PRECISION);\n        assertEquals(40, result.y2(), PRECISION);\n    }\n}\n"}]