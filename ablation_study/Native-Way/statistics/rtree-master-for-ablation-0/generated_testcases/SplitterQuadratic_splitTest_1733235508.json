[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree;\n\nimport com.github.davidmoten.guavamini.Lists;\nimport com.github.davidmoten.rtree.geometry.HasGeometry;\nimport com.github.davidmoten.rtree.geometry.ListPair;\nimport com.github.davidmoten.rtree.internal.util.Pair;\nimport org.junit.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\npublic class SplitterQuadratic_splitTest {\n\n    @Test\n    public void testSplitWithMinimumSize() {\n        SplitterQuadratic splitter = new SplitterQuadratic();\n\n        // Create a list of items with size >= 2\n        List<MockHasGeometry> items = Arrays.asList(\n                new MockHasGeometry(),\n                new MockHasGeometry(),\n                new MockHasGeometry(),\n                new MockHasGeometry()\n        );\n\n        ListPair<MockHasGeometry> result = splitter.split(items, 2);\n\n        // Assert that the result contains two groups\n        assertEquals(2, result.group1().size() + result.group2().size());\n        assertTrue(result.group1().size() >= 2);\n        assertTrue(result.group2().size() >= 2);\n    }\n\n    @Test(expected = IllegalArgumentException.class)\n    public void testSplitWithLessThanMinimumSize() {\n        SplitterQuadratic splitter = new SplitterQuadratic();\n\n        // Create a list of items with size < 2\n        List<MockHasGeometry> items = Arrays.asList(\n                new MockHasGeometry()\n        );\n\n        splitter.split(items, 2);\n    }\n\n    private static class MockHasGeometry implements HasGeometry {\n        @Override\n        public Rectangle geometry() {\n            return new Rectangle() {\n                @Override\n                public Rectangle mbr() {\n                    return this;\n                }\n\n                @Override\n                public Rectangle add(Rectangle r) {\n                    return this;\n                }\n\n                @Override\n                public double area() {\n                    return 0;\n                }\n            };\n        }\n    }\n}\n"}]