[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.*;\n\nimport org.junit.Test;\nimport rx.Observable;\nimport rx.observers.TestSubscriber;\n\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class RTree_nearestTest {\n\n    @Test\n    public void testNearest() {\n        // Given\n        RTree<Object, Geometry> rTree = RTree.create();\n        Rectangle rectangle = mock(Rectangle.class);\n        double maxDistance = 10.0;\n        int maxCount = 5;\n\n        Observable<Entry<Object, Geometry>> searchResult = Observable.just(\n            new Entry<>(new Object(), mock(Geometry.class)),\n            new Entry<>(new Object(), mock(Geometry.class))\n        );\n\n        // Mock the search method to return the predefined observable\n        when(rTree.search(rectangle, maxDistance)).thenReturn(searchResult);\n\n        // When\n        Observable<Entry<Object, Geometry>> result = rTree.nearest(rectangle, maxDistance, maxCount);\n\n        // Then\n        TestSubscriber<Entry<Object, Geometry>> testSubscriber = new TestSubscriber<>();\n        result.subscribe(testSubscriber);\n\n        testSubscriber.assertNoErrors();\n        testSubscriber.assertCompleted();\n        assertEquals(2, testSubscriber.getOnNextEvents().size());\n    }\n}\n"}]