{"file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "dependencies": ["package com.github.davidmoten.rtree;", "import static org.junit.Assert.assertEquals;", "import java.util.List;", "import org.junit.Test;", "import com.github.davidmoten.grumpy.core.Position;", "import com.github.davidmoten.rtree.geometry.Geometries;", "import com.github.davidmoten.rtree.geometry.Point;", "import com.github.davidmoten.rtree.geometry.Rectangle;", "import rx.Observable;", "import rx.functions.Func1;"], "name": "LatLongExampleTest", "description": "Tests for demonstrating the usage of RTree for distance searches with Lat Long points and GeoCircleValue objects.", "class_members": {"variables": [{"name": "sydney", "type": "static final Point"}, {"name": "canberra", "type": "static final Point"}, {"name": "brisbane", "type": "static final Point"}, {"name": "bungendore", "type": "static final Point"}], "methods": [{"name": "search", "signature": "<T> Observable<Entry<T, Point>> search(RTree<T, Point> tree, Point lonLat, double distanceKm)"}, {"name": "createBounds", "signature": "static Rectangle createBounds(Position from, double distanceKm)"}, {"name": "createGeoCircleValue", "signature": "<T> GeoCircleValue<T> createGeoCircleValue(Point point, double radiusKm, T value)"}, {"name": "add", "signature": "<T> RTree<GeoCircleValue<T>, Rectangle> add(RTree<GeoCircleValue<T>, Rectangle> tree, GeoCircleValue<T> c)"}], "nested_classes": [{"name": "GeoCircleValue", "description": "Internal class representing a geographic circle with a value."}]}, "fixtures": [], "test_cases": [{"name": "testLatLongExample", "primary_tested": ["RTree.search(Rectangle)"], "associated_methods": ["LatLongExampleTest.search(RTree<String, Point>, Point, double)"], "external_dependencies": {"modules": ["RTree", "Geometries", "Point", "Entry", "Observable", "Func1", "Position"], "class_members": [{"name": "sydney", "type": "variable"}, {"name": "canberra", "type": "variable"}, {"name": "brisbane", "type": "variable"}, {"name": "search", "type": "method"}]}, "category": "unit", "description": "Demonstrates how to use RTree to find cities within a specified distance from a given point."}, {"name": "testSearchLatLongCircles", "primary_tested": ["RTree.search(Point)"], "associated_methods": ["LatLongExampleTest.createGeoCircleValue(Point, double, String)", "LatLongExampleTest.add(RTree<GeoCircleValue<String>, Rectangle>, GeoCircleValue<String>)"], "external_dependencies": {"modules": ["RTree", "GeoCircleValue", "Rectangle", "Point", "Entry", "Observable", "Func1", "Position"], "class_members": [{"name": "sydney", "type": "variable"}, {"name": "canberra", "type": "variable"}, {"name": "brisbane", "type": "variable"}, {"name": "bungendore", "type": "variable"}, {"name": "createGeoCircleValue", "type": "method"}, {"name": "add", "type": "method"}]}, "category": "unit", "description": "Tests the search functionality for GeoCircleValue objects within an RTree, filtering by exact distance from the center."}]}