{"name": "Medical_procedureCodeTest", "status": "compile error", "error": "[INFO] Scanning for projects...\n[INFO] Inspecting build with total of 1 modules...\n[INFO] Installing Nexus Staging features:\n[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin\n[INFO] \n[INFO] ----------------------< net.datafaker:datafaker >-----------------------\n[INFO] Building Datafaker 2.4.1-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- enforcer:3.5.0:enforce (enforce-maven) @ datafaker ---\n[INFO] Rule 0: org.apache.maven.enforcer.rules.version.RequireJavaVersion passed\n[INFO] Rule 1: org.apache.maven.enforcer.rules.version.RequireMavenVersion passed\n[INFO] \n[INFO] --- spotless:2.43.0:check (spotless-check) @ datafaker ---\n[INFO] Index file does not exist. Fallback to an empty index\n[INFO] Spotless.Java is keeping 642 files clean - 0 needs changes to be clean, 642 were already clean, 0 were skipped because caching determined they were already clean\n[INFO] Spotless.Yaml is keeping 254 files clean - 0 needs changes to be clean, 254 were already clean, 0 were skipped because caching determined they were already clean\n[INFO] \n[INFO] --- jacoco:0.8.12:prepare-agent (default) @ datafaker ---\n[INFO] argLine set to -javaagent:/home/zhangzhe/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/target/jacoco.exec\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ datafaker ---\n[INFO] Copying 340 resources from src/main/resources to target/classes\n[INFO] \n[INFO] --- kotlin:2.0.20:compile (compile) @ datafaker ---\n[INFO] No sources to compile\n[INFO] \n[INFO] --- compiler:3.13.0:compile (compile) @ datafaker ---\n[INFO] Recompiling the module because of changed source code.\n[INFO] Compiling 323 source files with javac [debug target 17] to target/classes\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[148,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[149,28] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[149,44] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[152,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[153,28] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[153,47] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[324,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[325,28] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/BaseProviders.java:[325,43] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/IdNumber.java: /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/IdNumber.java\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/providers/base/IdNumber.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/service/FakeValuesService.java: \u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/main/java/net/datafaker/service/FakeValuesService.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:unchecked \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ datafaker ---\n[INFO] Copying 5 resources from src/test/resources to target/test-classes\n[INFO] \n[INFO] --- kotlin:2.0.20:test-compile (test-compile) @ datafaker ---\n[WARNING] Source root doesn't exist: /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/target/generated-test-sources/test-annotations\n[INFO] \n[INFO] --- compiler:3.13.0:testCompile (testCompile) @ datafaker ---\n[INFO] Recompiling the module because of changed dependency.\n[INFO] Compiling 319 source files with javac [debug target 17] to target/test-classes\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/CurrencyTest.java:[10,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/CurrencyTest.java:[11,36] net.datafaker.providers.base.Currency \u4e2d\u7684 name() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/CurrencyTest.java:[12,25] net.datafaker.providers.base.Currency \u4e2d\u7684 code() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[34,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[45,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[56,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[69,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[88,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[124,15] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[136,15] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[163,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[173,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[224,46] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[225,46] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[236,46] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/FinanceTest.java:[31,27] net.datafaker.providers.base.Finance \u4e2d\u7684 nasdaqTicker() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/FinanceTest.java:[36,27] net.datafaker.providers.base.Finance \u4e2d\u7684 nyseTicker() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/FinanceTest.java:[41,36] net.datafaker.providers.base.Finance \u4e2d\u7684 stockMarket() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[16,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[17,36] net.datafaker.providers.base.Medical \u4e2d\u7684 medicineName() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[18,29] net.datafaker.providers.base.Medical \u4e2d\u7684 diseaseName() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[19,29] net.datafaker.providers.base.Medical \u4e2d\u7684 hospitalName() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[20,29] net.datafaker.providers.base.Medical \u4e2d\u7684 symptoms() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[21,29] net.datafaker.providers.base.Medical \u4e2d\u7684 medicalProfession() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[30,44] net.datafaker.providers.base.Medical \u4e2d\u7684 diagnosisCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[40,40] net.datafaker.providers.base.Medical \u4e2d\u7684 diagnosisCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[49,40] net.datafaker.providers.base.Medical \u4e2d\u7684 diagnosisCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/MedicalTest.java:[56,47] net.datafaker.providers.base.Medical \u4e2d\u7684 procedureCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[13,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[18,23] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[23,32] net.datafaker.providers.base.Medical \u4e2d\u7684 procedureCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[30,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[30,31] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[32,32] net.datafaker.providers.base.Medical \u4e2d\u7684 procedureCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/TwitterTest.java:[18,33] net.datafaker.providers.base.Twitter \u4e2d\u7684 createdTime(boolean,java.util.Date,java.util.Date) \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/providers/base/TwitterTest.java:[27,33] net.datafaker.providers.base.Twitter \u4e2d\u7684 createdTime(boolean,java.util.Date,java.util.Date) \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java: \u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/FakerTest.java: \u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/src/test/java/net/datafaker/FakerTest.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:unchecked \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] \n[INFO] --- surefire:3.5.0:test (default-test) @ datafaker ---\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running net.datafaker.providers.base.Medical_procedureCodeTest\n[ERROR] Tests run: 101, Failures: 100, Errors: 0, Skipped: 0, Time elapsed: 0.766 s <<< FAILURE! -- in net.datafaker.providers.base.Medical_procedureCodeTest\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.570 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"qaTsjBB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.618 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"pAxCF3y\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.591 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"3P9LDu9\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.557 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"WA6l1h2\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.603 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"dXSjwcs\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.538 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"5hfwcpe\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.550 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"3ZJvhsG\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.617 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"FJCapQN\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.609 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"QPrgctq\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.602 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"emvECVX\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.546 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"9EzYuCz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.579 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"LFc4GfE\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.541 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"nUbB7KB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.592 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"3jmmkaj\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.580 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"xRC4Ppz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.542 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"9jBYG6K\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.604 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"cK4kgWS\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.571 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"qkdD253\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.614 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Hs1bLgS\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.535 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Hu7RE8m\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.596 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KajZTXy\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.529 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"bcLGkfm\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.603 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"gS91Krg\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.612 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"M3w82SE\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.539 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"xe9Ukvy\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.584 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"BmssmZH\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.556 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"74DtdMc\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.615 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"mKmgj4d\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.565 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"m19t5Fb\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.621 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Uh6JlFJ\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.540 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"8KZc25B\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.594 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ZhhnAvu\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.626 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ZtQ3eVZ\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.624 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"MK2jURb\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.596 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"eAJHuKG\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.562 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"R95F1j0\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.601 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"6SdfL53\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.543 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"j9jGu4L\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.634 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"wffZhSt\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.569 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"AmCe1mD\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.596 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ubuNV2t\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.619 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"nQfl1Z2\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.628 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"bq5h7fH\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.608 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KwGe2Dh\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.621 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"2BbhmYs\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.598 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"dMSgn06\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.626 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"teJ68f0\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.547 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"6mG5W1N\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.640 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"DreHHhN\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.538 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"dsJlNZB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.632 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"m6GaD3L\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.643 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"hXAbN1U\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.595 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"5YauVF9\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.549 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"XVy3ud0\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.553 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"UHwhEbB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.552 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"1ZH5JZw\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.618 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"5xZ7vLp\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.615 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"D1ajAJL\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.630 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"snhANJq\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.646 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"5qrPASz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.601 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"FHuTSgh\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.625 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"8QhqrQd\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.016 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"fnwtQb3\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.016 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ZAMFUsz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.016 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"gygttRG\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.019 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ERsNYJA\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.625 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"bLSERgD\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.028 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"PQkjvDW\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.030 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ApST60Y\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"xZ3tfZB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.030 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"uxLMSL3\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.030 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"xXn9Cr8\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"QR53ZaE\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"U7rF32Z\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.032 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Zxmlggw\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"8jeZ4gw\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"EcktyKW\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.030 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"VwgNknm\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KNjvWvx\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Mv4HRcU\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"cwC8882\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"W2qp33N\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"PxkwRcn\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.031 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Stb4m9S\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.032 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"nKXEFLj\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.032 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"mKbslg1\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.033 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"c5VXVaz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.033 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"hMq3n5m\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.034 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"8EBbR0Q\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.034 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"3b0RW1F\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.034 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"7dUze0x\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.035 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"splXaP1\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"0V5SrNc\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"MjqE3aQ\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"WfgFgrY\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.041 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"79D6sxj\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.037 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"mRqrKtm\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.062 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"UYu2rK6\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.042 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"6ZCqs6L\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.043 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"9Kl96Lg\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU\n[ERROR]   Run 1: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"qaTsjBB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 2: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"pAxCF3y\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 3: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"3P9LDu9\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 4: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"WA6l1h2\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 5: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"dXSjwcs\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 6: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"5hfwcpe\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 7: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"3ZJvhsG\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 8: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"FJCapQN\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 9: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"QPrgctq\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 10: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"emvECVX\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 11: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"9EzYuCz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 12: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"LFc4GfE\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 13: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"nUbB7KB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 14: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"3jmmkaj\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 15: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"xRC4Ppz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 16: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"9jBYG6K\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 17: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"cK4kgWS\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 18: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"qkdD253\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 19: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Hs1bLgS\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 20: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Hu7RE8m\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 21: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KajZTXy\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 22: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"bcLGkfm\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 23: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"gS91Krg\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 24: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"M3w82SE\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 25: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"xe9Ukvy\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 26: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"BmssmZH\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 27: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"74DtdMc\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 28: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"mKmgj4d\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 29: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"m19t5Fb\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 30: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Uh6JlFJ\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 31: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"8KZc25B\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 32: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ZhhnAvu\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 33: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ZtQ3eVZ\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 34: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"MK2jURb\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 35: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"eAJHuKG\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 36: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"R95F1j0\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 37: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"6SdfL53\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 38: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"j9jGu4L\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 39: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"wffZhSt\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 40: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"AmCe1mD\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 41: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ubuNV2t\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 42: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"nQfl1Z2\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 43: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"bq5h7fH\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 44: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KwGe2Dh\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 45: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"2BbhmYs\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 46: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"dMSgn06\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 47: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"teJ68f0\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 48: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"6mG5W1N\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 49: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"DreHHhN\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 50: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"dsJlNZB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 51: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"m6GaD3L\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 52: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"hXAbN1U\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 53: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"5YauVF9\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 54: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"XVy3ud0\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 55: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"UHwhEbB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 56: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"1ZH5JZw\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 57: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"5xZ7vLp\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 58: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"D1ajAJL\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 59: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"snhANJq\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 60: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"5qrPASz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 61: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"FHuTSgh\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 62: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"8QhqrQd\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 63: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"fnwtQb3\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 64: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ZAMFUsz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 65: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"gygttRG\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 66: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ERsNYJA\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 67: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"bLSERgD\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 68: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"PQkjvDW\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 69: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ApST60Y\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 70: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"xZ3tfZB\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 71: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"uxLMSL3\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 72: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"xXn9Cr8\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 73: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"QR53ZaE\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 74: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"U7rF32Z\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 75: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Zxmlggw\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 76: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"8jeZ4gw\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 77: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"EcktyKW\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 78: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"VwgNknm\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 79: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KNjvWvx\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 80: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Mv4HRcU\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 81: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"cwC8882\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 82: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"W2qp33N\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 83: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"PxkwRcn\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 84: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Stb4m9S\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 85: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"nKXEFLj\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 86: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"mKbslg1\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 87: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"c5VXVaz\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 88: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"hMq3n5m\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 89: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"8EBbR0Q\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 90: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"3b0RW1F\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 91: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"7dUze0x\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 92: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"splXaP1\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 93: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"0V5SrNc\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 94: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"MjqE3aQ\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 95: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"WfgFgrY\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 96: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"79D6sxj\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 97: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"mRqrKtm\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 98: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"UYu2rK6\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 99: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"6ZCqs6L\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[ERROR]   Run 100: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"9Kl96Lg\"\nto match pattern:\n  \"[A-Z][0-9]{1,2}\\.[0-9]{1,2}\"\n[INFO] \n[INFO] \n[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  17.152 s\n[INFO] Finished at: 2024-12-04T00:01:41+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.5.0:test (default-test) on project datafaker: There are test failures.\n[ERROR] \n[ERROR] Please refer to /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-0/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"}