[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.Faker;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Locale;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class Locality_displayNameTest {\n    private Locality locality;\n\n    @BeforeEach\n    public void setUp() {\n        Faker faker = new Faker();\n        locality = new Locality(faker.base());\n    }\n\n    @Test\n    void testDisplayNameNotNull() {\n        String displayName = locality.displayName();\n        assertNotNull(displayName);\n    }\n\n    @Test\n    void testDisplayNameNotEmpty() {\n        String displayName = locality.displayName();\n        assertFalse(displayName.isEmpty());\n    }\n\n    @Test\n    void testDisplayNameWithCountry() {\n        String displayName = locality.displayName();\n        if (displayName.contains(\"(\")) {\n            String country = displayName.substring(displayName.indexOf(\"(\") + 1, displayName.indexOf(\")\"));\n            assertNotNull(country);\n            assertFalse(country.isEmpty());\n        }\n    }\n\n    @Test\n    void testDisplayNameFallback() {\n        // This test assumes that there is a locale in LOCALES that results in an empty display language\n        // and thus triggers the fallback to Locale.ENGLISH.getDisplayLanguage(Locale.ROOT)\n        String displayName = locality.displayName();\n        if (displayName.equals(Locale.ENGLISH.getDisplayLanguage(Locale.ROOT))) {\n            assertNotNull(displayName);\n            assertFalse(displayName.isEmpty());\n        }\n    }\n}\n"}]