[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.service.RandomService;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.net.InetAddress;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class Internet_getPrivateIpV4AddressTest {\n\n    @Test\n    public void testGetPrivateIpV4Address() {\n        // Given\n        BaseProviders faker = Mockito.mock(BaseProviders.class);\n        RandomService randomService = Mockito.mock(RandomService.class);\n        Internet internet = new Internet(faker);\n\n        when(faker.random()).thenReturn(randomService);\n        when(randomService.nextInt(256)).thenReturn(1); // Mock second, third, fourth octets\n        when(randomService.nextInt(PRIVATE_FIRST_OCTET.length)).thenReturn(0); // Mock first octet to be 10\n\n        // When\n        InetAddress result = internet.getPrivateIpV4Address();\n\n        // Then\n        assertEquals(\"10.1.1.1\", result.getHostAddress());\n    }\n\n    private static final Byte[] PRIVATE_FIRST_OCTET = {10, 127, (byte) 169, (byte) 192, (byte) 172};\n    private static final Byte[] PRIVATE_SECOND_OCTET_172 = {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n}\n"}]