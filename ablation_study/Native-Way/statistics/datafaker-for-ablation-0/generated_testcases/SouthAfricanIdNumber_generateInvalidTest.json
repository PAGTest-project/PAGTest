[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseFaker;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\npublic class SouthAfricanIdNumber_generateInvalidTest {\n    private SouthAfricanIdNumber southAfricanIdNumber;\n    private BaseFaker faker;\n\n    @BeforeEach\n    public void setUp() {\n        southAfricanIdNumber = new SouthAfricanIdNumber();\n        faker = new BaseFaker();\n    }\n\n    @Test\n    void testGenerateInvalidSsn() {\n        String invalidSsn = southAfricanIdNumber.generateInvalid(faker);\n        assertFalse(SouthAfricanIdNumber.isValidEnZASsn(invalidSsn));\n    }\n\n    @Test\n    void testGenerateInvalidSsnMultipleTimes() {\n        for (int i = 0; i < 10; i++) {\n            String invalidSsn = southAfricanIdNumber.generateInvalid(faker);\n            assertFalse(SouthAfricanIdNumber.isValidEnZASsn(invalidSsn));\n        }\n    }\n\n    @Test\n    void testGenerateInvalidSsnWithInvalidPattern() {\n        String invalidPattern = \"foo2204720082\";\n        String invalidSsn = southAfricanIdNumber.generateInvalid(faker);\n        assertFalse(invalidSsn.contains(invalidPattern));\n    }\n\n    @Test\n    void testGenerateInvalidSsnWithValidPattern() {\n        String validPattern = \"9202204720083\";\n        String invalidSsn = southAfricanIdNumber.generateInvalid(faker);\n        assertFalse(invalidSsn.equals(validPattern));\n    }\n}\n"}]