[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class FakeValuesGrouping_getTest {\n    private FakeValuesGrouping fakeValuesGrouping;\n    private FakeValues addressValues;\n\n    @BeforeEach\n    void setUp() {\n        fakeValuesGrouping = new FakeValuesGrouping();\n        addressValues = FakeValues.of(FakeValuesContext.of(Locale.ENGLISH, \"address.yml\", \"address\"));\n        fakeValuesGrouping.add(addressValues);\n    }\n\n    @Test\n    void testGetWithExistingKey() {\n        Map<String, String> expectedResult = new HashMap<>();\n        expectedResult.put(\"street\", \"123 Main St\");\n        expectedResult.put(\"city\", \"Anytown\");\n        expectedResult.put(\"zipcode\", \"12345\");\n\n        addressValues.getPaths().forEach(path -> {\n            Map<String, String> fakeValueMap = new HashMap<>();\n            fakeValueMap.put(path, \"value\");\n            fakeValuesGrouping.add(new FakeValues() {\n                @Override\n                public Map<String, String> get(String key) {\n                    return fakeValueMap;\n                }\n\n                @Override\n                public Collection<String> getPaths() {\n                    return Collections.singleton(path);\n                }\n            });\n        });\n\n        Map<String, String> result = fakeValuesGrouping.get(\"address\");\n        assertThat(result).isNotNull().isEqualTo(expectedResult);\n    }\n\n    @Test\n    void testGetWithNonExistingKey() {\n        Map<String, String> result = fakeValuesGrouping.get(\"nonexistent\");\n        assertThat(result).isNull();\n    }\n\n    @Test\n    void testGetWithEmptyFakeValues() {\n        FakeValuesGrouping emptyGrouping = new FakeValuesGrouping();\n        Map<String, String> result = emptyGrouping.get(\"address\");\n        assertThat(result).isNull();\n    }\n}\n"}]