[{"strategy": "retry", "code": "\npackage net.datafaker.transformations;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nimport java.util.Arrays;\n\nclass YamlTransformer_generateTest {\n\n    @Test\n    void testGenerateWithFiniteInput() {\n        YamlTransformer<String> transformer = new YamlTransformer<>();\n        Schema<String, ?> schema = mock(Schema.class);\n        Iterable<String> inputList = Arrays.asList(\"item1\", \"item2\");\n\n        String result = transformer.generate(inputList, schema);\n\n        assertNotNull(result);\n        assertFalse(result.isEmpty());\n    }\n\n    @Test\n    void testGenerateWithInfiniteInput() {\n        YamlTransformer<String> transformer = new YamlTransformer<>();\n        Iterable<String> infiniteInput = mock(Iterable.class);\n        when(infiniteInput.iterator()).thenThrow(new IllegalArgumentException(\"The sequence should be finite\"));\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            transformer.generate(infiniteInput, null);\n        });\n    }\n}\n"}]