[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\npublic class Finance_creditCardTest {\n    private Finance finance;\n\n    @BeforeEach\n    public void setUp() {\n        finance = new Finance(new BaseFaker());\n    }\n\n    @Test\n    void testCreditCardVisa() {\n        String creditCardNumber = finance.creditCard(Finance.CreditCardType.VISA);\n        assertTrue(isValidLuhn(creditCardNumber));\n    }\n\n    @Test\n    void testCreditCardMastercard() {\n        String creditCardNumber = finance.creditCard(Finance.CreditCardType.MASTERCARD);\n        assertTrue(isValidLuhn(creditCardNumber));\n    }\n\n    @Test\n    void testCreditCardInvalidType() {\n        String creditCardNumber = finance.creditCard(null);\n        assertFalse(isValidLuhn(creditCardNumber));\n    }\n\n    @Test\n    void testCreditCardAmericanExpress() {\n        String creditCardNumber = finance.creditCard(Finance.CreditCardType.AMERICAN_EXPRESS);\n        assertTrue(isValidLuhn(creditCardNumber));\n    }\n\n    @Test\n    void testCreditCardDiscover() {\n        String creditCardNumber = finance.creditCard(Finance.CreditCardType.DISCOVER);\n        assertTrue(isValidLuhn(creditCardNumber));\n    }\n\n    private boolean isValidLuhn(String number) {\n        int sum = 0;\n        boolean alternate = false;\n        for (int i = number.length() - 1; i >= 0; i--) {\n            int n = Integer.parseInt(number.substring(i, i + 1));\n            if (alternate) {\n                n *= 2;\n                if (n > 9) {\n                    n = (n % 10) + 1;\n                }\n            }\n            sum += n;\n            alternate = !alternate;\n        }\n        return (sum % 10 == 0);\n    }\n}\n"}]