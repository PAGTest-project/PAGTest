[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.regex.Pattern;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class Text_textTest {\n\n    private Text text;\n\n    @BeforeEach\n    public void setUp() {\n        text = new Text(new BaseProviders());\n    }\n\n    @Test\n    void testTextWithMinimumLength() {\n        String result = text.text(5, 10, false, false, false);\n        assertThat(result.length()).isBetween(5, 10);\n    }\n\n    @Test\n    void testTextWithMaximumLength() {\n        String result = text.text(15, 20, false, false, false);\n        assertThat(result.length()).isBetween(15, 20);\n    }\n\n    @Test\n    void testTextWithUppercase() {\n        String result = text.text(5, 10, true, false, false);\n        assertThat(result).containsPattern(Pattern.compile(\"[A-Z]\"));\n    }\n\n    @Test\n    void testTextWithSpecialCharacters() {\n        String result = text.text(5, 10, false, true, false);\n        assertThat(result).containsPattern(Pattern.compile(\"[!@#$%^&*]\"));\n    }\n\n    @Test\n    void testTextWithDigits() {\n        String result = text.text(5, 10, false, false, true);\n        assertThat(result).containsPattern(Pattern.compile(\"[0-9]\"));\n    }\n\n    @Test\n    void testTextWithAllOptions() {\n        String result = text.text(5, 10, true, true, true);\n        assertThat(result).containsPattern(Pattern.compile(\"[A-Z]\"));\n        assertThat(result).containsPattern(Pattern.compile(\"[!@#$%^&*]\"));\n        assertThat(result).containsPattern(Pattern.compile(\"[0-9]\"));\n    }\n\n    @Test\n    void testTextWithExactLength() {\n        String result = text.text(10, 10, false, false, false);\n        assertThat(result.length()).isEqualTo(10);\n    }\n\n    @Test\n    void testTextWithNoOptions() {\n        String result = text.text(5, 10, false, false, false);\n        assertThat(result).containsPattern(Pattern.compile(\"[a-z]\"));\n    }\n}\n"}]