[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.Faker;\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.IdNumber.IdNumberRequest;\nimport net.datafaker.providers.base.PersonIdNumber;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.assertj.core.api.Assertions.assertThat;\n\nimport java.time.LocalDate;\n\npublic class MoldovanIdNumber_generateValidTest {\n    private MoldovanIdNumber generator;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        generator = new MoldovanIdNumber();\n        faker = new Faker();\n    }\n\n    @Test\n    void testGenerateValid() {\n        IdNumberRequest request = new IdNumberRequest(0, 0, null);\n        PersonIdNumber personIdNumber = generator.generateValid(faker, request);\n\n        assertThat(personIdNumber).isNotNull();\n        assertThat(personIdNumber.getIdNumber()).isNotBlank();\n        assertThat(personIdNumber.getBirthday()).isNotNull();\n        assertThat(personIdNumber.getGender()).isNotNull();\n    }\n\n    @Test\n    void testBasePart() {\n        LocalDate birthday = LocalDate.of(1990, 1, 1);\n        String basePart = generator.basePart(faker, birthday);\n\n        assertThat(basePart).startsWith(\"2\");\n        assertThat(basePart).hasSize(12);\n    }\n\n    @Test\n    void testChecksum() {\n        assertThat(generator.checksum(\"293270095431\")).isEqualTo('9');\n        assertThat(generator.checksum(\"201403700084\")).isEqualTo('3');\n        assertThat(generator.checksum(\"099220624701\")).isEqualTo('8');\n        assertThat(generator.checksum(\"200504212980\")).isEqualTo('9');\n        assertThat(generator.checksum(\"200504401269\")).isEqualTo('3');\n        assertThat(generator.checksum(\"200201100696\")).isEqualTo('1');\n        assertThat(generator.checksum(\"200403612722\")).isEqualTo('9');\n    }\n\n    @Test\n    void test\u0413\u0413\u0413() {\n        LocalDate birthday = LocalDate.of(1990, 1, 1);\n        String \u0413\u0413\u0413 = generator.\u0413\u0413\u0413(birthday);\n\n        assertThat(\u0413\u0413\u0413).isEqualTo(\"990\");\n    }\n\n    @Test\n    void testXXX() {\n        String XXX = generator.XXX(faker);\n\n        assertThat(XXX).hasSize(3);\n    }\n\n    @Test\n    void testYYY() {\n        String YYY = generator.YYY(faker);\n\n        assertThat(YYY).hasSize(5);\n    }\n}\n"}]