[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.mockito.Mockito.*;\n\nimport java.util.UUID;\nimport net.datafaker.service.RandomService;\n\npublic class Internet_uuidv7Test {\n\n    @Test\n    public void testUuidv7() {\n        // Given\n        BaseProviders faker = mock(BaseProviders.class);\n        RandomService randomService = mock(RandomService.class);\n        when(faker.random()).thenReturn(randomService);\n        when(randomService.nextLong()).thenReturn(1234567890L, 9876543210L, 1122334455L);\n\n        Internet internet = new Internet(faker);\n\n        // When\n        String result = internet.uuidv7();\n\n        // Then\n        assertNotNull(result);\n        UUID uuid = UUID.fromString(result);\n        assertEquals(7, uuid.version());\n        assertEquals(2, uuid.variant());\n    }\n}\n"}]