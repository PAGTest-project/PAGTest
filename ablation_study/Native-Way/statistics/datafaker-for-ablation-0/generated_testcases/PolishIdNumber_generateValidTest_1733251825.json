[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.IdNumber.IdNumberRequest;\nimport net.datafaker.providers.base.PersonIdNumber;\nimport net.datafaker.providers.base.TimeAndDate;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.mockito.Mockito.when;\n\npublic class PolishIdNumber_generateValidTest {\n\n    @Test\n    public void testGenerateValid() {\n        BaseProviders faker = Mockito.mock(BaseProviders.class);\n        IdNumberRequest request = Mockito.mock(IdNumberRequest.class);\n        TimeAndDate timeAndDate = Mockito.mock(TimeAndDate.class);\n\n        LocalDate birthday = LocalDate.of(1990, 1, 1);\n        PersonIdNumber.Gender gender = PersonIdNumber.Gender.MALE;\n\n        when(faker.timeAndDate()).thenReturn(timeAndDate);\n        when(Utils.birthday(faker, request)).thenReturn(birthday);\n        when(Utils.gender(faker, request)).thenReturn(gender);\n\n        PolishIdNumber polishIdNumber = new PolishIdNumber();\n        PersonIdNumber result = polishIdNumber.generateValid(faker, request);\n\n        assertNotNull(result);\n    }\n}\n"}]