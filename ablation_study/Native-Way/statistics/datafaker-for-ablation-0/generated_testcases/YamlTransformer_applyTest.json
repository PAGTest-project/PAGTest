[{"strategy": "generate", "code": "\npackage net.datafaker.transformations;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass YamlTransformer_applyTest {\n\n    @Test\n    void testApplyWithEmptyFields() {\n        YamlTransformer<Object> transformer = new YamlTransformer<>();\n        Schema<Object, ?> schema = Schema.of();\n        CharSequence result = transformer.apply(new Object(), schema);\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    void testApplyWithNonEmptyFields() {\n        YamlTransformer<Object> transformer = new YamlTransformer<>();\n        Field<Object, ?> field = new Field<>() {\n            @Override\n            public String getName() {\n                return \"testField\";\n            }\n\n            @Override\n            public Object transform(Object input) {\n                return \"testValue\";\n            }\n        };\n        Schema<Object, ?> schema = Schema.of(field);\n        CharSequence result = transformer.apply(new Object(), schema);\n        assertNotEquals(\"\", result);\n    }\n}\n"}]