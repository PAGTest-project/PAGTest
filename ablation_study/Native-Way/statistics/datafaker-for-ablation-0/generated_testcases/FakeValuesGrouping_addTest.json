[{"strategy": "retry", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Locale;\nimport java.util.Set;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FakeValuesGrouping_addTest {\n    private FakeValuesGrouping fakeValuesGrouping;\n    private FakeValues addressValues;\n\n    @BeforeEach\n    void setUp() {\n        fakeValuesGrouping = new FakeValuesGrouping();\n        addressValues = FakeValues.of(FakeValuesContext.of(Locale.ENGLISH, \"address.yml\", \"address\"));\n    }\n\n    @Test\n    void testAddFakeValues() {\n        fakeValuesGrouping.add(addressValues);\n        Set<String> paths = addressValues.getPaths();\n        for (String path : paths) {\n            assertNotNull(fakeValuesGrouping.get(path));\n        }\n    }\n\n    @Test\n    void testAddFakeValuesGrouping() {\n        FakeValuesGrouping anotherGrouping = new FakeValuesGrouping();\n        FakeValues nameValues = FakeValues.of(FakeValuesContext.of(Locale.ENGLISH, \"name.yml\", \"name\"));\n        anotherGrouping.add(nameValues);\n\n        fakeValuesGrouping.add(anotherGrouping);\n        Set<String> paths = nameValues.getPaths();\n        for (String path : paths) {\n            assertNotNull(fakeValuesGrouping.get(path));\n        }\n    }\n\n    @Test\n    void testAddUnsupportedType() {\n        FakeValuesInterface unsupportedFakeValue = new FakeValuesInterface() {\n            @Override\n            public Object get(String key) {\n                return null;\n            }\n        };\n        assertThrows(RuntimeException.class, () -> fakeValuesGrouping.add(unsupportedFakeValue));\n    }\n}\n"}]