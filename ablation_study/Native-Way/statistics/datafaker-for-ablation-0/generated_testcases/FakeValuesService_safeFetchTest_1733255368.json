[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.List;\nimport java.util.Locale;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class FakeValuesService_safeFetchTest {\n\n    private FakeValuesService fakeValuesService;\n    private FakerContext context;\n\n    @BeforeEach\n    public void setUp() {\n        context = new FakerContext(Locale.ENGLISH, new RandomService());\n        fakeValuesService = new FakeValuesService();\n    }\n\n    @Test\n    public void testSafeFetchWithNullObject() {\n        String result = fakeValuesService.safeFetch(\"nonexistent_key\", context, \"default\");\n        assertEquals(\"default\", result);\n    }\n\n    @Test\n    public void testSafeFetchWithSingleString() {\n        String result = fakeValuesService.safeFetch(\"single_string_key\", context, \"default\");\n        assertNotNull(result);\n    }\n\n    @Test\n    public void testSafeFetchWithListOfStrings() {\n        String result = fakeValuesService.safeFetch(\"list_of_strings_key\", context, \"default\");\n        assertNotNull(result);\n    }\n\n    @Test\n    public void testSafeFetchWithSlashDelimitedRegex() {\n        String result = fakeValuesService.safeFetch(\"regex_key\", context, \"default\");\n        assertNotNull(result);\n    }\n\n    @Test\n    public void testSafeFetchWithEmptyList() {\n        String result = fakeValuesService.safeFetch(\"empty_list_key\", context, \"default\");\n        assertEquals(\"default\", result);\n    }\n\n    @Test\n    public void testSafeFetchWithNonStringObject() {\n        String result = fakeValuesService.safeFetch(\"non_string_object_key\", context, \"default\");\n        assertNotNull(result);\n    }\n}\n"}]