[{"strategy": "retry", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.Locale;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\npublic class FakeValuesService_examplifyTest {\n    private FakeValuesService fakeValuesService;\n    private FakerContext context;\n\n    @BeforeEach\n    public void setUp() {\n        fakeValuesService = new FakeValuesService();\n        context = new FakerContext(Locale.ENGLISH, new RandomService());\n    }\n\n    @Test\n    public void testExamplifyWithNullExample() {\n        String result = fakeValuesService.examplify(null, context);\n        assertNull(result);\n    }\n\n    @Test\n    public void testExamplifyWithLetters() {\n        String example = \"abc\";\n        String result = fakeValuesService.examplify(example, context);\n        assertEquals(3, result.length());\n        for (char c : result.toCharArray()) {\n            assert Character.isLetter(c);\n        }\n    }\n\n    @Test\n    public void testExamplifyWithDigits() {\n        String example = \"123\";\n        String result = fakeValuesService.examplify(example, context);\n        assertEquals(3, result.length());\n        for (char c : result.toCharArray()) {\n            assert Character.isDigit(c);\n        }\n    }\n\n    @Test\n    public void testExamplifyWithMixedCharacters() {\n        String example = \"a1b2c3\";\n        String result = fakeValuesService.examplify(example, context);\n        assertEquals(6, result.length());\n        for (int i = 0; i < result.length(); i++) {\n            if (i % 2 == 0) {\n                assert Character.isLetter(result.charAt(i));\n            } else {\n                assert Character.isDigit(result.charAt(i));\n            }\n        }\n    }\n\n    @Test\n    public void testExamplifyWithSpecialCharacters() {\n        String example = \"a!b@c#\";\n        String result = fakeValuesService.examplify(example, context);\n        assertEquals(\"a!b@c#\", result);\n    }\n}\n"}]