[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.time.Instant;\nimport java.util.concurrent.TimeUnit;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\npublic class TimeAndDate_pastTest {\n    private TimeAndDate timeAndDate;\n\n    @BeforeEach\n    public void setUp() {\n        timeAndDate = new TimeAndDate(new BaseProviders());\n    }\n\n    @Test\n    public void testPastDateWithinRange() {\n        Instant referenceDate = Instant.now();\n        Instant pastDate = timeAndDate.past(1000, TimeUnit.MILLISECONDS, referenceDate);\n        assertTrue(pastDate.isBefore(referenceDate));\n    }\n\n    @Test\n    public void testPastDateAtBoundary() {\n        Instant referenceDate = Instant.now();\n        Instant pastDate = timeAndDate.past(1, TimeUnit.MILLISECONDS, referenceDate);\n        assertTrue(pastDate.isBefore(referenceDate));\n    }\n\n    @Test\n    public void testPastDateWithZeroAtMost() {\n        Instant referenceDate = Instant.now();\n        Instant pastDate = timeAndDate.past(0, TimeUnit.MILLISECONDS, referenceDate);\n        assertFalse(pastDate.isBefore(referenceDate));\n    }\n\n    @Test\n    public void testPastDateWithLargeAtMost() {\n        Instant referenceDate = Instant.now();\n        Instant pastDate = timeAndDate.past(1000000, TimeUnit.MILLISECONDS, referenceDate);\n        assertTrue(pastDate.isBefore(referenceDate));\n    }\n}\n"}]