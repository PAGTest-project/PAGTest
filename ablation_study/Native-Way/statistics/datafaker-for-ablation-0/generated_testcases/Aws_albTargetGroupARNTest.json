[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\npublic class Aws_albTargetGroupARNTest {\n\n    private Aws aws;\n    private BaseProviders faker;\n    private App app;\n    private RandomService randomService;\n\n    @BeforeEach\n    public void setUp() {\n        faker = mock(BaseProviders.class);\n        app = mock(App.class);\n        randomService = mock(RandomService.class);\n        when(faker.app()).thenReturn(app);\n        when(faker.random()).thenReturn(randomService);\n        aws = new Aws(faker);\n    }\n\n    @Test\n    void testAlbTargetGroupARN() {\n        when(faker.resolve(\"aws.regions\")).thenReturn(\"us-west-2\");\n        when(faker.numerify(\"0#########\")).thenReturn(\"0123456789\");\n        when(app.name()).thenReturn(\"MyApp\");\n        when(randomService.hex(16, false)).thenReturn(\"abcdef1234567890\");\n\n        String expectedARN = \"arn:aws:elasticloadbalancing:us-west-2:0123456789:targetgroup/myapp/abcdef1234567890\";\n        assertEquals(expectedARN, aws.albTargetGroupARN());\n    }\n}\n"}]