{"file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "dependencies": ["package net.datafaker.providers.base;", "import org.junit.jupiter.api.RepeatedTest;", "import org.junit.jupiter.api.Test;", "import java.util.regex.Pattern;", "import static java.lang.Integer.parseInt;", "import static net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil.isCNPJValid;", "import static org.assertj.core.api.Assertions.assertThat;"], "name": "CNPJTest", "description": "Tests for CNPJ generation and validation in the BaseFaker class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "isValidCNPJ", "primary_tested": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"], "external_dependencies": {"modules": ["CNPJ", "BaseFaker"], "class_members": [], "project_specific_resources": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"]}, "category": "unit", "fixtures_used": [], "description": "Tests if a generated valid CNPJ is indeed valid."}, {"name": "isInvalidCNPJ", "primary_tested": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"], "external_dependencies": {"modules": ["CNPJ", "BaseFaker"], "class_members": [], "project_specific_resources": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"]}, "category": "unit", "fixtures_used": [], "description": "Tests if a generated invalid CNPJ is indeed invalid."}, {"name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001", "primary_tested": ["CNPJ.valid(boolean,boolean)"], "associated_methods": ["CNPJ.valid(boolean,boolean)", "CNPJ.valid(boolean)", "IdNumberGeneratorPtBrUtil.isCNPJValid(String)"], "external_dependencies": {"modules": ["CNPJ", "BaseFaker"], "class_members": [], "project_specific_resources": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"]}, "category": "unit", "fixtures_used": [], "description": "Tests if a valid CNPJ with multi-branch set to true generates a branch number greater than 0001."}, {"name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001", "primary_tested": ["CNPJ.invalid(boolean,boolean)"], "associated_methods": ["CNPJ.invalid(boolean,boolean)", "CNPJ.invalid(boolean)", "IdNumberGeneratorPtBrUtil.isCNPJValid(String)"], "external_dependencies": {"modules": ["CNPJ", "BaseFaker"], "class_members": [], "project_specific_resources": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"]}, "category": "unit", "fixtures_used": [], "description": "Tests if an invalid CNPJ with multi-branch set to true generates a branch number greater than 0001."}, {"name": "bug", "primary_tested": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"], "external_dependencies": {"modules": [], "class_members": [], "project_specific_resources": ["IdNumberGeneratorPtBrUtil.isCNPJValid(String)"]}, "category": "unit", "fixtures_used": [], "description": "Tests a specific CNPJ for validity, possibly related to a bug."}, {"name": "formattedCNPJ", "primary_tested": ["CNPJ.valid()", "CNPJ.valid(boolean)", "CNPJ.invalid()", "CNPJ.invalid(boolean)"], "associated_methods": ["Pattern.compile(String)"], "external_dependencies": {"modules": ["CNPJ", "BaseFaker", "Pattern"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the generated CNPJ is in the correct format."}]}