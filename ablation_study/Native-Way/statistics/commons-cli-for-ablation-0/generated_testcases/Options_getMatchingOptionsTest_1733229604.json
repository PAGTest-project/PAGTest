[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Options_getMatchingOptionsTest {\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n        options.addOption(\"a\", \"apple\", false, \"description for apple\");\n        options.addOption(\"b\", \"banana\", false, \"description for banana\");\n        options.addOption(\"c\", \"cherry\", false, \"description for cherry\");\n    }\n\n    @Test\n    public void testGetMatchingOptionsExactMatch() {\n        assertEquals(Collections.singletonList(\"apple\"), options.getMatchingOptions(\"apple\"));\n    }\n\n    @Test\n    public void testGetMatchingOptionsPartialMatch() {\n        assertEquals(Arrays.asList(\"apple\", \"banana\"), options.getMatchingOptions(\"a\"));\n    }\n\n    @Test\n    public void testGetMatchingOptionsNoMatch() {\n        assertEquals(Collections.emptyList(), options.getMatchingOptions(\"z\"));\n    }\n\n    @Test\n    public void testGetMatchingOptionsEmptyInput() {\n        assertEquals(Collections.emptyList(), options.getMatchingOptions(\"\"));\n    }\n\n    @Test\n    public void testGetMatchingOptionsNullInput() {\n        assertEquals(Collections.emptyList(), options.getMatchingOptions(null));\n    }\n}\n"}]