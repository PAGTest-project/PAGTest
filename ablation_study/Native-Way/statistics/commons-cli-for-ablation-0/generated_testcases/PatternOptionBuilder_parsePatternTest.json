[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PatternOptionBuilder_parsePatternTest {\n\n    @BeforeEach\n    public void setUp() {\n        // No setup required for static method\n    }\n\n    @Test\n    public void testParsePatternSingleOption() {\n        Options options = PatternOptionBuilder.parsePattern(\"a\");\n        assertNotNull(options);\n        assertTrue(options.hasOption(\"a\"));\n    }\n\n    @Test\n    public void testParsePatternOptionWithType() {\n        Options options = PatternOptionBuilder.parsePattern(\"a@\");\n        assertNotNull(options);\n        assertTrue(options.hasOption(\"a\"));\n        assertEquals(PatternOptionBuilder.OBJECT_VALUE, options.getOption(\"a\").getType());\n    }\n\n    @Test\n    public void testParsePatternOptionWithRequired() {\n        Options options = PatternOptionBuilder.parsePattern(\"a!\");\n        assertNotNull(options);\n        assertTrue(options.hasOption(\"a\"));\n        assertTrue(options.getOption(\"a\").isRequired());\n    }\n\n    @Test\n    public void testParsePatternMultipleOptions() {\n        Options options = PatternOptionBuilder.parsePattern(\"ab@c!\");\n        assertNotNull(options);\n        assertTrue(options.hasOption(\"a\"));\n        assertTrue(options.hasOption(\"b\"));\n        assertTrue(options.hasOption(\"c\"));\n        assertEquals(PatternOptionBuilder.OBJECT_VALUE, options.getOption(\"b\").getType());\n        assertTrue(options.getOption(\"c\").isRequired());\n    }\n\n    @Test\n    public void testParsePatternEmpty() {\n        Options options = PatternOptionBuilder.parsePattern(\"\");\n        assertNotNull(options);\n        assertEquals(0, options.getOptions().size());\n    }\n\n    @Test\n    public void testParsePatternUnsupportedType() {\n        Options options = PatternOptionBuilder.parsePattern(\"a*\");\n        assertNotNull(options);\n        assertTrue(options.hasOption(\"a\"));\n        assertEquals(PatternOptionBuilder.FILES_VALUE, options.getOption(\"a\").getType());\n    }\n}\n"}]