[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Options_addRequiredOptionTest {\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n    }\n\n    @Test\n    public void testAddRequiredOptionWithShortAndLongOpt() {\n        options.addRequiredOption(\"a\", \"alpha\", false, \"description\");\n        assertTrue(options.hasOption(\"a\"));\n        assertTrue(options.hasOption(\"alpha\"));\n        assertTrue(options.getOption(\"a\").isRequired());\n        assertEquals(\"description\", options.getOption(\"a\").getDescription());\n    }\n\n    @Test\n    public void testAddRequiredOptionWithArgument() {\n        options.addRequiredOption(\"b\", \"beta\", true, \"description\");\n        assertTrue(options.hasOption(\"b\"));\n        assertTrue(options.hasOption(\"beta\"));\n        assertTrue(options.getOption(\"b\").isRequired());\n        assertTrue(options.getOption(\"b\").hasArg());\n        assertEquals(\"description\", options.getOption(\"b\").getDescription());\n    }\n\n    @Test\n    public void testAddRequiredOptionWithoutArgument() {\n        options.addRequiredOption(\"c\", \"gamma\", false, \"description\");\n        assertTrue(options.hasOption(\"c\"));\n        assertTrue(options.hasOption(\"gamma\"));\n        assertTrue(options.getOption(\"c\").isRequired());\n        assertFalse(options.getOption(\"c\").hasArg());\n        assertEquals(\"description\", options.getOption(\"c\").getDescription());\n    }\n\n    @Test\n    public void testAddRequiredOptionDuplicate() {\n        options.addRequiredOption(\"d\", \"delta\", false, \"description1\");\n        options.addRequiredOption(\"d\", \"delta\", false, \"description2\");\n        assertTrue(options.hasOption(\"d\"));\n        assertTrue(options.hasOption(\"delta\"));\n        assertTrue(options.getOption(\"d\").isRequired());\n        assertEquals(\"description2\", options.getOption(\"d\").getDescription());\n    }\n}\n"}]