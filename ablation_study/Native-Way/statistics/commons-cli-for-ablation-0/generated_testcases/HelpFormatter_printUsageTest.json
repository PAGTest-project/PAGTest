[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class HelpFormatter_printUsageTest {\n    private HelpFormatter formatter;\n    private StringWriter sw;\n\n    @BeforeEach\n    public void setUp() {\n        formatter = new HelpFormatter();\n        sw = new StringWriter();\n    }\n\n    @Test\n    public void testPrintUsage() {\n        Options options = new Options();\n        options.addOption(Option.builder(\"f\").longOpt(\"file\").hasArg().argName(\"file\").desc(\"The file to be processed\").build());\n        options.addOption(\"v\", \"version\", false, \"Print the version of the application\");\n        options.addOption(\"h\", \"help\", false, \"Print this help message\");\n\n        formatter.printUsage(new PrintWriter(sw), HelpFormatter.DEFAULT_WIDTH, \"myapp\", options);\n\n        String expected = \"usage: myapp [-f <file>] [-h] [-v]\\n\";\n        assertEquals(expected, sw.toString());\n    }\n\n    @Test\n    public void testPrintUsageWithOptionGroup() {\n        Options options = new Options();\n        OptionGroup group = new OptionGroup();\n        group.addOption(new Option(\"a\", \"optionA\", false, \"Option A\"));\n        group.addOption(new Option(\"b\", \"optionB\", false, \"Option B\"));\n        options.addOptionGroup(group);\n\n        formatter.printUsage(new PrintWriter(sw), HelpFormatter.DEFAULT_WIDTH, \"myapp\", options);\n\n        String expected = \"usage: myapp [-a | -b]\\n\";\n        assertEquals(expected, sw.toString());\n    }\n\n    @Test\n    public void testPrintUsageWithRequiredOption() {\n        Options options = new Options();\n        options.addOption(Option.builder(\"f\").longOpt(\"file\").hasArg().argName(\"file\").desc(\"The file to be processed\").required().build());\n\n        formatter.printUsage(new PrintWriter(sw), HelpFormatter.DEFAULT_WIDTH, \"myapp\", options);\n\n        String expected = \"usage: myapp -f <file>\\n\";\n        assertEquals(expected, sw.toString());\n    }\n\n    @Test\n    public void testPrintUsageWithNoOptions() {\n        Options options = new Options();\n\n        formatter.printUsage(new PrintWriter(sw), HelpFormatter.DEFAULT_WIDTH, \"myapp\", options);\n\n        String expected = \"usage: myapp\\n\";\n        assertEquals(expected, sw.toString());\n    }\n}\n"}]