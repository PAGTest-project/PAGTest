[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.io.File;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.net.URL;\nimport org.junit.jupiter.api.Test;\n\npublic class TypeHandler_createValueTest {\n\n    @Test\n    public void testCreateValue_Class() throws ParseException {\n        final Class<?> cls = getClass();\n        assertEquals(cls, TypeHandler.createValue(cls.getName(), Class.class));\n    }\n\n    @Test\n    public void testCreateValue_File() throws ParseException {\n        final File file = new File(\"test.txt\");\n        assertEquals(file, TypeHandler.createValue(file.getPath(), File.class));\n    }\n\n    @Test\n    public void testCreateValue_URL() throws ParseException {\n        final URL url = new URL(\"http://example.com\");\n        assertEquals(url, TypeHandler.createValue(url.toString(), URL.class));\n    }\n\n    @Test\n    public void testCreateValue_BigInteger() throws ParseException {\n        final BigInteger bigInteger = new BigInteger(\"12345678901234567890\");\n        assertEquals(bigInteger, TypeHandler.createValue(bigInteger.toString(), BigInteger.class));\n    }\n\n    @Test\n    public void testCreateValue_BigDecimal() throws ParseException {\n        final BigDecimal bigDecimal = new BigDecimal(\"1234567890.1234567890\");\n        assertEquals(bigDecimal, TypeHandler.createValue(bigDecimal.toString(), BigDecimal.class));\n    }\n\n    @Test\n    public void testCreateValue_InvalidInput() {\n        assertThrows(ParseException.class, () -> {\n            TypeHandler.createValue(\"invalid\", URL.class);\n        });\n    }\n}\n"}]