[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.io.ByteArrayOutputStream;\nimport java.io.PrintWriter;\n\npublic class HelpFormatter_printHelpTest {\n\n    private HelpFormatter helpFormatter;\n    private ByteArrayOutputStream outputStream;\n    private PrintWriter printWriter;\n\n    @BeforeEach\n    public void setUp() {\n        helpFormatter = new HelpFormatter();\n        outputStream = new ByteArrayOutputStream();\n        printWriter = new PrintWriter(outputStream);\n    }\n\n    @Test\n    public void testPrintHelpWithHeaderAndFooter() {\n        Options options = new Options();\n        options.addOption(\"f\", \"file\", true, \"file to process\");\n        options.addOption(\"v\", \"verbose\", false, \"verbose output\");\n\n        String cmdLineSyntax = \"myapp\";\n        String header = \"Do something useful with an input file\\n\\n\";\n        String footer = \"\\nPlease report issues at https://example.com/issues\";\n\n        helpFormatter.printHelp(printWriter, HelpFormatter.DEFAULT_WIDTH, cmdLineSyntax, header, options, HelpFormatter.DEFAULT_LEFT_PAD, HelpFormatter.DEFAULT_DESC_PAD, footer, true);\n        printWriter.flush();\n\n        String expectedOutput = \"usage: myapp [-f <arg>] [-v]\\n\" +\n                                \"Do something useful with an input file\\n\\n\" +\n                                \" -f,--file <arg>   file to process\\n\" +\n                                \" -v,--verbose      verbose output\\n\" +\n                                \"\\nPlease report issues at https://example.com/issues\\n\";\n\n        assertEquals(expectedOutput, outputStream.toString());\n    }\n\n    @Test\n    public void testPrintHelpWithoutHeaderAndFooter() {\n        Options options = new Options();\n        options.addOption(\"f\", \"file\", true, \"file to process\");\n        options.addOption(\"v\", \"verbose\", false, \"verbose output\");\n\n        String cmdLineSyntax = \"myapp\";\n\n        helpFormatter.printHelp(printWriter, HelpFormatter.DEFAULT_WIDTH, cmdLineSyntax, null, options, HelpFormatter.DEFAULT_LEFT_PAD, HelpFormatter.DEFAULT_DESC_PAD, null, false);\n        printWriter.flush();\n\n        String expectedOutput = \"usage: myapp [-f <arg>] [-v]\\n\" +\n                                \" -f,--file <arg>   file to process\\n\" +\n                                \" -v,--verbose      verbose output\\n\";\n\n        assertEquals(expectedOutput, outputStream.toString());\n    }\n\n    @Test\n    public void testPrintHelpWithAutoUsage() {\n        Options options = new Options();\n        options.addOption(\"f\", \"file\", true, \"file to process\");\n        options.addOption(\"v\", \"verbose\", false, \"verbose output\");\n\n        String cmdLineSyntax = \"myapp\";\n        String header = \"Do something useful with an input file\\n\\n\";\n        String footer = \"\\nPlease report issues at https://example.com/issues\";\n\n        helpFormatter.printHelp(printWriter, HelpFormatter.DEFAULT_WIDTH, cmdLineSyntax, header, options, HelpFormatter.DEFAULT_LEFT_PAD, HelpFormatter.DEFAULT_DESC_PAD, footer, true);\n        printWriter.flush();\n\n        String expectedOutput = \"usage: myapp [-f <arg>] [-v]\\n\" +\n                                \"Do something useful with an input file\\n\\n\" +\n                                \" -f,--file <arg>   file to process\\n\" +\n                                \" -v,--verbose      verbose output\\n\" +\n                                \"\\nPlease report issues at https://example.com/issues\\n\";\n\n        assertEquals(expectedOutput, outputStream.toString());\n    }\n}\n"}]