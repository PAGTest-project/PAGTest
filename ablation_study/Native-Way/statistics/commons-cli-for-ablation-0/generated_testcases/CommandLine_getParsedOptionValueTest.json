[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.function.Supplier;\n\npublic class CommandLine_getParsedOptionValueTest {\n    private CommandLine commandLine;\n    private Option option;\n\n    @BeforeEach\n    public void setUp() {\n        commandLine = new CommandLine();\n        option = Option.builder(\"test\").hasArg().build();\n    }\n\n    @Test\n    public void testGetParsedOptionValueWithNullOption() throws ParseException {\n        Supplier<String> defaultValue = () -> \"default\";\n        String result = commandLine.getParsedOptionValue((Option) null, defaultValue);\n        assertEquals(\"default\", result);\n    }\n\n    @Test\n    public void testGetParsedOptionValueWithNullResult() throws ParseException {\n        Supplier<String> defaultValue = () -> \"default\";\n        String result = commandLine.getParsedOptionValue(option, defaultValue);\n        assertEquals(\"default\", result);\n    }\n\n    @Test\n    public void testGetParsedOptionValueWithValidResult() throws ParseException {\n        option.setValues(\"123\");\n        Supplier<Integer> defaultValue = () -> 0;\n        Integer result = commandLine.getParsedOptionValue(option, defaultValue);\n        assertEquals(123, result);\n    }\n\n    @Test\n    public void testGetParsedOptionValueWithException() {\n        option.setValues(\"invalid\");\n        Supplier<Integer> defaultValue = () -> 0;\n        assertThrows(ParseException.class, () -> {\n            commandLine.getParsedOptionValue(option, defaultValue);\n        });\n    }\n}\n"}]