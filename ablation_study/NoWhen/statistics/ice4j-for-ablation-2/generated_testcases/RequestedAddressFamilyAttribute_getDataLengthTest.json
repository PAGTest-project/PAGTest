[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.junit.jupiter.api.*;\n\npublic class RequestedAddressFamilyAttribute_getDataLengthTest {\n    private RequestedAddressFamilyAttribute requestedAddressFamilyAttribute;\n    private MsgFixture msgFixture;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        this.requestedAddressFamilyAttribute = new RequestedAddressFamilyAttribute();\n        this.msgFixture = new MsgFixture();\n    }\n\n    @Test\n    public void testGetDataLength() {\n        assertEquals(RequestedAddressFamilyAttribute.DATA_LENGTH, requestedAddressFamilyAttribute.getDataLength(), \"Data length should be 1.\");\n    }\n\n    @Test\n    public void testEqualsWithSameDataLength() {\n        RequestedAddressFamilyAttribute other = new RequestedAddressFamilyAttribute();\n        assertTrue(requestedAddressFamilyAttribute.equals(other), \"Attributes with the same data length should be equal.\");\n    }\n\n    @Test\n    public void testEqualsWithDifferentDataLength() {\n        RequestedAddressFamilyAttribute other = new RequestedAddressFamilyAttribute() {\n            @Override\n            public char getDataLength() {\n                return 2;\n            }\n        };\n        assertFalse(requestedAddressFamilyAttribute.equals(other), \"Attributes with different data lengths should not be equal.\");\n    }\n\n    @Test\n    public void testEncodeDataLength() {\n        byte[] encoded = requestedAddressFamilyAttribute.encode();\n        assertEquals(RequestedAddressFamilyAttribute.DATA_LENGTH, (char) (encoded[2] << 8 | encoded[3]), \"Encoded data length should match DATA_LENGTH.\");\n    }\n\n    @Test\n    public void testDecodeAttributeBodyV6() throws StunException {\n        byte[] attributeValue = msgFixture.requestedAddressFamilyV6;\n        char offset = Attribute.HEADER_LENGTH;\n        char length = (char) (attributeValue.length - offset);\n\n        requestedAddressFamilyAttribute.decodeAttributeBody(attributeValue, offset, length);\n\n        assertEquals(MsgFixture.REQUESTED_ADDRESS_FAMILY_ATTRIBUTE_V6, requestedAddressFamilyAttribute.getFamily(), \"RequestedAddressFamilyAttribute.decode() did not properly decode.\");\n    }\n}\n"}]