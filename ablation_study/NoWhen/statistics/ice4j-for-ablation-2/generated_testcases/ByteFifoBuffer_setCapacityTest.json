[{"strategy": "generate", "code": "\npackage org.ice4j.pseudotcp.util;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ByteFifoBuffer_setCapacityTest {\n    private ByteFifoBuffer byteFifoBuffer;\n\n    @BeforeEach\n    public void setUp() {\n        byteFifoBuffer = new ByteFifoBuffer(1000);\n    }\n\n    @Test\n    public void testSetCapacitySuccess() {\n        byte[] w_data = getWData(100);\n        byteFifoBuffer.write(w_data, 100);\n\n        assertTrue(byteFifoBuffer.setCapacity(1500));\n        assertEquals(1500, byteFifoBuffer.length());\n        assertEquals(100, byteFifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testSetCapacityFailure() {\n        byte[] w_data = getWData(100);\n        byteFifoBuffer.write(w_data, 100);\n\n        assertFalse(byteFifoBuffer.setCapacity(50));\n        assertEquals(1000, byteFifoBuffer.length());\n        assertEquals(100, byteFifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testSetCapacityWithConsumeWriteBuffer() {\n        byte[] w_data = getWData(100);\n        byteFifoBuffer.write(w_data, 100);\n        byteFifoBuffer.consumeWriteBuffer(50);\n\n        assertTrue(byteFifoBuffer.setCapacity(1500));\n        assertEquals(1500, byteFifoBuffer.length());\n        assertEquals(150, byteFifoBuffer.getBuffered());\n    }\n\n    @Test\n    public void testSetCapacityWithWriteRemaining() {\n        byte[] w_data = getWData(100);\n        byteFifoBuffer.write(w_data, 100);\n\n        assertTrue(byteFifoBuffer.setCapacity(1500));\n        assertEquals(1500, byteFifoBuffer.length());\n        assertEquals(1400, byteFifoBuffer.getWriteRemaining());\n    }\n\n    private byte[] getWData(int length) {\n        byte[] data = new byte[length];\n        for (int i = 0; i < length; i++) {\n            data[i] = (byte) (i % 256);\n        }\n        return data;\n    }\n}\n"}]