[{"strategy": "retry", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createConnectErrorResponseTest {\n\n    @Test\n    public void testCreateConnectErrorResponseWithValidErrorCode() {\n        char errorCode = 400;\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.CONNECT_ERROR_RESPONSE);\n\n        ErrorCodeAttribute errorCodeAttribute = AttributeFactory.createErrorCodeAttribute(errorCode, null);\n        expectedResponse.putAttribute(errorCodeAttribute);\n\n        Response actualResponse = MessageFactory.createConnectErrorResponse(errorCode);\n        assertEquals(expectedResponse, actualResponse);\n    }\n\n    @Test\n    public void testCreateConnectErrorResponseWithInvalidErrorCode() {\n        char invalidErrorCode = 1000; // Invalid error code\n        assertThrows(IllegalArgumentException.class, () -> {\n            MessageFactory.createConnectErrorResponse(invalidErrorCode, \"Invalid error code\");\n        });\n    }\n}\n"}]