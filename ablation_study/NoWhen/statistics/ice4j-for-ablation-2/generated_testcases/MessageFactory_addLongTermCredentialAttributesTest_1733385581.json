[{"strategy": "retry", "code": "\npackage org.ice4j.message;\n\nimport org.junit.jupiter.api.Test;\nimport org.ice4j.StunException;\nimport org.ice4j.attribute.AttributeFactory;\nimport org.ice4j.attribute.MessageIntegrityAttribute;\nimport org.mockito.Mockito;\n\nimport java.io.UnsupportedEncodingException;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass MessageFactory_addLongTermCredentialAttributesTest {\n\n    @Test\n    void testAddLongTermCredentialAttributes_Success() throws StunException {\n        // Given\n        Request request = new Request();\n        byte[] username = \"testUser\".getBytes();\n        byte[] realm = \"testRealm\".getBytes();\n        byte[] nonce = \"testNonce\".getBytes();\n\n        // When\n        MessageFactory.addLongTermCredentialAttributes(request, username, realm, nonce);\n\n        // Then\n        assertNotNull(request.getAttribute(AttributeFactory.createUsernameAttribute(username)));\n        assertNotNull(request.getAttribute(AttributeFactory.createRealmAttribute(realm)));\n        assertNotNull(request.getAttribute(AttributeFactory.createNonceAttribute(nonce)));\n        assertNotNull(request.getAttribute(AttributeFactory.createMessageIntegrityAttribute(\"testUser\".getBytes())));\n    }\n\n    @Test\n    void testAddLongTermCredentialAttributes_UnsupportedEncodingException() {\n        // Given\n        Request request = new Request();\n        byte[] username = \"testUser\".getBytes();\n        byte[] realm = \"testRealm\".getBytes();\n        byte[] nonce = \"testNonce\".getBytes();\n\n        // Mocking the behavior of AttributeFactory.createMessageIntegrityAttribute to throw UnsupportedEncodingException\n        doThrow(new UnsupportedEncodingException()).when(AttributeFactory.class, \"createMessageIntegrityAttribute\", any(byte[].class));\n\n        // When & Then\n        assertThrows(StunException.class, () -> {\n            MessageFactory.addLongTermCredentialAttributes(request, username, realm, nonce);\n        });\n    }\n}\n"}]