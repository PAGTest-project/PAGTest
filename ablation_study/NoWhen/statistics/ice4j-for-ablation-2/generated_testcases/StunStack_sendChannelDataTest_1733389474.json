[{"strategy": "retry", "code": "\npackage org.ice4j.stack;\n\nimport org.ice4j.*;\nimport org.ice4j.message.*;\nimport org.ice4j.socket.*;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.net.DatagramSocket;\nimport java.net.InetSocketAddress;\n\npublic class StunStack_sendChannelDataTest {\n    private StunStack stunStack;\n    private TransportAddress clientAddress;\n    private TransportAddress serverAddress;\n    private ChannelData channelData;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        stunStack = new StunStack();\n\n        IceSocketWrapper clientSock = new IceUdpSocketWrapper(\n            new SafeCloseDatagramSocket(new InetSocketAddress(\"127.0.0.1\", 0)));\n        IceSocketWrapper serverSock = new IceUdpSocketWrapper(\n            new SafeCloseDatagramSocket(new InetSocketAddress(\"127.0.0.1\", 0)));\n\n        clientAddress = new TransportAddress(\"127.0.0.1\", clientSock.getLocalPort(), Transport.UDP);\n        serverAddress = new TransportAddress(\"127.0.0.1\", serverSock.getLocalPort(), Transport.UDP);\n\n        stunStack.addSocket(clientSock);\n        stunStack.addSocket(serverSock);\n\n        channelData = new ChannelData();\n    }\n\n    @Test\n    public void testSendChannelDataSuccess() throws StunException {\n        assertDoesNotThrow(() -> stunStack.sendChannelData(channelData, serverAddress, clientAddress));\n    }\n\n    @Test\n    public void testSendChannelDataIllegalArgumentException() {\n        TransportAddress invalidAddress = new TransportAddress(\"invalid\", 0, Transport.UDP);\n        Exception exception = assertThrows(StunException.class, () -> stunStack.sendChannelData(channelData, invalidAddress, clientAddress));\n        assertEquals(StunException.ILLEGAL_ARGUMENT, exception.getCause().getClass());\n    }\n\n    @Test\n    public void testSendChannelDataIOException() {\n        // Simulate IOException by using an invalid socket\n        IceSocketWrapper invalidSocket = new IceUdpSocketWrapper(new SafeCloseDatagramSocket(new InetSocketAddress(\"127.0.0.1\", 0)));\n        invalidSocket.close();\n        TransportAddress invalidAddress = new TransportAddress(\"127.0.0.1\", invalidSocket.getLocalPort(), Transport.UDP);\n\n        Exception exception = assertThrows(StunException.class, () -> stunStack.sendChannelData(channelData, serverAddress, invalidAddress));\n        assertEquals(StunException.NETWORK_ERROR, exception.getCause().getClass());\n    }\n}\n"}]