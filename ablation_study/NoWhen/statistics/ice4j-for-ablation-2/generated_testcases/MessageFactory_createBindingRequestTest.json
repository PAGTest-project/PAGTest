[{"strategy": "generate", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createBindingRequestTest {\n\n    @Test\n    public void testCreateBindingRequest() {\n        Request bindingRequest = MessageFactory.createBindingRequest();\n        assertEquals(Message.BINDING_REQUEST, bindingRequest.getMessageType());\n    }\n\n    @Test\n    public void testCreateBindingRequestWithPriority() throws StunException {\n        long priority = 123456789L;\n        Request bindingRequest = MessageFactory.createBindingRequest(priority);\n        assertEquals(Message.BINDING_REQUEST, bindingRequest.getMessageType());\n        PriorityAttribute priorityAttribute = (PriorityAttribute) bindingRequest.getAttribute(Attribute.PRIORITY);\n        assertNotNull(priorityAttribute);\n        assertEquals(priority, priorityAttribute.getPriority());\n    }\n\n    @Test\n    public void testCreateBindingRequestWithPriorityAndControlling() throws StunException {\n        long priority = 123456789L;\n        boolean controlling = true;\n        long tieBreaker = 987654321L;\n        Request bindingRequest = MessageFactory.createBindingRequest(priority, controlling, tieBreaker);\n        assertEquals(Message.BINDING_REQUEST, bindingRequest.getMessageType());\n        PriorityAttribute priorityAttribute = (PriorityAttribute) bindingRequest.getAttribute(Attribute.PRIORITY);\n        IceControllingAttribute iceControllingAttribute = (IceControllingAttribute) bindingRequest.getAttribute(Attribute.ICE_CONTROLLING);\n        assertNotNull(priorityAttribute);\n        assertNotNull(iceControllingAttribute);\n        assertEquals(priority, priorityAttribute.getPriority());\n        assertEquals(tieBreaker, iceControllingAttribute.getTieBreaker());\n    }\n\n    @Test\n    public void testCreateBindingRequestWithPriorityAndControlled() throws StunException {\n        long priority = 123456789L;\n        boolean controlling = false;\n        long tieBreaker = 987654321L;\n        Request bindingRequest = MessageFactory.createBindingRequest(priority, controlling, tieBreaker);\n        assertEquals(Message.BINDING_REQUEST, bindingRequest.getMessageType());\n        PriorityAttribute priorityAttribute = (PriorityAttribute) bindingRequest.getAttribute(Attribute.PRIORITY);\n        IceControlledAttribute iceControlledAttribute = (IceControlledAttribute) bindingRequest.getAttribute(Attribute.ICE_CONTROLLED);\n        assertNotNull(priorityAttribute);\n        assertNotNull(iceControlledAttribute);\n        assertEquals(priority, priorityAttribute.getPriority());\n        assertEquals(tieBreaker, iceControlledAttribute.getTieBreaker());\n    }\n}\n"}]