[{"strategy": "generate", "code": "\npackage org.ice4j.message;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.attribute.LifetimeAttribute;\nimport org.ice4j.attribute.AttributeFactory;\n\npublic class MessageFactory_createRefreshResponseTest {\n\n    @Test\n    public void testCreateRefreshResponse_Success() {\n        // Given\n        int lifetime = 3600;\n\n        // When\n        Response response = MessageFactory.createRefreshResponse(lifetime);\n\n        // Then\n        assertEquals(Message.REFRESH_RESPONSE, response.getMessageType());\n        LifetimeAttribute lifetimeAttribute = (LifetimeAttribute) response.getAttribute(LifetimeAttribute.class);\n        assertNotNull(lifetimeAttribute);\n        assertEquals(lifetime, lifetimeAttribute.getLifetime());\n    }\n\n    @Test\n    public void testCreateRefreshResponse_IllegalArgumentException() {\n        // Given\n        int invalidLifetime = -1; // An invalid lifetime to trigger IllegalArgumentException\n\n        // When\n        Response response = MessageFactory.createRefreshResponse(invalidLifetime);\n\n        // Then\n        assertEquals(Message.REFRESH_RESPONSE, response.getMessageType());\n        assertNull(response.getAttribute(LifetimeAttribute.class));\n    }\n}\n"}]