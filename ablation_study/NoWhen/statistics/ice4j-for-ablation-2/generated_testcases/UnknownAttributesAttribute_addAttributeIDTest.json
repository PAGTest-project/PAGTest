[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.*;\n\npublic class UnknownAttributesAttribute_addAttributeIDTest {\n    private UnknownAttributesAttribute unknownAttributesAttribute;\n\n    @BeforeEach\n    public void setUp() {\n        unknownAttributesAttribute = new UnknownAttributesAttribute();\n    }\n\n    @Test\n    public void testAddAttributeID_NewAttribute() {\n        char attributeID = 'A';\n        unknownAttributesAttribute.addAttributeID(attributeID);\n        assertTrue(unknownAttributesAttribute.contains(attributeID), \"Attribute ID should be added\");\n        assertEquals(1, unknownAttributesAttribute.getAttributeCount(), \"Attribute count should be 1\");\n    }\n\n    @Test\n    public void testAddAttributeID_DuplicateAttribute() {\n        char attributeID = 'B';\n        unknownAttributesAttribute.addAttributeID(attributeID);\n        unknownAttributesAttribute.addAttributeID(attributeID); // Duplicate\n        assertTrue(unknownAttributesAttribute.contains(attributeID), \"Attribute ID should be added\");\n        assertEquals(1, unknownAttributesAttribute.getAttributeCount(), \"Attribute count should still be 1\");\n    }\n\n    @Test\n    public void testAddAttributeID_MultipleAttributes() {\n        char attributeID1 = 'C';\n        char attributeID2 = 'D';\n        unknownAttributesAttribute.addAttributeID(attributeID1);\n        unknownAttributesAttribute.addAttributeID(attributeID2);\n        assertTrue(unknownAttributesAttribute.contains(attributeID1), \"Attribute ID1 should be added\");\n        assertTrue(unknownAttributesAttribute.contains(attributeID2), \"Attribute ID2 should be added\");\n        assertEquals(2, unknownAttributesAttribute.getAttributeCount(), \"Attribute count should be 2\");\n    }\n}\n"}]