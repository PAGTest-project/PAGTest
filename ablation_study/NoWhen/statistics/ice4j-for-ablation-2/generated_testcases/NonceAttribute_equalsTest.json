[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.*;\nimport java.util.Arrays;\n\npublic class NonceAttribute_equalsTest {\n\n    private NonceAttribute nonceAttribute;\n    private byte[] nonceValue;\n\n    @BeforeEach\n    public void setUp() {\n        nonceAttribute = new NonceAttribute();\n        nonceValue = \"testNonce\".getBytes();\n        nonceAttribute.setNonce(nonceValue);\n    }\n\n    @Test\n    public void testEqualsSameObject() {\n        assertTrue(nonceAttribute.equals(nonceAttribute), \"An object should be equal to itself\");\n    }\n\n    @Test\n    public void testEqualsDifferentType() {\n        Object obj = new Object();\n        assertFalse(nonceAttribute.equals(obj), \"An object of different type should not be equal\");\n    }\n\n    @Test\n    public void testEqualsDifferentNonce() {\n        NonceAttribute differentNonceAttribute = new NonceAttribute();\n        differentNonceAttribute.setNonce(\"differentNonce\".getBytes());\n        assertFalse(nonceAttribute.equals(differentNonceAttribute), \"Attributes with different nonce values should not be equal\");\n    }\n\n    @Test\n    public void testEqualsSameNonce() {\n        NonceAttribute sameNonceAttribute = new NonceAttribute();\n        sameNonceAttribute.setNonce(nonceValue);\n        assertTrue(nonceAttribute.equals(sameNonceAttribute), \"Attributes with the same nonce values should be equal\");\n    }\n\n    @Test\n    public void testEqualsDifferentAttributeType() {\n        NonceAttribute differentTypeAttribute = new NonceAttribute() {\n            @Override\n            public char getAttributeType() {\n                return (char) (super.getAttributeType() + 1);\n            }\n        };\n        differentTypeAttribute.setNonce(nonceValue);\n        assertFalse(nonceAttribute.equals(differentTypeAttribute), \"Attributes with different attribute types should not be equal\");\n    }\n\n    @Test\n    public void testEqualsDifferentDataLength() {\n        NonceAttribute differentLengthAttribute = new NonceAttribute();\n        differentLengthAttribute.setNonce(\"test\".getBytes());\n        assertFalse(nonceAttribute.equals(differentLengthAttribute), \"Attributes with different data lengths should not be equal\");\n    }\n}\n"}]