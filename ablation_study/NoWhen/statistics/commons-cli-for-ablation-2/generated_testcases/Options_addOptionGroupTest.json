[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Options_addOptionGroupTest {\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n    }\n\n    @Test\n    public void testAddOptionGroupWithRequiredGroup() {\n        OptionGroup group = new OptionGroup();\n        group.setRequired(true);\n        group.addOption(Option.builder(\"a\").build());\n        group.addOption(Option.builder(\"b\").build());\n\n        options.addOptionGroup(group);\n\n        assertTrue(options.getRequiredOptions().contains(group));\n        assertEquals(group, options.getOptionGroup(Option.builder(\"a\").build()));\n        assertEquals(group, options.getOptionGroup(Option.builder(\"b\").build()));\n    }\n\n    @Test\n    public void testAddOptionGroupWithNonRequiredGroup() {\n        OptionGroup group = new OptionGroup();\n        group.setRequired(false);\n        group.addOption(Option.builder(\"x\").build());\n        group.addOption(Option.builder(\"y\").build());\n\n        options.addOptionGroup(group);\n\n        assertFalse(options.getRequiredOptions().contains(group));\n        assertEquals(group, options.getOptionGroup(Option.builder(\"x\").build()));\n        assertEquals(group, options.getOptionGroup(Option.builder(\"y\").build()));\n    }\n\n    @Test\n    public void testAddOptionGroupSetsOptionRequiredToFalse() {\n        OptionGroup group = new OptionGroup();\n        Option optionA = Option.builder(\"a\").required(true).build();\n        Option optionB = Option.builder(\"b\").required(true).build();\n        group.addOption(optionA);\n        group.addOption(optionB);\n\n        options.addOptionGroup(group);\n\n        assertFalse(optionA.isRequired());\n        assertFalse(optionB.isRequired());\n    }\n\n    @Test\n    public void testAddOptionGroupAddsOptionsToShortOpts() {\n        OptionGroup group = new OptionGroup();\n        Option optionA = Option.builder(\"a\").build();\n        Option optionB = Option.builder(\"b\").build();\n        group.addOption(optionA);\n        group.addOption(optionB);\n\n        options.addOptionGroup(group);\n\n        assertTrue(options.hasShortOption(\"a\"));\n        assertTrue(options.hasShortOption(\"b\"));\n    }\n\n    @Test\n    public void testAddOptionGroupAddsOptionsToLongOpts() {\n        OptionGroup group = new OptionGroup();\n        Option optionA = Option.builder(\"a\").longOpt(\"alpha\").build();\n        Option optionB = Option.builder(\"b\").longOpt(\"beta\").build();\n        group.addOption(optionA);\n        group.addOption(optionB);\n\n        options.addOptionGroup(group);\n\n        assertTrue(options.hasLongOption(\"alpha\"));\n        assertTrue(options.hasLongOption(\"beta\"));\n    }\n}\n"}]