[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Option_toStringTest {\n\n    private Option option;\n\n    @BeforeEach\n    public void setUp() {\n        option = Option.builder(\"o\").desc(\"option description\").build();\n    }\n\n    @Test\n    public void testToStringBasic() {\n        String expected = \"[ Option o :: option description :: class java.lang.String ]\";\n        assertEquals(expected, option.toString());\n    }\n\n    @Test\n    public void testToStringWithLongOption() {\n        option = Option.builder(\"o\").longOpt(\"option\").desc(\"option description\").build();\n        String expected = \"[ Option o  option :: option description :: class java.lang.String ]\";\n        assertEquals(expected, option.toString());\n    }\n\n    @Test\n    public void testToStringWithDeprecated() {\n        option = Option.builder(\"o\").desc(\"option description\").deprecated().build();\n        String expected = \"[ Option o Deprecated :: option description :: class java.lang.String ]\";\n        assertEquals(expected, option.toString());\n    }\n\n    @Test\n    public void testToStringWithArg() {\n        option = Option.builder(\"o\").desc(\"option description\").hasArg().build();\n        String expected = \"[ Option o [ARG] :: option description :: class java.lang.String ]\";\n        assertEquals(expected, option.toString());\n    }\n\n    @Test\n    public void testToStringWithArgs() {\n        option = Option.builder(\"o\").desc(\"option description\").hasArgs().build();\n        String expected = \"[ Option o [ARG...] :: option description :: class java.lang.String ]\";\n        assertEquals(expected, option.toString());\n    }\n\n    @Test\n    public void testToStringWithOptionalArg() {\n        option = Option.builder(\"o\").desc(\"option description\").hasArg().optionalArg(true).build();\n        String expected = \"[ Option o [ARG] :: option description :: class java.lang.String ]\";\n        assertEquals(expected, option.toString());\n    }\n\n    @Test\n    public void testToStringWithType() {\n        option = Option.builder(\"o\").desc(\"option description\").type(Integer.class).build();\n        String expected = \"[ Option o :: option description :: class java.lang.Integer ]\";\n        assertEquals(expected, option.toString());\n    }\n}\n"}]