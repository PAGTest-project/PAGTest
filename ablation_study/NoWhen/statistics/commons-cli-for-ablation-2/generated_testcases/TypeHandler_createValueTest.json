[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.io.File;\nimport java.net.URL;\nimport org.junit.jupiter.api.Test;\n\npublic class TypeHandler_createValueTest {\n\n    @Test\n    public void testCreateValueWithClass() throws ParseException {\n        Class<?> clazz = TypeHandler.createValue(\"java.lang.String\", Class.class);\n        assertNotNull(clazz);\n        assertEquals(String.class, clazz);\n    }\n\n    @Test\n    public void testCreateValueWithFile() throws ParseException {\n        File file = TypeHandler.createValue(\"src/test/resources/testfile.txt\", File.class);\n        assertNotNull(file);\n        assertEquals(\"testfile.txt\", file.getName());\n    }\n\n    @Test\n    public void testCreateValueWithURL() throws ParseException {\n        URL url = TypeHandler.createValue(\"https://www.example.com\", URL.class);\n        assertNotNull(url);\n        assertEquals(\"https://www.example.com\", url.toString());\n    }\n\n    @Test\n    public void testCreateValueWithInvalidInput() {\n        assertThrows(ParseException.class, () -> {\n            TypeHandler.createValue(\"invalid\", URL.class);\n        });\n    }\n}\n"}]