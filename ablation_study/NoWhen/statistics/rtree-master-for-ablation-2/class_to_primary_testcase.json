{"Asserts": [{"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/FactoriesTest.java", "testclass_name": "FactoriesTest", "testcase_name": "isUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/ComparatorsTest.java", "testclass_name": "ComparatorsTest", "testcase_name": "testConstructorIsPrivate"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializerHelperTest.java", "testclass_name": "SerializerHelperTest", "testcase_name": "assertIsUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/FlatBuffersHelperTest.java", "testclass_name": "FlatBuffersHelperTest", "testcase_name": "isUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/LeafHelperTest.java", "testclass_name": "LeafHelperTest", "testcase_name": "isUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/RectangleUtilTest.java", "testclass_name": "RectangleUtilTest", "testcase_name": "isUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/internal/GeometryUtilTest.java", "testclass_name": "GeometryUtilTest", "testcase_name": "isUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/NonLeafHelperTest.java", "testclass_name": "NonLeafHelperTest", "testcase_name": "isUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "coverPrivateConstructor"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/IntersectsTest.java", "testclass_name": "IntersectsTest", "testcase_name": "testConstructorIsPrivate"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/EntriesTest.java", "testclass_name": "EntriesTest", "testcase_name": "testIsUtilityClass"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testConstructorIsPrivate"}, {"method_name": "assertIsUtilityClass(Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testPrivateConstructorForCoverageOnly"}, {"method_name": "assertIsUtilityClass(Class<?>)", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testIsUtilClass"}, {"method_name": "assertIsUtilityClass(Class<?>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "isUtilityClass"}], "NodePosition": [{"method_name": "toString()", "file_path": "src/test/java/com/github/davidmoten/rtree/NodePositionTest.java", "testclass_name": "NodePositionTest", "testcase_name": "testToString"}], "NonLeafDefault": [{"method_name": "NonLeafDefault(List<?extendsNode<Object,Geometry>>,Context<Object,Geometry>)", "file_path": "src/test/java/com/github/davidmoten/rtree/NonLeafTest.java", "testclass_name": "NonLeafTest", "testcase_name": "testNonLeafPrecondition"}], "Util": [{"method_name": "mbr(Collection<?extendsHasGeometry>)", "file_path": "src/test/java/com/github/davidmoten/rtree/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testMbrWithNegativeValues"}, {"method_name": "add(List<Integer>,Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Util_addTest.java", "testclass_name": "Util_addTest", "testcase_name": "testAdd"}, {"method_name": "remove(List<Integer>,List<Integer>)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Util_removeTest.java", "testclass_name": "Util_removeTest", "testcase_name": "testRemoveAllElements"}, {"method_name": "remove(List<Integer>,List<Integer>)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Util_removeTest.java", "testclass_name": "Util_removeTest", "testcase_name": "testRemoveSomeElements"}, {"method_name": "remove(List<Integer>,List<Integer>)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Util_removeTest.java", "testclass_name": "Util_removeTest", "testcase_name": "testRemoveNoElements"}, {"method_name": "remove(List<Integer>,List<Integer>)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Util_removeTest.java", "testclass_name": "Util_removeTest", "testcase_name": "testRemoveElementsFromEmptyList"}, {"method_name": "remove(List<Integer>,List<Integer>)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Util_removeTest.java", "testclass_name": "Util_removeTest", "testcase_name": "testRemoveNonExistentElements"}], "SplitterRStar": [{"method_name": "getPairs(int,List<HasGeometry>)", "file_path": "src/test/java/com/github/davidmoten/rtree/SplitterRStarTest.java", "testclass_name": "SplitterRStarTest", "testcase_name": "testGetPairs"}], "Node": [{"method_name": "searchWithoutBackpressure(Func1,Subscriber)", "file_path": "src/test/java/com/github/davidmoten/rtree/OnSubscribeSearchTest.java", "testclass_name": "OnSubscribeSearchTest", "testcase_name": "testSearchProducerThrowsExceptionFromRequestAll"}], "LeafDefault": [{"method_name": "searchWithoutBackpressure(Func1,Subscriber)", "file_path": "src/test/java/com/github/davidmoten/rtree/OnSubscribeSearchTest.java", "testclass_name": "OnSubscribeSearchTest", "testcase_name": "testSearchProducerThrowsExceptionFromRequestSome"}, {"method_name": "LeafDefault(List<Entry<Object,Rectangle>>,Context<Object,Rectangle>)", "file_path": "src/test/java/com/github/davidmoten/rtree/LeafTest.java", "testclass_name": "LeafTest", "testcase_name": "testCannotHaveZeroChildren"}, {"method_name": "geometry()", "file_path": "src/test/java/com/github/davidmoten/rtree/LeafTest.java", "testclass_name": "LeafTest", "testcase_name": "testMbr"}], "Kryo": [{"method_name": "writeObject(Output,Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "writeObject(Output,Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testKryo"}, {"method_name": "readObject(Input,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testRTree"}, {"method_name": "readObject(Input,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/KryoSerializationTest.java", "testclass_name": "KryoSerializationTest", "testcase_name": "testKryo"}], "BigDecimal": [{"method_name": "floatValue()", "file_path": "src/test/java/com/github/davidmoten/rtree/HighPrecisionTest.java", "testclass_name": "HighPrecisionTest", "testcase_name": "testForIssue72"}], "RTree": [{"method_name": "add(Integer,Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/HighPrecisionTest.java", "testclass_name": "HighPrecisionTest", "testcase_name": "testHighPrecision"}, {"method_name": "search(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/HighPrecisionTest.java", "testclass_name": "HighPrecisionTest", "testcase_name": "testHighPrecision"}, {"method_name": "search(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testLatLongExample"}, {"method_name": "search(Point)", "file_path": "src/test/java/com/github/davidmoten/rtree/LatLongExampleTest.java", "testclass_name": "LatLongExampleTest", "testcase_name": "testSearchLatLongCircles"}, {"method_name": "nearest(Point,double,int)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testOperatorShouldRequestMaxFromUpstream"}, {"method_name": "search(Geometry)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse"}, {"method_name": "search(Geometry)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode"}, {"method_name": "search(Geometry)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureFastPathNotInitiatedTwice"}, {"method_name": "entries()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot"}, {"method_name": "entries()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureRequestZero"}, {"method_name": "entries()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot"}, {"method_name": "entries()", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode"}, {"method_name": "search(Point,double,Func2)", "file_path": "src/test/java/com/github/davidmoten/rtree/RTree_searchTest.java", "testclass_name": "RTree_searchTest", "testcase_name": "testSearch"}], "Rectangle": [{"method_name": "geometry()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testGeometry"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testInequalityWithNull"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testSimpleEquality"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testSimpleInEquality1"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testSimpleInEquality2"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testSimpleInEquality3"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testSimpleInEquality4"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testDistanceToSelfIsZero"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testDistanceToOverlapIsZero"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testDistanceWhenSeparatedByXOnly"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testDistanceWhenSeparatedByXOnlyAndOverlapOnY"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testDistanceWhenSeparatedByDiagonally"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testContains"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testContainsReturnsFalseWhenLessThanMinY"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testContainsReturnsFalseWhenGreaterThanMaxY"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testContainsReturnsFalseWhenGreaterThanMaxX"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testContainsReturnsFalseWhenLessThanMinX"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersects"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectsNoRectangleContainsCornerOfAnother"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectsOneRectangleContainsTheOther"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectsOneRectangleReturnsTrueDespiteZeroArea"}, {"method_name": "intersectionArea(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectionAreWhenEqual"}, {"method_name": "intersectionArea(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectionAreaWhenDontIntersect"}, {"method_name": "intersectionArea(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectionAreaCornerIntersect"}, {"method_name": "intersectionArea(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testIntersectionAreaTopIntersect"}], "Visualizer": [{"method_name": "save(String)", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testSaveImageToNonExistentDirectoryThrowsRuntimeException"}], "ImageSaver": [{"method_name": "run(Callable<Void>)", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testRunThatThrows"}, {"method_name": "run(Callable<Void>)", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testRunThatDoesNotThrow"}, {"method_name": "class", "file_path": "src/test/java/com/github/davidmoten/rtree/ImageSaverTest.java", "testclass_name": "ImageSaverTest", "testcase_name": "testIsUtilClass"}], "Serializers": [{"method_name": "class", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "isUtilityClass"}, {"method_name": "javaIo()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testJavaIoSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringPointSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringRectangleFloatSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringRectangleDoubleSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringCircleFloatSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringCircleDoubleSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringLineFloatSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testStringLineDoubleSerialization"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffers"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffers"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testAddToFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "testDeleteFromFlatBuffersWhenRootNodeIsNonLeaf"}, {"method_name": "utf8()", "file_path": "src/test/java/com/github/davidmoten/rtree/SerializersTest.java", "testclass_name": "SerializersTest", "testcase_name": "canRoundTripEmptyTree"}], "ObjectsHelper": [{"method_name": "asClass(Object,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelperTest.java", "testclass_name": "ObjectsHelperTest", "testcase_name": "testAsClassIsAbsentIfNull"}, {"method_name": "asClass(Object,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelperTest.java", "testclass_name": "ObjectsHelperTest", "testcase_name": "testAsClassIsAbsentIfDifferentClass"}, {"method_name": "asClass(Object,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelperTest.java", "testclass_name": "ObjectsHelperTest", "testcase_name": "testAsClassIsPresentIfSameTypeAndNotNull"}, {"method_name": "asClass(Object,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelper_asClassTest.java", "testclass_name": "ObjectsHelper_asClassTest", "testcase_name": "testAsClassWithNullObject"}, {"method_name": "asClass(Object,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelper_asClassTest.java", "testclass_name": "ObjectsHelper_asClassTest", "testcase_name": "testAsClassWithIncorrectClass"}, {"method_name": "asClass(Object,Class)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelper_asClassTest.java", "testclass_name": "ObjectsHelper_asClassTest", "testcase_name": "testAsClassWithCorrectClass"}, {"method_name": "instantiateForTestCoveragePurposesOnly()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelperTest.java", "testclass_name": "ObjectsHelperTest", "testcase_name": "coverPrivateConstructor"}, {"method_name": "instantiateForTestCoveragePurposesOnly()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ObjectsHelper_asClassTest.java", "testclass_name": "ObjectsHelper_asClassTest", "testcase_name": "coverPrivateConstructor"}], "Intersects": [{"method_name": "call(Rectangle,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/IntersectsTest.java", "testclass_name": "IntersectsTest", "testcase_name": "testRectangleIntersectsCircle"}, {"method_name": "call(Rectangle,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/IntersectsTest.java", "testclass_name": "IntersectsTest", "testcase_name": "testRectangleDoesNotIntersectCircle"}, {"method_name": "call(Circle,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testIntersects"}, {"method_name": "call(Circle,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testDoNotIntersect"}, {"method_name": "lineIntersectsLine(Line,Line)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testDoesIntersectOtherLine"}, {"method_name": "lineIntersectsLine(Line,Line)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testDoesNotIntersectLine"}, {"method_name": "lineIntersectsRectangle(Line,Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testDoesIntersectRectangle"}, {"method_name": "lineIntersectsRectangle(Line,Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testDoesNotIntersectRectangle"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineIntersectsCircle"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesNotIntersectCircle"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesNotIntersectCircleEast"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesIntersectCircleEast"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesNotIntersectCircleWest"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesIntersectCircleWest"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesNotIntersectCircleNorth"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesNotIntersectCircleSouth"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesIntersectCircleSouth"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineSameXWithinCircle"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineIsPointWithinCircle"}, {"method_name": "lineIntersectsCircle(Line,Circle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineIsPointOutsideCircle"}], "Entries": [{"method_name": "value()", "file_path": "src/test/java/com/github/davidmoten/rtree/EntriesTest.java", "testclass_name": "EntriesTest", "testcase_name": "testValue"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/EntriesTest.java", "testclass_name": "EntriesTest", "testcase_name": "testEquality"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/EntriesTest.java", "testclass_name": "EntriesTest", "testcase_name": "testEqualityWithGeometry"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/EntriesTest.java", "testclass_name": "EntriesTest", "testcase_name": "testInequality"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/EntriesTest.java", "testclass_name": "EntriesTest", "testcase_name": "testInequalityWithNull"}], "Point": [{"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testMbr"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testEquality"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testInequality"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testInequalityToNull"}, {"method_name": "x()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testCoordinates"}, {"method_name": "y()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testCoordinates"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testDistanceToRectangle"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testPointIntersectsItself"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testIntersectIsFalseWhenPointsDiffer"}, {"method_name": "distance(Point)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testDistanceToPoint"}, {"method_name": "hashCode()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testHashCode"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testDoesNotContain"}, {"method_name": "contains(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/PointTest.java", "testclass_name": "PointTest", "testcase_name": "testContains"}], "Circle": [{"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testEquality"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testInequalityRadius"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testInequalityX"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testInequalityY"}, {"method_name": "equals(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testInequalityWithNull"}, {"method_name": "x()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testCoordinates"}, {"method_name": "y()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testCoordinates"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testDistance"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testDistanceIsZeroWhenIntersects"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testIntersects2"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testIntersects3"}, {"method_name": "hashCode()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testHashCode"}, {"method_name": "mbr()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testMbr"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testIntersectsReturnsTrue"}, {"method_name": "intersects(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testIntersectsReturnsFalse"}, {"method_name": "intersects(Point)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testIntersectsPoint"}, {"method_name": "intersects(Point)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/CircleTest.java", "testclass_name": "CircleTest", "testcase_name": "testDoesNotIntersectPoint"}], "Context": [{"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextIllegalMinChildren"}, {"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextIllegalMaxChildren"}, {"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextIllegalMinMaxChildren"}, {"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextLegalChildren"}, {"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextSelectorNullThrowsNPE"}, {"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextSplitterNullThrowsNPE"}, {"method_name": "Context(int,int,Selector,Splitter,Factory)", "file_path": "src/test/java/com/github/davidmoten/rtree/ContextTest.java", "testclass_name": "ContextTest", "testcase_name": "testContextNodeFactoryNullThrowsNPE"}], "Line": [{"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangle"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangleIsZeroWhenOneEndIsInside"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangleIsZeroWhenOtherEndIsInside"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangleIsZeroWhenContainsWestEdge"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangleIsZeroWhenContainsNorthEdge"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangleIsZeroWhenContainsSouthEdge"}, {"method_name": "distance(Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDistanceToRectangleIsZeroWhenContainsEastEdge"}, {"method_name": "mbr()", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineMbr"}, {"method_name": "intersects(Point)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesNotIntersectsPoint"}, {"method_name": "intersects(Point)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoesIntersectPoint"}], "OperatorBoundedPriorityQueue": [{"method_name": "call(Subscriber)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testPriority"}, {"method_name": "call(Subscriber)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeAfterFirst"}, {"method_name": "call(Subscriber)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeAfterLastButBeforeCompletedCalled"}, {"method_name": "call(Subscriber)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testError"}, {"method_name": "call(Subscriber)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testErrorCalledJustAfterUnsubscribe"}, {"method_name": "call(Subscriber)", "file_path": "src/test/java/com/github/davidmoten/internal/operators/OperatorBoundedPriorityQueueTest.java", "testclass_name": "OperatorBoundedPriorityQueueTest", "testcase_name": "testUnsubscribeCalledAfterFirst"}], "ImmutableStack": [{"method_name": "isEmpty()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testNewStackIsEmpty"}, {"method_name": "isEmpty()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopOnEmptyStackThrowsException"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_popTest.java", "testclass_name": "ImmutableStack_popTest", "testcase_name": "testPopOnNonEmptyStack"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_popTest.java", "testclass_name": "ImmutableStack_popTest", "testcase_name": "testPopOnSingleElementStack"}, {"method_name": "pop()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStack_popTest.java", "testclass_name": "ImmutableStack_popTest", "testcase_name": "testPopOnEmptyStack"}, {"method_name": "peek()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPeekOnEmptyStackThrowsException"}, {"method_name": "peek()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPeekGivesLastPushed"}, {"method_name": "peek()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}, {"method_name": "remove()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testRemoveThrowsException"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testStackIsEmptyAfterPushThenPop"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPeekGivesLastPushed"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testPopPeekGivesSecondLastPushed"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorWhenHasOneItem"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsOneItem"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsLastPushedFirst"}, {"method_name": "push(Object)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsTwoItemsInOrderOfPop"}, {"method_name": "hasNext()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorWhenEmpty"}, {"method_name": "hasNext()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorWhenHasOneItem"}, {"method_name": "next()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsOneItem"}, {"method_name": "next()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsLastPushedFirst"}, {"method_name": "next()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/ImmutableStackTest.java", "testclass_name": "ImmutableStackTest", "testcase_name": "testIteratorReturnsTwoItemsInOrderOfPop"}], "SplitterQuadratic": [{"method_name": "worstCombination(List<Mbr>)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testWorstCombinationOn3"}, {"method_name": "worstCombination(List<Mbr>)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testWorstCombinationOnTwoEntries"}, {"method_name": "worstCombination(List<Mbr>)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testWorstCombinationOn4"}, {"method_name": "getBestCandidateForGroup(List<Mbr>,List<Mbr>,Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testGetBestCandidateForGroup1"}, {"method_name": "getBestCandidateForGroup(List<Mbr>,List<Mbr>,Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testGetBestCandidateForGroup2"}, {"method_name": "getBestCandidateForGroup(List<Mbr>,List<Mbr>,Rectangle)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testGetBestCandidateForGroup3"}, {"method_name": "split(List<Mbr>,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testSplit"}, {"method_name": "split(List<Mbr>,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testSplit2"}, {"method_name": "split(List<Mbr>,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testSplit3"}, {"method_name": "split(List<HasGeometry>,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/QuadraticSplitterTest.java", "testclass_name": "QuadraticSplitterTest", "testcase_name": "testExceptionForSplitEmptyList"}], "Backpressure": [{"method_name": "search(Func1,Subscriber,ImmutableStack,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testBackpressureSearch"}, {"method_name": "search(Func1,Subscriber,ImmutableStack,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZero"}, {"method_name": "search(Func1,Subscriber,ImmutableStack,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "testcase_name": "testRequestZeroWhenUnsubscribed"}], "Serializer": [{"method_name": "write(RTree<Object,Point>,FileOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArray"}, {"method_name": "write(RTree<Object,Point>,FileOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructure"}, {"method_name": "write(RTree<Object,Point>,FileOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArrayBackpressure"}, {"method_name": "write(RTree<Object,Point>,FileOutputStream)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructureBackpressure"}, {"method_name": "read(InputStream,int,InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArray"}, {"method_name": "read(InputStream,int,InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructure"}, {"method_name": "read(InputStream,int,InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToFlatBuffersSingleArrayBackpressure"}, {"method_name": "read(InputStream,int,InternalStructure)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testSerializeRoundTripToDefaultStructureBackpressure"}], "SerializerFlatBuffers": [{"method_name": "readFully(InputStream,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testInputStreamNotAsLongAsExpected"}, {"method_name": "readFully(InputStream,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/fbs/SerializerFlatBuffersTest.java", "testclass_name": "SerializerFlatBuffersTest", "testcase_name": "testInputStreamReturnsArrayInSmallChunks"}], "Geometries": [{"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude2"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude3"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude3_1"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude3_2"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude3_3"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude3_4"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude4"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude5"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude2Neg"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude3Neg"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude4Neg"}, {"method_name": "normalizeLongitude(double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testNormalizeLongitude5Neg"}, {"method_name": "rectangleGeographic(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong"}, {"method_name": "rectangleGeographic(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testRectangleLatLong2"}, {"method_name": "pointGeographic(double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/GeometriesTest.java", "testclass_name": "GeometriesTest", "testcase_name": "testPointLatLong"}, {"method_name": "rectangle(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testXParametersWrongOrderThrowsException"}, {"method_name": "rectangle(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/RectangleTest.java", "testclass_name": "RectangleTest", "testcase_name": "testYParametersWrongOrderThrowsException"}, {"method_name": "rectangleGeographic(float,float,float,float)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/Geometries_rectangleGeographicTest.java", "testclass_name": "Geometries_rectangleGeographicTest", "testcase_name": "testRectangleGeographicNormalCase"}, {"method_name": "rectangleGeographic(float,float,float,float)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/Geometries_rectangleGeographicTest.java", "testclass_name": "Geometries_rectangleGeographicTest", "testcase_name": "testRectangleGeographicCrossingLongitudeBoundary"}], "BoundedPriorityQueue": [{"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "emptyQueueAsListIsEmpty"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "singleItemReturnsSingleItem"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "twoItemsReturnsSingleItemWhenMaxIsOne"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "twoItemsReturnsSingleItemWhenMaxIsOneInputOrderFlipped"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderFlipped"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderIncreasing"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderMixed"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderMixed2"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderFlipped"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderIncreasing"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderMixed"}, {"method_name": "asList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderMixed2"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "singleItemReturnsSingleItem"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "twoItemsReturnsSingleItemWhenMaxIsOne"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "twoItemsReturnsSingleItemWhenMaxIsOneInputOrderFlipped"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderFlipped"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderIncreasing"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderMixed"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsTwoItemsWhenMaxIsOneInputOrderMixed2"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderFlipped"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderIncreasing"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderMixed"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "threeItemsReturnsThreeItemsWhenMaxIsOneInputOrderMixed2"}, {"method_name": "add(Integer)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "testAddNullThrowsNPE"}, {"method_name": "create(int,Comparator)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "testInstantiateWithNegativeSizeThrowsIAE"}, {"method_name": "create(int,Comparator)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueueTest.java", "testclass_name": "BoundedPriorityQueueTest", "testcase_name": "testInstantiateWithZeroSizeThrowsIAE"}, {"method_name": "asOrderedList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithEmptyQueue"}, {"method_name": "asOrderedList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithSingleElement"}, {"method_name": "asOrderedList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithMultipleElements"}, {"method_name": "asOrderedList()", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/util/BoundedPriorityQueue_asOrderedListTest.java", "testclass_name": "BoundedPriorityQueue_asOrderedListTest", "testcase_name": "testAsOrderedListWithUnsortedElements"}], "Line2D": [{"method_name": "intersectsLine(double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineDoubleIntersectsWithHorizontalLine"}, {"method_name": "intersectsLine(float,float,float,float)", "file_path": "src/test/java/com/github/davidmoten/rtree/geometry/LineTest.java", "testclass_name": "LineTest", "testcase_name": "testLineFloatIntersectsWithHorizontalLine"}, {"method_name": "linesIntersect(int,int,int,int,int,int,int,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Line2D_linesIntersectTest.java", "testclass_name": "Line2D_linesIntersectTest", "testcase_name": "testLinesIntersect_IntersectingLines"}, {"method_name": "linesIntersect(int,int,int,int,int,int,int,int)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Line2D_linesIntersectTest.java", "testclass_name": "Line2D_linesIntersectTest", "testcase_name": "testLinesIntersect_NonIntersectingLines"}, {"method_name": "ptSegDistSq(double,double,double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Line2D_ptSegDistSqTest.java", "testclass_name": "Line2D_ptSegDistSqTest", "testcase_name": "testPtSegDistSqPointOnSideOfX1Y1"}, {"method_name": "ptSegDistSq(double,double,double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Line2D_ptSegDistSqTest.java", "testclass_name": "Line2D_ptSegDistSqTest", "testcase_name": "testPtSegDistSqPointOnSideOfX2Y2"}, {"method_name": "ptSegDistSq(double,double,double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Line2D_ptSegDistSqTest.java", "testclass_name": "Line2D_ptSegDistSqTest", "testcase_name": "testPtSegDistSqPointBetweenX1Y1AndX2Y2"}, {"method_name": "ptSegDistSq(double,double,double,double,double,double)", "file_path": "src/test/java/com/github/davidmoten/rtree/internal/Line2D_ptSegDistSqTest.java", "testclass_name": "Line2D_ptSegDistSqTest", "testcase_name": "testPtSegDistSqPointExactlyOnLine"}]}