[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree;\n\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.geometry.Point;\nimport org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class NodePosition_toStringTest {\n\n    @Test\n    public void testToString() {\n        Node<String, Point> node = new NonLeaf<String, Point>(null, null, null, null) {\n            @Override\n            public Rectangle mbr() {\n                return null;\n            }\n\n            @Override\n            public Rectangle mbr(Rectangle rectangle) {\n                return null;\n            }\n\n            @Override\n            public int count() {\n                return 0;\n            }\n\n            @Override\n            public Iterable<Node<String, Point>> children() {\n                return null;\n            }\n\n            @Override\n            public boolean isLeaf() {\n                return false;\n            }\n\n            @Override\n            public boolean isEmpty() {\n                return false;\n            }\n\n            @Override\n            public Context<String, Point> context() {\n                return null;\n            }\n\n            @Override\n            public Node<String, Point> child(int i) {\n                return null;\n            }\n\n            @Override\n            public String value() {\n                return null;\n            }\n\n            @Override\n            public Geometry geometry() {\n                return null;\n            }\n        };\n        NodePosition<String, Point> nodePosition = new NodePosition<>(node, 5);\n\n        String expected = \"NodePosition [node=\" + node + \", position=5]\";\n        assertEquals(expected, nodePosition.toString());\n    }\n}\n"}]