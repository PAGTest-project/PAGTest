[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.Context;\nimport com.github.davidmoten.rtree.Node;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class NonLeafDefault_childrenTest {\n\n    private NonLeafDefault<String, Rectangle> nonLeaf;\n    private Node<String, Rectangle> child1;\n    private Node<String, Rectangle> child2;\n\n    @Before\n    public void setUp() {\n        child1 = new LeafDefault<>(\"child1\", Rectangle.create(0.0, 0.0, 1.0, 1.0));\n        child2 = new LeafDefault<>(\"child2\", Rectangle.create(1.0, 1.0, 2.0, 2.0));\n        List<Node<String, Rectangle>> children = Arrays.asList(child1, child2);\n        nonLeaf = new NonLeafDefault<>(children, new Context<>());\n    }\n\n    @Test\n    public void testChildren() {\n        List<Node<String, Rectangle>> result = nonLeaf.children();\n        assertEquals(2, result.size());\n        assertTrue(result.contains(child1));\n        assertTrue(result.contains(child2));\n    }\n}\n"}]