[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree;\n\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\nimport com.github.davidmoten.rtree.geometry.Point;\nimport com.github.davidmoten.rtree.geometry.Geometries;\nimport rx.Observable;\nimport rx.functions.Func2;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport static org.mockito.Mockito.*;\n\npublic class RTree_searchTest {\n\n    @Test\n    public void testSearch() {\n        // Given\n        RTree<String, Point> tree = RTree.create();\n        Point point = Geometries.point(1, 1);\n        Func2<Point, Point, Double> distanceFunc = (p1, p2) -> p1.distance(p2.mbr());\n        double maxDistance = 10.0;\n\n        // When\n        Observable<Entry<String, Point>> result = tree.search(point, maxDistance, distanceFunc);\n\n        // Then\n        assertTrue(result.isEmpty().toBlocking().single());\n    }\n}\n"}]