[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.internal.util;\n\nimport static com.github.davidmoten.rtree.internal.util.BoundedPriorityQueue.create;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class BoundedPriorityQueue_asOrderedListTest {\n\n    private static final Comparator<Integer> comparator = Comparator.naturalOrder();\n    private BoundedPriorityQueue<Integer> queue;\n\n    @Before\n    public void setUp() {\n        queue = create(3, comparator);\n    }\n\n    @Test\n    public void testAsOrderedListWithEmptyQueue() {\n        List<Integer> result = queue.asOrderedList();\n        assertTrue(result.isEmpty());\n    }\n\n    @Test\n    public void testAsOrderedListWithSingleElement() {\n        queue.add(5);\n        List<Integer> result = queue.asOrderedList();\n        assertEquals(Arrays.asList(5), result);\n    }\n\n    @Test\n    public void testAsOrderedListWithMultipleElements() {\n        queue.add(3);\n        queue.add(1);\n        queue.add(2);\n        List<Integer> result = queue.asOrderedList();\n        assertEquals(Arrays.asList(1, 2, 3), result);\n    }\n\n    @Test\n    public void testAsOrderedListWithUnsortedElements() {\n        queue.add(3);\n        queue.add(1);\n        queue.add(2);\n        queue.add(4);\n        List<Integer> result = queue.asOrderedList();\n        assertEquals(Arrays.asList(1, 2, 3), result);\n    }\n}\n"}]