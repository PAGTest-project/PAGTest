[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport com.github.davidmoten.rtree.Entry;\nimport com.github.davidmoten.rtree.Node;\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.Context;\nimport org.junit.Test;\nimport rx.Subscriber;\nimport rx.functions.Func1;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.mockito.Mockito.*;\n\npublic class NonLeafDefault_searchWithoutBackpressureTest {\n\n    @Test\n    public void testSearchWithoutBackpressure() {\n        // Given\n        List<Node<String, Geometry>> children = Collections.emptyList();\n        Context<String, Geometry> context = new Context<>(0, 0, null, null, null);\n        NonLeafDefault<String, Geometry> nonLeafDefault = new NonLeafDefault<>(children, context);\n\n        Func1<? super Geometry, Boolean> criterion = mock(Func1.class);\n        Subscriber<? super Entry<String, Geometry>> subscriber = mock(Subscriber.class);\n\n        // When\n        nonLeafDefault.searchWithoutBackpressure(criterion, subscriber);\n\n        // Then\n        verify(subscriber, never()).onNext(any());\n        verify(subscriber, never()).onError(any());\n        verify(subscriber, never()).onCompleted();\n    }\n}\n"}]