{"file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "dependencies": ["package net.datafaker.annotations;", "import java.util.HashSet;", "import java.util.List;", "import java.util.Locale;", "import java.util.Objects;", "import java.util.Random;", "import net.datafaker.Faker;", "import net.datafaker.annotations.dto.ComplexPersonJavaRecord;", "import net.datafaker.annotations.dto.Person;", "import net.datafaker.annotations.dto.PersonJavaRecord;", "import net.datafaker.sequence.FakeCollection;", "import net.datafaker.service.RandomService;", "import net.datafaker.transformations.Schema;", "import org.junit.jupiter.api.Test;", "import static net.datafaker.transformations.Field.field;", "import static org.assertj.core.api.Assertions.assertThat;"], "name": "FakeAnnotationTest", "description": "Tests for generating entities using Faker with default and custom schemas.", "class_members": {"methods": [{"name": "defaultSchema", "signature": "public static Schema<Object, ?> defaultSchema()"}, {"name": "customSchema", "signature": "public static Schema<Object, ?> customSchema()"}, {"name": "complexSchema", "signature": "public static Schema<Object, ?> complexSchema()"}], "nested_classes": [{"name": "DefaultPerson", "description": "Internal class with default schema annotation"}, {"name": "SimplePerson", "description": "Internal class without schema annotation"}, {"name": "DefaultPersonJavaRecord", "description": "Internal record class with default schema annotation"}, {"name": "SimplePersonJavaRecord", "description": "Internal record class without schema annotation"}]}, "test_cases": [{"name": "shouldGenerateEntityWithDefaultSchema", "primary_tested": ["Faker.populate(Class)"], "external_dependencies": {"modules": ["Faker", "Person"]}, "category": "unit", "description": "Tests generating an entity with the default schema."}, {"name": "shouldGenerateEntityFromJavaRecordWithDefaultSchema", "primary_tested": ["Faker.populate(Class)"], "external_dependencies": {"modules": ["Faker", "PersonJavaRecord"]}, "category": "unit", "description": "Tests generating an entity from a Java record with the default schema."}, {"name": "shouldGenerateEntityWithCustomSchema", "primary_tested": ["Faker.populate(Class,Schema)"], "external_dependencies": {"modules": ["Faker", "Person", "Schema"], "class_members": [{"name": "customSchema", "type": "method"}]}, "category": "unit", "description": "Tests generating an entity with a custom schema."}, {"name": "shouldGenerateEntityFromJavaRecordWithCustomSchema", "primary_tested": ["Faker.populate(Class,Schema)"], "external_dependencies": {"modules": ["Faker", "PersonJavaRecord", "Schema"], "class_members": [{"name": "customSchema", "type": "method"}]}, "category": "unit", "description": "Tests generating an entity from a Java record with a custom schema."}, {"name": "shouldGenerateEntityWithCustomSchemaWhenClassTemplateWithoutAnnotation", "primary_tested": ["Faker.populate(Class,Schema)"], "external_dependencies": {"modules": ["Faker", "SimplePerson", "Schema"], "class_members": [{"name": "customSchema", "type": "method"}]}, "category": "unit", "description": "Tests generating an entity with a custom schema for a class without annotation."}, {"name": "shouldGenerateEntityFromJavaRecordWithCustomSchemaWhenClassTemplateWithoutAnnotation", "primary_tested": ["Faker.populate(Class,Schema)"], "external_dependencies": {"modules": ["Faker", "SimplePersonJavaRecord", "Schema"], "class_members": [{"name": "customSchema", "type": "method"}]}, "category": "unit", "description": "Tests generating an entity from a Java record with a custom schema for a class without annotation."}, {"name": "shouldGenerateEntityFromJavaRecordWithComplexSchemaWhenClassTemplateWithoutAnnotation", "primary_tested": ["Faker.populate(Class,Schema)"], "external_dependencies": {"modules": ["Faker", "ComplexPersonJavaRecord", "Schema"], "class_members": [{"name": "complexSchema", "type": "method"}]}, "category": "unit", "description": "Tests generating an entity from a Java record with a complex schema for a class without annotation."}, {"name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass", "primary_tested": ["Faker.populate(Class)"], "external_dependencies": {"modules": ["Faker", "DefaultPerson"]}, "category": "unit", "description": "Tests generating an entity with the default schema defined in the current class."}, {"name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2", "primary_tested": ["Faker.populate(Class,Schema)"], "associated_methods": ["FakeCollection.Builder.suppliers(Supplier)", "FakeCollection.Builder.len(int)", "FakeCollection.Builder.generate()"], "external_dependencies": {"modules": ["Faker", "DefaultPerson", "Schema", "FakeCollection"], "class_members": [{"name": "customSchema", "type": "method"}]}, "category": "unit", "description": "Tests generating an entity with the default schema defined in the current class and using FakeCollection."}, {"name": "shouldGenerateEntityFromJavaRecordWithDefaultSchemaAndInDefaultSchemaInCurrentClass", "primary_tested": ["Faker.populate(Class)"], "external_dependencies": {"modules": ["Faker", "DefaultPersonJavaRecord"]}, "category": "unit", "description": "Tests generating an entity from a Java record with the default schema defined in the current class."}]}