{"file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "dependencies": ["package net.datafaker.service;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.Arguments;", "import org.junit.jupiter.params.provider.MethodSource;", "import java.util.Random;", "import java.util.stream.Stream;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.assertj.core.api.Assertions.assertThatThrownBy;"], "name": "RandomService_nextLongTest", "description": "Unit tests for the nextLong method in the RandomService class.", "class_members": {"variables": [{"name": "randomService", "type": "RandomService"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testNextLongWithPositiveBound", "primary_tested": ["RandomService.nextLong(long)"], "external_dependencies": {"modules": ["RandomService"], "class_members": [{"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the nextLong method with a positive bound."}, {"name": "testNextLongWithNegativeBound", "primary_tested": ["RandomService.nextLong(long)"], "external_dependencies": {"modules": ["RandomService"], "class_members": [{"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the nextLong method with a negative bound, expecting an IllegalArgumentException."}, {"name": "testNextLongWithZeroBound", "primary_tested": ["RandomService.nextLong(long)"], "external_dependencies": {"modules": ["RandomService"], "class_members": [{"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the nextLong method with a zero bound, expecting an IllegalArgumentException."}, {"name": "testNextLongWithDifferentBounds", "primary_tested": ["RandomService.nextLong(long)"], "external_dependencies": {"modules": ["RandomService"], "class_members": [{"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the nextLong method with different bounds provided by a parameterized test."}]}