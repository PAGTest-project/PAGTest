{"file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "dependencies": ["package net.datafaker.formats;", "import net.datafaker.providers.base.BaseFaker;", "import net.datafaker.providers.base.Name;", "import net.datafaker.transformations.Schema;", "import net.datafaker.transformations.YamlTransformer;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.Arguments;", "import org.junit.jupiter.params.provider.MethodSource;", "import org.junit.jupiter.params.provider.ValueSource;", "import java.math.BigDecimal;", "import java.util.Collections;", "import java.util.LinkedHashMap;", "import java.util.List;", "import java.util.Map;", "import java.util.function.Supplier;", "import java.util.stream.Collectors;", "import java.util.stream.IntStream;", "import java.util.stream.Stream;", "import static net.datafaker.transformations.Field.field;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.junit.jupiter.params.provider.Arguments.of;"], "name": "YamlTest", "description": "Tests for the YamlTransformer class, focusing on generating YAML from various schemas and fake sequences.", "class_members": {"variables": [], "methods": [{"name": "generateTestSchema", "signature": "private static Stream<Arguments> generateTestSchema()"}, {"name": "map", "signature": "@SafeVarargs private static Map<Supplier<String>, Supplier<Object>> map(Map.Entry<Supplier<String>, Supplier<Object>>... entries)"}], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "simpleYamlTest", "primary_tested": ["YamlTransformer.generate(Schema<String, String>, int)"], "external_dependencies": {"modules": ["YamlTransformer", "Schema", "Arguments"], "class_members": []}, "category": "unit", "description": "Tests the generation of YAML from various schemas."}, {"name": "generateFromFakeSequence", "primary_tested": ["YamlTransformer.generate(Iterable<Name>, Schema<Name, String>)"], "associated_methods": ["BaseFaker.collection()"], "external_dependencies": {"modules": ["BaseFaker", "YamlTransformer", "Schema", "Name"], "class_members": []}, "category": "unit", "description": "Tests the generation of YAML from a fake sequence of names."}, {"name": "generateFromFakeSequenceWithCollection", "primary_tested": ["YamlTransformer.generate(Iterable<Name>, Schema<Name, List<String>>)"], "associated_methods": ["BaseFaker.collection()"], "external_dependencies": {"modules": ["BaseFaker", "YamlTransformer", "Schema", "Name", "Collectors"], "class_members": []}, "category": "unit", "description": "Tests the generation of YAML from a fake sequence of names with a collection schema."}]}