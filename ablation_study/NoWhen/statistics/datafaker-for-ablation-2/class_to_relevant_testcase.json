{"Issue759Test": [{"method_name": "fakeSomeData(Faker)", "file_path": "src/test/java/net/datafaker/Issue759Test.java", "testclass_name": "Issue759Test", "testcase_name": "issue759Test"}], "Pattern": [{"method_name": "compile(String)", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "testPassword1000"}, {"method_name": "compile(String)", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordSpecial"}, {"method_name": "compile(String)", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordMix"}, {"method_name": "compile(String)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}], "Matcher": [{"method_name": "find()", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "testPassword1000"}, {"method_name": "find()", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordSpecial"}, {"method_name": "find()", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordMix"}], "BaseFaker": [{"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"method_name": "valid(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"method_name": "invalid(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"method_name": "fakeValuesService()", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithIllegalArgumentExceptionThrown"}, {"method_name": "fakeValuesService()", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithInvocationTargetExceptionThrown"}, {"method_name": "collection()", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequence"}, {"method_name": "collection()", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequenceWithCollection"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithInfiniteSequence"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}, {"method_name": "streetAddress()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestWithQuotesNew"}, {"method_name": "randomDigit()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"method_name": "randomDigit()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunction"}, {"method_name": "randomDigit()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunctionStream"}, {"method_name": "bool()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"method_name": "password(int,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunction"}, {"method_name": "password(int,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunctionStream"}, {"method_name": "digits(int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithInfiniteSequence"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsv"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsvNew"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollection"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollectionNew"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsv"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsvWithLimit"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsername"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsernameWithSpecialCharacters"}, {"method_name": "getContext()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsername"}, {"method_name": "getContext()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsernameWithSpecialCharacters"}], "IdNumber": [{"method_name": "valid()", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testFakerSsn"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testFakerSsn"}], "CNPJ": [{"method_name": "valid(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"method_name": "invalid(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"method_name": "valid(boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"method_name": "invalid(boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "TestSpec": [{"method_name": "get()", "file_path": "src/test/java/net/datafaker/providers/base/BaseFakerTest.java", "testclass_name": "BaseFakerTest", "testcase_name": "testProviderList"}], "PhoneNumberValidityFinderTest": [{"method_name": "parse(String,String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllPhoneNumbers"}], "Random": [{"method_name": "setSeed(long)", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNumerifyRandomnessCanBeControlled"}, {"method_name": "setSeed(long)", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testLetterifyRandomnessCanBeControlled"}, {"method_name": "setSeed(long)", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNameRandomnessCanBeControlled"}, {"method_name": "setSeed(long)", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testEmailRandomnessCanBeControlled"}], "LocalityTest": [{"method_name": "findAllSupportedLocales(File)", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "allSupportedLocales"}], "IdNumberGeneratorPtBrUtil": [{"method_name": "isCNPJValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"method_name": "isCNPJValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "String": [{"method_name": "replace(String,String)", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}, {"method_name": "toLowerCase(Locale)", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}, {"method_name": "split(String)", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testNameWithMiddleDoesNotHaveRepeatedName"}], "Disease": [{"method_name": "getBaseList(String)", "file_path": "src/test/java/net/datafaker/providers/healthcare/DiseaseTest.java", "testclass_name": "DiseaseTest", "testcase_name": "testAnyDisease"}], "FakerRepeatabilityIntegrationTest": [{"method_name": "buildReport(Faker)", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateRepeatableValues"}, {"method_name": "buildReport(Faker)", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateUniqueValues"}], "RandomService": [{"method_name": "nextInt(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldReturnValuesInRandomOrderUsingRandomService"}, {"method_name": "hex(int)", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithHashSign"}, {"method_name": "hex(int)", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithoutHashSign"}], "File": [{"method_name": "getFile()", "file_path": "src/test/java/net/datafaker/service/files/EnFileTest.java", "testclass_name": "EnFileTest", "testcase_name": "fileNameConvention"}], "Faker": [{"method_name": "getClass()", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}, {"method_name": "getYear() / 100", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_20th_century"}, {"method_name": "getYear() / 100", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_21th_century"}], "AbstractProvider": [{"method_name": "getClass()", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}, {"method_name": "getFaker()", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}], "BarcodeTest": [{"method_name": "isBarcodeValid(long)", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin12CheckSum"}, {"method_name": "isBarcodeValid(long)", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin14CheckSum"}, {"method_name": "isBarcodeValid(long)", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan8CheckSum"}], "FinanceTest": [{"method_name": "assertCardLuhnDigit(String)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCard"}, {"method_name": "assertCardLuhnDigit(String)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCardWithType"}], "Insect": [{"method_name": "nextInsectName()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTest"}, {"method_name": "nextInsectName()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestExpression"}, {"method_name": "nextInsectName()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestWithoutExtraFaker"}, {"method_name": "nextInsectName()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "testMultipleFakerContextsPerOneClassName"}], "InsectFromFile": [{"method_name": "ant()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectAntTestExpressionFromFile"}, {"method_name": "bee()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFile"}, {"method_name": "bee()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFileWithoutExtraFaker"}], "PersonIdNumber": [{"method_name": "idNumber()", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "valid"}, {"method_name": "birthDate()", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "valid"}], "FakeValues": [{"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesOneFakeValue"}, {"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesMultipleFakeValues"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "checkEquals"}], "FakeValuesGrouping": [{"method_name": "add(FakeValues)", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesMultipleFakeValues"}], "ISBNValidator": [{"method_name": "getInstance(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn10DefaultIsNoSeparator"}, {"method_name": "getInstance(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn13DefaultIsNoSeparator"}, {"method_name": "getInstance(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn10"}, {"method_name": "getInstance(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn13"}], "CodeTest": [{"method_name": "assertIsValidISBN10(String, ISBNValidator)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn10DefaultIsNoSeparator"}, {"method_name": "assertIsValidISBN10(String, ISBNValidator)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn10"}, {"method_name": "assertIsValidISBN13(String, ISBNValidator)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn13DefaultIsNoSeparator"}, {"method_name": "assertIsValidISBN13(String, ISBNValidator)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn13"}], "LuhnCheckDigit": [{"method_name": "isValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "imei"}], "EAN13CheckDigit": [{"method_name": "isValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "ean13"}, {"method_name": "isValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "gtin13"}], "PolishIdNumberTest": [{"method_name": "assertBasics(String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"method_name": "assertBasics(String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"method_name": "assertBasics(String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}, {"method_name": "assertBirthDate(LocalDate,String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"method_name": "assertBirthDate(LocalDate,String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"method_name": "assertBirthDate(LocalDate,String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}, {"method_name": "assertGender(Gender,String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"method_name": "assertControlDigit(String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"method_name": "assertControlDigit(String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"method_name": "assertControlDigit(String)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}], "FakeCollection": [{"method_name": "suppliers(Supplier)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}, {"method_name": "len(int)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}, {"method_name": "generate()", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}], "Person": [{"method_name": "getBirthDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"method_name": "getBirthDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"method_name": "getBirthDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}, {"method_name": "getLastName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"method_name": "getLastName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"method_name": "getLastName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}, {"method_name": "getFirstName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"method_name": "getFirstName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"method_name": "getFirstName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}, {"method_name": "getRegistrationDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"method_name": "getRegistrationDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"method_name": "getRegistrationDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}], "Client": [{"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}, {"method_name": "phoneNumber()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}, {"method_name": "registrationDate()", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}], "Name": [{"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsername"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsernameWithSpecialCharacters"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsername"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsernameWithSpecialCharacters"}], "PhoneNumberTest": [{"method_name": "canadianLocales()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_CA"}, {"method_name": "locales()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberNational"}, {"method_name": "locales()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberInternational"}, {"method_name": "locales()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobile"}, {"method_name": "locales()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobileInternational"}, {"method_name": "noSpaces(String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_estonia"}, {"method_name": "noSpaces(String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberNational_estonia"}, {"method_name": "noSpaces(String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_estonia"}, {"method_name": "noSpaces(String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_moldova"}, {"method_name": "noSpaces(String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumber_moldova"}, {"method_name": "noSpaces(String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_moldova"}], "UUID": [{"method_name": "fromString(String)", "file_path": "src/test/java/net/datafaker/providers/base/Internet_uuidv7Test.java", "testclass_name": "Internet_uuidv7Test", "testcase_name": "testUuidv7"}], "RomanianIdNumber": [{"method_name": "generateValid(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumber_generateInvalidTest.java", "testclass_name": "RomanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}, {"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumber_generateInvalidTest.java", "testclass_name": "RomanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}], "SouthAfricanIdNumber": [{"method_name": "isValidEnZASsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumber_generateInvalidTest.java", "testclass_name": "SouthAfricanIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalidSsn"}], "FakerContext": [{"method_name": "getLocale()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsername"}, {"method_name": "getLocale()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsernameWithSpecialCharacters"}], "BaseProviders": [{"method_name": "number()", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_AllFeaturesIncluded"}, {"method_name": "number()", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_NoFeaturesIncluded"}, {"method_name": "text()", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_AllFeaturesIncluded"}, {"method_name": "text()", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_NoFeaturesIncluded"}], "Number": [{"method_name": "numberBetween(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_AllFeaturesIncluded"}, {"method_name": "numberBetween(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_NoFeaturesIncluded"}], "Text": [{"method_name": "text(Object)", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_AllFeaturesIncluded"}, {"method_name": "text(Object)", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_NoFeaturesIncluded"}]}