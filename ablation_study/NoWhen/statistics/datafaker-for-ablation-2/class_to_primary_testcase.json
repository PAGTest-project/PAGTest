{"Hololive": [{"method_name": "talent()", "file_path": "src/test/java/net/datafaker/providers/base/HololiveTest.java", "testclass_name": "HololiveTest", "testcase_name": "talent_jaLocale"}], "FamousLastWords": [{"method_name": "lastWords()", "file_path": "src/test/java/net/datafaker/providers/base/FamousLastWordsTest.java", "testclass_name": "FamousLastWordsTest", "testcase_name": "testLastWords"}], "Bool": [{"method_name": "bool()", "file_path": "src/test/java/net/datafaker/providers/base/BoolTest.java", "testclass_name": "BoolTest", "testcase_name": "testBool"}], "RandomService": [{"method_name": "nextLong()", "file_path": "src/test/java/net/datafaker/FakerConcurrencyModificationExceptionTest.java", "testclass_name": "FakerConcurrencyModificationExceptionTest", "testcase_name": "test1"}, {"method_name": "nextLong()", "file_path": "src/test/java/net/datafaker/FakerConcurrencyModificationExceptionTest.java", "testclass_name": "FakerConcurrencyModificationExceptionTest", "testcase_name": "test2"}, {"method_name": "nextLong()", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "hex()", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testDefaultHex"}, {"method_name": "nextInt(int)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testPositiveBoundariesOnly"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testLongWithinBoundary"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testLongMaxBoundary"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithPositiveBound"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithNegativeBound"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithZeroBound"}, {"method_name": "nextLong(long)", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithDifferentBounds"}, {"method_name": "nextInt(int,int)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testIntInRange"}, {"method_name": "nextInt(int,int)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "nextInt_returnsValueWithinGivenRange"}, {"method_name": "nextInt(int,int)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextInt()", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextFloat()", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextLong(long,long)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextLong(long,long)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testLongInRange"}, {"method_name": "nextBoolean()", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"method_name": "nextDouble(double,double)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testDoubleInRange"}, {"method_name": "hex(int)", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testHex"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/RandomService_equalsTest.java", "testclass_name": "RandomService_equalsTest", "testcase_name": "testEquals_SameInstance"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/RandomService_equalsTest.java", "testclass_name": "RandomService_equalsTest", "testcase_name": "testEquals_DifferentInstancesWithSameRandom"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/RandomService_equalsTest.java", "testclass_name": "RandomService_equalsTest", "testcase_name": "testEquals_DifferentInstancesWithDifferentRandom"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/RandomService_equalsTest.java", "testclass_name": "RandomService_equalsTest", "testcase_name": "testEquals_NullComparison"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/RandomService_equalsTest.java", "testclass_name": "RandomService_equalsTest", "testcase_name": "testEquals_DifferentClassComparison"}, {"method_name": "hex(int,boolean)", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithLengthZero"}, {"method_name": "hex(int,boolean)", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithPositiveLengthUppercase"}, {"method_name": "hex(int,boolean)", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithPositiveLengthLowercase"}, {"method_name": "hex(int,boolean)", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithCustomRandom"}], "WorkerThread": [{"method_name": "run()", "file_path": "src/test/java/net/datafaker/Issue759Test.java", "testclass_name": "Issue759Test", "testcase_name": "issue759Test"}], "Superhero": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/SuperheroTest.java", "testclass_name": "SuperheroTest", "testcase_name": "testName"}], "GreekPhilosopher": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/GreekPhilosopherTest.java", "testclass_name": "GreekPhilosopherTest", "testcase_name": "testName"}, {"method_name": "quote()", "file_path": "src/test/java/net/datafaker/providers/base/GreekPhilosopherTest.java", "testclass_name": "GreekPhilosopherTest", "testcase_name": "testQuote"}], "Restaurant": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/RestaurantTest.java", "testclass_name": "RestaurantTest", "testcase_name": "name"}, {"method_name": "namePrefix()", "file_path": "src/test/java/net/datafaker/providers/base/RestaurantTest.java", "testclass_name": "RestaurantTest", "testcase_name": "namePrefix"}], "Team": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/TeamTest.java", "testclass_name": "TeamTest", "testcase_name": "testName"}, {"method_name": "state()", "file_path": "src/test/java/net/datafaker/providers/base/TeamTest.java", "testclass_name": "TeamTest", "testcase_name": "testState"}, {"method_name": "state()", "file_path": "src/test/java/net/datafaker/providers/base/TeamTest.java", "testclass_name": "TeamTest", "testcase_name": "testStateWithZaLocale"}], "Company": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testName"}, {"method_name": "buzzword()", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testBuzzword"}, {"method_name": "catchPhrase()", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testCatchPhrase"}, {"method_name": "bs()", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testBs"}, {"method_name": "logo()", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testLogo"}, {"method_name": "url()", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testUrl"}, {"method_name": "url()", "file_path": "src/test/java/net/datafaker/providers/base/Company_urlTest.java", "testclass_name": "Company_urlTest", "testcase_name": "testUrl"}], "Mbti": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "name"}, {"method_name": "type()", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "type"}, {"method_name": "characteristic()", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "characteristic"}, {"method_name": "personage()", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "personage"}, {"method_name": "merit()", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "merit"}, {"method_name": "weakness()", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "weakness"}], "University": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/UniversityTest.java", "testclass_name": "UniversityTest", "testcase_name": "testName"}], "Name": [{"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNameRandomnessCanBeControlled"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testName"}, {"method_name": "name()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "test"}, {"method_name": "nameWithMiddle()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testNameWithMiddle"}, {"method_name": "nameWithMiddle()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testNameWithMiddleDoesNotHaveRepeatedName"}, {"method_name": "fullName()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFullName"}, {"method_name": "fullName()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFullNameArabic"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFirstName"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollection"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateNullCollection"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "illegalNullRate"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionPassingSuppliersAsList"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithRepeatableFaker"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithDifferentObjects"}, {"method_name": "firstName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "checkWrongArguments"}, {"method_name": "femaleFirstName()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFemaleFirstName"}, {"method_name": "malefirstName()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testMaleFirstName"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testLastName"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollection"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateNullCollection"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "illegalNullRate"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionPassingSuppliersAsList"}, {"method_name": "lastName()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithRepeatableFaker"}, {"method_name": "prefix()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testPrefix"}, {"method_name": "suffix()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testSuffix"}, {"method_name": "title()", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testTitle"}, {"method_name": "title()", "file_path": "src/test/java/net/datafaker/providers/base/Name_titleTest.java", "testclass_name": "Name_titleTest", "testcase_name": "testTitle"}], "OscarMovie": [{"method_name": "quote()", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "quote"}, {"method_name": "character()", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "character"}, {"method_name": "actor()", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "actor"}, {"method_name": "movieName()", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "movieName"}, {"method_name": "releaseDate()", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "releaseDate"}], "LanguageCode": [{"method_name": "iso639()", "file_path": "src/test/java/net/datafaker/providers/base/LanguageCodeTest.java", "testclass_name": "LanguageCodeTest", "testcase_name": "languageCodeISO639ShouldBe2LettersInLength"}], "Computer": [{"method_name": "operatingSystem()", "file_path": "src/test/java/net/datafaker/providers/base/ComputerTest.java", "testclass_name": "ComputerTest", "testcase_name": "testOperatingSystem"}], "Tire": [{"method_name": "code(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/TireTest.java", "testclass_name": "TireTest", "testcase_name": "testDefaultPrefixedCode"}, {"method_name": "code(String)", "file_path": "src/test/java/net/datafaker/providers/base/TireTest.java", "testclass_name": "TireTest", "testcase_name": "testMiscPrefixedCode"}], "Music": [{"method_name": "key()", "file_path": "src/test/java/net/datafaker/providers/base/MusicTest.java", "testclass_name": "MusicTest", "testcase_name": "key"}, {"method_name": "chord()", "file_path": "src/test/java/net/datafaker/providers/base/MusicTest.java", "testclass_name": "MusicTest", "testcase_name": "chord"}, {"method_name": "genre()", "file_path": "src/test/java/net/datafaker/providers/base/MusicTest.java", "testclass_name": "MusicTest", "testcase_name": "genre"}], "Color": [{"method_name": "hex()", "file_path": "src/test/java/net/datafaker/providers/base/ColorTest.java", "testclass_name": "ColorTest", "testcase_name": "testHex"}, {"method_name": "hex(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/ColorTest.java", "testclass_name": "ColorTest", "testcase_name": "testHexNoHashSign"}, {"method_name": "hex(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithHashSign"}, {"method_name": "hex(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithoutHashSign"}], "FinancialTerms": [{"method_name": "Category)", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "category"}, {"method_name": "Category)", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "category"}, {"method_name": "Category)", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "category"}, {"method_name": "noun()", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "defaults"}, {"method_name": "verb()", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "defaults"}, {"method_name": "adjective()", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "defaults"}], "Business": [{"method_name": "creditCardNumber()", "file_path": "src/test/java/net/datafaker/providers/base/BusinessTest.java", "testclass_name": "BusinessTest", "testcase_name": "creditCardNumber"}, {"method_name": "creditCardExpiry()", "file_path": "src/test/java/net/datafaker/providers/base/BusinessTest.java", "testclass_name": "BusinessTest", "testcase_name": "creditCardExpiry"}, {"method_name": "securityCode()", "file_path": "src/test/java/net/datafaker/providers/base/BusinessTest.java", "testclass_name": "BusinessTest", "testcase_name": "securityCode"}], "Animal": [{"method_name": "scientificName()", "file_path": "src/test/java/net/datafaker/providers/base/AnimalTest.java", "testclass_name": "AnimalTest", "testcase_name": "scientificName"}, {"method_name": "genus()", "file_path": "src/test/java/net/datafaker/providers/base/AnimalTest.java", "testclass_name": "AnimalTest", "testcase_name": "genus"}, {"method_name": "species()", "file_path": "src/test/java/net/datafaker/providers/base/AnimalTest.java", "testclass_name": "AnimalTest", "testcase_name": "species"}], "ObjectMethods": [{"method_name": "getMethodByName(Object,String)", "file_path": "src/test/java/net/datafaker/providers/base/ObjectMethodsTest.java", "testclass_name": "ObjectMethodsTest", "testcase_name": "methodByName"}, {"method_name": "executeMethodByReturnType(Object,String)", "file_path": "src/test/java/net/datafaker/providers/base/ObjectMethodsTest.java", "testclass_name": "ObjectMethodsTest", "testcase_name": "methodByReturnType"}], "Country": [{"method_name": "flag()", "file_path": "src/test/java/net/datafaker/providers/base/CountryTest.java", "testclass_name": "CountryTest", "testcase_name": "testFlag"}, {"method_name": "currency()", "file_path": "src/test/java/net/datafaker/providers/base/CountryTest.java", "testclass_name": "CountryTest", "testcase_name": "testCurrency"}, {"method_name": "currencyCode()", "file_path": "src/test/java/net/datafaker/providers/base/CountryTest.java", "testclass_name": "CountryTest", "testcase_name": "testCurrencyCode"}], "Nation": [{"method_name": "flag()", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "flag"}, {"method_name": "nationality()", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "nationality"}, {"method_name": "language()", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "language"}, {"method_name": "capitalCity()", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "capitalCity"}, {"method_name": "isoLanguage()", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "isoLanguage"}, {"method_name": "isoCountry()", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "isoCountry"}], "Money": [{"method_name": "currency()", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testCurrency"}, {"method_name": "currencyCode()", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testCurrencyCode"}, {"method_name": "currencyNumericCode()", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testNumericCode"}, {"method_name": "currencySymbol()", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testCurrencySymbol"}], "Internet": [{"method_name": "password(int,int,boolean,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "testPassword1000"}, {"method_name": "password(int,int,boolean,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordSpecial"}, {"method_name": "password(int,int,boolean,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordMix"}, {"method_name": "emailAddress()", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testEmailRandomnessCanBeControlled"}, {"method_name": "ipV6Cidr()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_ipV6CidrTest.java", "testclass_name": "Internet_ipV6CidrTest", "testcase_name": "testIpV6Cidr"}, {"method_name": "ipV4Cidr()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_ipV4CidrTest.java", "testclass_name": "Internet_ipV4CidrTest", "testcase_name": "testIpV4Cidr"}, {"method_name": "getPublicIpV4Address()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getPublicIpV4AddressTest.java", "testclass_name": "Internet_getPublicIpV4AddressTest", "testcase_name": "testGetPublicIpV4Address"}, {"method_name": "uuidv7()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_uuidv7Test.java", "testclass_name": "Internet_uuidv7Test", "testcase_name": "testUuidv7"}, {"method_name": "username()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsername"}, {"method_name": "username()", "file_path": "src/test/java/net/datafaker/providers/base/Internet_usernameTest.java", "testclass_name": "Internet_usernameTest", "testcase_name": "testUsernameWithSpecialCharacters"}, {"method_name": "macAddress(String)", "file_path": "src/test/java/net/datafaker/providers/base/Internet_macAddressTest.java", "testclass_name": "Internet_macAddressTest", "testcase_name": "testMacAddressWithNullPrefix"}, {"method_name": "macAddress(String)", "file_path": "src/test/java/net/datafaker/providers/base/Internet_macAddressTest.java", "testclass_name": "Internet_macAddressTest", "testcase_name": "testMacAddressWithEmptyPrefix"}, {"method_name": "macAddress(String)", "file_path": "src/test/java/net/datafaker/providers/base/Internet_macAddressTest.java", "testclass_name": "Internet_macAddressTest", "testcase_name": "testMacAddressWithValidPrefix"}], "Educator": [{"method_name": "university()", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testUniversity"}, {"method_name": "course()", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testCourse"}, {"method_name": "subjectWithNumber()", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testSubjectWithNumber"}, {"method_name": "secondarySchool()", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testSecondarySchool"}, {"method_name": "campus()", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testCampus"}], "IdNumberGeneratorPtBrUtil": [{"method_name": "isCPFValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "isValidCPF"}, {"method_name": "isCPFValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "isInvalidCPF"}, {"method_name": "isCNPJValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "isValidCNPJ"}, {"method_name": "isCNPJValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "isInvalidCNPJ"}, {"method_name": "isCNPJValid(String)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "bug"}], "Faker": [{"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionEnglishFails"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionFails"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionUsFails"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionAUWorks"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWorks"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWithMiddleWorks"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWithCity"}, {"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWithFullAddress"}, {"method_name": "Faker(Random)", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateRepeatableValues"}, {"method_name": "Faker()", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateUniqueValues"}, {"method_name": "populate(Class)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchema"}, {"method_name": "populate(Class)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithDefaultSchema"}, {"method_name": "populate(Class)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass"}, {"method_name": "populate(Class)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithDefaultSchemaAndInDefaultSchemaInCurrentClass"}, {"method_name": "populate(Class,Schema)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithCustomSchema"}, {"method_name": "populate(Class,Schema)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithCustomSchema"}, {"method_name": "populate(Class,Schema)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithCustomSchemaWhenClassTemplateWithoutAnnotation"}, {"method_name": "populate(Class,Schema)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithCustomSchemaWhenClassTemplateWithoutAnnotation"}, {"method_name": "populate(Class,Schema)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithComplexSchemaWhenClassTemplateWithoutAnnotation"}, {"method_name": "populate(Class,Schema)", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}], "MyCustomFaker": [{"method_name": "expression(String)", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestExpression"}, {"method_name": "insect()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTest"}, {"method_name": "insectFromFile()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectAntTestExpressionFromFile"}, {"method_name": "insectFromFile()", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFile"}], "Verb": [{"method_name": "base()", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testBase"}, {"method_name": "past()", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testPast"}, {"method_name": "pastParticiple()", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testPastParticiple"}, {"method_name": "simplePresent()", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testSimplePresent"}, {"method_name": "ingForm()", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testIngForm"}], "TimeAndDate": [{"method_name": "past()", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDate"}, {"method_name": "future(int,int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testFutureDateWithMinimum"}, {"method_name": "past(int,int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDateWithMinimum"}, {"method_name": "past(int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDateWithBounds"}, {"method_name": "birthday()", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBirthday"}, {"method_name": "birthday(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBirthdayWithAges"}, {"method_name": "birthday(int,int,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "birthdayWithMask"}, {"method_name": "future(int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "futureWithMask"}, {"method_name": "future(int,int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "futureWithMask"}, {"method_name": "past(int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "pastWithMask"}, {"method_name": "past(int,int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "pastWithMask"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "periodTest"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "maxLessThanMinPeriod"}, {"method_name": "duration(long,long,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "durationTest"}, {"method_name": "duration(long,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "durationTest"}, {"method_name": "future()", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testFutureDate"}, {"method_name": "future(int,TimeUnit,Instant)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testFutureDateWithBounds"}, {"method_name": "past(int,TimeUnit,Instant)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDateWithReferenceDate"}, {"method_name": "between(Instant,Instant)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBetween"}, {"method_name": "between(Instant,Instant)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBetweenThenLargerThanNow"}, {"method_name": "between(Instant,Instant,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBetweenWithMaskReturningString"}, {"method_name": "future(int,TimeUnit,Instant,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "futureWithMask"}, {"method_name": "past(int,TimeUnit,Instant,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "pastWithMask"}], "BaseFaker": [{"method_name": "fetchObject(String,Context)", "file_path": "src/test/java/net/datafaker/providers/base/BaseFakerTest.java", "testclass_name": "BaseFakerTest", "testcase_name": "testProviderList"}, {"method_name": "fetchObject(String,Context)", "file_path": "src/test/java/net/datafaker/providers/base/BaseFakerTest.java", "testclass_name": "BaseFakerTest", "testcase_name": "testNoDuplications"}, {"method_name": "numerify(String)", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNumerifyRandomnessCanBeControlled"}, {"method_name": "numerify(String)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "letterify(String)", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testLetterifyRandomnessCanBeControlled"}, {"method_name": "letterify(String)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testDefaultLocale"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidDutch"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidChinese"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidUnitedStates"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidAustralia"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidCanada"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidUnitedKingdom"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidJapan"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidSpain"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidBulgaria"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidFinland"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/idnumbers/ChineseIdNumberTest.java", "testclass_name": "ChineseIdNumberTest", "testcase_name": "testValidChineseIdNumber"}, {"method_name": "extension()", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testExtension"}, {"method_name": "mimeType()", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testMimeTypeFormat"}, {"method_name": "fileName()", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileName"}, {"method_name": "fileName(String,String,String,String)", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifyExtension"}, {"method_name": "fileName(String,String,String,String)", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifyDir"}, {"method_name": "fileName(String,String,String,String)", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifySeparator"}, {"method_name": "fileName(String,String,String,String)", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifyName"}, {"method_name": "streetName()", "file_path": "src/test/java/net/datafaker/integration/UkLocalDirectivesTest.java", "testclass_name": "UkLocalDirectivesTest", "testcase_name": "resolvesDirectivesOnlyInYmlFile"}, {"method_name": "zipCode()", "file_path": "src/test/java/net/datafaker/integration/Issue194SlashFormatRegexTest.java", "testclass_name": "Issue194SlashFormatRegexTest", "testcase_name": "enGBZipCodeReturnsProperRegexifiedValue"}, {"method_name": "zipCode()", "file_path": "src/test/java/net/datafaker/integration/Issue194SlashFormatRegexTest.java", "testclass_name": "Issue194SlashFormatRegexTest", "testcase_name": "enCAZipCodeReturnsProperRegexifiedValue"}, {"method_name": "zipCode()", "file_path": "src/test/java/net/datafaker/integration/Issue194SlashFormatRegexTest.java", "testclass_name": "Issue194SlashFormatRegexTest", "testcase_name": "viZipCodeReturnsProperRegexifiedValue"}, {"method_name": "future(int,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testFutureTime"}, {"method_name": "future(int,int,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testFutureTimeWithMinimum"}, {"method_name": "past(int,int,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testPastTimeWithMinimum"}, {"method_name": "past(int,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testPastTime"}, {"method_name": "between(LocalTime,LocalTime)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetween"}, {"method_name": "between(LocalTime,LocalTime)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetweenWithSameLocalTime"}, {"method_name": "between(LocalTime,LocalTime)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetweenThenLargerThanNow"}, {"method_name": "between(LocalTime,LocalTime,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetweenWithMask"}, {"method_name": "future(int,ChronoUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "futureWithMask"}, {"method_name": "future(int,int,ChronoUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "futureWithMask"}, {"method_name": "past(int,ChronoUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "pastWithMask"}, {"method_name": "past(int,int,ChronoUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "pastWithMask"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldReturnValuesInRandomOrderUsingRandomService"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenAllPossibleValuesHaveBeenReturned"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldReturnValuesBasedOnKeyAndLocale"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenNoValuesFoundForKey"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenNonListValueFoundForKey"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenListOfListsFoundForKey"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldNotInterfereWithValuesReturnedFromOtherFakers"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldConvertIntegersToStrings"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldConvertDecimalsToStrings"}, {"method_name": "fetchFromYaml(String)", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldConvertBooleansToStrings"}, {"method_name": "bothify(String)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "ean13()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "ean13"}, {"method_name": "gtin13()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "gtin13"}, {"method_name": "ean8()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "ean8"}, {"method_name": "gtin8()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "gtin8"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateFiniteStream"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateInfiniteStream"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamOfNames"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamOfDigits"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateNullStream"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "illegalNullRate"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamWithRepeatableFaker"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamWithDifferentObjects"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "checkWrongArguments"}, {"method_name": "stream(Supplier[])", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "singletonTest"}, {"method_name": "stream(List)", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamPassingSuppliersAsList"}, {"method_name": "addPath(Locale,Path)", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "addNullExistingPath"}, {"method_name": "addPath(Locale,Path)", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "addNonExistingPath"}, {"method_name": "getProvider(Class,Function,BaseFaker)", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFileWithoutExtraFaker"}, {"method_name": "getProvider(Class,Function,BaseFaker)", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestWithoutExtraFaker"}, {"method_name": "getProvider(String)", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "testMultipleFakerContextsPerOneClassName"}, {"method_name": "isbn10()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn10DefaultIsNoSeparator"}, {"method_name": "isbn13()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn13DefaultIsNoSeparator"}, {"method_name": "isbn10(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn10"}, {"method_name": "isbn10(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testOverrides"}, {"method_name": "isbn13(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn13"}, {"method_name": "isbn13(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testOverrides"}, {"method_name": "asin()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "asin"}, {"method_name": "imei()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "imei"}, {"method_name": "isbnGs1()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbnGs1"}, {"method_name": "isbnGroup()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbnGroup"}, {"method_name": "isbnRegistrant()", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbnRegistrant"}, {"method_name": "getFaker()", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_getFakerTest.java", "testclass_name": "BaseFaker_getFakerTest", "testcase_name": "testGetFaker"}, {"method_name": "getProvider(Class<TestProvider>,Function<ProviderRegistration,TestProvider>)", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_getProviderTest.java", "testclass_name": "BaseFaker_getProviderTest", "testcase_name": "testGetProvider"}, {"method_name": "numberBetween(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinEqualsMax"}, {"method_name": "numberBetween(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinLessThanMax"}, {"method_name": "numberBetween(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinGreaterThanMax"}], "Relationship": [{"method_name": "any()", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyTest"}], "FakeValuesService": [{"method_name": "resolve(String,Object,Object)", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithIllegalArgumentExceptionThrown"}, {"method_name": "resolve(String,Object,Object)", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithInvocationTargetExceptionThrown"}, {"method_name": "fetchObject(String,FakerContext)", "file_path": "src/test/java/net/datafaker/integration/MostSpecificLocaleTest.java", "testclass_name": "MostSpecificLocaleTest", "testcase_name": "resolvesTheMostSpecificLocale"}, {"method_name": ")", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_csvTest.java", "testclass_name": "FakeValuesService_csvTest", "testcase_name": "testCsv_evenColumns"}, {"method_name": ")", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_csvTest.java", "testclass_name": "FakeValuesService_csvTest", "testcase_name": "testCsv_oddColumns"}, {"method_name": "primitiveToWrapper(Class<?>)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_primitiveToWrapperTest.java", "testclass_name": "FakeValuesService_primitiveToWrapperTest", "testcase_name": "testPrimitiveToWrapper"}, {"method_name": "primitiveToWrapper(Class<?>)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_primitiveToWrapperTest.java", "testclass_name": "FakeValuesService_primitiveToWrapperTest", "testcase_name": "testPrimitiveToWrapperWithNull"}, {"method_name": "regexify(String,FakerContext)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_regexifyTest.java", "testclass_name": "FakeValuesService_regexifyTest", "testcase_name": "testRegexifyWithExistingRegex"}, {"method_name": "regexify(String,FakerContext)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_regexifyTest.java", "testclass_name": "FakeValuesService_regexifyTest", "testcase_name": "testRegexifyWithNewRegex"}, {"method_name": "regexify(String,FakerContext)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_regexifyTest.java", "testclass_name": "FakeValuesService_regexifyTest", "testcase_name": "testRegexifyWithEmptyRegex"}, {"method_name": "addUrl(Locale,URL)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_addUrlTest.java", "testclass_name": "FakeValuesService_addUrlTest", "testcase_name": "testAddUrlValid"}, {"method_name": "addUrl(Locale,URL)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_addUrlTest.java", "testclass_name": "FakeValuesService_addUrlTest", "testcase_name": "testAddUrlNullLocale"}, {"method_name": "addUrl(Locale,URL)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_addUrlTest.java", "testclass_name": "FakeValuesService_addUrlTest", "testcase_name": "testAddUrlNullUrl"}, {"method_name": "addUrl(Locale,URL)", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_addUrlTest.java", "testclass_name": "FakeValuesService_addUrlTest", "testcase_name": "testAddUrlInvalidUrl"}], "Compass": [{"method_name": "word()", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionWordWithCompassPoint"}, {"method_name": "word()", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionWordWithoutCompassPoint"}, {"method_name": "abbreviation()", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionAbbreviationWithCompassPoint"}, {"method_name": "abbreviation()", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionAbbreviationWithoutCompassPoint"}, {"method_name": "azimuth()", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassAzimuthWithCompassPoint"}, {"method_name": "azimuth()", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassAzimuthWithoutCompassPoint"}], "Book": [{"method_name": "author()", "file_path": "src/test/java/net/datafaker/providers/base/BookTest.java", "testclass_name": "BookTest", "testcase_name": "testAuthor"}], "App": [{"method_name": "author()", "file_path": "src/test/java/net/datafaker/providers/base/AppTest.java", "testclass_name": "AppTest", "testcase_name": "testAuthor"}, {"method_name": "version()", "file_path": "src/test/java/net/datafaker/providers/base/AppTest.java", "testclass_name": "AppTest", "testcase_name": "testVersion"}], "DrivingLicense": [{"method_name": "drivingLicense(String)", "file_path": "src/test/java/net/datafaker/providers/base/DrivingLicenseTest.java", "testclass_name": "DrivingLicenseTest", "testcase_name": "drivingLicense"}], "Science": [{"method_name": "element()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "element"}, {"method_name": "elementSymbol()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "elementSymbol"}, {"method_name": "scientist()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "scientist"}, {"method_name": "tool()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "tool"}, {"method_name": "quark()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "quark"}, {"method_name": "leptons()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "leptons"}, {"method_name": "bosons()", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "bosons"}], "Barcode": [{"method_name": "type()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "type"}, {"method_name": "ean13()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan13"}, {"method_name": "ean13()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan13CheckSum"}, {"method_name": "gtin13()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin13"}, {"method_name": "ean8()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan8"}, {"method_name": "ean8()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan8CheckSum"}, {"method_name": "gtin8()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin8"}, {"method_name": "gtin14()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin14Length"}, {"method_name": "gtin14()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin14CheckSum"}, {"method_name": "gtin12()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin12Length"}, {"method_name": "gtin12()", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin12CheckSum"}], "Space": [{"method_name": "distanceMeasurement()", "file_path": "src/test/java/net/datafaker/providers/base/SpaceTest.java", "testclass_name": "SpaceTest", "testcase_name": "distanceMeasurement"}], "PhoneNumberUtil": [{"method_name": "parse(String,String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllCellPhoneForLocale"}, {"method_name": "parse(String,String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testValidNumber"}, {"method_name": "parse(String,String)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllPhoneNumbers"}, {"method_name": "PhoneNumber)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllCellPhoneForLocale"}, {"method_name": "PhoneNumber)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testValidNumber"}, {"method_name": "PhoneNumber)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllPhoneNumbers"}], "Commerce": [{"method_name": "department()", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testDepartment"}, {"method_name": "productName()", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testProductName"}, {"method_name": "price()", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPrice"}, {"method_name": "price(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPriceMinMax"}, {"method_name": "promotionCode()", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPromotionCode"}, {"method_name": "promotionCode(int)", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPromotionCodeDigits"}], "Duration": [{"method_name": "atMostSeconds(long)", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationSeconds"}, {"method_name": "atMostMinutes(long)", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationMinutes"}, {"method_name": "atMostHours(long)", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationHours"}, {"method_name": "atMostDays(long)", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationDays"}], "Domain": [{"method_name": "firstLevelDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFirstLevelDomainNotNull"}, {"method_name": "firstLevelDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFirstLevelDomain"}, {"method_name": "secondLevelDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testSecondLevelDomainNotNull"}, {"method_name": "secondLevelDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testSecondLevelDomain"}, {"method_name": "fullDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFullDomainNotNull"}, {"method_name": "fullDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFullDomain"}, {"method_name": "validDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testValidDomainNotNull"}, {"method_name": "validDomain(String)", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testValidDomain"}], "Locality": [{"method_name": "allSupportedLocales()", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "allSupportedLocales"}, {"method_name": "displayName()", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "displayName"}, {"method_name": "localeStringWithRandom(Random)", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeStringRandom"}, {"method_name": "localeStringWithRandom(Random)", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeStringWithRandom"}, {"method_name": "localeStringWithoutReplacement(Random)", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeStringWithoutReplacement"}, {"method_name": "localeString()", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeString"}, {"method_name": "localeStringWithoutReplacement()", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeWithoutReplacement"}], "Tea": [{"method_name": "variety()", "file_path": "src/test/java/net/datafaker/providers/foods/TeaTest.java", "testclass_name": "TeaTest", "testcase_name": "testVariety"}], "Food": [{"method_name": "measurement()", "file_path": "src/test/java/net/datafaker/providers/foods/FoodTest.java", "testclass_name": "FoodTest", "testcase_name": "measurement"}, {"method_name": "measurement()", "file_path": "src/test/java/net/datafaker/providers/foods/HebrewFoodTest.java", "testclass_name": "HebrewFoodTest", "testcase_name": "measurement"}], "Weather": [{"method_name": "temperatureCelsius()", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureCelsius"}, {"method_name": "temperatureFahrenheit()", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureFahrenheit"}, {"method_name": "temperatureCelsius(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureCelsiusInRange"}, {"method_name": "temperatureFahrenheit(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureFahrenheitInRange"}], "CNPJ": [{"method_name": "valid(boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"method_name": "invalid(boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}, {"method_name": "valid(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}, {"method_name": "invalid(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}], "IdNumber": [{"method_name": "valid()", "file_path": "src/test/java/net/datafaker/idnumbers/PortugueseIdNumberTest.java", "testclass_name": "PortugueseIdNumberTest", "testcase_name": "testValid"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testSsnFormat"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "valid"}, {"method_name": "valid()", "file_path": "src/test/java/net/datafaker/providers/base/IdNumber_validTest.java", "testclass_name": "IdNumber_validTest", "testcase_name": "testValidIdNumber"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/idnumbers/PortugueseIdNumberTest.java", "testclass_name": "PortugueseIdNumberTest", "testcase_name": "testInvalid"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testSsnFormat"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "invalid"}, {"method_name": "invalid()", "file_path": "src/test/java/net/datafaker/providers/base/IdNumber_validTest.java", "testclass_name": "IdNumber_validTest", "testcase_name": "testInvalidIdNumber"}, {"method_name": "validEsMXSsn()", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "validEsMXSsn"}, {"method_name": "invalidEsMXSsn()", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "invalidEsMXSsn"}], "Minecraft": [{"method_name": "tileItemName()", "file_path": "src/test/java/net/datafaker/providers/videogame/MinecraftTest.java", "testclass_name": "MinecraftTest", "testcase_name": "testTileItemName"}], "Coffee": [{"method_name": "notes()", "file_path": "src/test/java/net/datafaker/providers/foods/CoffeeTest.java", "testclass_name": "CoffeeTest", "testcase_name": "notes"}, {"method_name": "blendName()", "file_path": "src/test/java/net/datafaker/providers/foods/CoffeeTest.java", "testclass_name": "CoffeeTest", "testcase_name": "blendName"}], "MedicalProcedure": [{"method_name": "icd10()", "file_path": "src/test/java/net/datafaker/providers/healthcare/MedicalProcedureTest.java", "testclass_name": "MedicalProcedureTest", "testcase_name": "testProcedureCodes"}], "Disease": [{"method_name": "icd10()", "file_path": "src/test/java/net/datafaker/providers/healthcare/DiseaseTest.java", "testclass_name": "DiseaseTest", "testcase_name": "testDiseaseCodes"}, {"method_name": "anyDisease()", "file_path": "src/test/java/net/datafaker/providers/healthcare/DiseaseTest.java", "testclass_name": "DiseaseTest", "testcase_name": "testAnyDisease"}], "Aws": [{"method_name": "accountId()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAccountId"}, {"method_name": "acmARN()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAcmARN"}, {"method_name": "albARN()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAlbARN"}, {"method_name": "albTargetGroupARN()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAlbTargetGroupARN"}, {"method_name": "route53ZoneId()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testRoute53ZoneId"}, {"method_name": "securityGroupId()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testSecurityGroupId"}, {"method_name": "subnetId()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testSubnetId"}, {"method_name": "vpcId()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testVpcId"}, {"method_name": "region()", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testRegion"}], "Azure": [{"method_name": "region()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testRegion"}, {"method_name": "subscriptionId()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testAccountId"}, {"method_name": "subscriptionId()", "file_path": "src/test/java/net/datafaker/providers/base/Azure_subscriptionIdTest.java", "testclass_name": "Azure_subscriptionIdTest", "testcase_name": "testSubscriptionId"}, {"method_name": "tenantId()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testTenantId"}, {"method_name": "resourceGroup()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testResourceGroup"}, {"method_name": "managementGroup()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testManagementGroup"}, {"method_name": "applicationGateway()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testApplicationGateway"}, {"method_name": "bastionHost()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testBastionHost"}, {"method_name": "firewall()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testFirewall"}, {"method_name": "loadBalancer()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testLoadBalancer"}, {"method_name": "networkSecurityGroup()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testNetworkSecurityGroup"}, {"method_name": "virtualNetwork()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testVirtualNetwork"}, {"method_name": "virtualWan()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testVirtualWan"}, {"method_name": "appServiceEnvironment()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testAppServiceEnvironment"}, {"method_name": "appServicePlan()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testAppServicePlan"}, {"method_name": "loadTesting()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testLoadTesting"}, {"method_name": "staticWebApp()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testStaticWebApp"}, {"method_name": "virtualMachine()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testVirtualMachine"}, {"method_name": "storageAccount()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testStorageAccount"}, {"method_name": "containerRegistry()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerRegistry"}, {"method_name": "containerApps()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerApps"}, {"method_name": "containerAppsEnvironment()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerAppsEnvironment"}, {"method_name": "containerInstance()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerInstance"}, {"method_name": "cosmosDBDatabase()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testCosmosDBDatabase"}, {"method_name": "sqlDatabase()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testSqlDatabase"}, {"method_name": "mysqlDatabase()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testMysqlDatabase"}, {"method_name": "postgreSQLDatabase()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testPostgreSQLDatabase"}, {"method_name": "serviceBus()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testServiceBus"}, {"method_name": "serviceBusQueue()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testServiceBusQueue"}, {"method_name": "serviceBusTopic()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testServiceBusTopic"}, {"method_name": "keyVault()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testKeyVault"}, {"method_name": "logAnalytics()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testLogAnalytics"}, {"method_name": "springApps()", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testSpringApps"}], "Avatar": [{"method_name": "image()", "file_path": "src/test/java/net/datafaker/providers/entertainment/AvatarTest.java", "testclass_name": "AvatarTest", "testcase_name": "testAvatar"}], "Dota2": [{"method_name": "hero()", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}, {"method_name": "heroQuote(String)", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}], "Text": [{"method_name": "TextRuleConfig)", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "textShouldContain3RULowerCaseAnd5CustomSpecialSymbols"}, {"method_name": "TextRuleConfig)", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "exceptionIfLengthIsShorterThanNumberOfRequiredSymbols"}, {"method_name": "TextRuleConfig)", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "everyTextShouldContainLowerCaseUpperCaseAndDigit"}, {"method_name": "character()", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testCharacter"}, {"method_name": "uppercaseCharacter()", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testUppercaseCharacter"}, {"method_name": "lowercaseCharacter()", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testLowercaseCharacter"}, {"method_name": "text(int)", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testFixedLengthText"}, {"method_name": "text()", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testDefaultLengthText"}, {"method_name": "text(int,int,boolean,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_AllFeaturesIncluded"}, {"method_name": "text(int,int,boolean,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/Text_textTest.java", "testclass_name": "Text_textTest", "testcase_name": "testText_NoFeaturesIncluded"}], "Lorem": [{"method_name": "character()", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharacter"}, {"method_name": "paragraph(int)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "paragraph(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentencesWithCount"}, {"method_name": "paragraphs(int)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "sentence(int)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "sentence(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentenceWithWordCount"}, {"method_name": "sentences(int)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "words()", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "words()", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testWords"}, {"method_name": "words(int)", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"method_name": "words(int)", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_wordsTest.java", "testclass_name": "Lorem_wordsTest", "testcase_name": "testWordsWithPositiveNumber"}, {"method_name": "words(int)", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_wordsTest.java", "testclass_name": "Lorem_wordsTest", "testcase_name": "testWordsWithZero"}, {"method_name": "words(int)", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_wordsTest.java", "testclass_name": "Lorem_wordsTest", "testcase_name": "testWordsWithNegativeNumber"}, {"method_name": "fixedString(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "shouldCreateFixedLengthString"}, {"method_name": "character(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharacterIncludeUpperCase"}, {"method_name": "characters(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersShouldIncludeMinAndMaxLenght"}, {"method_name": "characters(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLength"}, {"method_name": "characters(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthEquals"}, {"method_name": "characters()", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharacters"}, {"method_name": "characters(boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersIncludeUpperCase"}, {"method_name": "characters(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersWithLength"}, {"method_name": "characters(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testFixedNumberOfCharactersEmpty"}, {"method_name": "characters(int,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersWithLengthIncludeUppercase"}, {"method_name": "characters(int,int,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthEqualsIncludingUppercaseAndIncludingDigit"}, {"method_name": "characters(int,int,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit"}, {"method_name": "characters(int,boolean,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersFixedLengthIncludingUppercaseAndIncludingDigit"}, {"method_name": "characters(int,int,boolean)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthIncludeUppercase"}, {"method_name": "sentence()", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentence"}, {"method_name": "sentence(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentenceWithWordCountAndRandomWordsToAdd"}, {"method_name": "sentence(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentenceFixedNumberOfWords"}, {"method_name": "maxLengthSentence(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testMaxLengthSentence"}, {"method_name": "maxLengthSentence(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testMaxLengthWithEmptySentence"}, {"method_name": "maxLengthSentence(int)", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testMaxLengthWithNegativeLengthSentence"}, {"method_name": "paragraph()", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentences"}], "SlackEmoji": [{"method_name": "people()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "people"}, {"method_name": "nature()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "nature"}, {"method_name": "foodAndDrink()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "food_and_drink"}, {"method_name": "celebration()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "celebration"}, {"method_name": "activity()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "activity"}, {"method_name": "travelAndPlaces()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "travel_and_places"}, {"method_name": "objectsAndSymbols()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "objects_and_symbols"}, {"method_name": "custom()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "custom"}, {"method_name": "emoji()", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "emoji"}], "Aviation": [{"method_name": "flight(String)", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "flight_ICAO"}, {"method_name": "flight(String)", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "flight_IATA"}, {"method_name": "flight()", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "flight_default"}, {"method_name": "aircraft()", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "aircraft"}, {"method_name": "gate()", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "gate"}], "Medical": [{"method_name": "diagnosisCode()", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testDiagnosisCodeUS"}, {"method_name": "diagnosisCode()", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testDiagnosisCodeAU"}, {"method_name": "diagnosisCode()", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testDiagnosisCodeNotAustraliaNorUS"}, {"method_name": "procedureCode()", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testProcedureCodes"}], "Hashing": [{"method_name": "md2()", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testMd2"}, {"method_name": "md5()", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testMd5"}, {"method_name": "sha1()", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha1"}, {"method_name": "sha256()", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha256"}, {"method_name": "sha384()", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha384"}, {"method_name": "sha512()", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha512"}], "PhoneNumber": [{"method_name": "extension()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testExtension"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testCellPhone_enUS"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_esMx"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_CA"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobile"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testCellPhone"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_estonia"}, {"method_name": "cellPhone()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_moldova"}, {"method_name": "phoneNumber()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_esMx"}, {"method_name": "phoneNumber()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberNational"}, {"method_name": "phoneNumber()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhoneNumber"}, {"method_name": "phoneNumber()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumber_moldova"}, {"method_name": "phoneNumberInternational()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberInternational"}, {"method_name": "phoneNumberInternational()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_estonia"}, {"method_name": "phoneNumberInternational()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_moldova"}, {"method_name": "cellPhoneInternational()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobileInternational"}, {"method_name": "subscriberNumber()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testSubscriberNumber"}, {"method_name": "subscriberNumber(int)", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testSubscriberNumberWithLength"}, {"method_name": "phoneNumberNational()", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberNational_estonia"}], "Shakespeare": [{"method_name": "hamletQuote()", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testHamletQuote"}, {"method_name": "asYouLikeItQuote()", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testAsYouLikeItQuote"}, {"method_name": "kingRichardIIIQuote()", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testKingRichardIIIQuote"}, {"method_name": "romeoAndJulietQuote()", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testRomeoAndJulietQuote"}], "Hearthstone": [{"method_name": "battlegroundsScore()", "file_path": "src/test/java/net/datafaker/providers/videogame/HearthstoneTest.java", "testclass_name": "HearthstoneTest", "testcase_name": "battlegroundsScoreTest"}, {"method_name": "standardRank()", "file_path": "src/test/java/net/datafaker/providers/videogame/HearthstoneTest.java", "testclass_name": "HearthstoneTest", "testcase_name": "standardRankTest"}, {"method_name": "wildRank()", "file_path": "src/test/java/net/datafaker/providers/videogame/HearthstoneTest.java", "testclass_name": "HearthstoneTest", "testcase_name": "wildRankTest"}], "StarWars": [{"method_name": "callSign()", "file_path": "src/test/java/net/datafaker/providers/entertainment/StarWarsTest.java", "testclass_name": "StarWarsTest", "testcase_name": "callSign"}, {"method_name": "alternateCharacterSpelling()", "file_path": "src/test/java/net/datafaker/providers/entertainment/StarWarsTest.java", "testclass_name": "StarWarsTest", "testcase_name": "alternativeSpelling"}], "Twitter": [{"method_name": "createdTime(boolean,Date,Date)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testCreatedDateForward"}, {"method_name": "createdTime(boolean,Date,Date)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testCreatedDateBackward"}, {"method_name": "twitterId(int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testShortTwitterIdLength"}, {"method_name": "twitterId(int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testLongTwitterIdLength"}, {"method_name": "twitterId(int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTwitterIdLength"}, {"method_name": "twitterId(int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTwitterIdUnique"}, {"method_name": "text(String[],int,int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTextLength"}, {"method_name": "text(String[],int,int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTextKeyWords"}, {"method_name": "userName()", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "username"}, {"method_name": "userId()", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "userId"}, {"method_name": "getLink(String,int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "linkTestRules"}, {"method_name": "getLink(String,int)", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "linkTestKeyWords"}], "BulgarianIdNumber": [{"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/BulgarianIdNumberTest.java", "testclass_name": "BulgarianIdNumberTest", "testcase_name": "checksum"}], "MacedonianIdNumber": [{"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/MacedonianIdNumberTest.java", "testclass_name": "MacedonianIdNumberTest", "testcase_name": "checksum"}], "MoldovanIdNumber": [{"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/MoldovanIdNumberTest.java", "testclass_name": "MoldovanIdNumberTest", "testcase_name": "checksum"}, {"method_name": "generateValid(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/MoldovanIdNumberTest.java", "testclass_name": "MoldovanIdNumberTest", "testcase_name": "valid"}], "EstonianIdNumber": [{"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "checksum"}, {"method_name": "firstDigit(int,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_18xx"}, {"method_name": "firstDigit(int,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_19xx"}, {"method_name": "firstDigit(int,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_20xx"}, {"method_name": "firstDigit(int,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_21xx"}], "AlbanianIdNumber": [{"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "checksum"}, {"method_name": "generateValid(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "valid"}, {"method_name": "generateInvalid(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "invalid"}, {"method_name": "yy(int)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "yy"}, {"method_name": "mm(int,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "mm"}, {"method_name": "dd(int)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "dd"}, {"method_name": "checksumOfFirstChar(char)", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "checksumOfFirstChar"}], "RomanianIdNumber": [{"method_name": "checksum(String)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "checksum"}, {"method_name": "generateValid(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "sample"}, {"method_name": "generateInvalid(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumber_generateInvalidTest.java", "testclass_name": "RomanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}, {"method_name": "firstCharacter(LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "firstDigit_18xx"}, {"method_name": "firstCharacter(LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "firstDigit_19xx"}, {"method_name": "firstCharacter(LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "firstDigit_20xx"}, {"method_name": "dateOfBirth(LocalDate)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "dateOfBirth"}, {"method_name": "countyCode(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "countyCode"}, {"method_name": "sequenceNumber(Faker)", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "sequenceNumber"}], "Options": [{"method_name": "option(String[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithArray"}, {"method_name": ")", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargsString"}, {"method_name": ")", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(Long[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(Short[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(Byte[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(Double[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(Float[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(BigInteger[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(BigDecimal[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "option(Boolean[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"method_name": "subset(int,Integer[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubset"}, {"method_name": "subset(int,Long[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubset"}, {"method_name": "subset(int,String[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubset"}, {"method_name": "subset(int,String[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubsetWithDuplicate"}, {"method_name": "subset(int,String[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testEmptySubset"}, {"method_name": "subset(int,Object[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubsetWithDuplicate"}, {"method_name": "subset(int,Object[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testEmptySubset"}, {"method_name": "option(Class<Day>)", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithEnum"}, {"method_name": "nextElement(Integer[])", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testNextArrayElement"}, {"method_name": "nextElement(List<Integer>)", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testNextListElement"}], "AbstractProvider": [{"method_name": "toString()", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateRepeatableValues"}, {"method_name": "toString()", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateUniqueValues"}, {"method_name": "toString()", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}], "Utils": [{"method_name": "digit(char)", "file_path": "src/test/java/net/datafaker/idnumbers/UtilsTest.java", "testclass_name": "UtilsTest", "testcase_name": "digit_parsesGivenCharToNumber"}, {"method_name": "digitAt(String,int)", "file_path": "src/test/java/net/datafaker/idnumbers/UtilsTest.java", "testclass_name": "UtilsTest", "testcase_name": "digitAt_parsesGivenCharToNumber"}, {"method_name": "multiply(String,int[])", "file_path": "src/test/java/net/datafaker/idnumbers/UtilsTest.java", "testclass_name": "UtilsTest", "testcase_name": "multiply_digits"}], "Number": [{"method_name": "digit()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateSequence"}, {"method_name": "digit()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateSequenceOfDefaultSize"}, {"method_name": "digit()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateEmptySequence"}, {"method_name": "digit()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "isInfiniteTest"}, {"method_name": "digit()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateSequence5"}, {"method_name": "digit()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "testIterator"}, {"method_name": "nextInt(int)", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithDifferentObjects"}, {"method_name": "randomDouble(int,int,int)", "file_path": "src/test/java/net/datafaker/providers/base/Number_randomDoubleTest.java", "testclass_name": "Number_randomDoubleTest", "testcase_name": "testRandomDouble"}], "CsvTransformer": [{"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "toCsv"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toCsv"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toCsvFromInfiniteSequence"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestWithQuotesNew"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithCommaNew"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "supplierShouldBeDefinedInCaseOfNullInput"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunction"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunctionStream"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithInfiniteSequence"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsv"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsvNew"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollection"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollectionNew"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsv"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsvWithLimit"}, {"method_name": "getStartStream(Schema)", "file_path": "src/test/java/net/datafaker/transformations/CsvTransformer_getStartStreamTest.java", "testclass_name": "CsvTransformer_getStartStreamTest", "testcase_name": "testGetStartStream"}], "JsonTransformer": [{"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "toJson"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "toNestedJson"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toJson"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toJsonFromInfiniteSequence"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toNestedJson"}, {"method_name": "generate(Iterable,Schema)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "jsonWithDifferentFieldFormatsInOneObjectTest"}, {"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testJsonStream"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromSchemaWithLimit"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "simpleJsonTestForJsonTransformer"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "outputArrayJsonTestForJsonTransformer"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "outputWithoutCommaForJsonTransformer"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "jsonObjectCollectionTest"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "jsonCollectionOfCollectionsTest"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromFakeSequenceCollectionWithoutComma"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromFakeSequenceCollection"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromFakeSequenceStream"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromInfiniteFakeSequence"}], "BloodPressure": [{"method_name": "new()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "singletonTest"}], "Glucose": [{"method_name": "new()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "singletonTest"}], "Temperature": [{"method_name": "new()", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "singletonTest"}], "SwedenIdNumber": [{"method_name": "isValidSwedishSsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SwedishIdNumberTest.java", "testclass_name": "SwedishIdNumberTest", "testcase_name": "validSwedishSsn"}, {"method_name": "isValidSwedishSsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SwedishIdNumberTest.java", "testclass_name": "SwedishIdNumberTest", "testcase_name": "invalidSwedishSsn"}, {"method_name": "isValidSwedishSsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testValidSwedishSsn"}, {"method_name": "isValidSwedishSsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testInvalidSwedishSsnLength"}, {"method_name": "isValidSwedishSsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testInvalidSwedishSsnDate"}, {"method_name": "isValidSwedishSsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testInvalidSwedishSsnChecksum"}], "Image": [{"method_name": "base64BMP()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "bmp"}, {"method_name": "base64GIF()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "gif"}, {"method_name": "base64PNG()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "png"}, {"method_name": "base64JPG()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "jpg"}, {"method_name": "base64JPEG()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "jpeg"}, {"method_name": "base64SVG()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "svg"}, {"method_name": "base64TIFF()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "tiff"}, {"method_name": "base64(Base64ImageRuleConfig)", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "base64"}, {"method_name": "base64(ImageBuilder)", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "defaultBuilder"}, {"method_name": "base64(ImageBuilder)", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "customBase64builder"}, {"method_name": "base64(ImageBuilder)", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "tinyBase64builder"}, {"method_name": "base64(ImageBuilder)", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "largeBase64builder"}], "ImageBuilder": [{"method_name": "build()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnIllegalType"}, {"method_name": "build()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnNegativeWidth"}, {"method_name": "build()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnZeroWidth"}, {"method_name": "build()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnNegativeHeight"}, {"method_name": "build()", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnZeroHeight"}], "YamlTransformer": [{"method_name": "generate(Schema<String,String>,int)", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "simpleYamlTest"}, {"method_name": "generate(Iterable<Name>,Schema<Name,String>)", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequence"}, {"method_name": "generate(Iterable<Name>,Schema<Name,List<String>>)", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequenceWithCollection"}], "XmlTransformer": [{"method_name": "generate(Schema<String,String>,int)", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "xmlSchemaTest"}, {"method_name": "generate(Schema<String,String>,int)", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "xmlPrettySchemaTest"}, {"method_name": "generate(Iterable<Name>,Schema<Name,List<SimpleField<Name,String>>>,int)", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "generateFromFakeSequence"}, {"method_name": "generate(Schema<Object,?>,int)", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "generateXMLWithThreeNestedLevels"}, {"method_name": "generate(Schema<Object,?>,int)", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "generateXMLWithThreeNestedLevelsAndAttributes"}], "EnFile": [{"method_name": "getFiles()", "file_path": "src/test/java/net/datafaker/service/files/EnFileTest.java", "testclass_name": "EnFileTest", "testcase_name": "fileNameConvention"}], "Address": [{"method_name": "streetAddress()", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "ChineseIdNumber": [{"method_name": "idNumber(char[])", "file_path": "src/test/java/net/datafaker/idnumbers/ChineseIdNumberTest.java", "testclass_name": "ChineseIdNumberTest", "testcase_name": "testChecksumOfChineseIdNumber"}, {"method_name": "generateValid(BaseFaker)", "file_path": "src/test/java/net/datafaker/idnumbers/ChineseIdNumberTest.java", "testclass_name": "ChineseIdNumberTest", "testcase_name": "testValidZhCnIdNumber"}], "WordUtils": [{"method_name": "capitalize(String)", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtilsTest.java", "testclass_name": "WordUtilsTest", "testcase_name": "capitalizeWord"}, {"method_name": "capitalize(String)", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtilsTest.java", "testclass_name": "WordUtilsTest", "testcase_name": "capitalizeNull"}, {"method_name": "capitalize(String)", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_nullInput"}, {"method_name": "capitalize(String)", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_emptyInput"}, {"method_name": "capitalize(String)", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_alreadyCapitalized"}, {"method_name": "capitalize(String)", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_needsCapitalization"}], "SouthAfricanIdNumber": [{"method_name": "isValidEnZASsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testExistSsn"}, {"method_name": "isValidEnZASsn(String)", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testFakerSsn"}, {"method_name": "sequentialNumber(BaseFaker,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "sequentialNumber_forMales"}, {"method_name": "sequentialNumber(BaseFaker,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "sequentialNumber_forFemales"}, {"method_name": "generateInvalid(BaseProviders)", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumber_generateInvalidTest.java", "testclass_name": "SouthAfricanIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalidSsn"}], "FakerIDN": [{"method_name": "toASCII(String)", "file_path": "src/test/java/net/datafaker/internal/helper/FakerIDNTest.java", "testclass_name": "FakerIDNTest", "testcase_name": "toASCIINoError"}, {"method_name": "toASCII(String)", "file_path": "src/test/java/net/datafaker/internal/helper/FakerIDNTest.java", "testclass_name": "FakerIDNTest", "testcase_name": "toASCIIResultIsEmptyException"}], "Finance": [{"method_name": "creditCard()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCard"}, {"method_name": "nasdaqTicker()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "nasdaqTicker"}, {"method_name": "nyseTicker()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "nyseTicker"}, {"method_name": "bic()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "bic"}, {"method_name": "iban()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "iban"}, {"method_name": "iban(String)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "ibanWithCountryCode"}, {"method_name": "iban(String)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "ibanWithAllCountryCodes"}, {"method_name": "iban(String)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "costaRicaIbanMustBeValid"}, {"method_name": "ibanSupportedCountries()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "ibanCountryCodes"}, {"method_name": "creditCard(CreditCardType)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCardWithType"}, {"method_name": "creditCard(CreditCardType)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "visaCard"}, {"method_name": "creditCard(CreditCardType)", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "discoverCard"}, {"method_name": "usRoutingNumber()", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "usRoutingNumber"}], "FakeSequence": [{"method_name": "isInfinite()", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "isInfiniteTest"}, {"method_name": "iterator()", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "testIterator"}, {"method_name": "iterator()", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "testIteratorInfinite"}], "UkrainianIdNumber": [{"method_name": "IdNumberRequest)", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "valid"}, {"method_name": "generateInvalid(BaseFaker)", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "invalid"}], "FakeValuesGrouping": [{"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesOneFakeValue"}, {"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesMultipleFakeValues"}], "FakeValues": [{"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueReturnsAValue"}, {"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueDoesNotReturnAValue"}, {"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueWithANonEnglishFile"}, {"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueForHebrewLocale"}, {"method_name": "get(String)", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueFromALocaleThatCantBeLoaded"}, {"method_name": "getPaths()", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "correctPathForHebrewLanguage"}, {"method_name": "getPaths()", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "incorrectPathForHebrewLanguage"}, {"method_name": "getLocale()", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "correctLocale"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_SameInstance"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_DifferentInstanceSameContext"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_DifferentContext"}, {"method_name": "equals(Object)", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_DifferentType"}], "Drone": [{"method_name": "weight()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "weight"}, {"method_name": "maxAscentSpeed()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxAscentSpeed"}, {"method_name": "maxDescentSpeed()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxDescentSpeed"}, {"method_name": "flightTime()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "flightTime"}, {"method_name": "maxAltitude()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxAltitude"}, {"method_name": "maxFlightDistance()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxFlightDistance"}, {"method_name": "maxSpeed()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxSpeed"}, {"method_name": "maxWindResistance()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxWindResistance"}, {"method_name": "maxAngularVelocity()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxAngularVelocity"}, {"method_name": "maxTiltAngle()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxTiltAngle"}, {"method_name": "operatingTemperature()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "operatingTemperature"}, {"method_name": "batteryCapacity()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "batteryCapacity"}, {"method_name": "batteryVoltage()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "batteryVoltage"}, {"method_name": "batteryWeight()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "batteryWeight"}, {"method_name": "chargingTemperature()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "chargingTemperature"}, {"method_name": "maxChargingPower()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxChargingPower"}, {"method_name": "maxResolution()", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxResolution"}], "SingaporeIdNumber": [{"method_name": "centuryPrefixCitizen(LocalDate)", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "centuryPrefix_forCitizens"}, {"method_name": "centuryPrefixForeigner(LocalDate)", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "centuryPrefix_forForeigner"}, {"method_name": "Type)", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_20th_century"}, {"method_name": "Type)", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_21th_century"}], "Vehicle": [{"method_name": "vin()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testVin"}, {"method_name": "manufacturer()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testManufacturer"}, {"method_name": "make()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testMake"}, {"method_name": "model()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testModel"}, {"method_name": "model(String)", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testModelWithParams"}, {"method_name": "makeAndModel()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testMakeAndModel"}, {"method_name": "style()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testStyle"}, {"method_name": "color()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testColor"}, {"method_name": "upholsteryColor()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testUpholsteryColor"}, {"method_name": "upholsteryFabric()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testUpholsteryFabric"}, {"method_name": "upholstery()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testUpholstery"}, {"method_name": "transmission()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testTransmission"}, {"method_name": "driveType()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testDriveType"}, {"method_name": "fuelType()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testFuelType"}, {"method_name": "carType()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testCarType"}, {"method_name": "engine()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testEngine"}, {"method_name": "carOptions()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testCarOptions"}, {"method_name": "carOptions(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testCarOptionsMinMax"}, {"method_name": "standardSpecs(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testStandardSpecsMinMax"}, {"method_name": "standardSpecs()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testStandardSpecs"}, {"method_name": "doors()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testDoor"}, {"method_name": "licensePlate()", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testLicensePlate"}, {"method_name": "licensePlate(String)", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testLicensePlateWithParam"}, {"method_name": "licensePlate(String)", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testLicensePlateWithParam_Canada"}], "DateAndTime": [{"method_name": "future(int,TimeUnit,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testFutureDate"}, {"method_name": "future(int,TimeUnit,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_futureTest.java", "testclass_name": "DateAndTime_futureTest", "testcase_name": "testFutureDateWithinBounds"}, {"method_name": "future(int,int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testFutureDateWithMinimum"}, {"method_name": "future(int,int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_futureTest.java", "testclass_name": "DateAndTime_futureTest", "testcase_name": "testFutureDateWithMinimumTime"}, {"method_name": "past(int,int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testPastDateWithMinimum"}, {"method_name": "past(int,TimeUnit,Date)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testPastDateWithReferenceDate"}, {"method_name": "past(int,TimeUnit)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testPastDate"}, {"method_name": "between(Timestamp,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetween"}, {"method_name": "between(Timestamp,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetweenThenLargerThanNow"}, {"method_name": "between(Timestamp,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenValidRange"}, {"method_name": "between(Timestamp,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenEqualDates"}, {"method_name": "between(Timestamp,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenInvalidRange"}, {"method_name": "between(Timestamp,Timestamp,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetweenWithMaskReturningString"}, {"method_name": "between(Date,Date)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetweenDateAsArgument"}, {"method_name": "birthday()", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBirthday"}, {"method_name": "birthday(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBirthdayWithAges"}, {"method_name": "birthday(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayTest.java", "testclass_name": "DateAndTime_birthdayTest", "testcase_name": "testBirthdayWithEqualAges"}, {"method_name": "birthday(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayTest.java", "testclass_name": "DateAndTime_birthdayTest", "testcase_name": "testBirthdayWithDifferentAges"}, {"method_name": "birthday(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayTest.java", "testclass_name": "DateAndTime_birthdayTest", "testcase_name": "testBirthdayWithNegativeAges"}, {"method_name": "birthday(int,int,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "birthdayWithMask"}, {"method_name": "future(int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "futureWithMask"}, {"method_name": "future(int,int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "futureWithMask"}, {"method_name": "future(int,TimeUnit,Date,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "futureWithMask"}, {"method_name": "past(int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "pastWithMask"}, {"method_name": "past(int,int,TimeUnit,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "pastWithMask"}, {"method_name": "past(int,TimeUnit,Date,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "pastWithMask"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "periodTest"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "maxLessThanMinPeriod"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_periodTest.java", "testclass_name": "DateAndTime_periodTest", "testcase_name": "testPeriodValidRange"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_periodTest.java", "testclass_name": "DateAndTime_periodTest", "testcase_name": "testPeriodInvalidRange"}, {"method_name": "period(Period,Period)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_periodTest.java", "testclass_name": "DateAndTime_periodTest", "testcase_name": "testPeriodEqualMinMax"}, {"method_name": "duration(long,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "invalidDuration"}, {"method_name": "duration(long,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}, {"method_name": "duration(long,long,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}, {"method_name": "duration(long,ChronoUnit)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}, {"method_name": "duration(long,long,String)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}, {"method_name": "birthdayLocalDate(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayLocalDateTest.java", "testclass_name": "DateAndTime_birthdayLocalDateTest", "testcase_name": "testBirthdayLocalDateWithEqualAges"}, {"method_name": "birthdayLocalDate(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayLocalDateTest.java", "testclass_name": "DateAndTime_birthdayLocalDateTest", "testcase_name": "testBirthdayLocalDateWithDifferentAges"}, {"method_name": "birthdayLocalDate(int,int)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayLocalDateTest.java", "testclass_name": "DateAndTime_birthdayLocalDateTest", "testcase_name": "testBirthdayLocalDateWithNegativeAges"}, {"method_name": "past(int,TimeUnit,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_pastTest.java", "testclass_name": "DateAndTime_pastTest", "testcase_name": "testPastWithDays"}, {"method_name": "past(int,TimeUnit,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_pastTest.java", "testclass_name": "DateAndTime_pastTest", "testcase_name": "testPastWithHours"}, {"method_name": "past(int,TimeUnit,Timestamp)", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_pastTest.java", "testclass_name": "DateAndTime_pastTest", "testcase_name": "testPastWithMinutes"}], "PolishIdNumber": [{"method_name": "get(Faker,LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"method_name": "get(Faker,LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"method_name": "get(Faker,LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testInvalidCenturiesPesel"}, {"method_name": "get(Faker,LocalDate,Gender)", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}], "Sip": [{"method_name": "method()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "method_returnUpperCaseWithMinimum3Chars"}, {"method_name": "contentType()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars"}, {"method_name": "messagingPort()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "messagingPort_return4DigitIntBetween1000And9999"}, {"method_name": "rtpPort()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "rtpPort_returnPositiveEvenInt"}, {"method_name": "provisionalResponseCode()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "provisionalResponseCode_return3DigitIntBetween100And199"}, {"method_name": "successResponseCode()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "successResponse_Codereturn3DigitIntBetween200And299"}, {"method_name": "redirectResponseCode()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "redirectResponseCode_Codereturn3DigitIntBetween300And399"}, {"method_name": "clientErrorResponseCode()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "clientErrorResponseCode_Codereturn3DigitIntBetween400And499"}, {"method_name": "serverErrorResponseCode()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "serverErrorResponseCode_Codereturn3DigitIntBetween500And599"}, {"method_name": "globalErrorResponseCode()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "globalErrorResponseCode_Codereturn3DigitIntBetween600And699"}, {"method_name": "provisionalResponsePhrase()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "provisionalResponsePhrase_returnAnyNonDigitString"}, {"method_name": "successResponsePhrase()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "successResponsePhrase_returnAnyNonDigitString"}, {"method_name": "redirectResponsePhrase()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "redirectResponsePhrase_returnAnyNonDigitString"}, {"method_name": "clientErrorResponsePhrase()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "clientErrorResponsePhrase_returnAnyNonDigitString"}, {"method_name": "serverErrorResponsePhrase()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "serverErrorResponsePhrase_returnAnyNonDigitString"}, {"method_name": "globalErrorResponsePhrase()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "globalErrorResponsePhrase_returnAnyNonDigitString"}, {"method_name": "bodyString()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "bodyString_returnAValidSdpBodyString"}, {"method_name": "bodyBytes()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "bodyBytes_isNotNull"}, {"method_name": "nameAddress()", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "nameAddress_returnValidNameAddressString"}], "Planet": [{"method_name": "values()", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldHaveNinePlanets"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"method_name": "lengthOfDay(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"method_name": "meanDistanceFromTheSun(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"method_name": "equatorialGravity(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"method_name": "mass(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"method_name": "equatorialRadius(PlanetName)", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}], "JavaObjectTransformer": [{"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaEmptyStreamTest"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}, {"method_name": "apply(Class,Schema)", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"method_name": "apply(Class,Schema)", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}], "SqlTransformer": [{"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleStreamTestForSqlTransformerSparkSql"}, {"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testSqlBatch"}, {"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/transformations/sql/SqlTransformer_generateStreamTest.java", "testclass_name": "SqlTransformer_generateStreamTest", "testcase_name": "testGenerateStreamWithEmptySchema"}, {"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/transformations/sql/SqlTransformer_generateStreamTest.java", "testclass_name": "SqlTransformer_generateStreamTest", "testcase_name": "testGenerateStreamWithBatchMode"}, {"method_name": "generateStream(Schema,int)", "file_path": "src/test/java/net/datafaker/transformations/sql/SqlTransformer_generateStreamTest.java", "testclass_name": "SqlTransformer_generateStreamTest", "testcase_name": "testGenerateStreamWithoutBatchMode"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testGenerateFromSchemaWithLimitSeparatedStatements"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testGenerateFromSchemaWithLimitBatchModeStatements"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testForceQuotedWithSqlIdentifiers"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformer"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerOracle"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerPostgres"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerMSSQL"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerMySQL"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSqlTestForSqlTransformerPostgres"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "sqlKeywordCaseCheck"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "sqlKeywordCapitalCaseCheck"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSqlTestForSqlTransformerOracle"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSizeSqlTestForSqlTransformerOracle"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSizeSqlTestForSqlTransformerPostgres"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "arrayAndMultisetSqlTestForSqlTransformerCalcite"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchTestForSqlTransformerSparkSql"}, {"method_name": "generate(Schema,int)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerSparkSql"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromFakeSequenceSeparated"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromFakeSequenceBatch"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromEmptySchema"}, {"method_name": "generate(FakeSequence,Schema)", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromInfiniteFakeSequenceBatch"}], "JavaNames": [{"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "singleWord"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "emptyString"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "nullString"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "wordWithDigit"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "wordStartingWithDigit"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "singleCharacter"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "singleCharacterUnderscore"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "onlyUnderscores"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "multipleWordsSeparatedByUnderscores"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "multipleUnderscoresInRow"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "upperFirstCharacterWithoutUnderscores"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "upperFirstCharacterWithUnderscores"}, {"method_name": "toJavaNames(String,boolean)", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "endingWithUnderscore"}]}