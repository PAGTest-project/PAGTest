[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.mockito.Mockito.*;\n\npublic class Text_textTest {\n\n    @Test\n    public void testText_AllFeaturesIncluded() {\n        // Given\n        BaseProviders faker = mock(BaseProviders.class);\n        Number number = mock(Number.class);\n        Text text = mock(Text.class);\n        when(faker.number()).thenReturn(number);\n        when(faker.text()).thenReturn(text);\n        when(number.numberBetween(anyInt(), anyInt())).thenReturn(10);\n        when(text.text(any())).thenReturn(\"mockedText\");\n\n        // When\n        String result = new Text(faker).text(5, 15, true, true, true);\n\n        // Then\n        assertNotNull(result);\n    }\n\n    @Test\n    public void testText_NoFeaturesIncluded() {\n        // Given\n        BaseProviders faker = mock(BaseProviders.class);\n        Number number = mock(Number.class);\n        Text text = mock(Text.class);\n        when(faker.number()).thenReturn(number);\n        when(faker.text()).thenReturn(text);\n        when(number.numberBetween(anyInt(), anyInt())).thenReturn(10);\n        when(text.text(any())).thenReturn(\"mockedText\");\n\n        // When\n        String result = new Text(faker).text(5, 15, false, false, false);\n\n        // Then\n        assertNotNull(result);\n    }\n}\n"}]