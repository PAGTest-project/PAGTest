[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class File_fileNameTest {\n\n    private File file;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = Mockito.mock(BaseProviders.class);\n        file = new File(faker);\n    }\n\n    @Test\n    public void testFileNameWithAllNullInputs() {\n        when(faker.internet().slug()).thenReturn(\"defaultDir\");\n        when(faker.lorem().word()).thenReturn(\"defaultName\");\n        when(file.extension()).thenReturn(\"defaultExt\");\n\n        String result = file.fileName(null, null, null, null);\n\n        assertEquals(\"defaultDir\" + System.getProperty(\"file.separator\") + \"defaultname.defaultExt\", result);\n    }\n\n    @Test\n    public void testFileNameWithAllInputsProvided() {\n        String result = file.fileName(\"customDir\", \"customName\", \"customExt\", \"customSep\");\n\n        assertEquals(\"customDircustomSepcustomName.customExt\", result);\n    }\n}\n"}]