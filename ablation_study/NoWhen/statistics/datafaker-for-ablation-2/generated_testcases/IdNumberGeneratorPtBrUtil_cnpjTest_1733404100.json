[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers.pt.br;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil.isCNPJValid;\n\npublic class IdNumberGeneratorPtBrUtil_cnpjTest {\n\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = new BaseProviders() {\n            @Override\n            public Object address() {\n                return null;\n            }\n\n            @Override\n            public Object ancient() {\n                return null;\n            }\n\n            // Implement other required methods similarly\n\n            @Override\n            public Object pronouns() {\n                return null;\n            }\n        };\n    }\n\n    @Test\n    public void testCnpjValidFormattedMultiBranch() {\n        String result = IdNumberGeneratorPtBrUtil.cnpj(faker, true, true, true);\n        assertTrue(isCNPJValid(result));\n        assertTrue(result.matches(\"\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}/\\\\d{4}-\\\\d{2}\"));\n    }\n\n    @Test\n    public void testCnpjValidUnformattedMultiBranch() {\n        String result = IdNumberGeneratorPtBrUtil.cnpj(faker, false, true, true);\n        assertTrue(isCNPJValid(result));\n        assertTrue(result.matches(\"\\\\d{14}\"));\n    }\n\n    @Test\n    public void testCnpjValidFormattedSingleBranch() {\n        String result = IdNumberGeneratorPtBrUtil.cnpj(faker, true, true, false);\n        assertTrue(isCNPJValid(result));\n        assertTrue(result.matches(\"\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}/0001-\\\\d{2}\"));\n    }\n\n    @Test\n    public void testCnpjValidUnformattedSingleBranch() {\n        String result = IdNumberGeneratorPtBrUtil.cnpj(faker, false, true, false);\n        assertTrue(isCNPJValid(result));\n        assertTrue(result.matches(\"\\\\d{14}\"));\n    }\n\n    @Test\n    public void testCnpjInvalidFormatted() {\n        String result = IdNumberGeneratorPtBrUtil.cnpj(faker, true, false, false);\n        assertFalse(isCNPJValid(result));\n        assertTrue(result.matches(\"\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}/\\\\d{4}-\\\\d{2}\"));\n    }\n\n    @Test\n    public void testCnpjInvalidUnformatted() {\n        String result = IdNumberGeneratorPtBrUtil.cnpj(faker, false, false, false);\n        assertFalse(isCNPJValid(result));\n        assertTrue(result.matches(\"\\\\d{14}\"));\n    }\n}\n"}]