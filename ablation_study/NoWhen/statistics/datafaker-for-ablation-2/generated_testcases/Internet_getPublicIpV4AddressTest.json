[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.service.RandomService;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.net.InetAddress;\nimport java.util.Arrays;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class Internet_getPublicIpV4AddressTest {\n\n    @Test\n    public void testGetPublicIpV4Address() {\n        // Given\n        Internet internet = new Internet(Mockito.mock(BaseProviders.class));\n        RandomService randomService = Mockito.mock(RandomService.class);\n        when(internet.faker.random()).thenReturn(randomService);\n\n        // Mocking the random values to avoid private IP ranges\n        when(randomService.nextInt(256)).thenReturn(1, 2, 3, 4); // First call returns 1, second returns 2, etc.\n\n        // When\n        InetAddress result = internet.getPublicIpV4Address();\n\n        // Then\n        byte[] expectedAddress = new byte[]{1, 2, 3, 4};\n        assertEquals(Arrays.toString(expectedAddress), Arrays.toString(result.getAddress()));\n    }\n}\n"}]