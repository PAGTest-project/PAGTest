[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport net.datafaker.internal.helper.SingletonLocale;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class FakeValuesService_fetchObjectTest {\n\n    private FakeValuesService fakeValuesService;\n    private FakerContext context;\n    private SingletonLocale locale1;\n    private SingletonLocale locale2;\n\n    @BeforeEach\n    public void setUp() {\n        fakeValuesService = new FakeValuesService();\n        context = mock(FakerContext.class);\n        locale1 = SingletonLocale.get(Locale.ENGLISH);\n        locale2 = SingletonLocale.get(Locale.FRENCH);\n    }\n\n    @Test\n    public void testFetchObject_SingleLocale_FoundInCache() {\n        // Given\n        String key = \"testKey\";\n        Map<String, Object> cacheMap = Map.of(key, \"cachedValue\");\n        fakeValuesService.key2fetchedObject.put(locale1, cacheMap);\n        when(context.getLocaleChain()).thenReturn(List.of(locale1));\n\n        // When\n        String result = fakeValuesService.fetchObject(key, context);\n\n        // Then\n        assertEquals(\"cachedValue\", result);\n    }\n\n    @Test\n    public void testFetchObject_MultipleLocales_FoundInSecondLocale() {\n        // Given\n        String key = \"testKey\";\n        Map<String, Object> cacheMap1 = Collections.emptyMap();\n        Map<String, Object> cacheMap2 = Map.of(key, \"secondLocaleValue\");\n        fakeValuesService.key2fetchedObject.put(locale1, cacheMap1);\n        fakeValuesService.key2fetchedObject.put(locale2, cacheMap2);\n        when(context.getLocaleChain()).thenReturn(List.of(locale1, locale2));\n\n        // When\n        String result = fakeValuesService.fetchObject(key, context);\n\n        // Then\n        assertEquals(\"secondLocaleValue\", result);\n    }\n\n    @Test\n    public void testFetchObject_DefaultLocaleExcluded_FoundInSecondLocale() {\n        // Given\n        String key = \"testKey\";\n        Map<String, Object> cacheMap1 = Collections.emptyMap();\n        Map<String, Object> cacheMap2 = Map.of(key, \"secondLocaleValue\");\n        fakeValuesService.key2fetchedObject.put(FakeValuesService.DEFAULT_LOCALE, cacheMap1);\n        fakeValuesService.key2fetchedObject.put(locale2, cacheMap2);\n        when(context.getLocaleChain()).thenReturn(List.of(FakeValuesService.DEFAULT_LOCALE, locale2));\n\n        // When\n        String result = fakeValuesService.fetchObject(key, context);\n\n        // Then\n        assertEquals(\"secondLocaleValue\", result);\n    }\n\n    @Test\n    public void testFetchObject_NoValueFound_ReturnsNull() {\n        // Given\n        String key = \"testKey\";\n        Map<String, Object> cacheMap = Collections.emptyMap();\n        fakeValuesService.key2fetchedObject.put(locale1, cacheMap);\n        when(context.getLocaleChain()).thenReturn(List.of(locale1));\n\n        // When\n        String result = fakeValuesService.fetchObject(key, context);\n\n        // Then\n        assertEquals(null, result);\n    }\n}\n"}]