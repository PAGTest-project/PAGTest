[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.Faker;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Locale;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class Locality_displayNameTest {\n    private Locality locality;\n\n    @BeforeEach\n    public void setUp() {\n        Faker faker = new Faker();\n        locality = new Locality(faker);\n    }\n\n    @Test\n    public void testDisplayName() {\n        String displayName = locality.displayName();\n        assertNotNull(displayName);\n        assertFalse(displayName.isEmpty());\n    }\n\n    @Test\n    public void testDisplayNameWithCountry() {\n        String displayName = locality.displayName();\n        Locale locale = Locale.forLanguageTag(locality.localeString());\n        String expectedLanguage = locale.getDisplayLanguage(Locale.ROOT);\n        String expectedCountry = locale.getDisplayCountry(Locale.ROOT);\n        if (!expectedCountry.isEmpty()) {\n            expectedLanguage += \" (\" + expectedCountry + \")\";\n        }\n        assertNotNull(displayName);\n        assertFalse(displayName.isEmpty());\n        if (!expectedCountry.isEmpty()) {\n            assert(displayName.contains(expectedCountry));\n        }\n    }\n\n    @Test\n    public void testDisplayNameFallback() {\n        // Force a locale that might not have a display name\n        String displayName = locality.displayName();\n        assertNotNull(displayName);\n        assertFalse(displayName.isEmpty());\n        assert(displayName.equals(Locale.ENGLISH.getDisplayLanguage(Locale.ROOT)));\n    }\n}\n"}]