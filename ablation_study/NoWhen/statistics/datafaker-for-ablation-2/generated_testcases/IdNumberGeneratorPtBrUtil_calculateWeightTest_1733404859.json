[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers.pt.br;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class IdNumberGeneratorPtBrUtil_calculateWeightTest {\n\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = new BaseProviders() {\n            @Override\n            public String toString() {\n                return \"MockFaker\";\n            }\n\n            @Override\n            public void addUrl(Locale locale, URL url) {\n                // Dummy implementation to satisfy the abstract method\n            }\n        };\n    }\n\n    @Test\n    public void testCalculateWeightCNPJ() {\n        String cnpj = IdNumberGeneratorPtBrUtil.cnpj(faker, false, true, false);\n        int weight = 9;\n        int start = 4;\n        int end = 12;\n        int expectedSum = calculateExpectedSum(cnpj, weight, start, end);\n        assertEquals(expectedSum, IdNumberGeneratorPtBrUtil.calculateWeight(cnpj, weight, start, end));\n    }\n\n    @Test\n    public void testCalculateWeightCPF() {\n        String cpf = IdNumberGeneratorPtBrUtil.cpf(faker, false, true);\n        int weight = 10;\n        int start = 0;\n        int end = 9;\n        int expectedSum = calculateExpectedSum(cpf, weight, start, end);\n        assertEquals(expectedSum, IdNumberGeneratorPtBrUtil.calculateWeight(cpf, weight, start, end));\n    }\n\n    private int calculateExpectedSum(String num, int weight, int start, int end) {\n        int sum = 0;\n        int weightAux = weight;\n        for (int index = start; index < end; index++) {\n            sum += (num.charAt(index) - '0') * weightAux--;\n        }\n        return sum;\n    }\n}\n"}]