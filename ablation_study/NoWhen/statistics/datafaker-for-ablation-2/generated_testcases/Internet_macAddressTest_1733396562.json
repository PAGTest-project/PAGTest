[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Internet_macAddressTest {\n\n    @Test\n    public void testMacAddressWithNullPrefix() {\n        Internet internet = new Internet(null);\n        String result = internet.macAddress(null);\n        assertEquals(17, result.length());\n        assertTrue(result.matches(\"([0-9a-f]{2}:){5}[0-9a-f]{2}\"));\n    }\n\n    @Test\n    public void testMacAddressWithEmptyPrefix() {\n        Internet internet = new Internet(null);\n        String result = internet.macAddress(\"\");\n        assertEquals(17, result.length());\n        assertTrue(result.matches(\"([0-9a-f]{2}:){5}[0-9a-f]{2}\"));\n    }\n\n    @Test\n    public void testMacAddressWithValidPrefix() {\n        Internet internet = new Internet(null);\n        String result = internet.macAddress(\"00:1A:2B\");\n        assertEquals(17, result.length());\n        assertTrue(result.startsWith(\"00:1A:2B\"));\n        assertTrue(result.matches(\"00:1A:2B:([0-9a-f]{2}:){2}[0-9a-f]{2}\"));\n    }\n}\n"}]