[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class Aws_albARNTest {\n    private Aws aws;\n\n    @BeforeEach\n    public void setUp() {\n        BaseProviders faker = new BaseProviders() {};\n        aws = new Aws(faker);\n    }\n\n    @Test\n    void testAlbARN() {\n        String albARN = aws.albARN();\n        assertThat(albARN).matches(\"^arn:aws:elasticloadbalancing:\\\\w+-\\\\w+-\\\\d:\\\\d{10}:loadbalancer/app/[\\\\w\\\\-]+/[\\\\w\\\\-]+$\");\n    }\n\n    @Test\n    void testAlbTargetGroupARN() {\n        String albTargetGroupARN = aws.albTargetGroupARN();\n        assertThat(albTargetGroupARN).matches(\"^arn:aws:elasticloadbalancing:\\\\w+-\\\\w+-\\\\d:\\\\d{10}:targetgroup/[\\\\w\\\\-]+/[\\\\w\\\\-]+$\");\n    }\n\n    @Test\n    void testAcmARN() {\n        String acmARN = aws.acmARN();\n        assertThat(acmARN).matches(\"^arn:aws:acm:\\\\w+-\\\\w+-\\\\d:\\\\d{10}:certificate/[\\\\w\\\\-]+$\");\n    }\n\n    @Test\n    void testRoute53ZoneId() {\n        String route53ZoneId = aws.route53ZoneId();\n        assertThat(route53ZoneId).matches(\"^[A-Z]{21}$\");\n    }\n}\n"}]