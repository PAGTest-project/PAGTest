[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.Random;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class RandomService_hexTest {\n    private RandomService randomService;\n\n    @BeforeEach\n    public void setUp() {\n        randomService = new RandomService();\n    }\n\n    @Test\n    public void testHexWithLengthZero() {\n        assertEquals(\"\", randomService.hex(0, true));\n        assertEquals(\"\", randomService.hex(0, false));\n    }\n\n    @Test\n    public void testHexWithPositiveLengthUppercase() {\n        String hexString = randomService.hex(8, true);\n        assertEquals(8, hexString.length());\n        assertTrue(hexString.matches(\"^[0-9A-F]{8}$\"));\n    }\n\n    @Test\n    public void testHexWithPositiveLengthLowercase() {\n        String hexString = randomService.hex(8, false);\n        assertEquals(8, hexString.length());\n        assertTrue(hexString.matches(\"^[0-9a-f]{8}$\"));\n    }\n\n    @Test\n    public void testHexWithCustomRandom() {\n        Random customRandom = new Random(12345L);\n        RandomService customRandomService = new RandomService(customRandom);\n        String hexString = customRandomService.hex(8, true);\n        assertEquals(8, hexString.length());\n        assertTrue(hexString.matches(\"^[0-9A-F]{8}$\"));\n    }\n}\n"}]