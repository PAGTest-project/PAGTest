[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.sql.Timestamp;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DateAndTime_betweenTest {\n    private DateAndTime dateAndTime;\n\n    @BeforeEach\n    public void setUp() {\n        BaseProviders faker = new BaseProviders();\n        dateAndTime = new DateAndTime(faker);\n    }\n\n    @Test\n    public void testBetweenValidRange() {\n        Timestamp from = new Timestamp(System.currentTimeMillis() - 1000000);\n        Timestamp to = new Timestamp(System.currentTimeMillis() + 1000000);\n\n        Timestamp result = dateAndTime.between(from, to);\n\n        assertTrue(result.after(from) || result.equals(from));\n        assertTrue(result.before(to) || result.equals(to));\n    }\n\n    @Test\n    public void testBetweenEqualDates() {\n        Timestamp from = new Timestamp(System.currentTimeMillis());\n        Timestamp to = new Timestamp(System.currentTimeMillis());\n\n        Timestamp result = dateAndTime.between(from, to);\n\n        assertEquals(from, result);\n    }\n\n    @Test\n    public void testBetweenInvalidRange() {\n        Timestamp from = new Timestamp(System.currentTimeMillis() + 1000000);\n        Timestamp to = new Timestamp(System.currentTimeMillis() - 1000000);\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            dateAndTime.between(from, to);\n        });\n    }\n}\n"}]