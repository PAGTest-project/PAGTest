[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static net.datafaker.transformations.Field.field;\nimport java.util.Arrays;\n\nclass FakeValuesService_jsonaTest {\n\n    @Test\n    void testJsona_validInput() {\n        FakeValuesService fakeValuesService = new FakeValuesService();\n        String result = fakeValuesService.jsona(\"3\", \"name\", \"John\", \"2\", \"age\", \"30\", \"1\", \"isActive\", \"true\");\n        assertNotNull(result);\n        assertTrue(result.contains(\"John\"));\n        assertTrue(result.contains(\"30\"));\n        assertTrue(result.contains(\"true\"));\n    }\n\n    @Test\n    void testJsona_invalidInput() {\n        FakeValuesService fakeValuesService = new FakeValuesService();\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            fakeValuesService.jsona(\"1\", \"name\", \"John\", \"2\", \"age\", \"30\");\n        });\n        String expectedMessage = \"Total number of field names and field values should be dividable by 3\";\n        assertTrue(exception.getMessage().contains(expectedMessage));\n    }\n\n    @Test\n    void testJsona_nullFieldExpression() {\n        FakeValuesService fakeValuesService = new FakeValuesService();\n        String result = fakeValuesService.jsona(\"0\", \"name\", null, \"2\", \"age\", \"30\", \"1\", \"isActive\", \"true\");\n        assertNotNull(result);\n        assertTrue(result.contains(\"null\"));\n        assertTrue(result.contains(\"30\"));\n        assertTrue(result.contains(\"true\"));\n    }\n}\n"}]