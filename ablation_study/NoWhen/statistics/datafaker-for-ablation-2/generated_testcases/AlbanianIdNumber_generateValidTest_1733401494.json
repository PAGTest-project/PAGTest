[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.Faker;\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.IdNumber.IdNumberRequest;\nimport net.datafaker.providers.base.PersonIdNumber;\nimport net.datafaker.providers.base.PersonIdNumber.Gender;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class AlbanianIdNumber_generateValidTest {\n    private AlbanianIdNumber generator;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        generator = new AlbanianIdNumber();\n        faker = new Faker();\n    }\n\n    @Test\n    public void testGenerateValid() {\n        IdNumberRequest request = new IdNumberRequest(LocalDate.of(1990, 5, 15), Gender.MALE);\n\n        PersonIdNumber idNumber = generator.generateValid(faker, request);\n\n        assertNotNull(idNumber);\n        assertEquals(LocalDate.of(1990, 5, 15), idNumber.getBirthDate());\n        assertEquals(Gender.MALE, idNumber.getGender());\n        assertNotNull(idNumber.getIdNumber());\n    }\n\n    @Test\n    public void testGenerateValidFemale() {\n        IdNumberRequest request = new IdNumberRequest(LocalDate.of(1985, 10, 20), Gender.FEMALE);\n\n        PersonIdNumber idNumber = generator.generateValid(faker, request);\n\n        assertNotNull(idNumber);\n        assertEquals(LocalDate.of(1985, 10, 20), idNumber.getBirthDate());\n        assertEquals(Gender.FEMALE, idNumber.getGender());\n        assertNotNull(idNumber.getIdNumber());\n    }\n\n    @Test\n    public void testGenerateValidChecksum() {\n        IdNumberRequest request = new IdNumberRequest(LocalDate.of(1975, 3, 25), Gender.MALE);\n\n        PersonIdNumber idNumber = generator.generateValid(faker, request);\n\n        assertNotNull(idNumber);\n        String basePart = idNumber.getIdNumber().substring(0, idNumber.getIdNumber().length() - 1);\n        char expectedChecksum = generator.checksum(basePart);\n        assertEquals(expectedChecksum, idNumber.getIdNumber().charAt(idNumber.getIdNumber().length() - 1));\n    }\n}\n"}]