[{"strategy": "retry", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Locale;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass FakeValuesGrouping_addTest {\n\n    @Test\n    void testAddWithFakeValues() {\n        FakeValuesGrouping grouping = new FakeValuesGrouping();\n        FakeValues fakeValue = FakeValues.of(FakeValuesContext.of(Locale.ENGLISH, \"file\", \"path\"));\n\n        grouping.add(fakeValue);\n\n        assertNotNull(grouping.get(\"path\"));\n    }\n\n    @Test\n    void testAddWithFakeValuesGrouping() {\n        FakeValuesGrouping grouping1 = new FakeValuesGrouping();\n        FakeValuesGrouping grouping2 = new FakeValuesGrouping();\n        FakeValues fakeValue = FakeValues.of(FakeValuesContext.of(Locale.ENGLISH, \"file\", \"path\"));\n        grouping2.add(fakeValue);\n\n        grouping1.add(grouping2);\n\n        assertNotNull(grouping1.get(\"path\"));\n    }\n\n    @Test\n    void testAddWithUnsupportedType() {\n        FakeValuesGrouping grouping = new FakeValuesGrouping();\n        FakeValuesInterface unsupportedValue = new FakeValuesInterface() {\n            @Override\n            public Object get(String key) {\n                return null;\n            }\n        };\n\n        Exception exception = assertThrows(RuntimeException.class, () -> {\n            grouping.add(unsupportedValue);\n        });\n\n        String expectedMessage = \"net.datafaker.service.FakeValuesGrouping_addTest$1 not supported (please raise an issue)\";\n        String actualMessage = exception.getMessage();\n\n        assertTrue(actualMessage.contains(expectedMessage));\n    }\n}\n"}]