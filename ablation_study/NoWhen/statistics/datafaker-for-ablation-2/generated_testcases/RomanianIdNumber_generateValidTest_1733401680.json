[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.Faker;\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.IdNumber.IdNumberRequest;\nimport net.datafaker.providers.base.PersonIdNumber;\nimport net.datafaker.providers.base.PersonIdNumber.Gender;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class RomanianIdNumber_generateValidTest {\n    private RomanianIdNumber impl;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        impl = new RomanianIdNumber();\n        faker = new Faker();\n    }\n\n    @Test\n    void testGenerateValid() {\n        IdNumberRequest request = new IdNumberRequest(0, 0, null);\n        PersonIdNumber result = impl.generateValid(faker, request);\n\n        assertNotNull(result);\n        assertNotNull(result.getIdNumber());\n        assertNotNull(result.getBirthday());\n        assertNotNull(result.getGender());\n\n        String basePart = impl.basePart(faker, result.getBirthday(), result.getGender());\n        int expectedChecksum = impl.checksum(basePart);\n        String expectedIdNumber = basePart + expectedChecksum;\n\n        assertEquals(expectedIdNumber, result.getIdNumber());\n    }\n\n    @Test\n    void testGenerateValidWithSpecificBirthdayAndGender() {\n        LocalDate birthday = LocalDate.of(1990, 8, 19);\n        Gender gender = Gender.MALE;\n        IdNumberRequest request = new IdNumberRequest(0, 0, null);\n        request.setBirthday(birthday);\n        request.setGender(gender);\n\n        PersonIdNumber result = impl.generateValid(faker, request);\n\n        assertNotNull(result);\n        assertNotNull(result.getIdNumber());\n        assertEquals(birthday, result.getBirthday());\n        assertEquals(gender, result.getGender());\n\n        String basePart = impl.basePart(faker, birthday, gender);\n        int expectedChecksum = impl.checksum(basePart);\n        String expectedIdNumber = basePart + expectedChecksum;\n\n        assertEquals(expectedIdNumber, result.getIdNumber());\n    }\n}\n"}]