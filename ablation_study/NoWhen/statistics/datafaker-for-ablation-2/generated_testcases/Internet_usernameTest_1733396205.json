[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class Internet_usernameTest {\n\n    @Test\n    public void testUsername() {\n        // Given\n        BaseFaker faker = mock(BaseFaker.class);\n        Name name = mock(Name.class);\n        FakerContext context = mock(FakerContext.class);\n        when(faker.name()).thenReturn(name);\n        when(name.firstName()).thenReturn(\"John\");\n        when(name.lastName()).thenReturn(\"Doe\");\n        when(faker.getContext()).thenReturn(context);\n        when(context.getLocale()).thenReturn(java.util.Locale.ENGLISH);\n\n        Internet internet = new Internet(faker);\n\n        // When\n        String result = internet.username();\n\n        // Then\n        assertEquals(\"john.doe\", result);\n    }\n\n    @Test\n    public void testUsernameWithSpecialCharacters() {\n        // Given\n        BaseFaker faker = mock(BaseFaker.class);\n        Name name = mock(Name.class);\n        FakerContext context = mock(FakerContext.class);\n        when(faker.name()).thenReturn(name);\n        when(name.firstName()).thenReturn(\"O'Reilly\");\n        when(name.lastName()).thenReturn(\"Smith\");\n        when(faker.getContext()).thenReturn(context);\n        when(context.getLocale()).thenReturn(java.util.Locale.ENGLISH);\n\n        Internet internet = new Internet(faker);\n\n        // When\n        String result = internet.username();\n\n        // Then\n        assertEquals(\"oreilly.smith\", result);\n    }\n}\n"}]