[{"file_path": "src/test/java/org/openapitools/openapidiff/core/output/ConsoleRender_titleTest.java", "testclass_name": "ConsoleRender_titleTest", "dependencies": ["package org.openapitools.openapidiff.core.output;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "ConsoleRender_titleTest", "description": "Unit test for the title rendering functionality of the ConsoleRender class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testTitle", "primary_tested": ["ConsoleRender.title(String,char)"], "external_dependencies": {"modules": ["ConsoleRender"]}, "category": "unit", "description": "Tests the rendering of a title using the ConsoleRender class."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/output/AsciidocRender_bigTitleTest.java", "testclass_name": "AsciidocRender_bigTitleTest", "dependencies": ["package org.openapitools.openapidiff.core.output;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "AsciidocRender_bigTitleTest", "description": "Unit test for the bigTitle method in AsciidocRender.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testBigTitle", "primary_tested": ["AsciidocRender.bigTitle(String,String)"], "external_dependencies": {"modules": ["AsciidocRender"]}, "category": "unit", "description": "Tests the bigTitle method of AsciidocRender to ensure it formats the title correctly."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedResponse_hashCodeTest.java", "testclass_name": "ChangedResponse_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.responses.ApiResponse;", "import org.junit.jupiter.api.Test;"], "name": "ChangedResponse_hashCodeTest", "description": "Unit tests for the hashCode method in the ChangedResponse class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedResponse.hashCode()"], "external_dependencies": {"modules": ["ApiResponse", "DiffContext", "ChangedResponse"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of the ChangedResponse class to ensure it produces consistent results for identical instances."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/PendingChanged_whenSetTest.java", "testclass_name": "PendingChanged_whenSetTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import java.util.Optional;", "import java.util.function.Consumer;", "import org.junit.jupiter.api.Test;"], "name": "PendingChanged_whenSetTest", "description": "Tests for the behavior of the PendingChanged class when the 'whenSet' method is invoked.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testWhenSet_ValueNotSet", "primary_tested": ["PendingChanged.whenSet(Consumer<Optional<String>>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the behavior of the 'whenSet' method when the value is not set."}, {"name": "testWhenSet_ValueAlreadySet", "primary_tested": ["PendingChanged.whenSet(Consumer<Optional<String>>)"], "associated_methods": ["PendingChanged.setValue(Optional<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the behavior of the 'whenSet' method when the value is already set."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/PendingChanged_setValueTest.java", "testclass_name": "PendingChanged_setValueTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.*;", "import java.util.Optional;", "import org.junit.jupiter.api.Test;"], "name": "PendingChanged_setValueTest", "description": "Unit tests for the setValue method in the PendingChanged class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testSetValue_FirstTime", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["PendingChanged.isValueSet()", "PendingChanged.isPresent()", "PendingChanged.get()"], "external_dependencies": {"modules": ["PendingChanged", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setValue method when called for the first time, ensuring the value is set and retrievable."}, {"name": "testSetValue_SecondTime", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["PendingChanged.setValue(Optional<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "IllegalStateException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setValue method when called a second time, expecting an IllegalStateException to be thrown."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/DeferredBuilder_buildTest.java", "testclass_name": "DeferredBuilder_buildTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.mockito.Mockito.*;", "import java.util.List;", "import java.util.Optional;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.api.extension.ExtendWith;", "import org.mockito.Mock;", "import org.mockito.junit.jupiter.MockitoExtension;"], "name": "DeferredBuilder_buildTest", "description": "Unit tests for the build method of DeferredBuilder.", "class_members": {"variables": [{"name": "builder", "type": "DeferredBuilder<String>"}, {"name": "deferred1", "type": "DeferredChanged<String>"}, {"name": "deferred2", "type": "DeferredChanged<String>"}, {"name": "pendingChanged", "type": "PendingChanged<List<Optional<? super String>>>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testBuildWithEmptyDeferredValues", "primary_tested": ["DeferredBuilder.build()"], "external_dependencies": {"modules": ["DeferredChanged"], "class_members": [{"name": "builder", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the build method of DeferredBuilder when no deferred values are added."}, {"name": "testBuildWithNonEmptyDeferredValues", "primary_tested": ["DeferredBuilder.build()"], "associated_methods": ["DeferredBuilder.add(DeferredChanged<String>)", "DeferredChanged.whenSet(Object)"], "external_dependencies": {"modules": ["DeferredChanged", "PendingChanged", "List", "Optional"], "class_members": [{"name": "builder", "type": "variable"}, {"name": "deferred1", "type": "variable"}, {"name": "deferred2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the build method of DeferredBuilder when deferred values are added."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/PendingChanged_ifPresentTest.java", "testclass_name": "PendingChanged_ifPresentTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.*;", "import java.util.Optional;", "import java.util.function.Consumer;", "import org.junit.jupiter.api.Test;"], "name": "PendingChanged_ifPresentTest", "description": "Unit tests for the ifPresent method of the PendingChanged class.", "class_members": {"variables": [{"name": "pendingChanged", "type": "PendingChanged<String>"}, {"name": "result", "type": "StringBuilder"}, {"name": "consumer", "type": "Consumer<String>"}]}, "test_cases": [{"name": "testIfPresent_ValueSetAndPresent", "primary_tested": ["PendingChanged.ifPresent(Consumer<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer", "StringBuilder"], "class_members": [{"name": "pendingChanged", "type": "variable"}, {"name": "result", "type": "variable"}, {"name": "consumer", "type": "variable"}]}, "category": "unit", "description": "Tests the ifPresent method when the value is set and present."}, {"name": "testIfPresent_ValueNotSet", "primary_tested": ["PendingChanged.ifPresent(Consumer<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer", "StringBuilder"], "class_members": [{"name": "pendingChanged", "type": "variable"}, {"name": "result", "type": "variable"}, {"name": "consumer", "type": "variable"}]}, "category": "unit", "description": "Tests the ifPresent method when the value is not set."}, {"name": "testIfPresent_ValueSetButNotPresent", "primary_tested": ["PendingChanged.ifPresent(Consumer<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer", "StringBuilder"], "class_members": [{"name": "pendingChanged", "type": "variable"}, {"name": "result", "type": "variable"}, {"name": "consumer", "type": "variable"}]}, "category": "unit", "description": "Tests the ifPresent method when the value is set but not present."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOpenApi_isCoreChangedTest.java", "testclass_name": "ChangedOpenApi_isCoreChangedTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED;", "import java.util.Collections;", "import java.util.List;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;"], "name": "ChangedOpenApi_isCoreChangedTest", "description": "Tests for the ChangedOpenApi class's isCoreChanged method to determine if the OpenAPI core has changed and the nature of those changes.", "class_members": {"variables": [{"name": "changedOpenApi", "type": "ChangedOpenApi"}, {"name": "options", "type": "OpenApiDiffOptions"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testIsCoreChangedNoChanges", "primary_tested": ["ChangedOpenApi.isCoreChanged()"], "external_dependencies": {"modules": ["ChangedOpenApi", "Collections", "DiffResult"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the isCoreChanged method when there are no changes to the endpoints."}, {"name": "testIsCoreChangedCompatible", "primary_tested": ["ChangedOpenApi.isCoreChanged()"], "external_dependencies": {"modules": ["ChangedOpenApi", "Collections", "DiffResult", "Endpoint"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the isCoreChanged method when there are new endpoints but no missing endpoints."}, {"name": "testIsCoreChangedIncompatible", "primary_tested": ["ChangedOpenApi.isCoreChanged()"], "external_dependencies": {"modules": ["ChangedOpenApi", "Collections", "DiffResult", "Endpoint"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the isCoreChanged method when there are missing endpoints."}, {"name": "testIsCoreChangedIncompatibleWithConfig", "primary_tested": ["ChangedOpenApi.isCoreChanged()"], "associated_methods": ["OpenApiDiffOptions.getConfig()"], "external_dependencies": {"modules": ["ChangedOpenApi", "Collections", "DiffResult", "Endpoint", "OpenApiDiffOptions", "CompositeConfiguration", "BackwardIncompatibleProp"], "class_members": [{"name": "changedOpenApi", "type": "variable"}, {"name": "options", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the isCoreChanged method when there are missing endpoints and the configuration is set to consider endpoint decreases as incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedHeaders_equalsTest.java", "testclass_name": "ChangedHeaders_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.headers.Header;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedHeaders_equalsTest", "description": "Unit tests for the equals method in the ChangedHeaders class.", "class_members": {"variables": [{"name": "oldHeaders", "type": "Map<String, Header>"}, {"name": "newHeaders", "type": "Map<String, Header>"}, {"name": "context", "type": "DiffContext"}, {"name": "headers", "type": "ChangedHeaders"}, {"name": "headers1", "type": "ChangedHeaders"}, {"name": "headers2", "type": "ChangedHeaders"}]}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedHeaders.equals(Object)"], "external_dependencies": {"modules": ["ChangedHeaders", "Map", "Header", "DiffContext"], "class_members": [{"name": "oldHeaders", "type": "variable"}, {"name": "newHeaders", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "headers", "type": "variable"}]}, "category": "unit", "description": "Tests the equals method when comparing the same instance."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedHeaders.equals(Object)"], "external_dependencies": {"modules": ["ChangedHeaders", "Map", "Header", "DiffContext"], "class_members": [{"name": "oldHeaders", "type": "variable"}, {"name": "newHeaders", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "headers", "type": "variable"}]}, "category": "unit", "description": "Tests the equals method when comparing with an instance of a different class."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedHeaders.equals(Object)"], "external_dependencies": {"modules": ["ChangedHeaders", "Map", "Header", "DiffContext"], "class_members": [{"name": "oldHeaders", "type": "variable"}, {"name": "newHeaders", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "headers", "type": "variable"}]}, "category": "unit", "description": "Tests the equals method when comparing with a null object."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedHeaders.equals(Object)"], "associated_methods": ["ChangedHeaders.setIncreased(Map<String, Header>)", "ChangedHeaders.setMissing(Map<String, Header>)", "ChangedHeaders.setChanged(Map<String, Header>)", "ChangedHeaders.getIncreased()"], "external_dependencies": {"modules": ["ChangedHeaders", "Map", "Header", "DiffContext"], "class_members": [{"name": "oldHeaders1", "type": "variable"}, {"name": "newHeaders1", "type": "variable"}, {"name": "context1", "type": "variable"}, {"name": "headers1", "type": "variable"}, {"name": "oldHeaders2", "type": "variable"}, {"name": "newHeaders2", "type": "variable"}, {"name": "context2", "type": "variable"}, {"name": "headers2", "type": "variable"}]}, "category": "unit", "description": "Tests the equals method when comparing instances with different fields."}, {"name": "testEquals_SameFields", "primary_tested": ["ChangedHeaders.equals(Object)"], "associated_methods": ["ChangedHeaders.setIncreased(Map<String, Header>)", "ChangedHeaders.setMissing(Map<String, Header>)", "ChangedHeaders.setChanged(Map<String, Header>)"], "external_dependencies": {"modules": ["ChangedHeaders", "Map", "Header", "DiffContext"], "class_members": [{"name": "oldHeaders", "type": "variable"}, {"name": "newHeaders", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "headers1", "type": "variable"}, {"name": "headers2", "type": "variable"}]}, "category": "unit", "description": "Tests the equals method when comparing instances with the same fields."}]}]