[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.output;\n\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.model.ChangedOpenApi;\nimport org.openapitools.openapidiff.core.model.Endpoint;\nimport org.openapitools.openapidiff.core.exception.RendererException;\n\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.Mockito.*;\n\npublic class MarkdownRender_renderTest {\n\n    @Test\n    public void testRender_Successful() throws IOException {\n        // Given\n        ChangedOpenApi diff = mock(ChangedOpenApi.class);\n        OutputStreamWriter outputStreamWriter = mock(OutputStreamWriter.class);\n\n        when(diff.getNewEndpoints()).thenReturn(Collections.emptyList());\n        when(diff.getMissingEndpoints()).thenReturn(Collections.emptyList());\n        when(diff.getDeprecatedEndpoints()).thenReturn(Collections.emptyList());\n        when(diff.getChangedOperations()).thenReturn(Collections.emptyList());\n\n        MarkdownRender markdownRender = new MarkdownRender();\n\n        // When\n        markdownRender.render(diff, outputStreamWriter);\n\n        // Then\n        verify(outputStreamWriter).close();\n    }\n\n    @Test\n    public void testRender_IOException() throws IOException {\n        // Given\n        ChangedOpenApi diff = mock(ChangedOpenApi.class);\n        OutputStreamWriter outputStreamWriter = mock(OutputStreamWriter.class);\n\n        when(diff.getNewEndpoints()).thenReturn(Collections.emptyList());\n        when(diff.getMissingEndpoints()).thenReturn(Collections.emptyList());\n        when(diff.getDeprecatedEndpoints()).thenReturn(Collections.emptyList());\n        when(diff.getChangedOperations()).thenReturn(Collections.emptyList());\n\n        doThrow(new IOException(\"Test Exception\")).when(outputStreamWriter).close();\n\n        MarkdownRender markdownRender = new MarkdownRender();\n\n        // When & Then\n        assertThrows(RendererException.class, () -> markdownRender.render(diff, outputStreamWriter));\n    }\n}\n"}]