[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Optional;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class PendingChanged_setValueTest {\n\n    @Test\n    public void testSetValue_FirstTime() {\n        PendingChanged<String> pendingChanged = new PendingChanged<>();\n        Optional<String> value = Optional.of(\"testValue\");\n\n        pendingChanged.setValue(value);\n\n        assertTrue(pendingChanged.isValueSet());\n        assertTrue(pendingChanged.isPresent());\n        assertEquals(\"testValue\", pendingChanged.get());\n    }\n\n    @Test\n    public void testSetValue_SecondTime() {\n        PendingChanged<String> pendingChanged = new PendingChanged<>();\n        Optional<String> value = Optional.of(\"testValue\");\n        pendingChanged.setValue(value);\n\n        IllegalStateException exception = assertThrows(IllegalStateException.class, () -> {\n            pendingChanged.setValue(value);\n        });\n\n        assertEquals(\"PendingChanged may not be set more than once. Value was already set.\", exception.getMessage());\n    }\n}\n"}]