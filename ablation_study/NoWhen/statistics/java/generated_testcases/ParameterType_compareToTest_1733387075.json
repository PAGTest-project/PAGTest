[{"strategy": "generate", "code": "\npackage io.cucumber.cucumberexpressions;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ParameterType_compareToTest {\n\n    private ParameterType<String> paramType1;\n    private ParameterType<String> paramType2;\n    private ParameterType<String> paramType3;\n    private ParameterType<String> paramType4;\n\n    @BeforeEach\n    public void setUp() {\n        paramType1 = new ParameterType<>(\"name1\", \"regexp1\", String.class, (String arg) -> arg, false, true);\n        paramType2 = new ParameterType<>(\"name2\", \"regexp2\", String.class, (String arg) -> arg, false, false);\n        paramType3 = new ParameterType<>(\"name3\", \"regexp3\", String.class, (String arg) -> arg, false, true);\n        paramType4 = new ParameterType<>(\"name4\", \"regexp4\", String.class, (String arg) -> arg, false, false);\n    }\n\n    @Test\n    public void testCompareTo_PreferForRegexpMatch_True() {\n        assertEquals(-1, paramType1.compareTo(paramType2));\n    }\n\n    @Test\n    public void testCompareTo_PreferForRegexpMatch_False() {\n        assertEquals(1, paramType2.compareTo(paramType1));\n    }\n\n    @Test\n    public void testCompareTo_SamePreferForRegexpMatch_DifferentNames() {\n        assertEquals(-1, paramType1.compareTo(paramType3));\n    }\n\n    @Test\n    public void testCompareTo_SamePreferForRegexpMatch_SameNames() {\n        assertEquals(0, paramType1.compareTo(paramType1));\n    }\n\n    @Test\n    public void testCompareTo_DifferentPreferForRegexpMatch_SameNames() {\n        assertEquals(1, paramType2.compareTo(paramType4));\n    }\n}\n"}]