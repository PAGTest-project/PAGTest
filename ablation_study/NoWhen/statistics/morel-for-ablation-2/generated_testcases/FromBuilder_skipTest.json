[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.ast;\n\nimport net.hydromatic.morel.compile.Environments;\nimport net.hydromatic.morel.type.Binding;\nimport net.hydromatic.morel.type.PrimitiveType;\nimport net.hydromatic.morel.type.TypeSystem;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.math.BigDecimal;\n\nimport static net.hydromatic.morel.ast.CoreBuilder.core;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class FromBuilder_skipTest {\n    private FromBuilder fromBuilder;\n    private TypeSystem typeSystem;\n\n    @BeforeEach\n    public void setUp() {\n        typeSystem = new TypeSystem();\n        fromBuilder = new FromBuilder(typeSystem, Environments.empty());\n    }\n\n    @Test\n    public void testSkipWithZero() {\n        Core.Exp count = core.intLiteral(BigDecimal.ZERO);\n        FromBuilder result = fromBuilder.skip(count);\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testSkipWithNonZero() {\n        Core.Exp count = core.intLiteral(BigDecimal.ONE);\n        FromBuilder result = fromBuilder.skip(count);\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testSkipWithNonLiteral() {\n        Core.IdPat idPat = new Core.IdPat(PrimitiveType.INT, \"count\", 0);\n        Core.Exp count = core.id(idPat);\n        FromBuilder result = fromBuilder.skip(count);\n        assertEquals(fromBuilder, result);\n    }\n}\n"}]