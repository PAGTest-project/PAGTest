[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.ast;\n\nimport net.hydromatic.morel.compile.Environments;\nimport net.hydromatic.morel.type.Binding;\nimport net.hydromatic.morel.type.TypeSystem;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class FromBuilder_orderTest {\n\n    private FromBuilder fromBuilder;\n    private TypeSystem typeSystem;\n\n    @BeforeEach\n    public void setUp() {\n        typeSystem = new TypeSystem();\n        fromBuilder = new FromBuilder(typeSystem, Environments.empty());\n    }\n\n    @Test\n    public void testOrderWithEmptyOrderItems() {\n        FromBuilder result = fromBuilder.order(Collections.emptyList());\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testOrderWithNonEmptyOrderItems() {\n        Core.OrderItem orderItem = new Core.OrderItem(core.id(new Core.IdPat(\"id\")), true);\n        FromBuilder result = fromBuilder.order(Collections.singletonList(orderItem));\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testOrderAndBuildSimplify() {\n        Core.OrderItem orderItem = new Core.OrderItem(core.id(new Core.IdPat(\"id\")), true);\n        fromBuilder.order(Collections.singletonList(orderItem));\n        Core.Exp result = fromBuilder.buildSimplify();\n        assertEquals(core.from(typeSystem, Collections.singletonList(core.order(fromBuilder.bindings(), Collections.singletonList(orderItem)))), result);\n    }\n\n    @Test\n    public void testOrderAndBindings() {\n        Core.OrderItem orderItem = new Core.OrderItem(core.id(new Core.IdPat(\"id\")), true);\n        fromBuilder.order(Collections.singletonList(orderItem));\n        List<Binding> bindings = fromBuilder.bindings();\n        assertEquals(1, bindings.size());\n    }\n}\n"}]