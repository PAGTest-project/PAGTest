[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Pair_zipTest {\n\n    @Test\n    void testZipStrictEqualSize() {\n        List<Integer> ks = Arrays.asList(1, 2, 3);\n        List<String> vs = Arrays.asList(\"a\", \"b\", \"c\");\n        List<Pair<Integer, String>> result = Pair.zip(ks, vs, true);\n        assertEquals(3, result.size());\n        assertEquals(Pair.of(1, \"a\"), result.get(0));\n        assertEquals(Pair.of(2, \"b\"), result.get(1));\n        assertEquals(Pair.of(3, \"c\"), result.get(2));\n    }\n\n    @Test\n    void testZipStrictDifferentSize() {\n        List<Integer> ks = Arrays.asList(1, 2, 3);\n        List<String> vs = Arrays.asList(\"a\", \"b\");\n        assertThrows(AssertionError.class, () -> Pair.zip(ks, vs, true));\n    }\n\n    @Test\n    void testZipNonStrict() {\n        List<Integer> ks = Arrays.asList(1, 2, 3);\n        List<String> vs = Arrays.asList(\"a\", \"b\");\n        List<Pair<Integer, String>> result = Pair.zip(ks, vs, false);\n        assertEquals(2, result.size());\n        assertEquals(Pair.of(1, \"a\"), result.get(0));\n        assertEquals(Pair.of(2, \"b\"), result.get(1));\n    }\n}\n"}]