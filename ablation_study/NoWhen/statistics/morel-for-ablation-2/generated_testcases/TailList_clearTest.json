[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class TailList_clearTest {\n    private List<String> backingList;\n    private TailList<String> tailList;\n\n    @BeforeEach\n    public void setUp() {\n        backingList = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\", \"d\"));\n        tailList = new TailList<>(backingList, 2);\n    }\n\n    @Test\n    public void testClear() {\n        tailList.clear();\n        assertEquals(0, tailList.size());\n        assertEquals(2, backingList.size());\n        assertTrue(backingList.containsAll(Arrays.asList(\"a\", \"b\")));\n    }\n\n    @Test\n    public void testClearAfterAddAll() {\n        tailList.addAll(Arrays.asList(\"e\", \"f\"));\n        tailList.clear();\n        assertEquals(0, tailList.size());\n        assertEquals(2, backingList.size());\n        assertTrue(backingList.containsAll(Arrays.asList(\"a\", \"b\")));\n    }\n\n    @Test\n    public void testClearEmptyList() {\n        TailList<String> emptyTailList = new TailList<>(new ArrayList<>(), 0);\n        emptyTailList.clear();\n        assertEquals(0, emptyTailList.size());\n        assertTrue(emptyTailList.isEmpty());\n    }\n}\n"}]