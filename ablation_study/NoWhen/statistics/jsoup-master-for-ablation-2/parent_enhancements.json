{"XmlTreeBuilder": [{"methods": [], "class": "TreeBuilder"}], "HtmlTreeBuilder": [{"methods": [], "class": "TreeBuilder"}], "CDataNode": [{"methods": [{"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testClone"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "normaliseWhitespace"}, {"method_name": "isBlank()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testBlank"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testTextBean"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitText"}, {"method_name": "getWholeText()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "createFromEncoded(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "createFromEncoded"}, {"method_name": "stripLeadingWhitespace(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "stripLeadingWhitespace"}], "class": "TextNode"}], "PseudoTextElement": [{"methods": [{"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesRoughAttributeString"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "id()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "clearAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "dataNoOverflow"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "parentsNoOverflow"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "wrapNoOverflow"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "elementFunctionalTraverse"}, {"method_name": "cssSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpathFromElement"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canModifyFilteredElements"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}], "class": "Element"}], "Element": [{"methods": [{"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canWrap"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRemoveViaNode"}, {"method_name": "replaceWith(Node)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canReplace"}], "class": "Node"}], "FormElement": [{"methods": [{"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesRoughAttributeString"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "id()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "clearAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "dataNoOverflow"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "parentsNoOverflow"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "wrapNoOverflow"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "elementFunctionalTraverse"}, {"method_name": "cssSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpathFromElement"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canModifyFilteredElements"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}], "class": "Element"}], "Document": [{"methods": [{"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesRoughAttributeString"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "id()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "clearAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "dataNoOverflow"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "parentsNoOverflow"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "wrapNoOverflow"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "elementFunctionalTraverse"}, {"method_name": "cssSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpathFromElement"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canModifyFilteredElements"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}], "class": "Element"}]}