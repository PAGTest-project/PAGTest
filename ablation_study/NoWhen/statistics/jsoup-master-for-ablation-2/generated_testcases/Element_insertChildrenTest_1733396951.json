[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_insertChildrenTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testInsertChildrenValidIndex() {\n        Node child1 = new TextNode(\"Child 1\");\n        Node child2 = new TextNode(\"Child 2\");\n        Collection<Node> children = Arrays.asList(child1, child2);\n\n        element.insertChildren(0, children);\n\n        assertEquals(2, element.childNodeSize());\n        assertEquals(child1, element.child(0));\n        assertEquals(child2, element.child(1));\n    }\n\n    @Test\n    public void testInsertChildrenNegativeIndex() {\n        Node child1 = new TextNode(\"Child 1\");\n        Node child2 = new TextNode(\"Child 2\");\n        Collection<Node> children = Arrays.asList(child1, child2);\n\n        element.appendChild(new TextNode(\"Existing Child\"));\n        element.insertChildren(-1, children);\n\n        assertEquals(3, element.childNodeSize());\n        assertEquals(child1, element.child(1));\n        assertEquals(child2, element.child(2));\n    }\n\n    @Test\n    public void testInsertChildrenOutOfBoundsIndex() {\n        Node child1 = new TextNode(\"Child 1\");\n        Node child2 = new TextNode(\"Child 2\");\n        Collection<Node> children = Arrays.asList(child1, child2);\n\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.insertChildren(2, children);\n        });\n    }\n\n    @Test\n    public void testInsertChildrenNullCollection() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.insertChildren(0, null);\n        });\n    }\n}\n"}]