[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_removeAttributesTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testRemoveAttributes_SingleTagSingleAttribute() {\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        safelist.removeAttributes(\"a\", \"href\");\n\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"href\", \"\")));\n        assertTrue(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"class\", \"\")));\n    }\n\n    @Test\n    public void testRemoveAttributes_SingleTagMultipleAttributes() {\n        safelist.addAttributes(\"a\", \"href\", \"class\", \"id\");\n        safelist.removeAttributes(\"a\", \"href\", \"class\");\n\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"href\", \"\")));\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"class\", \"\")));\n        assertTrue(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"id\", \"\")));\n    }\n\n    @Test\n    public void testRemoveAttributes_AllTagsSingleAttribute() {\n        safelist.addAttributes(\"a\", \"href\");\n        safelist.addAttributes(\"img\", \"src\");\n        safelist.removeAttributes(\":all\", \"href\");\n\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"href\", \"\")));\n        assertTrue(safelist.isSafeAttribute(\"img\", new Element(Tag.valueOf(\"img\"), \"\"), new Attribute(\"src\", \"\")));\n    }\n\n    @Test\n    public void testRemoveAttributes_AllTagsMultipleAttributes() {\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        safelist.addAttributes(\"img\", \"src\", \"class\");\n        safelist.removeAttributes(\":all\", \"href\", \"class\");\n\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"href\", \"\")));\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"class\", \"\")));\n        assertFalse(safelist.isSafeAttribute(\"img\", new Element(Tag.valueOf(\"img\"), \"\"), new Attribute(\"src\", \"\")));\n        assertFalse(safelist.isSafeAttribute(\"img\", new Element(Tag.valueOf(\"img\"), \"\"), new Attribute(\"class\", \"\")));\n    }\n\n    @Test\n    public void testRemoveAttributes_TagNotAllowed() {\n        safelist.removeAttributes(\"a\", \"href\");\n\n        assertFalse(safelist.isSafeAttribute(\"a\", new Element(Tag.valueOf(\"a\"), \"\"), new Attribute(\"href\", \"\")));\n    }\n\n    @Test\n    public void testRemoveAttributes_NoAttributesSupplied() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeAttributes(\"a\");\n        });\n    }\n\n    @Test\n    public void testRemoveAttributes_EmptyTag() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeAttributes(\"\", \"href\");\n        });\n    }\n\n    @Test\n    public void testRemoveAttributes_NullTag() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeAttributes(null, \"href\");\n        });\n    }\n\n    @Test\n    public void testRemoveAttributes_NullAttributes() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeAttributes(\"a\", (String[]) null);\n        });\n    }\n\n    @Test\n    public void testRemoveAttributes_EmptyAttribute() {\n        safelist.addAttributes(\"a\", \"href\");\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.removeAttributes(\"a\", \"\");\n        });\n    }\n}\n"}]