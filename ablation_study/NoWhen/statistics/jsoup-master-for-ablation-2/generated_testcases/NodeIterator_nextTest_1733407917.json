[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.NoSuchElementException;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeIterator_nextTest {\n    private String html;\n\n    @BeforeEach\n    public void setUp() {\n        html = \"<html><head></head><body><div id=\\\"1\\\"><p>One</p><p>Two</p></div><div id=\\\"2\\\"><p>Three</p><p>Four</p></div></body></html>\";\n    }\n\n    @Test\n    public void testNextWithValidNode() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        assertNotNull(it.next());\n    }\n\n    @Test\n    public void testNextThrowsNoSuchElementException() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        while (it.hasNext()) {\n            it.next();\n        }\n        assertThrows(NoSuchElementException.class, it::next);\n    }\n\n    @Test\n    public void testNextUpdatesStateCorrectly() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        Node firstNode = it.next();\n        Node secondNode = it.next();\n        assertNotEquals(firstNode, secondNode);\n        assertNotEquals(firstNode.parent(), secondNode.parent());\n    }\n\n    @Test\n    public void testNextWithRestart() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        Node firstNode = it.next();\n        it.restart(doc.body());\n        Node restartedNode = it.next();\n        assertNotEquals(firstNode, restartedNode);\n    }\n\n    private void assertIterates(NodeIterator<Node> it, String expected) {\n        StringBuilder actual = new StringBuilder();\n        while (it.hasNext()) {\n            Node node = it.next();\n            actual.append(node.nodeName()).append(\";\");\n        }\n        assertEquals(expected, actual.toString());\n    }\n}\n"}]