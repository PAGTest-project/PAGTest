[{"strategy": "generate", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_resolveTest {\n\n    @Test\n    void testResolveWithValidRelativeUrl() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"?foo\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/path/file?foo\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithInvalidRelativeUrl() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"?foo\\u0000\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/path/file?foo\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithControlChars() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"?foo\\u0001\\u0002\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/path/file?foo\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithAnchor() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"#anchor\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/path/file#anchor\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithDotSegments() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"./foo\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/path/foo\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithEmptyRelativeUrl() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://example.com/path/file\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithAbsoluteUrl() throws MalformedURLException {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"http://another.com/path\";\n        URL resolvedUrl = StringUtil.resolve(base, relUrl);\n        assertEquals(\"http://another.com/path\", resolvedUrl.toString());\n    }\n\n    @Test\n    void testResolveWithInvalidBaseUrl() {\n        URL base = null;\n        String relUrl = \"http://another.com/path\";\n        assertThrows(NullPointerException.class, () -> StringUtil.resolve(base, relUrl));\n    }\n\n    @Test\n    void testResolveWithInvalidRelativeUrlThrowsException() {\n        URL base = new URL(\"http://example.com/path/file\");\n        String relUrl = \"http://another.com/path\\u0000\";\n        assertThrows(MalformedURLException.class, () -> StringUtil.resolve(base, relUrl));\n    }\n}\n"}]