[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_cssSelectorTest {\n\n    private Document doc;\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        String html = \"<body><div id='uniqueId'><p>One</p></div><div class='class1'><p>Two</p></div></body>\";\n        doc = Jsoup.parse(html);\n        element = doc.selectFirst(\"div\");\n    }\n\n    @Test\n    public void testCssSelectorWithId() {\n        Element divWithId = doc.selectFirst(\"div#uniqueId\");\n        assertNotNull(divWithId);\n        assertEquals(\"#uniqueId\", divWithId.cssSelector());\n    }\n\n    @Test\n    public void testCssSelectorWithoutId() {\n        Element divWithoutId = doc.selectFirst(\"div.class1\");\n        assertNotNull(divWithoutId);\n        assertEquals(\"div.class1\", divWithoutId.cssSelector());\n    }\n\n    @Test\n    public void testCssSelectorWithNonUniqueId() {\n        String html = \"<body><div id='nonUniqueId'><p>One</p></div><div id='nonUniqueId'><p>Two</p></div></body>\";\n        Document doc = Jsoup.parse(html);\n        Element div = doc.selectFirst(\"div#nonUniqueId\");\n        assertNotNull(div);\n        assertNotEquals(\"#nonUniqueId\", div.cssSelector()); // Non-unique ID should not return the ID selector\n    }\n\n    @Test\n    public void testCssSelectorWithNoOwnerDocument() {\n        Element div = new Element(\"div\").attr(\"id\", \"noDocId\");\n        assertEquals(\"#noDocId\", div.cssSelector());\n    }\n\n    @Test\n    public void testCssSelectorWithNestedElements() {\n        Element nestedDiv = doc.selectFirst(\"div#uniqueId p\");\n        assertNotNull(nestedDiv);\n        assertEquals(\"div#uniqueId p\", nestedDiv.cssSelector());\n    }\n\n    @Test\n    public void testCssSelectorWithMultipleClasses() {\n        String html = \"<body><div class='class1 class2'><p>One</p></div></body>\";\n        Document doc = Jsoup.parse(html);\n        Element div = doc.selectFirst(\"div.class1.class2\");\n        assertNotNull(div);\n        assertEquals(\"div.class1.class2\", div.cssSelector());\n    }\n\n    @Test\n    public void testCssSelectorWithNoAttributes() {\n        Element div = new Element(\"div\");\n        assertEquals(\"div\", div.cssSelector());\n    }\n}\n"}]