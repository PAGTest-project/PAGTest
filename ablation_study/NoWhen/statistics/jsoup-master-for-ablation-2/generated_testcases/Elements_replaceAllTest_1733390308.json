[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.function.UnaryOperator;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_replaceAllTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div id='1'>One</div><div id='2'>Two</div><div id='3'>Three</div>\");\n        elements = new Elements(doc.select(\"div\"));\n    }\n\n    @Test\n    public void testReplaceAllWithIdentityOperator() {\n        UnaryOperator<Element> identityOperator = UnaryOperator.identity();\n        elements.replaceAll(identityOperator);\n        assertEquals(3, elements.size());\n        assertEquals(\"One\", elements.get(0).text());\n        assertEquals(\"Two\", elements.get(1).text());\n        assertEquals(\"Three\", elements.get(2).text());\n    }\n\n    @Test\n    public void testReplaceAllWithTextModificationOperator() {\n        UnaryOperator<Element> textModificationOperator = element -> {\n            element.text(\"Modified\");\n            return element;\n        };\n        elements.replaceAll(textModificationOperator);\n        assertEquals(3, elements.size());\n        assertEquals(\"Modified\", elements.get(0).text());\n        assertEquals(\"Modified\", elements.get(1).text());\n        assertEquals(\"Modified\", elements.get(2).text());\n    }\n\n    @Test\n    public void testReplaceAllWithAttributeModificationOperator() {\n        UnaryOperator<Element> attributeModificationOperator = element -> {\n            element.attr(\"data-test\", \"true\");\n            return element;\n        };\n        elements.replaceAll(attributeModificationOperator);\n        assertEquals(3, elements.size());\n        assertTrue(elements.get(0).hasAttr(\"data-test\"));\n        assertTrue(elements.get(1).hasAttr(\"data-test\"));\n        assertTrue(elements.get(2).hasAttr(\"data-test\"));\n    }\n\n    @Test\n    public void testReplaceAllWithElementRemovalOperator() {\n        UnaryOperator<Element> elementRemovalOperator = element -> {\n            if (element.id().equals(\"2\")) {\n                return null;\n            }\n            return element;\n        };\n        elements.replaceAll(elementRemovalOperator);\n        assertEquals(2, elements.size());\n        assertEquals(\"One\", elements.get(0).text());\n        assertEquals(\"Three\", elements.get(1).text());\n    }\n}\n"}]