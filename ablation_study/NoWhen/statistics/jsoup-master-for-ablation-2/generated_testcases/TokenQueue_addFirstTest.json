[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_addFirstTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"initialQueue\");\n    }\n\n    @Test\n    public void testAddFirst() {\n        tokenQueue.addFirst(\"prepended\");\n        assertEquals(\"prependedinitialQueue\", tokenQueue.toString());\n    }\n\n    @Test\n    public void testAddFirstEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        tokenQueue.addFirst(\"prepended\");\n        assertEquals(\"prepended\", tokenQueue.toString());\n    }\n\n    @Test\n    public void testAddFirstWithConsume() {\n        tokenQueue.consume(\"initial\");\n        tokenQueue.addFirst(\"prepended\");\n        assertEquals(\"prependedQueue\", tokenQueue.toString());\n    }\n\n    @Test\n    public void testAddFirstWithConsumeTo() {\n        tokenQueue.consumeTo(\"Queue\");\n        tokenQueue.addFirst(\"prepended\");\n        assertEquals(\"prependedQueue\", tokenQueue.toString());\n    }\n\n    @Test\n    public void testAddFirstWithMatches() {\n        tokenQueue.addFirst(\"prepended\");\n        assertTrue(tokenQueue.matches(\"prependedinitialQueue\"));\n    }\n\n    @Test\n    public void testAddFirstWithExceptionHandling() {\n        tokenQueue.consume(\"initial\");\n        tokenQueue.addFirst(\"prepended\");\n        try {\n            tokenQueue.consume(\"invalid\");\n            fail(\"should have thrown IllegalStateException\");\n        } catch (IllegalStateException expected) {\n            assertEquals(\"Queue did not match expected sequence\", expected.getMessage());\n        }\n    }\n}\n"}]