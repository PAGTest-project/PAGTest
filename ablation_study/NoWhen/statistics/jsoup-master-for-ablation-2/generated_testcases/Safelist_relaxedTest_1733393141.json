[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_relaxedTest {\n\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = Safelist.relaxed();\n    }\n\n    @Test\n    public void testRelaxed_isSafeTag() {\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"img\"));\n        assertFalse(safelist.isSafeTag(\"script\"));\n    }\n\n    @Test\n    public void testRelaxed_isSafeAttribute() {\n        Element element = new Element(Tag.valueOf(\"a\"), \"\");\n        Attribute hrefAttr = new Attribute(\"href\", \"http://example.com\");\n        Attribute invalidAttr = new Attribute(\"onclick\", \"alert('xss')\");\n\n        assertTrue(safelist.isSafeAttribute(\"a\", element, hrefAttr));\n        assertFalse(safelist.isSafeAttribute(\"a\", element, invalidAttr));\n    }\n\n    @Test\n    public void testRelaxed_getEnforcedAttributes() {\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertTrue(enforcedAttributes.isEmpty());\n    }\n\n    @Test\n    public void testRelaxed_addTags() {\n        safelist.addTags(\"customTag\");\n        assertTrue(safelist.isSafeTag(\"customTag\"));\n    }\n\n    @Test\n    public void testRelaxed_addAttributes() {\n        safelist.addAttributes(\"a\", \"customAttr\");\n        Element element = new Element(Tag.valueOf(\"a\"), \"\");\n        Attribute customAttr = new Attribute(\"customAttr\", \"value\");\n        assertTrue(safelist.isSafeAttribute(\"a\", element, customAttr));\n    }\n}\n"}]