[{"strategy": "retry", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_paddingTest {\n\n    @Test\n    public void testPaddingWithValidWidth() {\n        assertEquals(\"   \", StringUtil.padding(3, -1));\n        assertEquals(\"                    \", StringUtil.padding(20, -1));\n    }\n\n    @Test\n    public void testPaddingWithMaxPaddingWidth() {\n        assertEquals(\"          \", StringUtil.padding(10, 10));\n        assertEquals(\"                    \", StringUtil.padding(25, 20));\n    }\n\n    @Test\n    public void testPaddingWithUnlimitedMaxPaddingWidth() {\n        assertEquals(\"                              \", StringUtil.padding(30, -1));\n        assertEquals(\"                                   \", StringUtil.padding(31, -1));\n    }\n\n    @Test\n    public void testPaddingWithZeroWidth() {\n        assertEquals(\"\", StringUtil.padding(0, -1));\n        assertEquals(\"\", StringUtil.padding(0, 10));\n    }\n\n    @Test\n    public void testPaddingWithNegativeWidth() {\n        assertThrows(IllegalArgumentException.class, () -> StringUtil.padding(-1, -1));\n        assertThrows(IllegalArgumentException.class, () -> StringUtil.padding(-1, 10));\n    }\n\n    @Test\n    public void testPaddingWithNegativeMaxPaddingWidth() {\n        assertThrows(IllegalArgumentException.class, () -> StringUtil.padding(10, -2));\n    }\n}\n"}]