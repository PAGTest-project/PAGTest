[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.parser.Parser;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_prependTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testPrependValidHtml() {\n        String html = \"<p>Test</p>\";\n        element.prepend(html);\n        assertEquals(\"<p>Test</p>\", element.html());\n    }\n\n    @Test\n    public void testPrependNullHtml() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.prepend(null);\n        });\n    }\n\n    @Test\n    public void testPrependEmptyHtml() {\n        String html = \"\";\n        element.prepend(html);\n        assertEquals(\"\", element.html());\n    }\n\n    @Test\n    public void testPrependMultipleElements() {\n        String html = \"<p>First</p><p>Second</p>\";\n        element.prepend(html);\n        assertEquals(\"<p>First</p><p>Second</p>\", element.html());\n    }\n\n    @Test\n    public void testPrependWithExistingContent() {\n        element.append(\"<p>Existing</p>\");\n        element.prepend(\"<p>New</p>\");\n        assertEquals(\"<p>New</p><p>Existing</p>\", element.html());\n    }\n\n    @Test\n    public void testPrependTextContent() {\n        String html = \"Text content\";\n        element.prepend(html);\n        assertEquals(\"Text content\", element.text());\n    }\n\n    @Test\n    public void testPrependWithNestedElements() {\n        String html = \"<div><p>Nested</p></div>\";\n        element.prepend(html);\n        assertEquals(\"<div><p>Nested</p></div>\", element.html());\n    }\n\n    @Test\n    public void testPrependWithAttributes() {\n        String html = \"<p class=\\\"test\\\">Test</p>\";\n        element.prepend(html);\n        assertEquals(\"<p class=\\\"test\\\">Test</p>\", element.html());\n    }\n\n    @Test\n    public void testPrependWithSpecialCharacters() {\n        String html = \"<p>&lt;Test&gt;</p>\";\n        element.prepend(html);\n        assertEquals(\"<p>&lt;Test&gt;</p>\", element.html());\n    }\n\n    @Test\n    public void testPrependWithScriptTag() {\n        String html = \"<script>alert('Test');</script>\";\n        element.prepend(html);\n        assertEquals(\"<script>alert('Test');</script>\", element.html());\n    }\n\n    @Test\n    public void testPrependWithStyleTag() {\n        String html = \"<style>body { color: red; }</style>\";\n        element.prepend(html);\n        assertEquals(\"<style>body { color: red; }</style>\", element.html());\n    }\n}\n"}]