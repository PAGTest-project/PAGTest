[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TextNode_splitTextTest {\n    private TextNode textNode;\n\n    @BeforeEach\n    public void setUp() {\n        textNode = new TextNode(\"Hello World\");\n    }\n\n    @Test\n    public void testSplitTextValidOffset() {\n        TextNode tailNode = textNode.splitText(5);\n        assertEquals(\"Hello\", textNode.getWholeText());\n        assertEquals(\" World\", tailNode.getWholeText());\n    }\n\n    @Test\n    public void testSplitTextInvalidNegativeOffset() {\n        assertThrows(IllegalArgumentException.class, () -> textNode.splitText(-1));\n    }\n\n    @Test\n    public void testSplitTextInvalidOffsetGreaterThanLength() {\n        assertThrows(IllegalArgumentException.class, () -> textNode.splitText(12));\n    }\n\n    @Test\n    public void testSplitTextAtZeroOffset() {\n        TextNode tailNode = textNode.splitText(0);\n        assertEquals(\"\", textNode.getWholeText());\n        assertEquals(\"Hello World\", tailNode.getWholeText());\n    }\n\n    @Test\n    public void testSplitTextAtFullLengthOffset() {\n        TextNode tailNode = textNode.splitText(11);\n        assertEquals(\"Hello World\", textNode.getWholeText());\n        assertEquals(\"\", tailNode.getWholeText());\n    }\n}\n"}]