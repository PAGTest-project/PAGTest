[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeToTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"example text for testing\");\n    }\n\n    @Test\n    public void testConsumeToWithMatch() {\n        String result = tokenQueue.consumeTo(\"text\");\n        assertEquals(\"example \", result);\n        assertEquals(8, tokenQueue.pos);\n    }\n\n    @Test\n    public void testConsumeToWithoutMatch() {\n        String result = tokenQueue.consumeTo(\"nonexistent\");\n        assertEquals(\"example text for testing\", result);\n        assertEquals(24, tokenQueue.pos);\n    }\n\n    @Test\n    public void testConsumeToWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        String result = tokenQueue.consumeTo(\"text\");\n        assertEquals(\"\", result);\n        assertEquals(0, tokenQueue.pos);\n    }\n\n    @Test\n    public void testConsumeToWithExactMatch() {\n        tokenQueue = new TokenQueue(\"text\");\n        String result = tokenQueue.consumeTo(\"text\");\n        assertEquals(\"\", result);\n        assertEquals(0, tokenQueue.pos);\n    }\n\n    @Test\n    public void testConsumeToWithMultipleMatches() {\n        tokenQueue = new TokenQueue(\"text text text\");\n        String result = tokenQueue.consumeTo(\"text\");\n        assertEquals(\"\", result);\n        assertEquals(0, tokenQueue.pos);\n    }\n}\n"}]