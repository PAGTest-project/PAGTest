[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"One Two Three\");\n    }\n\n    @Test\n    public void testConsumeValidSequence() {\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"One\");\n        assertEquals(\"Two Three\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testConsumeInvalidSequence() {\n        assertThrows(IllegalStateException.class, () -> tokenQueue.consume(\"Four\"));\n    }\n\n    @Test\n    public void testConsumeSequenceLongerThanRemaining() {\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"One\");\n        assertThrows(IllegalStateException.class, () -> tokenQueue.consume(\"Two Three Four\"));\n    }\n\n    @Test\n    public void testConsumeWithWhitespace() {\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"One\");\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"Two\");\n        assertEquals(\"Three\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testConsumeWord() {\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"One\");\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"Two\");\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"Three\");\n        assertTrue(tokenQueue.isEmpty());\n    }\n}\n"}]