[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_removeEnforcedAttributeTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_ExistingAttribute() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertFalse(enforcedAttributes.hasKey(\"rel\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_NonExistingAttribute() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"href\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertTrue(enforcedAttributes.hasKey(\"rel\"));\n        assertFalse(enforcedAttributes.hasKey(\"href\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_EmptyMapAfterRemoval() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n\n        assertFalse(safelist.getEnforcedAttributes(\"a\").hasKey(\"rel\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_NonExistingTag() {\n        safelist.removeEnforcedAttribute(\"b\", \"rel\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"b\");\n        assertFalse(enforcedAttributes.hasKey(\"rel\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_MultipleAttributes() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.addEnforcedAttribute(\"a\", \"target\", \"_blank\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertFalse(enforcedAttributes.hasKey(\"rel\"));\n        assertTrue(enforcedAttributes.hasKey(\"target\"));\n    }\n}\n"}]