[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.Set;\n\npublic class Element_classNamesTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testClassNamesWithSingleClass() {\n        element.attr(\"class\", \"testClass\");\n        Set<String> classNames = element.classNames();\n        assertEquals(1, classNames.size());\n        assertTrue(classNames.contains(\"testClass\"));\n    }\n\n    @Test\n    public void testClassNamesWithMultipleClasses() {\n        element.attr(\"class\", \"testClass1 testClass2\");\n        Set<String> classNames = element.classNames();\n        assertEquals(2, classNames.size());\n        assertTrue(classNames.contains(\"testClass1\"));\n        assertTrue(classNames.contains(\"testClass2\"));\n    }\n\n    @Test\n    public void testClassNamesWithEmptyClass() {\n        element.attr(\"class\", \"\");\n        Set<String> classNames = element.classNames();\n        assertEquals(0, classNames.size());\n    }\n\n    @Test\n    public void testClassNamesWithWhitespaceOnly() {\n        element.attr(\"class\", \"   \");\n        Set<String> classNames = element.classNames();\n        assertEquals(0, classNames.size());\n    }\n\n    @Test\n    public void testClassNamesAfterAddingClass() {\n        element.attr(\"class\", \"initialClass\");\n        element.addClass(\"addedClass\");\n        Set<String> classNames = element.classNames();\n        assertEquals(2, classNames.size());\n        assertTrue(classNames.contains(\"initialClass\"));\n        assertTrue(classNames.contains(\"addedClass\"));\n    }\n\n    @Test\n    public void testClassNamesAfterRemovingClass() {\n        element.attr(\"class\", \"initialClass toRemoveClass\");\n        element.removeClass(\"toRemoveClass\");\n        Set<String> classNames = element.classNames();\n        assertEquals(1, classNames.size());\n        assertTrue(classNames.contains(\"initialClass\"));\n    }\n}\n"}]