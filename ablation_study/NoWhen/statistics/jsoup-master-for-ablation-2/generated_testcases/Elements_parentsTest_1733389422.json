[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_parentsTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        String html = \"<div id='parent'><div id='child'></div></div>\";\n        Document doc = Jsoup.parse(html);\n        elements = new Elements(doc.select(\"#child\"));\n    }\n\n    @Test\n    public void testParents() {\n        Elements parents = elements.parents();\n        assertEquals(1, parents.size());\n        assertEquals(\"parent\", parents.first().id());\n    }\n\n    @Test\n    public void testParentsWithMultipleChildren() {\n        String html = \"<div id='parent'><div id='child1'></div><div id='child2'></div></div>\";\n        Document doc = Jsoup.parse(html);\n        elements = new Elements(doc.select(\"div[id^=child]\"));\n\n        Elements parents = elements.parents();\n        assertEquals(1, parents.size());\n        assertEquals(\"parent\", parents.first().id());\n    }\n\n    @Test\n    public void testParentsWithNoParents() {\n        String html = \"<div id='root'></div>\";\n        Document doc = Jsoup.parse(html);\n        elements = new Elements(doc.select(\"#root\"));\n\n        Elements parents = elements.parents();\n        assertEquals(0, parents.size());\n    }\n\n    @Test\n    public void testParentsWithNestedStructure() {\n        String html = \"<div id='grandparent'><div id='parent'><div id='child'></div></div></div>\";\n        Document doc = Jsoup.parse(html);\n        elements = new Elements(doc.select(\"#child\"));\n\n        Elements parents = elements.parents();\n        assertEquals(2, parents.size());\n        Set<String> parentIds = new HashSet<>();\n        parents.forEach(parent -> parentIds.add(parent.id()));\n        assertTrue(parentIds.contains(\"parent\"));\n        assertTrue(parentIds.contains(\"grandparent\"));\n    }\n}\n"}]