[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_chompToTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"sample data for testing\");\n    }\n\n    @Test\n    public void testChompToWithExistingSequence() {\n        tokenQueue = new TokenQueue(\"sample data for testing\");\n        String result = tokenQueue.chompTo(\"for\");\n        assertEquals(\"sample data \", result);\n        assertEquals(\"testing\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testChompToWithNonExistingSequence() {\n        tokenQueue = new TokenQueue(\"sample data for testing\");\n        String result = tokenQueue.chompTo(\"nonexistent\");\n        assertEquals(\"sample data for testing\", result);\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testChompToWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        String result = tokenQueue.chompTo(\"any\");\n        assertEquals(\"\", result);\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testChompToWithSequenceAtStart() {\n        tokenQueue = new TokenQueue(\"start data for testing\");\n        String result = tokenQueue.chompTo(\"start\");\n        assertEquals(\"\", result);\n        assertEquals(\" data for testing\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testChompToWithSequenceAtEnd() {\n        tokenQueue = new TokenQueue(\"sample data for end\");\n        String result = tokenQueue.chompTo(\"end\");\n        assertEquals(\"sample data for \", result);\n        assertTrue(tokenQueue.isEmpty());\n    }\n}\n"}]