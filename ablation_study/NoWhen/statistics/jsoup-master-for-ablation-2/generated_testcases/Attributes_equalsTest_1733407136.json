[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_equalsTest {\n    private Attributes attributes1;\n    private Attributes attributes2;\n\n    @BeforeEach\n    public void setUp() {\n        attributes1 = new Attributes();\n        attributes2 = new Attributes();\n    }\n\n    @Test\n    public void testEqualsSameObject() {\n        assertTrue(attributes1.equals(attributes1));\n    }\n\n    @Test\n    public void testEqualsNullObject() {\n        assertFalse(attributes1.equals(null));\n    }\n\n    @Test\n    public void testEqualsDifferentClass() {\n        assertFalse(attributes1.equals(\"not an Attributes object\"));\n    }\n\n    @Test\n    public void testEqualsDifferentSize() {\n        attributes1.put(\"key1\", \"value1\");\n        assertFalse(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsSameKeysDifferentValues() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes2.put(\"key1\", \"value2\");\n        assertFalse(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsSameKeysSameValues() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes2.put(\"key1\", \"value1\");\n        assertTrue(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsDifferentKeysSameValues() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes2.put(\"key2\", \"value1\");\n        assertFalse(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsMultipleKeysSameValues() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n        attributes2.put(\"key1\", \"value1\");\n        attributes2.put(\"key2\", \"value2\");\n        assertTrue(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsMultipleKeysDifferentValues() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n        attributes2.put(\"key1\", \"value1\");\n        attributes2.put(\"key2\", \"value3\");\n        assertFalse(attributes1.equals(attributes2));\n    }\n}\n"}]