[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.TextNode;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_hasTextTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        elements = new Elements();\n    }\n\n    @Test\n    public void testHasTextWithTextNodes() {\n        Element element1 = new Element(\"div\");\n        element1.appendChild(new TextNode(\"Hello\"));\n        elements.add(element1);\n\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithoutTextNodes() {\n        Element element1 = new Element(\"div\");\n        elements.add(element1);\n\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithMixedNodes() {\n        Element element1 = new Element(\"div\");\n        element1.appendChild(new TextNode(\"Hello\"));\n        elements.add(element1);\n\n        Element element2 = new Element(\"div\");\n        elements.add(element2);\n\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithEmptyElements() {\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithMultipleTextNodes() {\n        Element element1 = new Element(\"div\");\n        element1.appendChild(new TextNode(\"Hello\"));\n        elements.add(element1);\n\n        Element element2 = new Element(\"div\");\n        element2.appendChild(new TextNode(\"World\"));\n        elements.add(element2);\n\n        assertTrue(elements.hasText());\n    }\n}\n"}]