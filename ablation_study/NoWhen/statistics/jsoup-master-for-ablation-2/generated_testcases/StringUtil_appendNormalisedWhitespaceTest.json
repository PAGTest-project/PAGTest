[{"strategy": "retry", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_appendNormalisedWhitespaceTest {\n\n    @Test\n    public void testAppendNormalisedWhitespace_NoStripLeading() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"  Hello  World  \", false);\n        assertEquals(\" Hello World \", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_StripLeading() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"  Hello  World  \", true);\n        assertEquals(\"Hello World \", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_EmptyString() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"\", false);\n        assertEquals(\"\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_OnlyWhitespace() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"     \", false);\n        assertEquals(\" \", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_InvisibleChars() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"Hello\\u200BWorld\", false);\n        assertEquals(\"HelloWorld\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_MixedWhitespaceAndInvisibleChars() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"  Hello\\u200B  World\\u200B  \", false);\n        assertEquals(\" Hello World \", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_NewlineAndTab() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"Hello\\n\\tWorld\", false);\n        assertEquals(\"Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_MultipleSpaces() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"Hello      World\", false);\n        assertEquals(\"Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_LeadingWhitespaceStrip() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"   Hello World\", true);\n        assertEquals(\"Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespace_TrailingWhitespaceNoStrip() {\n        StringBuilder accum = new StringBuilder();\n        StringUtil.appendNormalisedWhitespace(accum, \"Hello World   \", false);\n        assertEquals(\"Hello World \", accum.toString());\n    }\n}\n"}]