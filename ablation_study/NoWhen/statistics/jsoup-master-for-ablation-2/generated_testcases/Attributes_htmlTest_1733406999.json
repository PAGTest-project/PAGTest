[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_htmlTest {\n    private Attributes attributes;\n\n    @BeforeEach\n    public void setUp() {\n        attributes = new Attributes();\n    }\n\n    @Test\n    public void testHtml() {\n        attributes.put(\"Tot\", \"a&p\");\n        attributes.put(\"Hello\", \"There\");\n        attributes.put(\"data-name\", \"Jsoup\");\n\n        assertEquals(3, attributes.size());\n        assertTrue(attributes.hasKey(\"Tot\"));\n        assertTrue(attributes.hasKey(\"Hello\"));\n        assertTrue(attributes.hasKey(\"data-name\"));\n        assertFalse(attributes.hasKey(\"tot\"));\n        assertTrue(attributes.hasKeyIgnoreCase(\"tot\"));\n        assertEquals(\"There\", attributes.getIgnoreCase(\"hEllo\"));\n\n        Map<String, String> dataset = attributes.dataset();\n        assertEquals(1, dataset.size());\n        assertEquals(\"Jsoup\", dataset.get(\"name\"));\n        assertEquals(\"\", attributes.get(\"tot\"));\n        assertEquals(\"a&p\", attributes.get(\"Tot\"));\n        assertEquals(\"a&p\", attributes.getIgnoreCase(\"tot\"));\n\n        assertEquals(\" Tot=\\\"a&amp;p\\\" Hello=\\\"There\\\" data-name=\\\"Jsoup\\\"\", attributes.html());\n        assertEquals(attributes.html(), attributes.toString());\n    }\n\n    @Test\n    public void testHtmlWithEmptyAttributes() {\n        assertEquals(\"\", attributes.html());\n        assertEquals(attributes.html(), attributes.toString());\n    }\n\n    @Test\n    public void testHtmlWithSpecialCharacters() {\n        attributes.put(\"key1\", \"value1&\");\n        attributes.put(\"key2\", \"value2<\");\n        attributes.put(\"key3\", \"value3>\");\n\n        assertEquals(\" key1=\\\"value1&amp;\\\" key2=\\\"value2&lt;\\\" key3=\\\"value3&gt;\\\"\", attributes.html());\n        assertEquals(attributes.html(), attributes.toString());\n    }\n\n    @Test\n    public void testHtmlWithLargeAttributes() {\n        StringBuilder largeValue = new StringBuilder();\n        for (int i = 0; i < 1000; i++) {\n            largeValue.append(\"a\");\n        }\n        attributes.put(\"largeKey\", largeValue.toString());\n\n        assertEquals(\" largeKey=\\\"\" + largeValue.toString() + \"\\\"\", attributes.html());\n        assertEquals(attributes.html(), attributes.toString());\n    }\n}\n"}]