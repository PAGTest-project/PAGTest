{"Document": [{"method_name": "select(Evaluator)", "file_path": "src/test/java/org/jsoup/select/SelectorIT.java", "testclass_name": "SelectorIT", "testcase_name": "multiThreadHas"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testConsumeSubQuery"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testQuotedPattern"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "cssAndXpathEquivalents"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "firstChild"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "lastChild"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthChild_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthOfType_unknownTag"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastChild_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthOfType_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastOfType_simple"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthChild_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthOfType_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastChild_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "nthLastOfType_advanced"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "firstOfType"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "lastOfType"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "empty"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "onlyChild"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "onlyOfType"}, {"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/select/CssTest.java", "testclass_name": "CssTest", "testcase_name": "root"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "testHtmlNoPretty"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "stableIndentInBlock"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "controlCharactersAreEscaped"}, {"method_name": "hasText()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "hasTextNoOverflow"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "seesDocRoot"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canStream"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canStreamParallel"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canFindFirst"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canFilter"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "canRemove"}, {"method_name": "stream()", "file_path": "src/test/java/org/jsoup/nodes/NodeStreamTest.java", "testclass_name": "NodeStreamTest", "testcase_name": "elementStream"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpath"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "emptyElementsIfNoResults"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "throwsSelectException"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsLocalname"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "canDitchNamespaces"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "cssAndXpathEquivalents"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectByAttribute"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectOutsideOfElementTree"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "canSupplyAlternateFactoryImpl"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "notNamespaceAware"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsPrefixes"}, {"method_name": "selectXpath(String,Class)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "canSelectTextNodes"}, {"method_name": "outputSettings()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "outputSettings()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapesGtInXmlAttributesButNotInHtml"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksExpectedPoppedElements"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksImplicitPoppedElements"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromFetch"}, {"method_name": "expectFirst(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromXmlFetch"}, {"method_name": "documentType()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksMarkup"}, {"method_name": "nodeStream(Class)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksTableMovedText"}, {"method_name": "body()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAfterPSelfClose"}, {"method_name": "body()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFirstTextnode"}, {"method_name": "forEachNode(Consumer)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksDocument"}, {"method_name": "forEachNode(Consumer)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksDocumentXml"}], "Jsoup": [{"method_name": "clean(String,Safelist)", "file_path": "src/test/java/org/jsoup/integration/SafelistExtensionTest.java", "testclass_name": "SafelistExtensionTest", "testcase_name": "canCustomizeSafeTests"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/parser/ParserTest.java", "testclass_name": "ParserTest", "testcase_name": "testUtf8"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testBrokenHtml5CharsetWithASingleDoubleQuote"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsXmlCharsetDeclaration"}, {"method_name": "parse(InputStream,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesChunkedInputStream"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesIT.java", "testclass_name": "FuzzFixesIT", "testcase_name": "testHtmlParse"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testHtml5Charset"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testXwiki"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "testHtmlParse"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsBOMinFiles"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsUTF8BOM"}, {"method_name": "parse(File,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "supportsZippedUTF8BOM"}, {"method_name": "parse(File,String,String,Parser)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesIT.java", "testclass_name": "FuzzFixesIT", "testcase_name": "testXmlParse"}, {"method_name": "parse(File,String,String,Parser)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "testXmlParse"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "nestedAnchorElements01"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "nestedAnchorElements02"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testWikiExpandedFromString"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testWikiFromString"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "blankAbsAttr"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "bookmark"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "bufferUpInAttributeVal"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleSuperLargeAttributeName"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeText"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeComment"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeCdata"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleLargeTitle"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "cp1252Entities"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testQuotedPattern"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapesGtInXmlAttributesButNotInHtml"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "controlCharactersAreEscaped"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testCharacterReferenceInRcdata"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testBeforeTagName"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testEndTagOpen"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testRcdataLessthanSign"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testRCDATAEndTagName"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testCommentEndCoverage"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testCommentEndBangCoverage"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testPublicIdentifiersWithWhitespace"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testSystemIdentifiersWithWhitespace"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testPublicAndSystemIdentifiersWithWhitespace"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "handlesLessInTagThanAsNewTag"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "rcData"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "plaintext"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "nullInTag"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "attributeValUnquoted"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "canInterruptThenJoinASpawnedThread"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "totalTimeout"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "slowReadOk"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "infiniteReadSupported"}, {"method_name": "newSession()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "newSession()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "newSession()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testLowercaseUtf8Charset"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsGzipFile"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsZGzipFile"}, {"method_name": "parse(File,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesFakeGzipFile"}, {"method_name": "parse(InputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testXwikiExpanded"}, {"method_name": "parse(File)", "file_path": "src/test/java/org/jsoup/integration/ParseTest.java", "testclass_name": "ParseTest", "testcase_name": "testFileParseNoCharsetMethod"}, {"method_name": "execute()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "canInterruptBodyStringRead"}, {"method_name": "execute()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "canInterruptDocumentRead"}, {"method_name": "streamParser()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "streamParserUncheckedExceptionOnTimeoutInStream"}, {"method_name": "streamParser()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "streamParserCheckedExceptionOnTimeoutInSelect"}, {"method_name": "bodyStream()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "remainingAfterFirstRead"}, {"method_name": "bodyStream()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "noLimitAfterFirstRead"}, {"method_name": "bodyStream()", "file_path": "src/test/java/org/jsoup/integration/ConnectIT.java", "testclass_name": "ConnectIT", "testcase_name": "bodyStreamConstrainedViaBufferUp"}, {"method_name": "parse(ByteArrayInputStream,String,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "noExtraNULLBytes"}, {"method_name": "parse(Path,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsGzipPath"}, {"method_name": "parse(Path,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "loadsZGzipPath"}, {"method_name": "parse(Path,String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesFakeGzipPath"}, {"method_name": "connect(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromFetch"}, {"method_name": "connect(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromXmlFetch"}], "Parser": [{"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/ParserIT.java", "testclass_name": "ParserIT", "testcase_name": "testIssue1251"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/integration/FuzzFixesTest.java", "testclass_name": "FuzzFixesTest", "testcase_name": "bookmark"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "handleSuperLargeTagNames"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "cp1252EntitiesProduceError"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "canParseVeryLongBogusComment"}, {"method_name": "parseInput(String,String)", "file_path": "src/test/java/org/jsoup/parser/TokeniserTest.java", "testclass_name": "TokeniserTest", "testcase_name": "canParseCdataEndingAtEdgeOfBuffer"}, {"method_name": "parseBodyFragment(String,String)", "file_path": "src/test/java/org/jsoup/parser/ParserIT.java", "testclass_name": "ParserIT", "testcase_name": "handlesDeepStack"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/parser/ParserTest.java", "testclass_name": "ParserTest", "testcase_name": "unescapeEntities"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/parser/ParserTest.java", "testclass_name": "ParserTest", "testcase_name": "unescapeEntitiesHandlesLargeInput"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "parseHtmlEncodedEmojiMultipoint"}, {"method_name": "unescapeEntities(String,boolean)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "parseHtmlEncodedEmoji"}, {"method_name": "parseFragment(String,String,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testUnconsumeAtBufferBoundary"}, {"method_name": "parseFragment(String,String,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testUnconsumeAfterBufferUp"}, {"method_name": "parseFragment(String,String,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testOpeningAngleBracketInsteadOfAttribute"}, {"method_name": "parseFragment(String,String,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testMalformedSelfClosingTag"}, {"method_name": "parseFragment(String,String,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "testOpeningAngleBracketInTagName"}, {"method_name": "isTrackPosition()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "parserTrackDefaults"}, {"method_name": "setTrackPosition(boolean)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "parserTrackDefaults"}, {"method_name": "parseFragmentInput(String,Element,String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFrag"}], "Validate": [{"method_name": "notNull(Object)", "file_path": "src/test/java/org/jsoup/helper/ValidateTest.java", "testclass_name": "ValidateTest", "testcase_name": "testNotNull"}, {"method_name": "notNull(Object)", "file_path": "src/test/java/org/jsoup/helper/ValidateTest.java", "testclass_name": "ValidateTest", "testcase_name": "stacktraceFiltersOutValidateClass"}, {"method_name": "notNullParam(Object,String)", "file_path": "src/test/java/org/jsoup/helper/ValidateTest.java", "testclass_name": "ValidateTest", "testcase_name": "nonnullParam"}], "HtmlTreeBuilderStateTest": [{"method_name": "findConstantArrays(Class)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "ensureSearchArraysAreSorted"}, {"method_name": "ensureSorted(List)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "ensureSearchArraysAreSorted"}], "HtmlTreeBuilder": [{"method_name": "parse(Reader,String,ParseErrorList)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "nonnull"}], "TreeBuilder": [{"method_name": "getDeclaredAnnotations()", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java", "testclass_name": "HtmlTreeBuilderTest", "testcase_name": "nonnullAssertions"}], "DocumentType": [{"method_name": "DocumentType(String,String,String)", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "constructorValidationOkWithBlankName"}, {"method_name": "DocumentType(String,String,String)", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "constructorValidationThrowsExceptionOnNulls"}, {"method_name": "DocumentType(String,String,String)", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "constructorValidationOkWithBlankPublicAndSystemIds"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "outerHtmlGeneration"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/DocumentTypeTest.java", "testclass_name": "DocumentTypeTest", "testcase_name": "testRoundTrip"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksMarkup"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksXml"}], "Element": [{"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapesGtInXmlAttributesButNotInHtml"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesRoughAttributeString"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesEmptyString"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "canStartWithEq"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesBooleanAttributes"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "dropsSlashFromAttributeName"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemove"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBooleans"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributes"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributesAcrossLines"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributesPositionsDedupes"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributesPositionsDirectionalDedupes"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "handlesNewLinesAndReturns"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "strictAttributeUnescapes"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "moreAttributeUnescapes"}, {"method_name": "attr(String)", "file_path": "src/test/java/org/jsoup/parser/AttributeParseTest.java", "testclass_name": "AttributeParseTest", "testcase_name": "parsesBooleanAttributes"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "id()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "addClass(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "clearAttributes()", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "insertChildren(int,List<Node>)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "testFastReparent"}, {"method_name": "insertChildren(int,List<Node>)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "testFastReparentExistingContent"}, {"method_name": "data()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "dataNoOverflow"}, {"method_name": "parents()", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "parentsNoOverflow"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/ElementIT.java", "testclass_name": "ElementIT", "testcase_name": "wrapNoOverflow"}, {"method_name": "traverse(NodeVisitor)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "elementFunctionalTraverse"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributePositionInFirstElement"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributePositionWithCase"}, {"method_name": "nodeStream()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFrag"}, {"method_name": "cssSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testNestedQuotes"}, {"method_name": "childNode(int)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "testQuotedPattern"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "supportsXpathFromElement"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectOutsideOfElementTree"}, {"method_name": "selectXpath(String)", "file_path": "src/test/java/org/jsoup/select/XpathTest.java", "testclass_name": "XpathTest", "testcase_name": "selectAncestorsOnContextElement"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "letterDigitEntities"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "attributesSize()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemove"}, {"method_name": "text(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canModifyFilteredElements"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksExpectedPoppedElements"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksImplicitPoppedElements"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksMarkup"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksDataNodes"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksXml"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromFetch"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromXmlFetch"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksClosingHtmlTagsInXml"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksClosingHeadingTags"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAfterPSelfClose"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFirstTextnode"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksDocument"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksDocumentXml"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksExpectedPoppedElements"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksImplicitPoppedElements"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksClosingHtmlTagsInXml"}, {"method_name": "endSourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksClosingHeadingTags"}], "TextNode": [{"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testWithSupplementaryCharacter"}, {"method_name": "outerHtml()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "attributes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "hasAttributes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitAnEmbolden"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testClone"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testCloneAfterAttributesHit"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "normaliseWhitespace"}, {"method_name": "isBlank()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testBlank"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testTextBean"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "text()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testHasTextWhenIterating"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitText"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitAnEmbolden"}, {"method_name": "splitText(int)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSplitTextValidation"}, {"method_name": "childNodes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testLeadNodesHaveNoChildren"}, {"method_name": "getWholeText()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testSpaceNormalise"}, {"method_name": "getWholeText()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "testHasTextWhenIterating"}, {"method_name": "getWholeText()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "createFromEncoded(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "createFromEncoded"}, {"method_name": "stripLeadingWhitespace(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "stripLeadingWhitespace"}, {"method_name": "attr(String,String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "coreValue(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "hasAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "removeAttr(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "baseUri()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "absUrl(String)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "childNodeSize()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "empty()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "ensureChildNodes()", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "hasSameValue(TextNode)", "file_path": "src/test/java/org/jsoup/nodes/TextNodeTest.java", "testclass_name": "TextNodeTest", "testcase_name": "leafNodeAttributes"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksMarkup"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksXml"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFromFetch"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksTableMovedText"}], "Arrays": [{"method_name": "sort(Object[])", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "ensureArraysAreSorted"}, {"method_name": "sort(char[])", "file_path": "src/test/java/org/jsoup/parser/TokeniserStateTest.java", "testclass_name": "TokeniserStateTest", "testcase_name": "ensureSearchArraysAreSorted"}], "Tag": [{"method_name": "isKnownTag(String)", "file_path": "src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java", "testclass_name": "HtmlTreeBuilderStateTest", "testcase_name": "ensureTagSearchesAreKnownTags"}, {"method_name": "isKnownTag(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "knownTags"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "isCaseSensitive"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "trims"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "equality"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "divSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "pSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "defaultSemantics"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "valueOfChecksNotNull"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "valueOfChecksNotEmpty"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "knownSvgNamespace"}, {"method_name": "valueOf(String)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "unknownTagNamespace"}, {"method_name": "valueOf(String,ParseSettings)", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "canBeInsensitive"}, {"method_name": "isBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "divSemantics"}, {"method_name": "isBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "pSemantics"}, {"method_name": "isBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "formatAsBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "divSemantics"}, {"method_name": "formatAsBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "pSemantics"}, {"method_name": "formatAsBlock()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "defaultSemantics"}, {"method_name": "isInline()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "isInline()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "defaultSemantics"}, {"method_name": "isSelfClosing()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "imgSemantics"}, {"method_name": "namespace()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "knownSvgNamespace"}, {"method_name": "namespace()", "file_path": "src/test/java/org/jsoup/parser/TagTest.java", "testclass_name": "TagTest", "testcase_name": "unknownTagNamespace"}], "QueryParser": [{"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "exceptionOnUncloseAttribute"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testParsesSingleQuoteInContains"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "exceptOnEmptySelector"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "exceptOnNullSelector"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "okOnSpacesForeAndAft"}, {"method_name": "parse(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "structuralEvaluatorsToString"}], "Connection": [{"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "testcase_name": "multiThread"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "testcase_name": "multiThreadWithoutNewRequestBlowsUp"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionIT.java", "testclass_name": "SessionIT", "testcase_name": "multiThreadWithProgressListener"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "get()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}, {"method_name": "newRequest()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "newRequest()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "newRequest()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}, {"method_name": "cookies()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookies"}, {"method_name": "cookies()", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testPathScopedCookiesOnRedirect"}, {"method_name": "parser(Parser)", "file_path": "src/test/java/org/jsoup/integration/SessionTest.java", "testclass_name": "SessionTest", "testcase_name": "testCanChangeParsers"}], "Elements": [{"method_name": "select(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}], "EvaluatorDebug": [{"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testImmediateParentRun"}, {"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testOrGetsCorrectPrecedence"}, {"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "testParsesMultiCorrectly"}, {"method_name": "sexpr(String)", "file_path": "src/test/java/org/jsoup/select/QueryParserTest.java", "testclass_name": "QueryParserTest", "testcase_name": "parsesOrAfterAttribute"}], "Attributes": [{"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/LeafNodeTest.java", "testclass_name": "LeafNodeTest", "testcase_name": "doesNotGetAttributesTooEasily"}, {"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "hasKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSetKeyConsistency"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "htmlSkipsInternals"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBooleans"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanNullAttributesConsistent"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanEmptyString"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanCaseInsensitive"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "get(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "equalsIsOrderInsensitive"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSetKeyConsistency"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBoolean"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanNullAttributesConsistent"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanEmptyString"}, {"method_name": "put(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanCaseInsensitive"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "size()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "hasKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "getIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "dataset()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "html"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemovable"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorUpdateable"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorHasNext"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIterator"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorSkipsInternal"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "iteratorThrows"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorEmpty"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemove"}, {"method_name": "iterator()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "internalKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorSkipsInternal"}, {"method_name": "internalKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testListSkipsInternal"}, {"method_name": "internalKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "htmlSkipsInternals"}, {"method_name": "internalKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testListSkipsInternal"}, {"method_name": "asList()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSizeWhenHasInternal"}, {"method_name": "remove(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "removeCaseSensitive"}, {"method_name": "hasDeclaredValueForKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBoolean"}, {"method_name": "hasDeclaredValueForKeyIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testBoolean"}, {"method_name": "add(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "equalsIsOrderInsensitive"}, {"method_name": "add(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "equalsIsOrderInsensitive"}, {"method_name": "equals(Object)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "cloneAttributes"}], "Attribute": [{"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "html"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "testWithSupplementaryCharacterInAttributeKeyAndValue"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanNullAttributesConsistent"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanEmptyString"}, {"method_name": "html()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "booleanCaseInsensitive"}, {"method_name": "Attribute(String,String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "validatesKeysNotEmpty"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "validatesKeysNotEmptyViaSet"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "settersOnOrphanAttribute"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorUpdateable"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testSetKeyConsistency"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "updateKeyMaintainsRangeLc"}, {"method_name": "setKey(String)", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "updateKeyMaintainsRangeUc"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemovable"}, {"method_name": "getKey()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIterator"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorHasNext"}, {"method_name": "getValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIterator"}, {"method_name": "hasDeclaredValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "hasDeclaredValue()", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "hasValue"}, {"method_name": "isBooleanAttribute(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreEmptyStringValues"}, {"method_name": "isBooleanAttribute(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "booleanAttributesAreNotCaseSensitive"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "settersOnOrphanAttribute"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java", "testclass_name": "AttributeTest", "testcase_name": "canSetValueToNull"}, {"method_name": "setValue(String)", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorUpdateable"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributes"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributesAcrossLines"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributePositionInFirstElement"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributePositionWithCase"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributesPositionsDedupes"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "trackAttributesPositionsDirectionalDedupes"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksFrag"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "updateKeyMaintainsRangeLc"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "updateKeyMaintainsRangeUc"}], "Safelist": [{"method_name": "addTags(String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnTags"}, {"method_name": "addTags(String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "noscriptIsBlocked"}, {"method_name": "addAttributes(String,String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnAttributes"}, {"method_name": "addEnforcedAttribute(String,String,String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnEnforcedAttributes"}, {"method_name": "addProtocols(String,String,String)", "file_path": "src/test/java/org/jsoup/safety/SafelistTest.java", "testclass_name": "SafelistTest", "testcase_name": "testCopyConstructor_noSideEffectOnProtocols"}], "Node": [{"method_name": "wrap(String)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canWrap"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRemoveViaNode"}, {"method_name": "replaceWith(Node)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canReplace"}], "Comment": [{"method_name": "nodeName()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "nodeName"}, {"method_name": "getData()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "getData"}, {"method_name": "toString()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "testToString"}, {"method_name": "clone()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "testClone"}, {"method_name": "isXmlDeclaration()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "isXmlDeclaration"}, {"method_name": "asXmlDeclaration()", "file_path": "src/test/java/org/jsoup/nodes/CommentTest.java", "testclass_name": "CommentTest", "testcase_name": "asXmlDeclaration"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksXml"}], "NodeTraversor": [{"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterVisit"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterSkipChildren"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterSkipEntirely"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterRemove"}, {"method_name": "filter(NodeFilter,Elements)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "filterStop"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "replaceElement"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "canAddChildren"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "canSpecifyOnlyHead"}, {"method_name": "traverse(NodeVisitor,Node)", "file_path": "src/test/java/org/jsoup/select/TraversorTest.java", "testclass_name": "TraversorTest", "testcase_name": "canRemoveDuringHead"}], "SoftPool": [{"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftLocalPool"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftReferenceBehavior"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testBorrowFromEmptyPool"}, {"method_name": "borrow()", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testReleaseMoreThanMaxIdle"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftLocalPool"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testSoftReferenceBehavior"}, {"method_name": "release(char[])", "file_path": "src/test/java/org/jsoup/internal/SoftPoolTest.java", "testclass_name": "SoftPoolTest", "testcase_name": "testReleaseMoreThanMaxIdle"}], "DataNode": [{"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputScriptWithCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputScriptWithoutCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputStyleWithCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputStyleWithoutCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputOtherWithCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputOtherWithoutCData"}, {"method_name": "OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/DataNodeTest.java", "testclass_name": "DataNodeTest", "testcase_name": "xmlOutputOrphanWithoutCData"}, {"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksDataNodes"}], "StringUtil": [{"method_name": "join(List<String>,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "join"}, {"method_name": "padding(int)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "padding"}, {"method_name": "padding(int,int)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "padding"}, {"method_name": "padding", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "paddingInACan"}, {"method_name": "isBlank(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isBlank"}, {"method_name": "isNumeric(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isNumeric"}, {"method_name": "isWhitespace(char)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isWhitespace"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "normaliseWhiteSpace"}, {"method_name": "normaliseWhitespace(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "normaliseWhiteSpaceHandlesHighSurrogates"}, {"method_name": "resolve(String,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "resolvesRelativeUrls"}, {"method_name": "resolve(String,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "stripsControlCharsFromUrls"}, {"method_name": "resolve(String,String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "allowsSpaceInUrl"}, {"method_name": "isAscii(String)", "file_path": "src/test/java/org/jsoup/internal/StringUtilTest.java", "testclass_name": "StringUtilTest", "testcase_name": "isAscii"}], "FormElement": [{"method_name": "elements()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "hasAssociatedControls"}, {"method_name": "elements()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formsAddedAfterParseAreFormElements"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "createsFormData"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formDataUsesFirstAttribute"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "controlsAddedAfterParseAreLinkedWithForms"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "usesOnForCheckboxValueIfNoValueSet"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "adoptedFormsRetainInputs"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "removeFormElement"}, {"method_name": "formData()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formElementsAreLive"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "createsSubmitableConnection"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "actionWithNoValue"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "actionWithNoBaseUri"}, {"method_name": "submit()", "file_path": "src/test/java/org/jsoup/nodes/FormElementTest.java", "testclass_name": "FormElementTest", "testcase_name": "formSubmissionCarriesCookiesFromSession"}], "TokenQueue": [{"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalanced"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedMatchesAsMuchAsPossible"}, {"method_name": "consumeTo(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedThrowIllegalArgumentException"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalanced"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedMatchesAsMuchAsPossible"}, {"method_name": "chompBalanced(char,char)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalancedThrowIllegalArgumentException"}, {"method_name": "remainder()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompBalanced"}, {"method_name": "remainder()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "remainder()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "addFirst"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompEscapedBalanced"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "unescape"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "unescape_2"}, {"method_name": "escapeCssIdentifier(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "escapeCssIdentifier"}, {"method_name": "chompToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "chompToIgnoreCase"}, {"method_name": "chompToIgnoreCase(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeToIgnoreSecondCallTest"}, {"method_name": "consumeWord()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "addFirst"}, {"method_name": "addFirst(String)", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "addFirst"}, {"method_name": "consumeElementSelector()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedTag"}, {"method_name": "consumeWhitespace()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedTag"}, {"method_name": "consumeWhitespace()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedId"}, {"method_name": "isEmpty()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedTag"}, {"method_name": "isEmpty()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedId"}, {"method_name": "consumeCssIdentifier()", "file_path": "src/test/java/org/jsoup/parser/TokenQueueTest.java", "testclass_name": "TokenQueueTest", "testcase_name": "consumeEscapedId"}], "Entities": [{"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "unescapeMultiChars"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "notMissingMultis"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "notMissingSupplementals"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "unescape"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "caseSensitive"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "quoteReplacements"}, {"method_name": "unescape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "noSpuriousDecodes"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escape"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapedSupplementary"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapeSupplementaryCharacter"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "caseSensitive"}, {"method_name": "escape(String,OutputSettings)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapeByClonedOutputSettings"}, {"method_name": "escape(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "escapeDefaults"}, {"method_name": "getByName(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "getByName"}, {"method_name": "unescape(String,boolean)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "strictUnescape"}], "EscapeMode": [{"method_name": "codepointForName(String)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "xhtml"}, {"method_name": "nameForCodepoint(int)", "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java", "testclass_name": "EntitiesTest", "testcase_name": "xhtml"}], "Iterator": [{"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemovable"}, {"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemove"}, {"method_name": "next()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "iteratorThrows"}, {"method_name": "next()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "iteratorThrows"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorEmpty"}], "NodeIterator": [{"method_name": "remove()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRemoveViaIterator"}, {"method_name": "hasNext()", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "hasNextIsPure"}, {"method_name": "from(Document)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canIterateNodes"}, {"method_name": "from(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "iterateSubTree"}, {"method_name": "from(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canIterateJustOneSibling"}, {"method_name": "from(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canIterateFirstEmptySibling"}, {"method_name": "restart(Element)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canRestart"}, {"method_name": "from(Document,Class<Element>)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canFilterForElements"}, {"method_name": "from(Document,Class<TextNode>)", "file_path": "src/test/java/org/jsoup/nodes/NodeIteratorTest.java", "testclass_name": "NodeIteratorTest", "testcase_name": "canFilterForTextNodes"}], "ConcurrentModificationException": [{"method_name": "ConcurrentModificationException", "file_path": "src/test/java/org/jsoup/nodes/AttributesTest.java", "testclass_name": "AttributesTest", "testcase_name": "testIteratorRemoveConcurrentException"}], "DataUtil": [{"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "testCharset"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "testQuotedCharset"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldNotThrowExceptionOnEmptyCharset"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldCorrectCharsetForDuplicateCharsetString"}, {"method_name": "getCharsetFromContentType(String)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "shouldReturnNullForIllegalCharsetNames"}, {"method_name": "parseInputStream(ControllableInputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "discardsSpuriousByteOrderMark"}, {"method_name": "parseInputStream(ControllableInputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "discardsSpuriousByteOrderMarkWhenNoCharsetSet"}, {"method_name": "parseInputStream(ControllableInputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "wrongMetaCharsetFallback"}, {"method_name": "parseInputStream(ControllableInputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "secondMetaElementWithContentTypeContainsCharsetParameter"}, {"method_name": "parseInputStream(ControllableInputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "firstMetaElementWithCharsetShouldBeUsedForDecoding"}, {"method_name": "parseInputStream(ControllableInputStream,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "parseSequenceInputStream"}, {"method_name": "mimeBoundary()", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "generatesMimeBoundaries"}, {"method_name": "streamParser(Path,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "streamerSupportsBOMinFiles"}, {"method_name": "streamParser(Path,String,String,Parser)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "streamerSupportsZippedUTF8BOM"}, {"method_name": "readToByteBuffer(InputStream,int)", "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java", "testclass_name": "DataUtilTest", "testcase_name": "handlesUnlimitedRead"}], "CDataNode": [{"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksMarkup"}], "XmlDeclaration": [{"method_name": "sourceRange()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksXml"}], "Range": [{"method_name": "isTracked()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "isTracked()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksExpectedPoppedElements"}, {"method_name": "isTracked()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksImplicitPoppedElements"}, {"method_name": "isTracked()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributes"}, {"method_name": "isTracked()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributesAcrossLines"}, {"method_name": "pos()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "columnNumber()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "lineNumber()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksPosition"}, {"method_name": "isImplicit()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksExpectedPoppedElements"}, {"method_name": "isImplicit()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksImplicitPoppedElements"}, {"method_name": "isImplicit()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributes"}, {"method_name": "isImplicit()", "file_path": "src/test/java/org/jsoup/parser/PositionTest.java", "testclass_name": "PositionTest", "testcase_name": "tracksAttributesAcrossLines"}], "W3CDom": [{"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "simpleConversion"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "namespacePreservation"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesInvalidAttributeNames"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "htmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesInvalidTagAsText"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "treatsUndeclaredNamespaceAsLocalName"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xmlnsXpathTest"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xhtmlNoNamespace"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canDisableNamespaces"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "testRoundTripDoctype"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canOutputHtmlWithoutNamespace"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "convertsElementsAndMaintainsSource"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canXmlParseCdataNodes"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesEmptyDoctype"}, {"method_name": "Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "testHtmlParseAttributesAreCaseInsensitive"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "simpleConversion"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "htmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "xmlInputDocMaintainsHtmlAttributeNames"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "handlesInvalidTagAsText"}, {"method_name": "asString(Document,Map<String,String>)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canOutputHtmlWithoutNamespace"}, {"method_name": "Document,Document)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canConvertToCustomDocument"}, {"method_name": "namespaceAware(boolean)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canDisableNamespaces"}, {"method_name": "namespaceAware(boolean)", "file_path": "src/test/java/org/jsoup/helper/W3CDomTest.java", "testclass_name": "W3CDomTest", "testcase_name": "canOutputHtmlWithoutNamespace"}]}