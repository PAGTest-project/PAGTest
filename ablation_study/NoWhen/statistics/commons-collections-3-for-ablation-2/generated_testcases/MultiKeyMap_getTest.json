[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\nimport org.apache.commons.collections4.keyvalue.MultiKey;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_getTest {\n    private MultiKeyMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testGetExistingKey() {\n        map.put(\"a\", \"b\", \"value1\");\n        assertEquals(\"value1\", map.get(\"a\", \"b\"));\n    }\n\n    @Test\n    public void testGetNonExistingKey() {\n        assertNull(map.get(\"x\", \"y\"));\n    }\n\n    @Test\n    public void testGetWithNullKey() {\n        map.put(\"a\", null, \"value2\");\n        assertEquals(\"value2\", map.get(\"a\", null));\n    }\n\n    @Test\n    public void testGetWithBothNullKeys() {\n        map.put(null, null, \"value3\");\n        assertEquals(\"value3\", map.get(null, null));\n    }\n\n    @Test\n    public void testGetAfterRemove() {\n        map.put(\"a\", \"b\", \"value4\");\n        map.removeMultiKey(\"a\", \"b\");\n        assertNull(map.get(\"a\", \"b\"));\n    }\n}\n"}]