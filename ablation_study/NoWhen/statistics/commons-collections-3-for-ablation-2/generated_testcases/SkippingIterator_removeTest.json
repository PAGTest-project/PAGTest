[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass SkippingIterator_removeTest {\n\n    @Test\n    void testRemoveBeforeNext() {\n        Iterator<String> mockIterator = mock(Iterator.class);\n        SkippingIterator<String> skippingIterator = new SkippingIterator<>(mockIterator, 5);\n\n        // Given: pos is less than or equal to offset\n        // When: remove() is called\n        // Then: IllegalStateException is thrown\n        assertThrows(IllegalStateException.class, skippingIterator::remove);\n    }\n\n    @Test\n    void testRemoveAfterNext() {\n        Iterator<String> mockIterator = mock(Iterator.class);\n        when(mockIterator.hasNext()).thenReturn(true, false);\n        when(mockIterator.next()).thenReturn(\"element\");\n\n        SkippingIterator<String> skippingIterator = new SkippingIterator<>(mockIterator, 0);\n\n        // Given: next() has been called, pos is greater than offset\n        skippingIterator.next();\n\n        // When: remove() is called\n        // Then: super.remove() is called\n        skippingIterator.remove();\n        verify(mockIterator).remove();\n    }\n}\n"}]