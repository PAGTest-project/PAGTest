[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.NoSuchElementException;\n\nimport org.apache.commons.collections4.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FilterListIterator_nextTest {\n\n    private List<Integer> list;\n    private Predicate<Integer> truePred;\n    private FilterListIterator<Integer> filterListIterator;\n\n    @BeforeEach\n    public void setUp() {\n        list = new ArrayList<>();\n        for (int i = 0; i < 20; i++) {\n            list.add(Integer.valueOf(i));\n        }\n\n        truePred = x -> true;\n\n        filterListIterator = new FilterListIterator<>(list.listIterator(), truePred);\n    }\n\n    @Test\n    public void testNextWithValidElement() {\n        assertTrue(filterListIterator.hasNext());\n        assertEquals(Integer.valueOf(0), filterListIterator.next());\n    }\n\n    @Test\n    public void testNextWithNoSuchElementException() {\n        // Consume all elements\n        while (filterListIterator.hasNext()) {\n            filterListIterator.next();\n        }\n        assertThrows(NoSuchElementException.class, () -> filterListIterator.next());\n    }\n}\n"}]