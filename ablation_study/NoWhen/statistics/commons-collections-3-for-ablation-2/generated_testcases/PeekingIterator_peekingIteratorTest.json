[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PeekingIterator_peekingIteratorTest {\n\n    private List<String> testList;\n    private static final String[] testArray = {\"a\", \"b\", \"c\"};\n\n    @SuppressWarnings(\"unchecked\")\n    @BeforeEach\n    protected void setUp() throws Exception {\n        testList = new ArrayList<>(Arrays.asList((String[]) testArray));\n    }\n\n    @Test\n    public void testPeekingIteratorWithNonNullIterator() {\n        Iterator<String> iterator = testList.iterator();\n        PeekingIterator<String> peekingIterator = PeekingIterator.peekingIterator(iterator);\n        assertNotNull(peekingIterator);\n        assertEquals(\"a\", peekingIterator.peek());\n        assertEquals(\"a\", peekingIterator.element());\n        validate(peekingIterator, testArray);\n    }\n\n    @Test\n    public void testPeekingIteratorWithNullIterator() {\n        Iterator<String> iterator = null;\n        assertThrows(NullPointerException.class, () -> {\n            PeekingIterator.peekingIterator(iterator);\n        });\n    }\n\n    @Test\n    public void testPeekingIteratorWithPeekingIterator() {\n        Iterator<String> iterator = testList.iterator();\n        PeekingIterator<String> originalPeekingIterator = new PeekingIterator<>(iterator);\n        PeekingIterator<String> peekingIterator = PeekingIterator.peekingIterator(originalPeekingIterator);\n        assertSame(originalPeekingIterator, peekingIterator);\n    }\n\n    private void validate(Iterator<String> iter, String... items) {\n        for (String item : items) {\n            assertTrue(iter.hasNext());\n            assertEquals(item, iter.next());\n        }\n        assertFalse(iter.hasNext());\n    }\n}\n"}]