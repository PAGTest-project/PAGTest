[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.apache.commons.collections4.functors.Closure;\nimport org.apache.commons.collections4.functors.EqualPredicate;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class ClosureUtils_switchMapClosureTest {\n\n    @Test\n    public void testSwitchMapClosure_WithDefaultClosure() {\n        // Given\n        Map<String, Closure<String>> map = new HashMap<>();\n        Closure<String> closure1 = obj -> obj + \" processed by closure1\";\n        Closure<String> closure2 = obj -> obj + \" processed by closure2\";\n        Closure<String> defaultClosure = obj -> obj + \" processed by default closure\";\n        map.put(\"key1\", closure1);\n        map.put(\"key2\", closure2);\n        map.put(null, defaultClosure);\n\n        // When\n        Closure<String> resultClosure = ClosureUtils.switchMapClosure(map);\n\n        // Then\n        assertEquals(\"test processed by closure1\", resultClosure.execute(\"test\"));\n        assertEquals(\"test processed by closure2\", resultClosure.execute(\"test\"));\n        assertEquals(\"test processed by default closure\", resultClosure.execute(\"test\"));\n    }\n\n    @Test\n    public void testSwitchMapClosure_WithNullMap() {\n        // Given\n        Map<String, Closure<String>> map = null;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> ClosureUtils.switchMapClosure(map));\n    }\n}\n"}]