[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_retainAllTest {\n\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    public void setUp() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>(Arrays.asList(\"a\", \"b\"));\n        two = new HashSet<>(Arrays.asList(\"c\", \"d\"));\n        c.addComposited(one, two);\n    }\n\n    @Test\n    public void testRetainAllWithMatchingElements() {\n        Collection<String> retainCollection = new HashSet<>(Arrays.asList(\"a\", \"c\"));\n        boolean changed = c.retainAll(retainCollection);\n        assertTrue(changed);\n        assertEquals(2, c.size());\n        assertTrue(c.containsAll(retainCollection));\n    }\n\n    @Test\n    public void testRetainAllWithNoMatchingElements() {\n        Collection<String> retainCollection = new HashSet<>(Arrays.asList(\"e\", \"f\"));\n        boolean changed = c.retainAll(retainCollection);\n        assertTrue(changed);\n        assertEquals(0, c.size());\n        assertFalse(c.containsAll(retainCollection));\n    }\n\n    @Test\n    public void testRetainAllWithNullCollection() {\n        boolean changed = c.retainAll(null);\n        assertFalse(changed);\n        assertEquals(4, c.size());\n    }\n\n    @Test\n    public void testRetainAllWithEmptyCollection() {\n        Collection<String> retainCollection = new ArrayList<>();\n        boolean changed = c.retainAll(retainCollection);\n        assertTrue(changed);\n        assertEquals(0, c.size());\n    }\n\n    @Test\n    public void testRetainAllWithAllElementsMatching() {\n        Collection<String> retainCollection = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\", \"d\"));\n        boolean changed = c.retainAll(retainCollection);\n        assertFalse(changed);\n        assertEquals(4, c.size());\n        assertTrue(c.containsAll(retainCollection));\n    }\n}\n"}]