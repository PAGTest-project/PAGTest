[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_sizeTest {\n\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(5);\n    }\n\n    @Test\n    public void testSizeWhenQueueIsEmpty() {\n        assertEquals(0, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueIsNotFull() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        assertEquals(3, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueIsFull() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        assertEquals(5, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueIsWrapped() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        queue.add(\"6\");\n        assertEquals(5, queue.size());\n    }\n\n    @Test\n    public void testSizeAfterRemove() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.remove();\n        assertEquals(2, queue.size());\n    }\n\n    @Test\n    public void testSizeAfterClear() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.clear();\n        assertEquals(0, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueIsFullAndWrapped() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        queue.add(\"6\");\n        queue.remove();\n        queue.add(\"7\");\n        assertEquals(5, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueIsFullAndRemovedFromMiddle() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        queue.remove(\"3\");\n        assertEquals(4, queue.size());\n    }\n}\n"}]