[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_addTest {\n\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(3);\n    }\n\n    @Test\n    public void testAddElementSuccess() {\n        assertTrue(queue.add(\"Element1\"));\n        assertEquals(1, queue.size());\n        assertEquals(\"Element1\", queue.peek());\n    }\n\n    @Test\n    public void testAddElementWhenFull() {\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n        queue.add(\"Element3\");\n        assertTrue(queue.add(\"Element4\"));\n        assertEquals(3, queue.size());\n        assertEquals(\"Element2\", queue.peek());\n    }\n\n    @Test\n    public void testAddNullElement() {\n        assertThrows(NullPointerException.class, () -> queue.add(null));\n    }\n\n    @Test\n    public void testAddElementAndCheckFullCapacity() {\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n        queue.add(\"Element3\");\n        assertTrue(queue.isAtFullCapacity());\n        queue.add(\"Element4\");\n        assertTrue(queue.isAtFullCapacity()); // Fixed assertion\n    }\n\n    @Test\n    public void testAddElementAndCheckSize() {\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n        assertEquals(2, queue.size());\n        queue.add(\"Element3\");\n        assertEquals(3, queue.size());\n        queue.add(\"Element4\");\n        assertEquals(3, queue.size());\n    }\n\n    @Test\n    public void testAddElementAndRemove() {\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n        queue.add(\"Element3\");\n        assertEquals(\"Element1\", queue.remove());\n        assertEquals(2, queue.size());\n        queue.add(\"Element4\");\n        assertEquals(\"Element2\", queue.remove());\n        assertEquals(2, queue.size());\n    }\n\n    @Test\n    public void testAddElementAndClear() {\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n        queue.clear();\n        assertEquals(0, queue.size());\n        assertTrue(queue.isEmpty());\n    }\n}\n"}]