[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Queue;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.Bag;\nimport org.apache.commons.collections4.Predicate;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PredicatedCollection_addTest {\n\n    private PredicatedCollection<String> predicatedCollection;\n    private Predicate<String> notNullPredicate;\n\n    @BeforeEach\n    public void setUp() {\n        notNullPredicate = NotNullPredicate.notNullPredicate();\n        predicatedCollection = PredicatedCollection.predicatedCollection(new ArrayList<>(), notNullPredicate);\n    }\n\n    @Test\n    public void testAddValidElement() {\n        assertTrue(predicatedCollection.add(\"test1\"));\n        assertEquals(1, predicatedCollection.size());\n    }\n\n    @Test\n    public void testAddNullElement() {\n        assertThrows(IllegalArgumentException.class, () -> predicatedCollection.add(null));\n        assertEquals(0, predicatedCollection.size());\n    }\n\n    @Test\n    public void testAddAllValidElements() {\n        Collection<String> elements = Arrays.asList(\"test1\", \"test2\");\n        assertTrue(predicatedCollection.addAll(elements));\n        assertEquals(2, predicatedCollection.size());\n    }\n\n    @Test\n    public void testAddAllWithNullElement() {\n        Collection<String> elements = Arrays.asList(\"test1\", null, \"test2\");\n        assertThrows(IllegalArgumentException.class, () -> predicatedCollection.addAll(elements));\n        assertEquals(0, predicatedCollection.size());\n    }\n\n    @Test\n    public void testCreatePredicatedCollectionWithNotNullPredicate() {\n        final PredicatedCollection.Builder<String> builder = PredicatedCollection.notNullBuilder();\n        builder.add(\"test1\");\n        builder.add((String) null);\n\n        final List<String> predicatedList = builder.createPredicatedList();\n        checkPredicatedCollection1(predicatedList);\n\n        final Set<String> predicatedSet = builder.createPredicatedSet();\n        checkPredicatedCollection1(predicatedSet);\n\n        final Bag<String> predicatedBag = builder.createPredicatedBag();\n        checkPredicatedCollection1(predicatedBag);\n\n        final Queue<String> predicatedQueue = builder.createPredicatedQueue();\n        checkPredicatedCollection1(predicatedQueue);\n    }\n\n    private void checkPredicatedCollection1(Collection<String> collection) {\n        assertEquals(1, collection.size());\n        assertTrue(collection.contains(\"test1\"));\n    }\n}\n"}]