[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StaticBucketMap_putAllTest {\n    private StaticBucketMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new StaticBucketMap<>(17);\n    }\n\n    @Test\n    public void testPutAll_SingleEntry() {\n        Map<String, String> entries = new HashMap<>();\n        entries.put(\"key1\", \"value1\");\n\n        map.putAll(entries);\n\n        assertEquals(1, map.size());\n        assertTrue(map.containsKey(\"key1\"));\n        assertEquals(\"value1\", map.get(\"key1\"));\n    }\n\n    @Test\n    public void testPutAll_MultipleEntries() {\n        Map<String, String> entries = new HashMap<>();\n        entries.put(\"key1\", \"value1\");\n        entries.put(\"key2\", \"value2\");\n        entries.put(\"key3\", \"value3\");\n\n        map.putAll(entries);\n\n        assertEquals(3, map.size());\n        assertTrue(map.containsKey(\"key1\"));\n        assertTrue(map.containsKey(\"key2\"));\n        assertTrue(map.containsKey(\"key3\"));\n        assertEquals(\"value1\", map.get(\"key1\"));\n        assertEquals(\"value2\", map.get(\"key2\"));\n        assertEquals(\"value3\", map.get(\"key3\"));\n    }\n\n    @Test\n    public void testPutAll_EmptyMap() {\n        Map<String, String> entries = new HashMap<>();\n\n        map.putAll(entries);\n\n        assertEquals(0, map.size());\n    }\n\n    @Test\n    public void testPutAll_OverwriteExistingEntries() {\n        map.put(\"key1\", \"oldValue1\");\n        map.put(\"key2\", \"oldValue2\");\n\n        Map<String, String> entries = new HashMap<>();\n        entries.put(\"key1\", \"newValue1\");\n        entries.put(\"key2\", \"newValue2\");\n\n        map.putAll(entries);\n\n        assertEquals(2, map.size());\n        assertTrue(map.containsKey(\"key1\"));\n        assertTrue(map.containsKey(\"key2\"));\n        assertEquals(\"newValue1\", map.get(\"key1\"));\n        assertEquals(\"newValue2\", map.get(\"key2\"));\n    }\n\n    @Test\n    public void testPutAll_ClearBeforeAdding() {\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n\n        map.clear();\n\n        Map<String, String> entries = new HashMap<>();\n        entries.put(\"key3\", \"value3\");\n        entries.put(\"key4\", \"value4\");\n\n        map.putAll(entries);\n\n        assertEquals(2, map.size());\n        assertTrue(map.containsKey(\"key3\"));\n        assertTrue(map.containsKey(\"key4\"));\n        assertEquals(\"value3\", map.get(\"key3\"));\n        assertEquals(\"value4\", map.get(\"key4\"));\n    }\n}\n"}]