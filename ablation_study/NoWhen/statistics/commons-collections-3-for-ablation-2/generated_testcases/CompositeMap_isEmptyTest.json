[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_isEmptyTest {\n\n    private CompositeMap<String, String> compositeMap;\n\n    @BeforeEach\n    public void setUp() {\n        compositeMap = new CompositeMap<>();\n    }\n\n    @Test\n    public void testIsEmpty_WhenNoMapsAdded() {\n        assertTrue(compositeMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_WhenMapsAddedButEmpty() {\n        Map<String, String> map1 = new HashMap<>();\n        Map<String, String> map2 = new HashMap<>();\n        compositeMap.addComposited(map1);\n        compositeMap.addComposited(map2);\n        assertTrue(compositeMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_WhenMapsAddedWithEntries() {\n        Map<String, String> map1 = new HashMap<>();\n        map1.put(\"key1\", \"value1\");\n        compositeMap.addComposited(map1);\n        assertFalse(compositeMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_AfterClear() {\n        Map<String, String> map1 = new HashMap<>();\n        map1.put(\"key1\", \"value1\");\n        compositeMap.addComposited(map1);\n        compositeMap.clear();\n        assertTrue(compositeMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_AfterRemovingMap() {\n        Map<String, String> map1 = new HashMap<>();\n        map1.put(\"key1\", \"value1\");\n        compositeMap.addComposited(map1);\n        compositeMap.removeComposited(map1);\n        assertTrue(compositeMap.isEmpty());\n    }\n}\n"}]