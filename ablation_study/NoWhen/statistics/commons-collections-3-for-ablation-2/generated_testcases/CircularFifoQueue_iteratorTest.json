[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_iteratorTest {\n\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(5);\n    }\n\n    @Test\n    public void testIteratorHasNext() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        Iterator<String> iterator = queue.iterator();\n        assertTrue(iterator.hasNext());\n        iterator.next();\n        assertTrue(iterator.hasNext());\n        iterator.next();\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test\n    public void testIteratorNext() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        Iterator<String> iterator = queue.iterator();\n        assertEquals(\"1\", iterator.next());\n        assertEquals(\"2\", iterator.next());\n        assertThrows(NoSuchElementException.class, iterator::next);\n    }\n\n    @Test\n    public void testIteratorRemove() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        Iterator<String> iterator = queue.iterator();\n        iterator.next();\n        iterator.remove();\n        assertEquals(2, queue.size());\n        assertEquals(\"2\", queue.get(0));\n        assertEquals(\"3\", queue.get(1));\n    }\n\n    @Test\n    public void testIteratorRemoveFirstElement() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        Iterator<String> iterator = queue.iterator();\n        iterator.next();\n        iterator.remove();\n        assertEquals(1, queue.size());\n        assertEquals(\"2\", queue.get(0));\n    }\n\n    @Test\n    public void testIteratorRemoveWithoutNext() {\n        queue.add(\"1\");\n        Iterator<String> iterator = queue.iterator();\n        assertThrows(IllegalStateException.class, iterator::remove);\n    }\n\n    @Test\n    public void testIteratorRemoveFullQueue() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        Iterator<String> iterator = queue.iterator();\n        iterator.next();\n        iterator.remove();\n        assertEquals(4, queue.size());\n        assertEquals(\"2\", queue.get(0));\n        assertEquals(\"5\", queue.get(3));\n    }\n}\n"}]