[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static java.util.Arrays.asList;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class IndexedCollection_addAllTest {\n\n    private IndexedCollection<Integer, String> indexedCollection;\n    private Collection<String> originalCollection;\n\n    @BeforeEach\n    public void setUp() {\n        originalCollection = new ArrayList<>();\n        indexedCollection = IndexedCollection.uniqueIndexedCollection(originalCollection, new Transformer<String, Integer>() {\n            @Override\n            public Integer transform(String input) {\n                return Integer.parseInt(input);\n            }\n        });\n    }\n\n    @Test\n    public void testAddAllSuccess() {\n        Collection<String> elementsToAdd = asList(\"1\", \"2\", \"3\");\n        assertTrue(indexedCollection.addAll(elementsToAdd));\n        assertTrue(indexedCollection.containsAll(elementsToAdd));\n        assertEquals(\"1\", indexedCollection.get(1));\n        assertEquals(\"2\", indexedCollection.get(2));\n        assertEquals(\"3\", indexedCollection.get(3));\n    }\n\n    @Test\n    public void testAddAllNoChange() {\n        Collection<String> elementsToAdd = new ArrayList<>();\n        assertFalse(indexedCollection.addAll(elementsToAdd));\n        assertTrue(indexedCollection.isEmpty());\n    }\n\n    @Test\n    public void testAddAllWithDuplicateKey() {\n        Collection<String> elementsToAdd = asList(\"1\", \"2\", \"2\");\n        assertThrows(IllegalArgumentException.class, () -> indexedCollection.addAll(elementsToAdd));\n    }\n\n    @Test\n    public void testAddAllWithEmptyCollection() {\n        Collection<String> elementsToAdd = new ArrayList<>();\n        assertFalse(indexedCollection.addAll(elementsToAdd));\n        assertTrue(indexedCollection.isEmpty());\n    }\n\n    @Test\n    public void testAddAllWithNullElement() {\n        Collection<String> elementsToAdd = asList(\"1\", null, \"3\");\n        assertThrows(NullPointerException.class, () -> indexedCollection.addAll(elementsToAdd));\n    }\n}\n"}]