[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_pollTest {\n\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(5);\n    }\n\n    @Test\n    public void testPollWhenQueueIsEmpty() {\n        assertNull(queue.poll());\n    }\n\n    @Test\n    public void testPollWhenQueueHasElements() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n\n        assertEquals(\"1\", queue.poll());\n        assertEquals(\"2\", queue.poll());\n        assertEquals(\"3\", queue.poll());\n        assertTrue(queue.isEmpty());\n    }\n\n    @Test\n    public void testPollWhenQueueIsFull() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n\n        assertEquals(\"1\", queue.poll());\n        assertEquals(\"2\", queue.poll());\n        assertEquals(\"3\", queue.poll());\n        assertEquals(\"4\", queue.poll());\n        assertEquals(\"5\", queue.poll());\n        assertTrue(queue.isEmpty());\n    }\n\n    @Test\n    public void testPollAfterAddingAndRemovingElements() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        queue.add(\"6\");\n\n        assertEquals(\"2\", queue.poll());\n        assertEquals(\"3\", queue.poll());\n        assertEquals(\"4\", queue.poll());\n        assertEquals(\"5\", queue.poll());\n        assertEquals(\"6\", queue.poll());\n        assertTrue(queue.isEmpty());\n    }\n}\n"}]