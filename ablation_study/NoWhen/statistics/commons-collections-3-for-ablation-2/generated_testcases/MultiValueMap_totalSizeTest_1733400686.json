[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_totalSizeTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>();\n    }\n\n    @Test\n    public void testTotalSizeEmptyMap() {\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeSingleKeySingleValue() {\n        multiValueMap.put(\"key1\", \"value1\");\n        assertEquals(1, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeSingleKeyMultipleValues() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        assertEquals(2, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeMultipleKeysMultipleValues() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n        multiValueMap.put(\"key2\", \"value4\");\n        assertEquals(4, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithEmptyCollections() {\n        multiValueMap.put(\"key1\", new ArrayList<>());\n        multiValueMap.put(\"key2\", new HashSet<>());\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithMixedCollections() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", new ArrayList<>());\n        multiValueMap.put(\"key3\", \"value3\");\n        assertEquals(3, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAll() {\n        Collection<String> values = new ArrayList<>();\n        values.add(\"value1\");\n        values.add(\"value2\");\n        multiValueMap.putAll(\"key1\", values);\n        assertEquals(2, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAllMultipleKeys() {\n        Collection<String> values1 = new ArrayList<>();\n        values1.add(\"value1\");\n        values1.add(\"value2\");\n        multiValueMap.putAll(\"key1\", values1);\n\n        Collection<String> values2 = new ArrayList<>();\n        values2.add(\"value3\");\n        values2.add(\"value4\");\n        multiValueMap.putAll(\"key2\", values2);\n\n        assertEquals(4, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAllAndSinglePut() {\n        Collection<String> values = new ArrayList<>();\n        values.add(\"value1\");\n        values.add(\"value2\");\n        multiValueMap.putAll(\"key1\", values);\n        multiValueMap.put(\"key2\", \"value3\");\n        assertEquals(3, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAllEmptyCollection() {\n        Collection<String> values = new ArrayList<>();\n        multiValueMap.putAll(\"key1\", values);\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAllAndRemove() {\n        Collection<String> values = new ArrayList<>();\n        values.add(\"value1\");\n        values.add(\"value2\");\n        multiValueMap.putAll(\"key1\", values);\n        multiValueMap.removeMapping(\"key1\", \"value1\");\n        assertEquals(1, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testTotalSizeWithPutAllAndClear() {\n        Collection<String> values = new ArrayList<>();\n        values.add(\"value1\");\n        values.add(\"value2\");\n        multiValueMap.putAll(\"key1\", values);\n        multiValueMap.clear();\n        assertEquals(0, multiValueMap.totalSize());\n    }\n}\n"}]