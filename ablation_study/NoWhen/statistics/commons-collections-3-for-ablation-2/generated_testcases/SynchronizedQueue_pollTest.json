[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.mockito.Mockito.*;\n\nimport java.util.Queue;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.mockito.Mockito;\n\npublic class SynchronizedQueue_pollTest {\n\n    private Queue<String> mockQueue;\n    private SynchronizedQueue<String> synchronizedQueue;\n\n    @BeforeEach\n    public void setUp() {\n        mockQueue = Mockito.mock(Queue.class);\n        synchronizedQueue = SynchronizedQueue.synchronizedQueue(mockQueue);\n    }\n\n    @Test\n    public void testPoll_WhenQueueHasElements() {\n        when(mockQueue.poll()).thenReturn(\"element\");\n\n        String result = synchronizedQueue.poll();\n\n        assertEquals(\"element\", result);\n        verify(mockQueue, times(1)).poll();\n    }\n\n    @Test\n    public void testPoll_WhenQueueIsEmpty() {\n        when(mockQueue.poll()).thenReturn(null);\n\n        String result = synchronizedQueue.poll();\n\n        assertNull(result);\n        verify(mockQueue, times(1)).poll();\n    }\n}\n"}]