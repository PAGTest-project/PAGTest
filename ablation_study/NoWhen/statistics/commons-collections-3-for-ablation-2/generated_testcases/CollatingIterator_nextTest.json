[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.*;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass CollatingIterator_nextTest {\n\n    private CollatingIterator<Integer> collatingIterator;\n    private Comparator<Integer> comparator;\n    private List<Iterator<Integer>> iterators;\n\n    @BeforeEach\n    void setUp() {\n        comparator = Comparator.naturalOrder();\n        iterators = new ArrayList<>();\n        collatingIterator = new CollatingIterator<>(comparator, 2);\n    }\n\n    @Test\n    void testNext_NoSuchElementException() {\n        Iterator<Integer> emptyIterator = Collections.emptyIterator();\n        collatingIterator.addIterator(emptyIterator);\n        collatingIterator.addIterator(emptyIterator);\n\n        assertThrows(NoSuchElementException.class, () -> collatingIterator.next());\n    }\n\n    @Test\n    void testNext_Success() {\n        Iterator<Integer> iterator1 = Arrays.asList(1, 3).iterator();\n        Iterator<Integer> iterator2 = Arrays.asList(2, 4).iterator();\n        collatingIterator.addIterator(iterator1);\n        collatingIterator.addIterator(iterator2);\n\n        assertEquals(1, collatingIterator.next());\n        assertEquals(2, collatingIterator.next());\n        assertEquals(3, collatingIterator.next());\n        assertEquals(4, collatingIterator.next());\n    }\n}\n"}]