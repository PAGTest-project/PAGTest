[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.apache.commons.collections4.MapIterator;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass UnmodifiableMapIterator_unmodifiableMapIteratorTest {\n\n    @Test\n    void testUnmodifiableMapIteratorWithUnmodifiableIterator() {\n        // Given\n        MapIterator<String, String> mockIterator = mock(MapIterator.class);\n        when(mockIterator.getKey()).thenReturn(\"key\");\n        when(mockIterator.getValue()).thenReturn(\"value\");\n        when(mockIterator.hasNext()).thenReturn(true);\n        when(mockIterator.next()).thenReturn(\"next\");\n\n        // When\n        MapIterator<String, String> result = UnmodifiableMapIterator.unmodifiableMapIterator(mockIterator);\n\n        // Then\n        assertSame(mockIterator, result);\n        assertEquals(\"key\", result.getKey());\n        assertEquals(\"value\", result.getValue());\n        assertTrue(result.hasNext());\n        assertEquals(\"next\", result.next());\n    }\n\n    @Test\n    void testUnmodifiableMapIteratorWithModifiableIterator() {\n        // Given\n        MapIterator<String, String> mockIterator = mock(MapIterator.class);\n        when(mockIterator.getKey()).thenReturn(\"key\");\n        when(mockIterator.getValue()).thenReturn(\"value\");\n        when(mockIterator.hasNext()).thenReturn(true);\n        when(mockIterator.next()).thenReturn(\"next\");\n\n        // When\n        MapIterator<String, String> result = UnmodifiableMapIterator.unmodifiableMapIterator(mockIterator);\n\n        // Then\n        assertNotSame(mockIterator, result);\n        assertEquals(\"key\", result.getKey());\n        assertEquals(\"value\", result.getValue());\n        assertTrue(result.hasNext());\n        assertEquals(\"next\", result.next());\n    }\n\n    @Test\n    void testUnmodifiableMapIteratorWithNullIterator() {\n        // Given\n        MapIterator<String, String> nullIterator = null;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> {\n            UnmodifiableMapIterator.unmodifiableMapIterator(nullIterator);\n        });\n    }\n}\n"}]