[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_clearTest {\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(3);\n    }\n\n    @Test\n    public void testClear() {\n        // Given\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n        queue.add(\"Element3\");\n\n        // When\n        queue.clear();\n\n        // Then\n        assertTrue(queue.isEmpty(), \"Queue should be empty after clear\");\n        assertEquals(0, queue.size(), \"Queue size should be 0 after clear\");\n    }\n\n    @Test\n    public void testClearOnEmptyQueue() {\n        // Given\n        assertTrue(queue.isEmpty(), \"Queue should be empty initially\");\n\n        // When\n        queue.clear();\n\n        // Then\n        assertTrue(queue.isEmpty(), \"Queue should still be empty after clear\");\n        assertEquals(0, queue.size(), \"Queue size should be 0 after clear\");\n    }\n\n    @Test\n    public void testClearWithPartialFill() {\n        // Given\n        queue.add(\"Element1\");\n        queue.add(\"Element2\");\n\n        // When\n        queue.clear();\n\n        // Then\n        assertTrue(queue.isEmpty(), \"Queue should be empty after clear\");\n        assertEquals(0, queue.size(), \"Queue size should be 0 after clear\");\n    }\n}\n"}]