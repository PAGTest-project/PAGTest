[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.EmptyStackException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ArrayStack_peekTest {\n\n    private ArrayStack<String> stack;\n\n    @BeforeEach\n    public void setUp() {\n        stack = new ArrayStack<>();\n    }\n\n    @Test\n    public void testPeekWithEmptyStack() {\n        assertThrows(EmptyStackException.class, () -> stack.peek());\n    }\n\n    @Test\n    public void testPeekWithNonEmptyStack() {\n        stack.push(\"Item1\");\n        assertEquals(\"Item1\", stack.peek());\n        assertEquals(1, stack.size());\n    }\n\n    @Test\n    public void testPeekAfterPushAndPop() {\n        stack.push(\"Item1\");\n        stack.push(\"Item2\");\n        stack.pop();\n        assertEquals(\"Item1\", stack.peek());\n        assertEquals(1, stack.size());\n    }\n\n    @Test\n    public void testPeekAfterMultiplePushes() {\n        stack.push(\"Item1\");\n        stack.push(\"Item2\");\n        stack.push(\"Item3\");\n        assertEquals(\"Item3\", stack.peek());\n        assertEquals(3, stack.size());\n    }\n}\n"}]