[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport org.apache.commons.collections4.BoundedCollection;\nimport org.apache.commons.collections4.Unmodifiable;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass UnmodifiableBoundedCollection_unmodifiableBoundedCollectionTest {\n\n    @Test\n    void testUnmodifiableBoundedCollection_WithUnmodifiableCollection() {\n        // Given\n        BoundedCollection<String> mockColl = mock(BoundedCollection.class);\n        when(mockColl.isUnmodifiable()).thenReturn(true);\n\n        // When\n        BoundedCollection<String> result = UnmodifiableBoundedCollection.unmodifiableBoundedCollection(mockColl);\n\n        // Then\n        assertSame(mockColl, result);\n    }\n\n    @Test\n    void testUnmodifiableBoundedCollection_WithModifiableCollection() {\n        // Given\n        BoundedCollection<String> mockColl = mock(BoundedCollection.class);\n        when(mockColl.isUnmodifiable()).thenReturn(false);\n\n        // When\n        BoundedCollection<String> result = UnmodifiableBoundedCollection.unmodifiableBoundedCollection(mockColl);\n\n        // Then\n        assertTrue(result instanceof UnmodifiableBoundedCollection);\n        assertNotSame(mockColl, result);\n    }\n}\n"}]