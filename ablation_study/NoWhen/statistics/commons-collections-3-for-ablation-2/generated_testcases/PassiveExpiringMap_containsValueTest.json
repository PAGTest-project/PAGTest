[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_containsValueTest {\n\n    private PassiveExpiringMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(1000L), new HashMap<>());\n    }\n\n    @Test\n    public void testContainsValue_ValuePresentAndNotExpired() {\n        map.put(\"key1\", \"value1\");\n        assertTrue(map.containsValue(\"value1\"));\n    }\n\n    @Test\n    public void testContainsValue_ValuePresentButExpired() throws InterruptedException {\n        map.put(\"key2\", \"value2\");\n        Thread.sleep(1500); // Wait for the entry to expire\n        assertFalse(map.containsValue(\"value2\"));\n    }\n\n    @Test\n    public void testContainsValue_ValueNotPresent() {\n        assertFalse(map.containsValue(\"value3\"));\n    }\n}\n"}]