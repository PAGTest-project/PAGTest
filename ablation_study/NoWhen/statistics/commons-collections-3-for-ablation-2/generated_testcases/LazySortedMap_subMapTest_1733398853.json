[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.apache.commons.collections4.map.LazySortedMap.lazySortedMap;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertInstanceOf;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertSame;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.Comparator;\nimport java.util.SortedMap;\nimport java.util.TreeMap;\n\nimport org.apache.commons.collections4.Factory;\nimport org.apache.commons.collections4.FactoryUtils;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class LazySortedMap_subMapTest {\n\n    private static final Factory<Integer> oneFactory = FactoryUtils.constantFactory(1);\n    private SortedMap<String, Integer> originalMap;\n    private LazySortedMap<String, Integer> lazySortedMap;\n\n    @BeforeEach\n    public void setUp() {\n        originalMap = new TreeMap<>();\n        originalMap.put(\"A\", 5);\n        originalMap.put(\"B\", 6);\n        originalMap.put(\"C\", 7);\n        lazySortedMap = lazySortedMap(originalMap, oneFactory);\n    }\n\n    @Test\n    public void testSubMap() {\n        SortedMap<String, Integer> subMap = lazySortedMap.subMap(\"A\", \"C\");\n        assertInstanceOf(LazySortedMap.class, subMap);\n        assertEquals(2, subMap.size());\n        assertEquals(\"A\", subMap.firstKey());\n        assertEquals(\"B\", subMap.lastKey());\n    }\n\n    @Test\n    public void testSubMapWithNonExistentKeys() {\n        SortedMap<String, Integer> subMap = lazySortedMap.subMap(\"D\", \"E\");\n        assertInstanceOf(LazySortedMap.class, subMap);\n        assertEquals(0, subMap.size());\n        assertNull(subMap.firstKey());\n        assertNull(subMap.lastKey());\n    }\n\n    @Test\n    public void testSubMapWithInvalidRange() {\n        assertThrows(IllegalArgumentException.class, () -> lazySortedMap.subMap(\"C\", \"A\"));\n    }\n\n    @Test\n    public void testSubMapWithSameKeys() {\n        SortedMap<String, Integer> subMap = lazySortedMap.subMap(\"B\", \"B\");\n        assertInstanceOf(LazySortedMap.class, subMap);\n        assertEquals(0, subMap.size());\n        assertNull(subMap.firstKey());\n        assertNull(subMap.lastKey());\n    }\n}\n"}]