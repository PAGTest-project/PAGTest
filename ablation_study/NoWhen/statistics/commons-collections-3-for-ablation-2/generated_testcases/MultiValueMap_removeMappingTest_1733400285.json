[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_removeMappingTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>(new HashMap<>(), ArrayList.class);\n    }\n\n    @Test\n    public void testRemoveMappingSuccess() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        assertTrue(multiValueMap.removeMapping(\"key1\", \"value1\"));\n        assertFalse(multiValueMap.containsValue(\"key1\", \"value1\"));\n        assertEquals(1, multiValueMap.size(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveMappingNonExistentKey() {\n        assertFalse(multiValueMap.removeMapping(\"nonExistentKey\", \"value\"));\n    }\n\n    @Test\n    public void testRemoveMappingNonExistentValue() {\n        multiValueMap.put(\"key1\", \"value1\");\n        assertFalse(multiValueMap.removeMapping(\"key1\", \"nonExistentValue\"));\n        assertEquals(1, multiValueMap.size(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveMappingLastValue() {\n        multiValueMap.put(\"key1\", \"value1\");\n        assertTrue(multiValueMap.removeMapping(\"key1\", \"value1\"));\n        assertNull(multiValueMap.getCollection(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveMappingMultipleValues() {\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key1\", \"value3\");\n        assertTrue(multiValueMap.removeMapping(\"key1\", \"value2\"));\n        assertFalse(multiValueMap.containsValue(\"key1\", \"value2\"));\n        assertEquals(2, multiValueMap.size(\"key1\"));\n    }\n}\n"}]