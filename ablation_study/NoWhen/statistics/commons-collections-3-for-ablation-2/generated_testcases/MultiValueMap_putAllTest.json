[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_putAllTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>(new HashMap<>(), ArrayList::new);\n    }\n\n    @Test\n    public void testPutAll_Success() {\n        Collection<String> values = Arrays.asList(\"value1\", \"value2\");\n        assertTrue(multiValueMap.putAll(\"key1\", values));\n        assertEquals(2, multiValueMap.size(\"key1\"));\n        assertEquals(2, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testPutAll_NullValues() {\n        assertFalse(multiValueMap.putAll(\"key1\", null));\n        assertNull(multiValueMap.getCollection(\"key1\"));\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testPutAll_EmptyValues() {\n        Collection<String> values = new ArrayList<>();\n        assertFalse(multiValueMap.putAll(\"key1\", values));\n        assertNull(multiValueMap.getCollection(\"key1\"));\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testPutAll_ExistingKey() {\n        Collection<String> initialValues = Arrays.asList(\"value1\", \"value2\");\n        Collection<String> additionalValues = Arrays.asList(\"value3\", \"value4\");\n        assertTrue(multiValueMap.putAll(\"key1\", initialValues));\n        assertTrue(multiValueMap.putAll(\"key1\", additionalValues));\n        assertEquals(4, multiValueMap.size(\"key1\"));\n        assertEquals(4, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testPutAll_MultipleKeys() {\n        Collection<String> values1 = Arrays.asList(\"value1\", \"value2\");\n        Collection<String> values2 = Arrays.asList(\"value3\", \"value4\");\n        assertTrue(multiValueMap.putAll(\"key1\", values1));\n        assertTrue(multiValueMap.putAll(\"key2\", values2));\n        assertEquals(2, multiValueMap.size(\"key1\"));\n        assertEquals(2, multiValueMap.size(\"key2\"));\n        assertEquals(4, multiValueMap.totalSize());\n    }\n}\n"}]