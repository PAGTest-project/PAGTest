[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_sizeTest {\n\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    public void setUp() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\n        two = new HashSet<>(Arrays.asList(\"d\", \"e\", \"f\"));\n    }\n\n    @Test\n    public void testSizeEmpty() {\n        assertEquals(0, c.size());\n    }\n\n    @Test\n    public void testSizeWithOneCollection() {\n        c.addComposited(one);\n        assertEquals(one.size(), c.size());\n    }\n\n    @Test\n    public void testSizeWithMultipleCollections() {\n        c.addComposited(one);\n        c.addComposited(two);\n        assertEquals(one.size() + two.size(), c.size());\n    }\n\n    @Test\n    public void testSizeAfterRemoveCollection() {\n        c.addComposited(one);\n        c.addComposited(two);\n        c.removeComposited(one);\n        assertEquals(two.size(), c.size());\n    }\n\n    @Test\n    public void testSizeAfterClearCollection() {\n        c.addComposited(one);\n        c.addComposited(two);\n        one.clear();\n        assertEquals(two.size(), c.size());\n    }\n}\n"}]