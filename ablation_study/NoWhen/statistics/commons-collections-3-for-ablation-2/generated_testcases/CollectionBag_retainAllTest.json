[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bag;\n\nimport org.apache.commons.collections4.Bag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class CollectionBag_retainAllTest {\n\n    private CollectionBag<String> bag;\n    private Bag<String> decoratedBag;\n\n    @BeforeEach\n    public void setUp() {\n        decoratedBag = Mockito.mock(Bag.class);\n        bag = new CollectionBag<>(decoratedBag);\n    }\n\n    @Test\n    public void testRetainAll_NonEmptyCollection() {\n        // Given\n        Collection<String> coll = Arrays.asList(\"A\", \"B\");\n        Iterator<String> iterator = mock(Iterator.class);\n        when(decoratedBag.iterator()).thenReturn(iterator);\n        when(iterator.hasNext()).thenReturn(true, true, false);\n        when(iterator.next()).thenReturn(\"A\", \"C\");\n\n        // When\n        boolean result = bag.retainAll(coll);\n\n        // Then\n        assertTrue(result);\n        verify(iterator).remove();\n    }\n\n    @Test\n    public void testRetainAll_NullCollection() {\n        // When\n        boolean result = bag.retainAll(null);\n\n        // Then\n        assertFalse(result);\n        verify(decoratedBag).retainAll(null);\n    }\n}\n"}]