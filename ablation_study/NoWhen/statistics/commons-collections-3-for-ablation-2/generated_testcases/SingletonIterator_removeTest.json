[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonIterator_removeTest {\n\n    private static final Object testValue = new Object();\n    private SingletonIterator<Object> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        iterator = new SingletonIterator<>(testValue, true);\n    }\n\n    @Test\n    public void testRemoveAllowed() {\n        iterator.next();\n        iterator.remove();\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test\n    public void testRemoveNotAllowed() {\n        iterator = new SingletonIterator<>(testValue, false);\n        iterator.next();\n        assertThrows(UnsupportedOperationException.class, () -> iterator.remove());\n    }\n\n    @Test\n    public void testRemoveBeforeNext() {\n        assertThrows(IllegalStateException.class, () -> iterator.remove());\n    }\n\n    @Test\n    public void testRemoveAfterReset() {\n        iterator.next();\n        iterator.reset();\n        assertThrows(IllegalStateException.class, () -> iterator.remove());\n    }\n\n    @Test\n    public void testRemoveTwice() {\n        iterator.next();\n        iterator.remove();\n        assertThrows(IllegalStateException.class, () -> iterator.remove());\n    }\n}\n"}]