[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport org.junit.jupiter.api.Test;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\npublic class SynchronizedQueue_equalsTest {\n\n    @Test\n    public void testEquals_SameInstance() {\n        Queue<String> queue = new ArrayDeque<>();\n        SynchronizedQueue<String> synchronizedQueue = SynchronizedQueue.synchronizedQueue(queue);\n\n        assertTrue(synchronizedQueue.equals(synchronizedQueue));\n    }\n\n    @Test\n    public void testEquals_DifferentInstancesWithSameContent() {\n        Queue<String> queue1 = new ArrayDeque<>();\n        queue1.add(\"element\");\n        SynchronizedQueue<String> synchronizedQueue1 = SynchronizedQueue.synchronizedQueue(queue1);\n\n        Queue<String> queue2 = new ArrayDeque<>();\n        queue2.add(\"element\");\n        SynchronizedQueue<String> synchronizedQueue2 = SynchronizedQueue.synchronizedQueue(queue2);\n\n        assertTrue(synchronizedQueue1.equals(synchronizedQueue2));\n    }\n\n    @Test\n    public void testEquals_DifferentInstancesWithDifferentContent() {\n        Queue<String> queue1 = new ArrayDeque<>();\n        queue1.add(\"element1\");\n        SynchronizedQueue<String> synchronizedQueue1 = SynchronizedQueue.synchronizedQueue(queue1);\n\n        Queue<String> queue2 = new ArrayDeque<>();\n        queue2.add(\"element2\");\n        SynchronizedQueue<String> synchronizedQueue2 = SynchronizedQueue.synchronizedQueue(queue2);\n\n        assertFalse(synchronizedQueue1.equals(synchronizedQueue2));\n    }\n}\n"}]