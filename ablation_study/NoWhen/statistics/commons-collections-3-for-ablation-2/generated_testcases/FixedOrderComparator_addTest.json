[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class FixedOrderComparator_addTest {\n\n    private FixedOrderComparator<String> comparator;\n\n    @BeforeEach\n    public void setUp() {\n        comparator = new FixedOrderComparator<>();\n    }\n\n    @Test\n    public void testAddNewObject() {\n        assertTrue(comparator.add(\"Object1\"));\n        assertFalse(comparator.add(\"Object1\")); // Adding the same object again\n    }\n\n    @Test\n    public void testAddAfterLock() {\n        comparator.add(\"Object1\");\n        comparator.compare(\"Object1\", \"Object1\"); // Lock the comparator\n        assertThrows(UnsupportedOperationException.class, () -> comparator.add(\"Object2\"));\n    }\n\n    @Test\n    public void testAddAsEqual() {\n        comparator.add(\"Object1\");\n        assertTrue(comparator.addAsEqual(\"Object1\", \"Object2\"));\n        assertEquals(0, comparator.compare(\"Object1\", \"Object2\"));\n    }\n\n    @Test\n    public void testCompareAfterAdd() {\n        comparator.add(\"Object1\");\n        comparator.add(\"Object2\");\n        assertTrue(comparator.compare(\"Object1\", \"Object2\") < 0);\n        assertTrue(comparator.compare(\"Object2\", \"Object1\") > 0);\n    }\n\n    @Test\n    public void testEqualsAfterAdd() {\n        FixedOrderComparator<String> comparator2 = new FixedOrderComparator<>();\n        comparator.add(\"Object1\");\n        comparator2.add(\"Object1\");\n        assertEquals(comparator, comparator2);\n    }\n}\n"}]