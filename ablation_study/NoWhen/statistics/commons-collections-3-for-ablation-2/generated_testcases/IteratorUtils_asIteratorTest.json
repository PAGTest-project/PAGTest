[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Collections;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.ArrayList;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass IteratorUtils_asIteratorTest {\n\n    @Test\n    void testAsIterator() {\n        // Given\n        List<String> list = new ArrayList<>(List.of(\"a\", \"b\", \"c\"));\n        Enumeration<String> enumeration = Collections.enumeration(list);\n        Collection<String> removeCollection = new ArrayList<>();\n\n        // When\n        Iterator<String> iterator = IteratorUtils.asIterator(enumeration, removeCollection);\n\n        // Then\n        assertFalse(IteratorUtils.isEmpty(iterator));\n        assertEquals(3, IteratorUtils.size(iterator));\n    }\n\n    @Test\n    void testAsIteratorWithNullEnumeration() {\n        // Given\n        Enumeration<String> enumeration = null;\n        Collection<String> removeCollection = new ArrayList<>();\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> IteratorUtils.asIterator(enumeration, removeCollection));\n    }\n\n    @Test\n    void testAsIteratorWithNullRemoveCollection() {\n        // Given\n        List<String> list = new ArrayList<>(List.of(\"a\", \"b\", \"c\"));\n        Enumeration<String> enumeration = Collections.enumeration(list);\n        Collection<String> removeCollection = null;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> IteratorUtils.asIterator(enumeration, removeCollection));\n    }\n}\n"}]