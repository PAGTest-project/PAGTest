[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.TimeUnit;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class PassiveExpiringMap_isEmptyTest {\n\n    private PassiveExpiringMap<Integer, String> expiringMap;\n\n    @BeforeEach\n    public void setUp() {\n        expiringMap = new PassiveExpiringMap<>(1, TimeUnit.SECONDS);\n    }\n\n    @Test\n    public void testIsEmpty_WithNoEntries() {\n        assertTrue(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_WithNonExpiredEntries() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        assertFalse(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_WithExpiredEntries() throws InterruptedException {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        Thread.sleep(1100); // Wait for entries to expire\n        assertTrue(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_WithMixedExpiry() throws InterruptedException {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        Thread.sleep(500); // Wait for partial expiry\n        assertFalse(expiringMap.isEmpty());\n        Thread.sleep(600); // Wait for remaining entries to expire\n        assertTrue(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_AfterClear() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.clear();\n        assertTrue(expiringMap.isEmpty());\n    }\n\n    @Test\n    public void testIsEmpty_AfterRemove() {\n        expiringMap.put(1, \"One\");\n        expiringMap.put(2, \"Two\");\n        expiringMap.remove(1);\n        assertFalse(expiringMap.isEmpty());\n        expiringMap.remove(2);\n        assertTrue(expiringMap.isEmpty());\n    }\n}\n"}]