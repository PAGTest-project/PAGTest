[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_containsTest {\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    public void setUp() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>();\n        two = new HashSet<>();\n    }\n\n    @Test\n    public void testContainsWithEmptyComposite() {\n        assertFalse(c.contains(\"a\"));\n    }\n\n    @Test\n    public void testContainsWithSingleCollection() {\n        one.add(\"a\");\n        c.addComposited(one);\n        assertTrue(c.contains(\"a\"));\n        assertFalse(c.contains(\"b\"));\n    }\n\n    @Test\n    public void testContainsWithMultipleCollections() {\n        one.add(\"a\");\n        two.add(\"b\");\n        c.addComposited(one, two);\n        assertTrue(c.contains(\"a\"));\n        assertTrue(c.contains(\"b\"));\n        assertFalse(c.contains(\"c\"));\n    }\n\n    @Test\n    public void testContainsAfterRemoveComposited() {\n        one.add(\"a\");\n        two.add(\"b\");\n        c.addComposited(one, two);\n        c.removeComposited(one);\n        assertFalse(c.contains(\"a\"));\n        assertTrue(c.contains(\"b\"));\n    }\n\n    @Test\n    public void testContainsWithEmptyCollection() {\n        one.add(\"a\");\n        c.addComposited(one);\n        one.clear();\n        assertFalse(c.contains(\"a\"));\n    }\n}\n"}]