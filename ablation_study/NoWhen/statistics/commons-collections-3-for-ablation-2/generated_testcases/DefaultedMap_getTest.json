[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.apache.commons.collections4.functors.ConstantTransformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class DefaultedMap_getTest {\n\n    private DefaultedMap<String, String> defaultedMap;\n\n    @BeforeEach\n    public void setUp() {\n        Map<String, String> baseMap = new HashMap<>();\n        Transformer<String, String> transformer = ConstantTransformer.constantTransformer(\"Default\");\n        defaultedMap = new DefaultedMap<>(baseMap, transformer);\n    }\n\n    @Test\n    public void testGetExistingKey() {\n        defaultedMap.put(\"Key\", \"Value\");\n        assertEquals(\"Value\", defaultedMap.get(\"Key\"));\n    }\n\n    @Test\n    public void testGetNonExistingKey() {\n        assertFalse(defaultedMap.containsKey(\"NotInMap\"));\n        assertEquals(\"Default\", defaultedMap.get(\"NotInMap\"));\n    }\n\n    @Test\n    public void testGetNullKey() {\n        assertFalse(defaultedMap.containsKey(null));\n        assertEquals(\"Default\", defaultedMap.get(null));\n    }\n\n    @Test\n    public void testGetAfterAddingAndRemovingKey() {\n        defaultedMap.put(\"Key\", \"Value\");\n        assertEquals(\"Value\", defaultedMap.get(\"Key\"));\n        defaultedMap.remove(\"Key\");\n        assertFalse(defaultedMap.containsKey(\"Key\"));\n        assertEquals(\"Default\", defaultedMap.get(\"Key\"));\n    }\n\n    @Test\n    public void testGetWithEmptyMap() {\n        assertEquals(0, defaultedMap.size());\n        assertFalse(defaultedMap.containsKey(\"NotInMap\"));\n        assertEquals(\"Default\", defaultedMap.get(\"NotInMap\"));\n    }\n}\n"}]