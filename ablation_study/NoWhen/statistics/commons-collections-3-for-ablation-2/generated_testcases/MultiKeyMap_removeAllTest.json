[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.apache.commons.collections4.MapIterator;\nimport org.apache.commons.collections4.keyvalue.MultiKey;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiKeyMap_removeAllTest {\n\n    private MultiKeyMap<String, String> multiKeyMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiKeyMap = new MultiKeyMap<>();\n    }\n\n    @Test\n    public void testRemoveAllWithExistingKey() {\n        multiKeyMap.put(\"key1\", \"key2\", \"value1\");\n        multiKeyMap.put(\"key1\", \"key3\", \"value2\");\n        multiKeyMap.put(\"key4\", \"key5\", \"value3\");\n\n        assertTrue(multiKeyMap.removeAll(\"key1\"));\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key2\"));\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key3\"));\n        assertTrue(multiKeyMap.containsKey(\"key4\", \"key5\"));\n    }\n\n    @Test\n    public void testRemoveAllWithNonExistingKey() {\n        multiKeyMap.put(\"key1\", \"key2\", \"value1\");\n        multiKeyMap.put(\"key1\", \"key3\", \"value2\");\n\n        assertFalse(multiKeyMap.removeAll(\"key4\"));\n        assertTrue(multiKeyMap.containsKey(\"key1\", \"key2\"));\n        assertTrue(multiKeyMap.containsKey(\"key1\", \"key3\"));\n    }\n\n    @Test\n    public void testRemoveAllWithNullKey() {\n        multiKeyMap.put(null, \"key2\", \"value1\");\n        multiKeyMap.put(\"key1\", \"key3\", \"value2\");\n\n        assertTrue(multiKeyMap.removeAll(null));\n        assertFalse(multiKeyMap.containsKey(null, \"key2\"));\n        assertTrue(multiKeyMap.containsKey(\"key1\", \"key3\"));\n    }\n\n    @Test\n    public void testRemoveAllWithEmptyMap() {\n        assertFalse(multiKeyMap.removeAll(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveAllWithMultipleKeys() {\n        multiKeyMap.put(\"key1\", \"key2\", \"value1\");\n        multiKeyMap.put(\"key1\", \"key3\", \"value2\");\n        multiKeyMap.put(\"key1\", \"key4\", \"value3\");\n\n        assertTrue(multiKeyMap.removeAll(\"key1\"));\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key2\"));\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key3\"));\n        assertFalse(multiKeyMap.containsKey(\"key1\", \"key4\"));\n    }\n}\n"}]