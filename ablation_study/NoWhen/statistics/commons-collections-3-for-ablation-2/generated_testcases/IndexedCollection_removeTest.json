[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static java.util.Arrays.asList;\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class IndexedCollection_removeTest {\n\n    private IndexedCollection<Integer, String> indexedCollection;\n    private Collection<String> originalCollection;\n\n    @BeforeEach\n    public void setUp() {\n        originalCollection = new ArrayList<>(asList(\"1\", \"2\", \"3\"));\n        indexedCollection = decorateUniqueCollection(originalCollection);\n    }\n\n    @Test\n    public void testRemoveSuccess() {\n        assertTrue(indexedCollection.remove(\"1\"));\n        assertFalse(indexedCollection.contains(\"1\"));\n        assertNull(indexedCollection.get(1));\n    }\n\n    @Test\n    public void testRemoveFailure() {\n        assertFalse(indexedCollection.remove(\"4\"));\n        assertTrue(indexedCollection.contains(\"1\"));\n        assertEquals(\"1\", indexedCollection.get(1));\n    }\n\n    @Test\n    public void testRemoveAll() {\n        Collection<String> toRemove = new ArrayList<>(asList(\"1\", \"2\"));\n        assertTrue(indexedCollection.removeAll(toRemove));\n        assertFalse(indexedCollection.contains(\"1\"));\n        assertFalse(indexedCollection.contains(\"2\"));\n        assertNull(indexedCollection.get(1));\n        assertNull(indexedCollection.get(2));\n    }\n\n    @Test\n    public void testReindexAfterRemove() {\n        indexedCollection.remove(\"1\");\n        indexedCollection.reindex();\n        assertFalse(indexedCollection.contains(\"1\"));\n        assertNull(indexedCollection.get(1));\n    }\n\n    private IndexedCollection<Integer, String> decorateUniqueCollection(Collection<String> original) {\n        Transformer<String, Integer> keyTransformer = s -> Integer.valueOf(s);\n        return IndexedCollection.uniqueIndexedCollection(original, keyTransformer);\n    }\n}\n"}]