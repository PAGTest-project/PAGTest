[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class StaticBucketMap_removeTest {\n    private StaticBucketMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new StaticBucketMap<>(17);\n    }\n\n    @Test\n    public void testRemoveExistingKey() {\n        map.put(\"key1\", \"value1\");\n        assertTrue(map.containsKey(\"key1\"));\n        assertEquals(\"value1\", map.get(\"key1\"));\n\n        String removedValue = map.remove(\"key1\");\n        assertEquals(\"value1\", removedValue);\n        assertFalse(map.containsKey(\"key1\"));\n        assertNull(map.get(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveNonExistingKey() {\n        assertFalse(map.containsKey(\"key2\"));\n        assertNull(map.get(\"key2\"));\n\n        String removedValue = map.remove(\"key2\");\n        assertNull(removedValue);\n        assertFalse(map.containsKey(\"key2\"));\n        assertNull(map.get(\"key2\"));\n    }\n\n    @Test\n    public void testRemoveNullKey() {\n        map.put(null, \"nullValue\");\n        assertTrue(map.containsKey(null));\n        assertEquals(\"nullValue\", map.get(null));\n\n        String removedValue = map.remove(null);\n        assertEquals(\"nullValue\", removedValue);\n        assertFalse(map.containsKey(null));\n        assertNull(map.get(null));\n    }\n\n    @Test\n    public void testRemoveAndSizeDecrease() {\n        map.put(\"key3\", \"value3\");\n        map.put(\"key4\", \"value4\");\n        assertEquals(2, map.size());\n\n        map.remove(\"key3\");\n        assertEquals(1, map.size());\n\n        map.remove(\"key4\");\n        assertEquals(0, map.size());\n    }\n}\n"}]