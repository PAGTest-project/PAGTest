[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_elementTest {\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(5);\n    }\n\n    @Test\n    public void testElementWhenQueueIsEmpty() {\n        assertThrows(NoSuchElementException.class, () -> {\n            queue.element();\n        });\n    }\n\n    @Test\n    public void testElementWhenQueueHasElements() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n\n        assertEquals(\"1\", queue.element());\n    }\n\n    @Test\n    public void testElementAfterAddingAndRemovingElements() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.remove();\n\n        assertEquals(\"2\", queue.element());\n    }\n\n    @Test\n    public void testElementAfterQueueIsFull() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        queue.add(\"6\");\n\n        assertEquals(\"2\", queue.element());\n    }\n\n    @Test\n    public void testElementAfterClearingQueue() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.clear();\n\n        assertThrows(NoSuchElementException.class, () -> {\n            queue.element();\n        });\n    }\n}\n"}]