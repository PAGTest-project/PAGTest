[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Comparator;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport org.apache.commons.collections4.iterators.CollatingIterator;\n\npublic class IteratorUtils_collatedIteratorTest {\n\n    @Test\n    public void testCollatedIteratorWithNullComparator() {\n        // Given\n        Comparator<Integer> naturalComparator = Comparator.naturalOrder();\n        List<Iterator<Integer>> iterators = Arrays.asList(\n                Arrays.asList(1, 3, 5).iterator(),\n                Arrays.asList(2, 4, 6).iterator()\n        );\n\n        // When\n        Iterator<Integer> collatedIterator = IteratorUtils.collatedIterator(null, iterators);\n\n        // Then\n        assertTrue(collatedIterator instanceof CollatingIterator);\n        assertEquals(1, collatedIterator.next());\n        assertEquals(2, collatedIterator.next());\n        assertEquals(3, collatedIterator.next());\n        assertEquals(4, collatedIterator.next());\n        assertEquals(5, collatedIterator.next());\n        assertEquals(6, collatedIterator.next());\n    }\n\n    @Test\n    public void testCollatedIteratorWithCustomComparator() {\n        // Given\n        Comparator<Integer> reverseComparator = Comparator.reverseOrder();\n        List<Iterator<Integer>> iterators = Arrays.asList(\n                Arrays.asList(1, 3, 5).iterator(),\n                Arrays.asList(2, 4, 6).iterator()\n        );\n\n        // When\n        Iterator<Integer> collatedIterator = IteratorUtils.collatedIterator(reverseComparator, iterators);\n\n        // Then\n        assertTrue(collatedIterator instanceof CollatingIterator);\n        assertEquals(6, collatedIterator.next());\n        assertEquals(5, collatedIterator.next());\n        assertEquals(4, collatedIterator.next());\n        assertEquals(3, collatedIterator.next());\n        assertEquals(2, collatedIterator.next());\n        assertEquals(1, collatedIterator.next());\n    }\n}\n"}]