[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class TransformedMap_transformedMapTest {\n\n    @Test\n    public void testTransformedMapWithNonEmptyMap() {\n        // Given\n        Map<String, Integer> originalMap = new HashMap<>();\n        originalMap.put(\"key1\", 1);\n        originalMap.put(\"key2\", 2);\n\n        Transformer<String, String> keyTransformer = key -> key + \"_transformed\";\n        Transformer<Integer, Integer> valueTransformer = value -> value * 2;\n\n        // When\n        TransformedMap<String, Integer> transformedMap = TransformedMap.transformedMap(originalMap, keyTransformer, valueTransformer);\n\n        // Then\n        Map<String, Integer> expectedMap = new HashMap<>();\n        expectedMap.put(\"key1_transformed\", 2);\n        expectedMap.put(\"key2_transformed\", 4);\n\n        assertEquals(expectedMap, transformedMap.decorated());\n    }\n\n    @Test\n    public void testTransformedMapWithEmptyMap() {\n        // Given\n        Map<String, Integer> originalMap = new HashMap<>();\n\n        Transformer<String, String> keyTransformer = key -> key + \"_transformed\";\n        Transformer<Integer, Integer> valueTransformer = value -> value * 2;\n\n        // When\n        TransformedMap<String, Integer> transformedMap = TransformedMap.transformedMap(originalMap, keyTransformer, valueTransformer);\n\n        // Then\n        assertTrue(transformedMap.decorated().isEmpty());\n    }\n}\n"}]