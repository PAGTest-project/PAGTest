[{"uris": "src/main/java/org/apache/commons/collections4/Closure.java.Closure", "name": "Closure", "methods": ["[void]accept(T)", "[void]execute(T)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/KeyValue.java.KeyValue", "name": "KeyValue", "methods": ["[K]getKey()", "[V]getValue()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/IterableSortedMap.java.IterableSortedMap", "name": "IterableSortedMap", "methods": [], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/SetValuedMap.java.SetValuedMap", "name": "SetValuedMap", "methods": ["[Set<V>]get(K)", "[Set<V>]remove(Object)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Equator.java.Equator", "name": "Equator", "methods": ["[boolean]equate(T,T)", "[int]hash(T)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Get.java.Get", "name": "Get", "methods": ["[boolean]containsKey(Object)", "[boolean]containsValue(Object)", "Entry<K, V>>]entrySet()", "[V]get(Object)", "[boolean]isEmpty()", "[Set<K>]keySet()", "[V]remove(Object)", "[int]size()", "[Collection<V>]values()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/IterableMap.java.IterableMap", "name": "IterableMap", "methods": [], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/ListValuedMap.java.ListValuedMap", "name": "ListValuedMap", "methods": ["[List<V>]get(K)", "[List<V>]remove(Object)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Transformer.java.Transformer", "name": "Transformer", "methods": ["[R]apply(T)", "[R]transform(T)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/SortedBag.java.SortedBag", "name": "SortedBag", "methods": ["[Comparator<? super E>]comparator()", "[E]first()", "[E]last()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/SortedBidiMap.java.SortedBidiMap", "name": "SortedBidiMap", "methods": ["[SortedBidiMap<V, K>]inverseBidiMap()", "[Comparator<? super V>]valueComparator()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/OrderedBidiMap.java.OrderedBidiMap", "name": "OrderedBidiMap", "methods": ["[OrderedBidiMap<V, K>]inverseBidiMap()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/MultiValuedMap.java.MultiValuedMap", "name": "MultiValuedMap", "methods": ["[Map<K, Collection<V>>]asMap()", "[void]clear()", "[boolean]containsKey(Object)", "[boolean]containsMapping(Object,Object)", "[boolean]containsValue(Object)", "[Collection<Entry<K, V>>]entries()", "[Collection<V>]get(K)", "[boolean]isEmpty()", "[MultiSet<K>]keys()", "[Set<K>]keySet()", "[MapIterator<K, V>]mapIterator()", "[boolean]put(K,V)", "[boolean]putAll(K,Iterable<? extends V>)", "[boolean]putAll(Map<? extends K, ? extends V>)", "[boolean]putAll(MultiValuedMap<? extends K, ? extends V>)", "[Collection<V>]remove(Object)", "[boolean]removeMapping(Object,Object)", "[int]size()", "[Collection<V>]values()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/OrderedIterator.java.OrderedIterator", "name": "OrderedIterator", "methods": ["[boolean]hasPrevious()", "[E]previous()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/BoundedMap.java.BoundedMap", "name": "BoundedMap", "methods": ["[boolean]isFull()", "[int]maxSize()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/MultiSet.java.MultiSet", "name": "MultiSet", "methods": ["[boolean]add(E)", "[int]add(E,int)", "[boolean]containsAll(Collection<?>)", "[Set<Entry<E>>]entrySet()", "[boolean]equals(Object)", "[int]getCount(Object)", "[int]hashCode()", "[Iterator<E>]iterator()", "[boolean]remove(Object)", "[int]remove(Object,int)", "[boolean]removeAll(Collection<?>)", "[boolean]retainAll(Collection<?>)", "[int]setCount(E,int)", "[int]size()", "[Set<E>]uniqueSet()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/MultiMap.java.MultiMap", "name": "MultiMap", "methods": ["[boolean]containsValue(Object)", "[Object]get(Object)", "[Object]put(K,Object)", "[Object]remove(Object)", "[boolean]removeMapping(K,V)", "[int]size()", "[Collection<Object>]values()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Trie.java.Trie", "name": "Trie", "methods": ["[SortedMap<K, V>]prefixMap(K)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/BoundedCollection.java.BoundedCollection", "name": "BoundedCollection", "methods": ["[boolean]isFull()", "[int]maxSize()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/ResettableIterator.java.ResettableIterator", "name": "ResettableIterator", "methods": ["[void]reset()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/IterableGet.java.IterableGet", "name": "IterableGet", "methods": ["[MapIterator<K, V>]mapIterator()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Put.java.Put", "name": "Put", "methods": ["[void]clear()", "[Object]put(K,V)", "[void]putAll(Map<? extends K, ? extends V>)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Unmodifiable.java.Unmodifiable", "name": "Unmodifiable", "methods": [], "implementations": ["src/main/java/org/apache/commons/collections4/queue/UnmodifiableQueue.java.UnmodifiableQueue", "src/main/java/org/apache/commons/collections4/bag/UnmodifiableSortedBag.java.UnmodifiableSortedBag", "src/main/java/org/apache/commons/collections4/bag/UnmodifiableBag.java.UnmodifiableBag", "src/main/java/org/apache/commons/collections4/collection/UnmodifiableCollection.java.UnmodifiableCollection", "src/main/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollection.java.UnmodifiableBoundedCollection", "src/main/java/org/apache/commons/collections4/map/UnmodifiableEntrySet.java.UnmodifiableEntrySet", "src/main/java/org/apache/commons/collections4/map/UnmodifiableSortedMap.java.UnmodifiableSortedMap", "src/main/java/org/apache/commons/collections4/map/UnmodifiableOrderedMap.java.UnmodifiableOrderedMap", "src/main/java/org/apache/commons/collections4/map/UnmodifiableMap.java.UnmodifiableMap", "src/main/java/org/apache/commons/collections4/trie/UnmodifiableTrie.java.UnmodifiableTrie", "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableListIterator.java.UnmodifiableListIterator", "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableIterator.java.UnmodifiableIterator", "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableMapIterator.java.UnmodifiableMapIterator", "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableOrderedMapIterator.java.UnmodifiableOrderedMapIterator", "src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableSortedBidiMap.java.UnmodifiableSortedBidiMap", "src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableOrderedBidiMap.java.UnmodifiableOrderedBidiMap", "src/main/java/org/apache/commons/collections4/bidimap/UnmodifiableBidiMap.java.UnmodifiableBidiMap", "src/main/java/org/apache/commons/collections4/set/UnmodifiableNavigableSet.java.UnmodifiableNavigableSet", "src/main/java/org/apache/commons/collections4/set/UnmodifiableSortedSet.java.UnmodifiableSortedSet", "src/main/java/org/apache/commons/collections4/set/UnmodifiableSet.java.UnmodifiableSet", "src/main/java/org/apache/commons/collections4/list/UnmodifiableList.java.UnmodifiableList", "src/main/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMap.java.UnmodifiableMultiValuedMap", "src/main/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet.java.UnmodifiableMultiSet", "src/main/java/org/apache/commons/collections4/keyvalue/UnmodifiableMapEntry.java.UnmodifiableMapEntry"]}, {"uris": "src/main/java/org/apache/commons/collections4/OrderedMapIterator.java.OrderedMapIterator", "name": "OrderedMapIterator", "methods": ["[boolean]hasPrevious()", "[K]previous()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Bag.java.Bag", "name": "Bag", "methods": ["[boolean]add(E)", "[boolean]add(E,int)", "[boolean]containsAll(Collection<?>)", "[int]getCount(Object)", "[Iterator<E>]iterator()", "[boolean]remove(Object)", "[boolean]remove(Object,int)", "[boolean]removeAll(Collection<?>)", "[boolean]retainAll(Collection<?>)", "[int]size()", "[Set<E>]uniqueSet()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/MapIterator.java.MapIterator", "name": "MapIterator", "methods": ["[K]getKey()", "[V]getValue()", "[boolean]hasNext()", "[K]next()", "[void]remove()", "[V]setValue(V)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Factory.java.Factory", "name": "Factory", "methods": ["[T]create()", "[T]get()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/Predicate.java.Predicate", "name": "Predicate", "methods": ["[boolean]evaluate(T)", "[boolean]test(T)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/ResettableListIterator.java.ResettableListIterator", "name": "ResettableListIterator", "methods": [], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/BidiMap.java.BidiMap", "name": "BidiMap", "methods": ["[K]getKey(Object)", "[BidiMap<V, K>]inverseBidiMap()", "[V]put(K,V)", "[K]removeValue(Object)", "[Set<V>]values()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/OrderedMap.java.OrderedMap", "name": "OrderedMap", "methods": ["[K]firstKey()", "[K]lastKey()", "[OrderedMapIterator<K, V>]mapIterator()", "[K]nextKey(K)", "[K]previousKey(K)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/sequence/ReplacementsHandler.java.ReplacementsHandler", "name": "ReplacementsHandler", "methods": ["[void]handleReplacement(int,List<T>,List<T>)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/sequence/CommandVisitor.java.CommandVisitor", "name": "CommandVisitor", "methods": ["[void]visitDeleteCommand(T)", "[void]visitInsertCommand(T)", "[void]visitKeepCommand(T)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/functors/PredicateDecorator.java.PredicateDecorator", "name": "PredicateDecorator", "methods": ["[Predicate<? super T>[]]getPredicates()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/CellExtractor.java.CellExtractor", "name": "CellExtractor", "methods": ["[CellExtractor]from(IndexExtractor)", "[boolean]processCells(CellPredicate)", "[boolean]processIndices(IntPredicate)", "[IndexExtractor]uniqueIndices()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/BloomFilterExtractor.java.BloomFilterExtractor", "name": "BloomFilterExtractor", "methods": ["[BloomFilterExtractor]fromBloomFilterArray()", "[BloomFilter[]]asBloomFilterArray()", "[BloomFilter]flatten()", "[boolean]processBloomFilterPair(BloomFilterExtractor,BiPredicate<BloomFilter, BloomFilter>)", "[boolean]processBloomFilters(Predicate<BloomFilter>)"], "implementations": ["src/main/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter.java.LayeredBloomFilter", "src/main/java/org/apache/commons/collections4/bloomfilter/LayerManager.java.LayerManager"]}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilter.java.CountingBloomFilter", "name": "CountingBloomFilter", "methods": ["[boolean]add(CellExtractor)", "[CountingBloomFilter]copy()", "[int]getMaxCell()", "[int]getMaxInsert(BitMapExtractor)", "[int]getMaxInsert(BloomFilter)", "[int]getMaxInsert(CellExtractor)", "[int]getMaxInsert(Hasher)", "[int]getMaxInsert(IndexExtractor)", "[boolean]isValid()", "[boolean]merge(BitMapExtractor)", "[boolean]merge(BloomFilter)", "[boolean]merge(Hasher)", "[boolean]merge(IndexExtractor)", "[boolean]remove(BitMapExtractor)", "[boolean]remove(BloomFilter)", "[boolean]remove(Hasher)", "[boolean]remove(IndexExtractor)", "[boolean]subtract(CellExtractor)", "[IndexExtractor]uniqueIndices()"], "implementations": ["src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java.ArrayCountingBloomFilter"]}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/LongBiPredicate.java.LongBiPredicate", "name": "LongBiPredicate", "methods": ["[boolean]test(long,long)"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/IndexExtractor.java.IndexExtractor", "name": "IndexExtractor", "methods": ["[IndexExtractor]fromBitMapExtractor(BitMapExtractor)", "[IndexExtractor]fromIndexArray()", "[int[]]asIndexArray()", "[boolean]processIndices(IntPredicate)", "[IndexExtractor]uniqueIndices()"], "implementations": []}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/Hasher.java.Hasher", "name": "Hasher", "methods": ["[IndexExtractor]indices(Shape)"], "implementations": ["src/test/java/org/apache/commons/collections4/bloomfilter/NullHasher.java.NullHasher", "src/test/java/org/apache/commons/collections4/bloomfilter/ArrayHasher.java.ArrayHasher", "src/test/java/org/apache/commons/collections4/bloomfilter/IncrementingHasher.java.IncrementingHasher", "src/main/java/org/apache/commons/collections4/bloomfilter/EnhancedDoubleHasher.java.EnhancedDoubleHasher"]}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/BloomFilter.java.BloomFilter", "name": "BloomFilter", "methods": ["[int]cardinality()", "[int]characteristics()", "[void]clear()", "[boolean]contains(BitMapExtractor)", "[boolean]contains(BloomFilter)", "[boolean]contains(Hasher)", "[boolean]contains(IndexExtractor)", "[T]copy()", "[int]estimateIntersection(BloomFilter)", "[int]estimateN()", "[int]estimateUnion(BloomFilter)", "[Shape]getShape()", "[boolean]isEmpty()", "[boolean]isFull()", "[boolean]merge(BitMapExtractor)", "[boolean]merge(BloomFilter)", "[boolean]merge(Hasher)", "[boolean]merge(IndexExtractor)", "[IndexExtractor]uniqueIndices()"], "implementations": ["src/main/java/org/apache/commons/collections4/bloomfilter/LayeredBloomFilter.java.LayeredBloomFilter", "src/main/java/org/apache/commons/collections4/bloomfilter/SparseBloomFilter.java.SparseBloomFilter", "src/main/java/org/apache/commons/collections4/bloomfilter/SimpleBloomFilter.java.SimpleBloomFilter"]}, {"uris": "src/main/java/org/apache/commons/collections4/bloomfilter/BitMapExtractor.java.BitMapExtractor", "name": "BitMapExtractor", "methods": ["[BitMapExtractor]fromBitMapArray()", "[BitMapExtractor]fromIndexExtractor(IndexExtractor,int)", "[long[]]asBitMapArray()", "[boolean]processBitMapPairs(BitMapExtractor,LongBiPredicate)", "[boolean]processBitMaps(LongPredicate)"], "implementations": []}]