{"file_path": "src/test/java/org/apache/commons/collections4/map/PredicatedSortedMapTest.java", "testclass_name": "PredicatedSortedMapTest", "dependencies": ["package org.apache.commons.collections4.map;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import static org.junit.jupiter.api.Assertions.assertSame;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import java.util.Comparator;", "import java.util.HashMap;", "import java.util.Iterator;", "import java.util.Map;", "import java.util.SortedMap;", "import java.util.TreeMap;", "import java.util.concurrent.ConcurrentSkipListMap;", "import org.apache.commons.collections4.Predicate;", "import org.apache.commons.collections4.functors.TruePredicate;", "import org.junit.jupiter.api.Test;"], "name": "PredicatedSortedMapTest", "description": "Unit tests for PredicatedSortedMap functionality, including entry set, put operations, and sorting order.", "class_members": {"variables": [{"name": "truePredicate", "type": "static final Predicate<Object>"}, {"name": "testPredicate", "type": "static final Predicate<Object>"}, {"name": "reverseStringComparator", "type": "final Comparator<K>"}], "methods": [{"name": "decorateMap", "signature": "SortedMap<K, V> decorateMap(SortedMap<K, V> map, Predicate<? super K> keyPredicate, Predicate<? super V> valuePredicate)"}, {"name": "getCompatibilityVersion", "signature": "String getCompatibilityVersion()"}, {"name": "isAllowNullKey", "signature": "boolean isAllowNullKey()"}, {"name": "isSubMapViewsSerializable", "signature": "boolean isSubMapViewsSerializable()"}, {"name": "makeObject", "signature": "SortedMap<K, V> makeObject()"}, {"name": "makeTestMap", "signature": "SortedMap<K, V> makeTestMap()"}, {"name": "makeTestMapWithComparator", "signature": "SortedMap<K, V> makeTestMapWithComparator()"}], "nested_classes": [{"name": "ReverseStringComparator", "description": "Internal comparator class for reversing string comparison"}]}, "fixtures": [], "test_cases": [{"name": "testEntrySet", "primary_tested": ["SortedMap.entrySet()"], "external_dependencies": {"modules": ["TreeMap", "PredicatedSortedMap"], "class_members": [{"name": "truePredicate", "type": "variable"}]}, "category": "unit", "description": "Tests the entry set functionality of the SortedMap."}, {"name": "testPut", "primary_tested": ["Map.put(K,V)", "Map.putAll(Map<? extends K, ? extends V>)"], "associated_methods": ["Map.containsKey(Object)", "Map.containsValue(Object)"], "external_dependencies": {"modules": ["HashMap", "PredicatedSortedMap"], "class_members": [{"name": "testPredicate", "type": "variable"}]}, "category": "unit", "description": "Tests the put operation and putAll functionality of the SortedMap, ensuring illegal arguments are handled."}, {"name": "testReverseSortOrder", "primary_tested": ["SortedMap.put(K,V)", "SortedMap.lastKey()", "SortedMap.firstKey()", "SortedMap.tailMap(K).firstKey()", "SortedMap.headMap(K).lastKey()", "SortedMap.subMap(K,K).lastKey()", "SortedMap.comparator()"], "external_dependencies": {"modules": ["ConcurrentSkipListMap", "PredicatedSortedMap"], "class_members": [{"name": "testPredicate", "type": "variable"}, {"name": "reverseStringComparator", "type": "variable"}]}, "category": "unit", "description": "Tests the reverse sorting order of the SortedMap with a custom comparator."}, {"name": "testSortOrder", "primary_tested": ["SortedMap.put(K,V)", "SortedMap.firstKey()", "SortedMap.lastKey()", "SortedMap.tailMap(K).firstKey()", "SortedMap.headMap(K).lastKey()", "SortedMap.subMap(K,K).lastKey()", "SortedMap.comparator()"], "external_dependencies": {"modules": ["TreeMap", "PredicatedSortedMap"], "class_members": [{"name": "testPredicate", "type": "variable"}]}, "category": "unit", "description": "Tests the natural sorting order of the SortedMap."}]}