{"file_path": "src/test/java/org/apache/commons/collections4/collection/CompositeCollectionTest.java", "testclass_name": "CompositeCollectionTest", "dependencies": ["package org.apache.commons.collections4.collection;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.ArrayList;", "import java.util.Arrays;", "import java.util.Collection;", "import java.util.HashSet;", "import java.util.Iterator;", "import java.util.List;", "import java.util.function.Predicate;", "import org.junit.jupiter.api.Test;"], "name": "CompositeCollectionTest", "description": "Unit tests for CompositeCollection operations.", "class_members": {"variables": [{"name": "c", "type": "CompositeCollection<E>"}, {"name": "one", "type": "Collection<E>"}, {"name": "two", "type": "Collection<E>"}], "methods": [{"name": "setUpMutatorTest", "signature": "void setUpMutatorTest()"}, {"name": "setUpTest", "signature": "void setUpTest()"}]}, "fixtures": ["setUpTest"], "test_cases": [{"name": "testAddAllMutator", "primary_tested": ["CompositeCollection.addAll(Collection<? extends E>)"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the addAll functionality with a mutator in CompositeCollection."}, {"name": "testAddAllToCollection", "primary_tested": ["CompositeCollection.addComposited(Collection<? extends E>, Collection<? extends E>)"], "associated_methods": ["CompositeCollection.containsAll(Collection<?>)", "CompositeCollection.size()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests adding all elements from a CompositeCollection to another collection."}, {"name": "testAddMutator", "primary_tested": ["CompositeCollection.add(E)"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the add functionality with a mutator in CompositeCollection."}, {"name": "testAddNullList", "primary_tested": ["CompositeCollection.addComposited(Collection<? extends E>)"], "external_dependencies": {"modules": ["CompositeCollection"]}, "category": "unit", "description": "Tests adding a null list to CompositeCollection."}, {"name": "testAddNullLists2Args", "primary_tested": ["CompositeCollection.addComposited(Collection<? extends E>, Collection<? extends E>)"], "external_dependencies": {"modules": ["CompositeCollection"]}, "category": "unit", "description": "Tests adding two null lists to CompositeCollection."}, {"name": "testAddNullListsVarArgs", "primary_tested": ["CompositeCollection.addComposited(Collection<? extends E>...)"], "external_dependencies": {"modules": ["CompositeCollection"]}, "category": "unit", "description": "Tests adding multiple null lists to CompositeCollection."}, {"name": "testClear", "primary_tested": ["CompositeCollection.clear()"], "associated_methods": ["HashSet.isEmpty()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests clearing the CompositeCollection."}, {"name": "testContainsAll", "primary_tested": ["CompositeCollection.containsAll(Collection<?>)", "CompositeCollection.containsAll(null)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the containsAll functionality in CompositeCollection."}, {"name": "testIsEmpty", "primary_tested": ["CompositeCollection.isEmpty()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the isEmpty functionality in CompositeCollection."}, {"name": "testIterator", "primary_tested": ["CompositeCollection.iterator()"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the iterator functionality in CompositeCollection."}, {"name": "testMultipleCollectionsSize", "primary_tested": ["CompositeCollection.size()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the size functionality with multiple collections in CompositeCollection."}, {"name": "testRemove", "primary_tested": ["CompositeCollection.remove(Object)"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpMutatorTest"], "description": "Tests the remove functionality in CompositeCollection."}, {"name": "testRemoveAll", "primary_tested": ["CompositeCollection.removeAll(Collection<?>)", "CompositeCollection.removeAll(null)"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet", "ArrayList"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpMutatorTest"], "description": "Tests the removeAll functionality in CompositeCollection."}, {"name": "testRemoveComposited", "primary_tested": ["CompositeCollection.removeComposited(Collection<? extends E>)"], "associated_methods": ["CompositeCollection.contains(Object)", "CompositeCollection.size()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpMutatorTest"], "description": "Tests the removeComposited functionality in CompositeCollection."}, {"name": "testRemoveIf", "primary_tested": ["CompositeCollection.removeIf(Predicate<? super E>)", "CompositeCollection.removeIf(null)"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpMutatorTest"], "description": "Tests the removeIf functionality in CompositeCollection."}, {"name": "testRetainAll", "primary_tested": ["CompositeCollection.retainAll(Collection<?>)", "CompositeCollection.retainAll(null)"], "associated_methods": ["CompositeCollection.contains(Object)", "HashSet.contains(Object)"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the retainAll functionality in CompositeCollection."}, {"name": "testSize", "primary_tested": ["CompositeCollection.size()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests the size functionality in CompositeCollection."}, {"name": "testToCollection", "primary_tested": ["CompositeCollection.toCollection()"], "associated_methods": ["CompositeCollection.containsAll(Collection<?>)", "CompositeCollection.size()"], "external_dependencies": {"modules": ["CompositeCollection", "HashSet"], "class_members": [{"name": "c", "type": "variable"}, {"name": "one", "type": "variable"}, {"name": "two", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUpTest"], "description": "Tests converting the CompositeCollection to another collection."}, {"name": "testUnsupportedRemove", "primary_tested": ["CompositeCollection.remove(Object)"], "external_dependencies": {"modules": ["CompositeCollection"]}, "category": "unit", "description": "Tests the unsupported remove operation in CompositeCollection."}]}