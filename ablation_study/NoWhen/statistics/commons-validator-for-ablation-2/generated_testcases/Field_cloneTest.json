[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Field_cloneTest {\n    private Field field;\n\n    @BeforeEach\n    public void setUp() {\n        field = new Field();\n        field.addArg(createArg(\"required-position-3\", \"required\", 3));\n        field.addArg(createArg(\"required-position-1\", \"required\", 1));\n        field.addArg(createArg(\"default-position-0\"));\n        field.addArg(createArg(\"default-position-1\"));\n        field.addArg(createArg(\"default-position-2\"));\n    }\n\n    @Test\n    public void testCloneWithArgs() {\n        Field clonedField = (Field) field.clone();\n\n        assertNotNull(clonedField, \"Cloned field is null.\");\n        assertEquals(field.getArgs(\"required\").length, clonedField.getArgs(\"required\").length, \"Args length mismatch.\");\n\n        for (int i = 0; i < field.getArgs(\"required\").length; i++) {\n            assertEquals(field.getArg(\"required\", i).getKey(), clonedField.getArg(\"required\", i).getKey(), \"Arg key mismatch at position \" + i);\n        }\n    }\n\n    @Test\n    public void testCloneWithNullArgs() {\n        field.args = new Map[5];\n        field.args[0] = new HashMap<>();\n        field.args[2] = new HashMap<>();\n\n        Field clonedField = (Field) field.clone();\n\n        assertNotNull(clonedField, \"Cloned field is null.\");\n        assertEquals(field.args.length, clonedField.args.length, \"Args array length mismatch.\");\n\n        for (int i = 0; i < field.args.length; i++) {\n            if (field.args[i] == null) {\n                assertNull(clonedField.args[i], \"Cloned args at position \" + i + \" should be null.\");\n            } else {\n                assertNotNull(clonedField.args[i], \"Cloned args at position \" + i + \" should not be null.\");\n            }\n        }\n    }\n\n    private Arg createArg(String key) {\n        return createArg(key, null, -1);\n    }\n\n    private Arg createArg(String key, String name) {\n        return createArg(key, name, -1);\n    }\n\n    private Arg createArg(String key, int position) {\n        return createArg(key, null, position);\n    }\n\n    private Arg createArg(String key, String name, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        arg.setPosition(position);\n        return arg;\n    }\n}\n"}]