[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DomainValidator_updateTLDOverrideTest {\n\n    private DomainValidator validator;\n\n    @BeforeEach\n    public void setUp() {\n        validator = DomainValidator.getInstance(false);\n    }\n\n    @Test\n    public void testUpdateTLDOverrideValid() {\n        String[] tlds = {\"example1\", \"example2\"};\n        DomainValidator.updateTLDOverride(DomainValidator.ArrayType.GENERIC_PLUS, tlds);\n        assertTrue(validator.isValidTld(\"example1\"));\n        assertTrue(validator.isValidTld(\"example2\"));\n    }\n\n    @Test\n    public void testUpdateTLDOverrideInvalid() {\n        String[] tlds = {\"example1\", \"example2\"};\n        assertThrows(IllegalStateException.class, () -> {\n            DomainValidator.updateTLDOverride(DomainValidator.ArrayType.GENERIC_PLUS, tlds);\n        });\n    }\n\n    @Test\n    public void testUpdateTLDOverrideIllegalArgument() {\n        String[] tlds = {\"example1\", \"example2\"};\n        assertThrows(IllegalArgumentException.class, () -> {\n            DomainValidator.updateTLDOverride(DomainValidator.ArrayType.GENERIC_RO, tlds);\n        });\n    }\n\n    @Test\n    public void testUpdateTLDOverrideAfterGetInstance() {\n        DomainValidator.getInstance(true);\n        String[] tlds = {\"example1\", \"example2\"};\n        assertThrows(IllegalStateException.class, () -> {\n            DomainValidator.updateTLDOverride(DomainValidator.ArrayType.GENERIC_PLUS, tlds);\n        });\n    }\n\n    @Test\n    public void testUpdateTLDOverrideLowerCase() {\n        String[] tlds = {\"Example1\", \"Example2\"};\n        DomainValidator.updateTLDOverride(DomainValidator.ArrayType.GENERIC_PLUS, tlds);\n        assertTrue(validator.isValidTld(\"example1\"));\n        assertTrue(validator.isValidTld(\"example2\"));\n    }\n\n    @Test\n    public void testUpdateTLDOverrideSorting() {\n        String[] tlds = {\"example2\", \"example1\"};\n        DomainValidator.updateTLDOverride(DomainValidator.ArrayType.GENERIC_PLUS, tlds);\n        String[] updatedTLDs = validator.getOverrides(DomainValidator.ArrayType.GENERIC_PLUS);\n        assertEquals(\"example1\", updatedTLDs[0]);\n        assertEquals(\"example2\", updatedTLDs[1]);\n    }\n}\n"}]