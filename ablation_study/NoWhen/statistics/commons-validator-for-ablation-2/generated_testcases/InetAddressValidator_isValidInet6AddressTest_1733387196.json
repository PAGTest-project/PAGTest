[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class InetAddressValidator_isValidInet6AddressTest {\n    private InetAddressValidator validator;\n\n    @BeforeEach\n    protected void setUp() {\n        validator = new InetAddressValidator();\n    }\n\n    @Test\n    public void testValidInet6Address() {\n        assertTrue(validator.isValidInet6Address(\"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"), \"2001:0db8:85a3:0000:0000:8a2e:0370:7334 should be valid\");\n        assertTrue(validator.isValidInet6Address(\"2001:db8::1\"), \"2001:db8::1 should be valid\");\n        assertTrue(validator.isValidInet6Address(\"::1\"), \"::1 should be valid\");\n        assertTrue(validator.isValidInet6Address(\"::ffff:192.0.2.128\"), \"::ffff:192.0.2.128 should be valid\");\n    }\n\n    @Test\n    public void testInvalidInet6Address() {\n        assertFalse(validator.isValidInet6Address(\"2001:0db8:85a3:0000:0000:8a2e:0370:7334:1\"), \"2001:0db8:85a3:0000:0000:8a2e:0370:7334:1 should be invalid\");\n        assertFalse(validator.isValidInet6Address(\"2001:db8::1::1\"), \"2001:db8::1::1 should be invalid\");\n        assertFalse(validator.isValidInet6Address(\":::\"), \"::: should be invalid\");\n        assertFalse(validator.isValidInet6Address(\"::ffff:192.0.2.300\"), \"::ffff:192.0.2.300 should be invalid\");\n    }\n\n    @Test\n    public void testValidInet6AddressWithPrefix() {\n        assertTrue(validator.isValidInet6Address(\"2001:db8::1/64\"), \"2001:db8::1/64 should be valid\");\n        assertTrue(validator.isValidInet6Address(\"::1/128\"), \"::1/128 should be valid\");\n    }\n\n    @Test\n    public void testInvalidInet6AddressWithPrefix() {\n        assertFalse(validator.isValidInet6Address(\"2001:db8::1/129\"), \"2001:db8::1/129 should be invalid\");\n        assertFalse(validator.isValidInet6Address(\"::1/abc\"), \"::1/abc should be invalid\");\n    }\n\n    @Test\n    public void testValidInet6AddressWithZoneId() {\n        assertTrue(validator.isValidInet6Address(\"fe80::1%eth0\"), \"fe80::1%eth0 should be valid\");\n        assertTrue(validator.isValidInet6Address(\"fe80::1%1\"), \"fe80::1%1 should be valid\");\n    }\n\n    @Test\n    public void testInvalidInet6AddressWithZoneId() {\n        assertFalse(validator.isValidInet6Address(\"fe80::1%\"), \"fe80::1% should be invalid\");\n        assertFalse(validator.isValidInet6Address(\"fe80::1%eth0/64\"), \"fe80::1%eth0/64 should be invalid\");\n    }\n}\n"}]