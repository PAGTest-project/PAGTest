[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.TimeZone;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class DateValidator_compareDatesTest {\n    private DateValidator dateValidator;\n\n    @BeforeEach\n    protected void setUp() {\n        dateValidator = new DateValidator();\n    }\n\n    @Test\n    public void testCompareDatesEqual() {\n        Date date1 = createDate(2023, Calendar.OCTOBER, 1);\n        Date date2 = createDate(2023, Calendar.OCTOBER, 1);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        int result = dateValidator.compareDates(date1, date2, timeZone);\n        assertEquals(0, result, \"Dates should be equal\");\n    }\n\n    @Test\n    public void testCompareDatesFirstLess() {\n        Date date1 = createDate(2023, Calendar.SEPTEMBER, 30);\n        Date date2 = createDate(2023, Calendar.OCTOBER, 1);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        int result = dateValidator.compareDates(date1, date2, timeZone);\n        assertEquals(-1, result, \"First date should be less\");\n    }\n\n    @Test\n    public void testCompareDatesFirstGreater() {\n        Date date1 = createDate(2023, Calendar.OCTOBER, 2);\n        Date date2 = createDate(2023, Calendar.OCTOBER, 1);\n        TimeZone timeZone = TimeZone.getDefault();\n\n        int result = dateValidator.compareDates(date1, date2, timeZone);\n        assertEquals(1, result, \"First date should be greater\");\n    }\n\n    private Date createDate(int year, int month, int day) {\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(year, month, day, 0, 0, 0);\n        calendar.set(Calendar.MILLISECOND, 0);\n        return calendar.getTime();\n    }\n}\n"}]