[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class RegexValidator_isValidTest {\n\n    private static final String REGEX_1 = \"^[a-z]+$\";\n    private static final String REGEX_2 = \"^[A-Z]+$\";\n    private static final String REGEX_3 = \"^[0-9]+$\";\n    private static final String[] MULTIPLE_REGEX = {REGEX_1, REGEX_2, REGEX_3};\n\n    private RegexValidator multipleRegexValidator;\n    private RegexValidator singleRegexValidator1;\n    private RegexValidator singleRegexValidator2;\n    private RegexValidator singleRegexValidator3;\n\n    @BeforeEach\n    public void setUp() {\n        multipleRegexValidator = new RegexValidator(MULTIPLE_REGEX);\n        singleRegexValidator1 = new RegexValidator(REGEX_1);\n        singleRegexValidator2 = new RegexValidator(REGEX_2);\n        singleRegexValidator3 = new RegexValidator(REGEX_3);\n    }\n\n    @Test\n    public void testIsValidWithNullValue() {\n        assertFalse(multipleRegexValidator.isValid(null), \"isValid() with null value should return false\");\n    }\n\n    @Test\n    public void testIsValidWithMatchingValue() {\n        String value = \"abc\";\n        assertTrue(multipleRegexValidator.isValid(value), \"isValid() with matching value should return true\");\n    }\n\n    @Test\n    public void testIsValidWithNonMatchingValue() {\n        String value = \"ABC123\";\n        assertFalse(multipleRegexValidator.isValid(value), \"isValid() with non-matching value should return false\");\n    }\n\n    @Test\n    public void testIsValidWithSingleRegexMatching() {\n        String value = \"ABC\";\n        assertTrue(singleRegexValidator2.isValid(value), \"isValid() with single regex matching should return true\");\n    }\n\n    @Test\n    public void testIsValidWithSingleRegexNonMatching() {\n        String value = \"abc\";\n        assertFalse(singleRegexValidator2.isValid(value), \"isValid() with single regex non-matching should return false\");\n    }\n\n    @Test\n    public void testIsValidWithMultipleRegexMatching() {\n        String value = \"123\";\n        assertTrue(multipleRegexValidator.isValid(value), \"isValid() with multiple regex matching should return true\");\n    }\n\n    @Test\n    public void testIsValidWithMultipleRegexNonMatching() {\n        String value = \"abcABC123\";\n        assertFalse(multipleRegexValidator.isValid(value), \"isValid() with multiple regex non-matching should return false\");\n    }\n}\n"}]