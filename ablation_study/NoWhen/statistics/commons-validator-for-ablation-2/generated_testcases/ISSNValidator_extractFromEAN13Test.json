[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.apache.commons.validator.routines.checkdigit.CheckDigitException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ISSNValidator_extractFromEAN13Test {\n\n    private ISSNValidator issnValidator;\n\n    @BeforeEach\n    public void setUp() {\n        issnValidator = new ISSNValidator();\n    }\n\n    @Test\n    public void testExtractFromEAN13Valid() {\n        String ean13 = \"9771234567002\";\n        String expectedISSN = \"12345670\"; // Corrected expected ISSN\n        assertEquals(expectedISSN, issnValidator.extractFromEAN13(ean13));\n    }\n\n    @Test\n    public void testExtractFromEAN13InvalidLength() {\n        String ean13 = \"977123456700\";\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            issnValidator.extractFromEAN13(ean13);\n        });\n        assertEquals(\"Invalid length 12 for '977123456700'\", exception.getMessage());\n    }\n\n    @Test\n    public void testExtractFromEAN13InvalidPrefix() {\n        String ean13 = \"9781234567002\";\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            issnValidator.extractFromEAN13(ean13);\n        });\n        assertEquals(\"Prefix must be 977 to contain an ISSN: '9781234567002'\", exception.getMessage());\n    }\n\n    @Test\n    public void testExtractFromEAN13NullResult() {\n        String ean13 = \"9771234567003\"; // Assuming this EAN-13 is invalid\n        assertNull(issnValidator.extractFromEAN13(ean13));\n    }\n\n    @Test\n    public void testExtractFromEAN13CheckDigitException() {\n        String ean13 = \"9771234567004\"; // Assuming this EAN-13 causes a CheckDigitException\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            issnValidator.extractFromEAN13(ean13);\n        });\n        assertTrue(exception.getMessage().contains(\"Check digit error for '9771234567004'\"));\n    }\n}\n"}]