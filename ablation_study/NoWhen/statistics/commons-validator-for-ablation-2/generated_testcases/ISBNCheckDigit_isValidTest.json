[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines.checkdigit;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ISBNCheckDigit_isValidTest {\n    private CheckDigit routine;\n\n    @BeforeEach\n    protected void setUp() {\n        routine = ISBNCheckDigit.ISBN10_CHECK_DIGIT;\n    }\n\n    @Test\n    public void testIsValidWithNullCode() {\n        assertFalse(routine.isValid(null));\n    }\n\n    @Test\n    public void testIsValidWithInvalidLength() {\n        assertFalse(routine.isValid(\"123456789\")); // Length 9\n        assertFalse(routine.isValid(\"12345678901\")); // Length 11\n        assertFalse(routine.isValid(\"123456789012\")); // Length 12\n        assertFalse(routine.isValid(\"12345678901234\")); // Length 14\n    }\n\n    @Test\n    public void testIsValidWithValidISBN10() {\n        assertTrue(routine.isValid(\"020163385X\"));\n    }\n\n    @Test\n    public void testIsValidWithInvalidISBN10() {\n        assertFalse(routine.isValid(\"0201633851\"));\n    }\n\n    @Test\n    public void testIsValidWithValidISBN13() {\n        assertTrue(routine.isValid(\"9780072129519\"));\n    }\n\n    @Test\n    public void testIsValidWithInvalidISBN13() {\n        assertFalse(routine.isValid(\"9780072129518\"));\n    }\n}\n"}]