[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils.signaturegenerator;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport javax.crypto.Mac;\nimport javax.crypto.spec.SecretKeySpec;\nimport org.apache.commons.codec.binary.Hex;\nimport java.security.InvalidKeyException;\nimport java.security.NoSuchAlgorithmException;\n\npublic class HmacSignatureGenerator_getSignatureTest {\n\n    @Test\n    public void testGetSignature_Success() throws Exception {\n        String apiSecret = \"secret\";\n        String data = \"testData\";\n        HmacSignatureGenerator generator = new HmacSignatureGenerator(apiSecret);\n\n        String expectedSignature = Hex.encodeHexString(generateHmacSha256(data.getBytes(), apiSecret.getBytes()));\n        String actualSignature = generator.getSignature(data);\n\n        assertEquals(expectedSignature, actualSignature);\n    }\n\n    @Test(expected = RuntimeException.class)\n    public void testGetSignature_Exception() throws Exception {\n        String apiSecret = \"secret\";\n        String data = \"testData\";\n        HmacSignatureGenerator generator = new HmacSignatureGenerator(apiSecret);\n\n        // Mocking an exception by providing an invalid algorithm\n        generator = new HmacSignatureGenerator(apiSecret) {\n            @Override\n            public String getSignature(String data) {\n                try {\n                    SecretKeySpec secretKeySpec = new SecretKeySpec(apiSecret.getBytes(), \"InvalidAlgorithm\");\n                    Mac mac = Mac.getInstance(\"InvalidAlgorithm\");\n                    mac.init(secretKeySpec);\n                    byte[] hmacSha256 = mac.doFinal(data.getBytes());\n                    return Hex.encodeHexString(hmacSha256);\n                } catch (Exception e) {\n                    throw new RuntimeException(\"Failed to calculate hmac-sha256\", e);\n                }\n            }\n        };\n\n        generator.getSignature(data);\n    }\n\n    private byte[] generateHmacSha256(byte[] data, byte[] key) throws NoSuchAlgorithmException, InvalidKeyException {\n        SecretKeySpec secretKeySpec = new SecretKeySpec(key, \"HmacSHA256\");\n        Mac mac = Mac.getInstance(\"HmacSHA256\");\n        mac.init(secretKeySpec);\n        return mac.doFinal(data);\n    }\n}\n"}]