[{"strategy": "generate", "code": "\npackage io.cucumber.cucumberexpressions;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ParameterType_compareToTest {\n\n    private ParameterType<String> parameterType1;\n    private ParameterType<String> parameterType2;\n    private ParameterType<String> parameterType3;\n    private ParameterType<String> parameterType4;\n\n    @BeforeEach\n    public void setUp() {\n        parameterType1 = new ParameterType<>(\"name1\", \"regexp1\", String.class, (String arg) -> arg, false, true);\n        parameterType2 = new ParameterType<>(\"name2\", \"regexp2\", String.class, (String arg) -> arg, false, false);\n        parameterType3 = new ParameterType<>(\"name3\", \"regexp3\", String.class, (String arg) -> arg, true, false);\n        parameterType4 = new ParameterType<>(\"name4\", \"regexp4\", String.class, (String arg) -> arg, true, true);\n    }\n\n    @Test\n    public void testCompareTo_PreferForRegexpMatch_True() {\n        assertEquals(-1, parameterType3.compareTo(parameterType2));\n    }\n\n    @Test\n    public void testCompareTo_PreferForRegexpMatch_False() {\n        assertEquals(1, parameterType2.compareTo(parameterType3));\n    }\n\n    @Test\n    public void testCompareTo_SamePreferForRegexpMatch_DifferentNames() {\n        assertEquals(-1, parameterType1.compareTo(parameterType2));\n    }\n\n    @Test\n    public void testCompareTo_SamePreferForRegexpMatch_SameNames() {\n        assertEquals(0, parameterType1.compareTo(parameterType1));\n    }\n\n    @Test\n    public void testCompareTo_NullName() {\n        ParameterType<String> nullNameParameterType = new ParameterType<>(null, \"regexp\", String.class, (String arg) -> arg, false, false);\n        assertEquals(-1, nullNameParameterType.compareTo(parameterType1));\n    }\n}\n"}]