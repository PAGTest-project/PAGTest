[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.responses.ApiResponse;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ChangedResponse_toStringTest {\n\n    private ChangedResponse changedResponse;\n    private ApiResponse oldApiResponse;\n    private ApiResponse newApiResponse;\n    private DiffContext context;\n    private ChangedMetadata description;\n    private ChangedHeaders headers;\n    private ChangedContent content;\n    private ChangedExtensions extensions;\n\n    @BeforeEach\n    public void setUp() {\n        oldApiResponse = new ApiResponse().description(\"Old Response\");\n        newApiResponse = new ApiResponse().description(\"New Response\");\n        context = new DiffContext(null); // Provide a valid OpenApiDiffOptions if needed\n        description = new ChangedMetadata();\n        \n        Map<String, io.swagger.v3.oas.models.headers.Header> oldHeadersMap = new HashMap<>();\n        Map<String, io.swagger.v3.oas.models.headers.Header> newHeadersMap = new HashMap<>();\n        headers = new ChangedHeaders(oldHeadersMap, newHeadersMap, context);\n        \n        io.swagger.v3.oas.models.media.Content oldContent = new io.swagger.v3.oas.models.media.Content();\n        io.swagger.v3.oas.models.media.Content newContent = new io.swagger.v3.oas.models.media.Content();\n        content = new ChangedContent(oldContent, newContent, context);\n        \n        Map<String, Object> oldExtensionsMap = new HashMap<>();\n        Map<String, Object> newExtensionsMap = new HashMap<>();\n        extensions = new ChangedExtensions(oldExtensionsMap, newExtensionsMap, context);\n\n        changedResponse = new ChangedResponse(oldApiResponse, newApiResponse, context);\n        changedResponse.setDescription(description)\n                       .setHeaders(headers)\n                       .setContent(content)\n                       .setExtensions(extensions);\n    }\n\n    @Test\n    public void testToString() {\n        String expected = \"ChangedResponse(oldApiResponse=io.swagger.v3.oas.models.responses.ApiResponse@, newApiResponse=io.swagger.v3.oas.models.responses.ApiResponse@, context=org.openapitools.openapidiff.core.model.DiffContext@, description=org.openapitools.openapidiff.core.model.ChangedMetadata@, headers=org.openapitools.openapidiff.core.model.ChangedHeaders@, content=org.openapitools.openapidiff.core.model.ChangedContent@, extensions=org.openapitools.openapidiff.core.model.ChangedExtensions@)\";\n        String actual = changedResponse.toString();\n        assertEquals(expected, actual);\n    }\n}\n"}]