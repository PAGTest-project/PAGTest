[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.Collections;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\nimport org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED;\nimport org.apache.commons.configuration2.CompositeConfiguration;\n\npublic class ChangedOpenApi_isCoreChangedTest {\n\n    private ChangedOpenApi changedOpenApi;\n    private OpenApiDiffOptions options;\n\n    @BeforeEach\n    public void setUp() {\n        options = mock(OpenApiDiffOptions.class);\n        changedOpenApi = new ChangedOpenApi(options);\n    }\n\n    @Test\n    public void testIsCoreChanged_NoChanges() {\n        changedOpenApi.setNewEndpoints(Collections.emptyList());\n        changedOpenApi.setMissingEndpoints(Collections.emptyList());\n\n        DiffResult result = changedOpenApi.isCoreChanged();\n\n        assertEquals(DiffResult.NO_CHANGES, result);\n    }\n\n    @Test\n    public void testIsCoreChanged_Compatible() {\n        changedOpenApi.setNewEndpoints(List.of(mock(Endpoint.class)));\n        changedOpenApi.setMissingEndpoints(Collections.emptyList());\n\n        DiffResult result = changedOpenApi.isCoreChanged();\n\n        assertEquals(DiffResult.COMPATIBLE, result);\n    }\n\n    @Test\n    public void testIsCoreChanged_Incompatible() {\n        CompositeConfiguration config = mock(CompositeConfiguration.class);\n        when(options.getConfig()).thenReturn(config);\n        when(OPENAPI_ENDPOINTS_DECREASED.enabled(config)).thenReturn(true);\n\n        changedOpenApi.setNewEndpoints(Collections.emptyList());\n        changedOpenApi.setMissingEndpoints(List.of(mock(Endpoint.class)));\n\n        DiffResult result = changedOpenApi.isCoreChanged();\n\n        assertEquals(DiffResult.INCOMPATIBLE, result);\n    }\n}\n"}]