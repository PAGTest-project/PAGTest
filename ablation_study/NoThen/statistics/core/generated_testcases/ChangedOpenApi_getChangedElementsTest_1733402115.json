[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ChangedOpenApi_getChangedElementsTest {\n\n    private ChangedOpenApi changedOpenApi;\n    private ChangedOperation changedOperation1;\n    private ChangedOperation changedOperation2;\n    private ChangedSchema changedSchema1;\n    private ChangedSchema changedSchema2;\n    private ChangedExtensions changedExtensions;\n\n    @BeforeEach\n    public void setUp() {\n        OpenApiDiffOptions options = new OpenApiDiffOptions(new org.apache.commons.configuration2.CompositeConfiguration());\n        changedOpenApi = new ChangedOpenApi(options);\n        changedOperation1 = new ChangedOperation(\"path1\", io.swagger.v3.oas.models.PathItem.HttpMethod.GET, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation());\n        changedOperation2 = new ChangedOperation(\"path2\", io.swagger.v3.oas.models.PathItem.HttpMethod.POST, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation());\n        changedSchema1 = new ChangedSchema();\n        changedSchema2 = new ChangedSchema();\n        changedExtensions = new ChangedExtensions(Collections.emptyMap(), Collections.emptyMap(), null);\n    }\n\n    @Test\n    public void testGetChangedElementsWithOperationsAndSchemas() {\n        List<ChangedOperation> changedOperations = Arrays.asList(changedOperation1, changedOperation2);\n        List<ChangedSchema> changedSchemas = Arrays.asList(changedSchema1, changedSchema2);\n\n        changedOpenApi.setChangedOperations(changedOperations);\n        changedOpenApi.setChangedSchemas(changedSchemas);\n        changedOpenApi.setChangedExtensions(changedExtensions);\n\n        List<Changed> changedElements = changedOpenApi.getChangedElements();\n\n        assertEquals(4, changedElements.size());\n        assertEquals(changedOperation1, changedElements.get(0));\n        assertEquals(changedOperation2, changedElements.get(1));\n        assertEquals(changedExtensions, changedElements.get(2));\n        assertEquals(changedSchema1, changedElements.get(3));\n    }\n\n    @Test\n    public void testGetChangedElementsWithNoOperationsAndSchemas() {\n        changedOpenApi.setChangedOperations(Collections.emptyList());\n        changedOpenApi.setChangedSchemas(Collections.emptyList());\n        changedOpenApi.setChangedExtensions(changedExtensions);\n\n        List<Changed> changedElements = changedOpenApi.getChangedElements();\n\n        assertEquals(1, changedElements.size());\n        assertEquals(changedExtensions, changedElements.get(0));\n    }\n\n    @Test\n    public void testGetChangedElementsWithOnlyOperations() {\n        List<ChangedOperation> changedOperations = Arrays.asList(changedOperation1, changedOperation2);\n\n        changedOpenApi.setChangedOperations(changedOperations);\n        changedOpenApi.setChangedSchemas(Collections.emptyList());\n        changedOpenApi.setChangedExtensions(changedExtensions);\n\n        List<Changed> changedElements = changedOpenApi.getChangedElements();\n\n        assertEquals(3, changedElements.size());\n        assertEquals(changedOperation1, changedElements.get(0));\n        assertEquals(changedOperation2, changedElements.get(1));\n        assertEquals(changedExtensions, changedElements.get(2));\n    }\n\n    @Test\n    public void testGetChangedElementsWithOnlySchemas() {\n        List<ChangedSchema> changedSchemas = Arrays.asList(changedSchema1, changedSchema2);\n\n        changedOpenApi.setChangedOperations(Collections.emptyList());\n        changedOpenApi.setChangedSchemas(changedSchemas);\n        changedOpenApi.setChangedExtensions(changedExtensions);\n\n        List<Changed> changedElements = changedOpenApi.getChangedElements();\n\n        assertEquals(3, changedElements.size());\n        assertEquals(changedExtensions, changedElements.get(0));\n        assertEquals(changedSchema1, changedElements.get(1));\n        assertEquals(changedSchema2, changedElements.get(2));\n    }\n}\n"}]