[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines.checkdigit;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ISBNCheckDigit_calculateTest {\n    private ISBNCheckDigit routine;\n\n    @BeforeEach\n    protected void setUp() {\n        routine = ISBNCheckDigit.ISBN_CHECK_DIGIT;\n    }\n\n    @Test\n    public void testCalculateISBN10() throws CheckDigitException {\n        String code = \"020163385\";\n        String expected = \"X\"; // Example check digit for ISBN-10\n        assertEquals(expected, routine.calculate(code), \"calculate() ISBN-10\");\n    }\n\n    @Test\n    public void testCalculateISBN13() throws CheckDigitException {\n        String code = \"978007212951\";\n        String expected = \"9\"; // Example check digit for ISBN-13\n        assertEquals(expected, routine.calculate(code), \"calculate() ISBN-13\");\n    }\n\n    @Test\n    public void testCalculateMissingCode() {\n        String code = null;\n        CheckDigitException exception = assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(code);\n        });\n        assertEquals(\"ISBN Code is missing\", exception.getMessage(), \"calculate() missing code\");\n    }\n\n    @Test\n    public void testCalculateInvalidLength() {\n        String code = \"1234567890123\";\n        CheckDigitException exception = assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(code);\n        });\n        assertEquals(\"Invalid ISBN Length = 13\", exception.getMessage(), \"calculate() invalid length\");\n    }\n}\n"}]