[{"strategy": "retry", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Var_toStringTest {\n\n    private Var var;\n\n    @BeforeEach\n    public void setUp() {\n        var = new Var();\n    }\n\n    @Test\n    public void testToStringWithAllFields() {\n        var.setName(\"testName\");\n        var.setValue(\"testValue\");\n        var.setJsType(\"string\");\n        var.setResource(true);\n        var.setBundle(\"testBundle\");\n\n        String expected = \"Var: name=testName  value=testValue  resource=true  bundle=testBundle  jsType=string\\n\";\n        assertEquals(expected, var.toString());\n    }\n\n    @Test\n    public void testToStringWithoutBundle() {\n        var.setName(\"testName\");\n        var.setValue(\"testValue\");\n        var.setJsType(\"int\");\n        var.setResource(false);\n\n        String expected = \"Var: name=testName  value=testValue  resource=false  jsType=int\\n\";\n        assertEquals(expected, var.toString());\n    }\n\n    @Test\n    public void testToStringWithNullJsType() {\n        var.setName(\"testName\");\n        var.setValue(\"testValue\");\n        var.setResource(false);\n\n        String expected = \"Var: name=testName  value=testValue  resource=false  jsType=null\\n\";\n        assertEquals(expected, var.toString());\n    }\n\n    @Test\n    public void testToStringWithEmptyFields() {\n        var.setName(\"\");\n        var.setValue(\"\");\n        var.setJsType(\"\");\n        var.setResource(false);\n\n        String expected = \"Var: name=  value=  resource=false  jsType=\\n\";\n        assertEquals(expected, var.toString());\n    }\n\n    @Test\n    public void testToStringWithResourceTrueButNoBundle() {\n        var.setName(\"testName\");\n        var.setValue(\"testValue\");\n        var.setJsType(\"regexp\");\n        var.setResource(true);\n\n        String expected = \"Var: name=testName  value=testValue  resource=true  jsType=regexp\\n\";\n        assertEquals(expected, var.toString());\n    }\n}\n"}]