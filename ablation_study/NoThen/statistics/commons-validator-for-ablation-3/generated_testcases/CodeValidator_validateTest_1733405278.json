[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.apache.commons.validator.routines.checkdigit.CheckDigit;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass CodeValidator_validateTest {\n\n    @Test\n    void testValidate_NullInput() {\n        CodeValidator validator = new CodeValidator(null, -1, -1, null);\n        assertNull(validator.validate(null));\n    }\n\n    @Test\n    void testValidate_EmptyInput() {\n        CodeValidator validator = new CodeValidator(null, -1, -1, null);\n        assertNull(validator.validate(\"   \"));\n    }\n\n    @Test\n    void testValidate_RegexValidatorFails() {\n        RegexValidator regexValidator = mock(RegexValidator.class);\n        when(regexValidator.validate(\"code\")).thenReturn(null);\n        CodeValidator validator = new CodeValidator(regexValidator, -1, -1, null);\n        assertNull(validator.validate(\"code\"));\n    }\n\n    @Test\n    void testValidate_LengthCheckFails() {\n        RegexValidator regexValidator = mock(RegexValidator.class);\n        when(regexValidator.validate(\"code\")).thenReturn(\"code\");\n        CodeValidator validator = new CodeValidator(regexValidator, 5, 10, null);\n        assertNull(validator.validate(\"code\"));\n    }\n\n    @Test\n    void testValidate_CheckDigitFails() {\n        RegexValidator regexValidator = mock(RegexValidator.class);\n        when(regexValidator.validate(\"code\")).thenReturn(\"code\");\n        CheckDigit checkDigit = mock(CheckDigit.class);\n        when(checkDigit.isValid(\"code\")).thenReturn(false);\n        CodeValidator validator = new CodeValidator(regexValidator, 4, 4, checkDigit);\n        assertNull(validator.validate(\"code\"));\n    }\n\n    @Test\n    void testValidate_AllChecksPass() {\n        RegexValidator regexValidator = mock(RegexValidator.class);\n        when(regexValidator.validate(\"code\")).thenReturn(\"code\");\n        CheckDigit checkDigit = mock(CheckDigit.class);\n        when(checkDigit.isValid(\"code\")).thenReturn(true);\n        CodeValidator validator = new CodeValidator(regexValidator, 4, 4, checkDigit);\n        assertEquals(\"code\", validator.validate(\"code\"));\n    }\n}\n"}]