[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.util;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotSame;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.validator.Arg;\nimport org.apache.commons.validator.Msg;\nimport org.apache.commons.validator.Var;\nimport org.junit.jupiter.api.Test;\n\npublic class ValidatorUtils_copyMapTest {\n\n    @Test\n    public void testCopyMapWithMsg() {\n        Map<String, Object> original = new HashMap<>();\n        Msg msg = new Msg();\n        original.put(\"key1\", msg);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertEquals(original, copy);\n        assertNotSame(msg, copy.get(\"key1\"));\n    }\n\n    @Test\n    public void testCopyMapWithArg() {\n        Map<String, Object> original = new HashMap<>();\n        Arg arg = new Arg();\n        original.put(\"key2\", arg);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertEquals(original, copy);\n        assertNotSame(arg, copy.get(\"key2\"));\n    }\n\n    @Test\n    public void testCopyMapWithVar() {\n        Map<String, Object> original = new HashMap<>();\n        Var var = new Var();\n        original.put(\"key3\", var);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertEquals(original, copy);\n        assertNotSame(var, copy.get(\"key3\"));\n    }\n\n    @Test\n    public void testCopyMapWithOtherTypes() {\n        Map<String, Object> original = new HashMap<>();\n        original.put(\"key4\", \"value4\");\n        original.put(\"key5\", 5);\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertEquals(original, copy);\n        assertEquals(original.get(\"key4\"), copy.get(\"key4\"));\n        assertEquals(original.get(\"key5\"), copy.get(\"key5\"));\n    }\n}\n"}]