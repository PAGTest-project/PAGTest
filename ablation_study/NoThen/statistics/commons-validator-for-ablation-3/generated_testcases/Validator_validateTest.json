[{"strategy": "retry", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.Locale;\nimport java.util.Map;\nimport java.util.HashMap;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\nimport org.mockito.Mockito;\n\nclass Validator_validateTest {\n\n    private Validator validator;\n    private ValidatorResources resources;\n    private Form form;\n\n    @BeforeEach\n    void setUp() {\n        resources = mock(ValidatorResources.class);\n        form = mock(Form.class);\n        validator = new Validator(resources, \"testForm\");\n    }\n\n    @Test\n    void testValidateWithLocale() throws ValidatorException {\n        // Given\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(Validator.LOCALE_PARAM, Locale.US);\n        validator.setParameter(Validator.LOCALE_PARAM, Locale.US);\n\n        // When\n        when(resources.getForm(Locale.US, \"testForm\")).thenReturn(form);\n        when(form.validate(anyMap(), anyMap(), anyInt(), anyString())).thenReturn(new ValidatorResults());\n\n        // Then\n        ValidatorResults results = validator.validate();\n        assertNotNull(results);\n        verify(resources).getForm(Locale.US, \"testForm\");\n        verify(form).validate(anyMap(), anyMap(), anyInt(), anyString());\n    }\n\n    @Test\n    void testValidateWithoutLocale() throws ValidatorException {\n        // Given\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(Validator.LOCALE_PARAM, null);\n        validator.setParameter(Validator.LOCALE_PARAM, null);\n\n        // When\n        when(resources.getForm(Locale.getDefault(), \"testForm\")).thenReturn(form);\n        when(form.validate(anyMap(), anyMap(), anyInt(), anyString())).thenReturn(new ValidatorResults());\n\n        // Then\n        ValidatorResults results = validator.validate();\n        assertNotNull(results);\n        verify(resources).getForm(Locale.getDefault(), \"testForm\");\n        verify(form).validate(anyMap(), anyMap(), anyInt(), anyString());\n    }\n\n    @Test\n    void testValidateFormNotFound() throws ValidatorException {\n        // Given\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(Validator.LOCALE_PARAM, Locale.US);\n        validator.setParameter(Validator.LOCALE_PARAM, Locale.US);\n\n        // When\n        when(resources.getForm(Locale.US, \"testForm\")).thenReturn(null);\n\n        // Then\n        ValidatorResults results = validator.validate();\n        assertNotNull(results);\n        assertTrue(results.isEmpty());\n        verify(resources).getForm(Locale.US, \"testForm\");\n        verify(form, never()).validate(anyMap(), anyMap(), anyInt(), anyString());\n    }\n}\n"}]