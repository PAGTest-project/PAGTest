[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass InetAddressValidator_isValidInet6AddressTest {\n\n    @Test\n    void testValidIPv6Address() {\n        InetAddressValidator validator = new InetAddressValidator();\n\n        // Valid IPv6 address with prefix and zone ID\n        assertTrue(validator.isValidInet6Address(\"2001:0db8:85a3::8a2e:0370:7334/64%eth0\"));\n\n        // Valid IPv6 address with compressed zeroes\n        assertTrue(validator.isValidInet6Address(\"2001:db8::1\"));\n\n        // Valid IPv6 address with embedded IPv4 address\n        assertTrue(validator.isValidInet6Address(\"::ffff:192.0.2.128\"));\n\n        // Invalid IPv6 address with multiple \"::\"\n        assertFalse(validator.isValidInet6Address(\"2001::db8::1\"));\n\n        // Invalid IPv6 address with invalid prefix\n        assertFalse(validator.isValidInet6Address(\"2001:db8::1/129\"));\n\n        // Invalid IPv6 address with invalid zone ID\n        assertFalse(validator.isValidInet6Address(\"2001:db8::1%invalid\"));\n\n        // Invalid IPv6 address with too many hex groups\n        assertFalse(validator.isValidInet6Address(\"2001:db8:1:2:3:4:5:6:7\"));\n\n        // Invalid IPv6 address with invalid hex group\n        assertFalse(validator.isValidInet6Address(\"2001:db8:1:2:3:4:5:XXXX\"));\n    }\n}\n"}]