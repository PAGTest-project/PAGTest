[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ValidatorResults_getResultValueMapTest {\n\n    private ValidatorResults validatorResults;\n\n    @BeforeEach\n    public void setUp() {\n        validatorResults = new ValidatorResults();\n    }\n\n    @Test\n    public void testGetResultValueMapWithNonBooleanResult() {\n        // Given\n        Field field = new Field();\n        field.setKey(\"fieldKey\");\n        validatorResults.add(field, \"validatorName\", true, \"nonBooleanResult\");\n\n        // When\n        Map<String, Object> resultValueMap = validatorResults.getResultValueMap();\n\n        // Then\n        assertNotNull(resultValueMap);\n        assertEquals(1, resultValueMap.size());\n        assertEquals(\"nonBooleanResult\", resultValueMap.get(\"fieldKey\"));\n    }\n\n    @Test\n    public void testGetResultValueMapWithBooleanResult() {\n        // Given\n        Field field = new Field();\n        field.setKey(\"fieldKey\");\n        validatorResults.add(field, \"validatorName\", true, true);\n\n        // When\n        Map<String, Object> resultValueMap = validatorResults.getResultValueMap();\n\n        // Then\n        assertNotNull(resultValueMap);\n        assertTrue(resultValueMap.isEmpty());\n    }\n\n    @Test\n    public void testGetResultValueMapWithMultipleResults() {\n        // Given\n        Field field1 = new Field();\n        field1.setKey(\"fieldKey1\");\n        validatorResults.add(field1, \"validatorName1\", true, \"result1\");\n\n        Field field2 = new Field();\n        field2.setKey(\"fieldKey2\");\n        validatorResults.add(field2, \"validatorName2\", true, true);\n\n        Field field3 = new Field();\n        field3.setKey(\"fieldKey3\");\n        validatorResults.add(field3, \"validatorName3\", true, \"result3\");\n\n        // When\n        Map<String, Object> resultValueMap = validatorResults.getResultValueMap();\n\n        // Then\n        assertNotNull(resultValueMap);\n        assertEquals(2, resultValueMap.size());\n        assertEquals(\"result1\", resultValueMap.get(\"fieldKey1\"));\n        assertEquals(\"result3\", resultValueMap.get(\"fieldKey3\"));\n    }\n\n    @Test\n    public void testGetResultValueMapWithNullResult() {\n        // Given\n        Field field = new Field();\n        field.setKey(\"fieldKey\");\n        validatorResults.add(field, \"validatorName\", true, null);\n\n        // When\n        Map<String, Object> resultValueMap = validatorResults.getResultValueMap();\n\n        // Then\n        assertNotNull(resultValueMap);\n        assertTrue(resultValueMap.isEmpty());\n    }\n\n    @Test\n    public void testGetResultValueMapWithEmptyResults() {\n        // When\n        Map<String, Object> resultValueMap = validatorResults.getResultValueMap();\n\n        // Then\n        assertNotNull(resultValueMap);\n        assertTrue(resultValueMap.isEmpty());\n    }\n}\n"}]