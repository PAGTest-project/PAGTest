[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.apache.commons.validator.Validator;\n\npublic class IBANValidator_getValidatorTest {\n\n    private static final IBANValidator VALIDATOR = new IBANValidator();\n\n    @BeforeEach\n    public void setUp() {\n        // Ensure the validatorMap is initialized correctly before each test\n        VALIDATOR.setValidator(\"DE\", 22, \"DE\\\\d{20}\");\n        VALIDATOR.setValidator(\"GB\", 22, \"GB\\\\d{2}[A-Z]{4}\\\\d{14}\");\n    }\n\n    @Test\n    public void testGetValidator_ValidCode() {\n        Validator validator = VALIDATOR.getValidator(\"DE12345678901234567890\");\n        assertNotNull(validator);\n        assertEquals(\"DE\", validator.countryCode);\n    }\n\n    @Test\n    public void testGetValidator_NullCode() {\n        Validator validator = VALIDATOR.getValidator(null);\n        assertNull(validator);\n    }\n\n    @Test\n    public void testGetValidator_ShortCode() {\n        Validator validator = VALIDATOR.getValidator(\"D\");\n        assertNull(validator);\n    }\n\n    @Test\n    public void testGetValidator_UnknownCountryCode() {\n        Validator validator = VALIDATOR.getValidator(\"ZZ12345678901234567890\");\n        assertNull(validator);\n    }\n\n    @Test\n    public void testGetValidator_CaseInsensitive() {\n        Validator validator = VALIDATOR.getValidator(\"de12345678901234567890\");\n        assertNotNull(validator);\n        assertEquals(\"DE\", validator.countryCode);\n    }\n\n    @Test\n    public void testGetValidator_WithOtherCountryCodes() {\n        Validator validator = VALIDATOR.getValidator(\"GB12345678901234567890\");\n        assertNotNull(validator);\n        assertEquals(\"GB\", validator.countryCode);\n    }\n\n    @Test\n    public void testSetValidator_ModifySingleton() {\n        final IllegalStateException thrown = assertThrows(IllegalStateException.class, () -> IBANValidator.DEFAULT_IBAN_VALIDATOR.setValidator(\"GB\", 15, \"GB\"));\n        assertEquals(\"The singleton validator cannot be modified\", thrown.getMessage());\n    }\n}\n"}]