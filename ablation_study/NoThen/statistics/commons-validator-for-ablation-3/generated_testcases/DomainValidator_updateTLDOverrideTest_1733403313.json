[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DomainValidator_updateTLDOverrideTest {\n\n    private DomainValidator validator;\n\n    @BeforeEach\n    public void setUp() {\n        validator = DomainValidator.getInstance();\n    }\n\n    @Test\n    public void testUpdateTLDOverride() {\n        // Given\n        String[] tlds = {\"example1\", \"example2\"};\n        ArrayType table = ArrayType.GENERIC_PLUS;\n\n        // When\n        DomainValidator.updateTLDOverride(table, tlds);\n\n        // Then\n        String[] updatedTLDs = DomainValidator.getTLDEntries(table);\n        assertArrayEquals(tlds, updatedTLDs, \"TLD override should update the specified table\");\n    }\n\n    @Test\n    public void testUpdateTLDOverrideInvalidTable() {\n        // Given\n        String[] tlds = {\"example1\", \"example2\"};\n        ArrayType table = ArrayType.GENERIC_RO;\n\n        // When & Then\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class,\n            () -> DomainValidator.updateTLDOverride(table, tlds));\n        assertEquals(\"Cannot update the table: \" + table, exception.getMessage());\n    }\n\n    @Test\n    public void testUpdateTLDOverrideInUse() {\n        // Given\n        String[] tlds = {\"example1\", \"example2\"};\n        ArrayType table = ArrayType.GENERIC_PLUS;\n        DomainValidator.inUse = true;\n\n        // When & Then\n        IllegalStateException exception = assertThrows(IllegalStateException.class,\n            () -> DomainValidator.updateTLDOverride(table, tlds));\n        assertEquals(\"Can only invoke this method before calling getInstance\", exception.getMessage());\n    }\n\n    @Test\n    public void testUpdateTLDOverrideCaseInsensitivity() {\n        // Given\n        String[] tlds = {\"Example1\", \"Example2\"};\n        ArrayType table = ArrayType.GENERIC_PLUS;\n\n        // When\n        DomainValidator.updateTLDOverride(table, tlds);\n\n        // Then\n        String[] updatedTLDs = DomainValidator.getTLDEntries(table);\n        assertArrayEquals(new String[]{\"example1\", \"example2\"}, updatedTLDs, \"TLD override should be case-insensitive\");\n    }\n\n    @Test\n    public void testUpdateTLDOverrideSorting() {\n        // Given\n        String[] tlds = {\"example2\", \"example1\"};\n        ArrayType table = ArrayType.GENERIC_PLUS;\n\n        // When\n        DomainValidator.updateTLDOverride(table, tlds);\n\n        // Then\n        String[] updatedTLDs = DomainValidator.getTLDEntries(table);\n        assertArrayEquals(new String[]{\"example1\", \"example2\"}, updatedTLDs, \"TLD override should sort the entries\");\n    }\n}\n"}]