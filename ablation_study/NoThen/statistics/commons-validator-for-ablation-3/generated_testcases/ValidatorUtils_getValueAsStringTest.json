[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.util;\n\nimport org.apache.commons.beanutils.PropertyUtils;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Collection;\nimport java.util.Collections;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\npublic class ValidatorUtils_getValueAsStringTest {\n\n    @Test\n    public void testGetValueAsString_PropertyFound() throws Exception {\n        // Given\n        Object bean = new Object() {\n            public String getSomeProperty() {\n                return \"someValue\";\n            }\n        };\n        String property = \"someProperty\";\n        String expectedValue = \"someValue\";\n\n        // When\n        String result = ValidatorUtils.getValueAsString(bean, property);\n\n        // Then\n        assertEquals(expectedValue, result);\n    }\n\n    @Test\n    public void testGetValueAsString_PropertyNotFound() throws Exception {\n        // Given\n        Object bean = new Object();\n        String property = \"nonExistentProperty\";\n\n        // When\n        String result = ValidatorUtils.getValueAsString(bean, property);\n\n        // Then\n        assertNull(result);\n    }\n\n    @Test\n    public void testGetValueAsString_PropertyIsEmptyStringArray() throws Exception {\n        // Given\n        Object bean = new Object() {\n            public String[] getSomeProperty() {\n                return new String[0];\n            }\n        };\n        String property = \"someProperty\";\n\n        // When\n        String result = ValidatorUtils.getValueAsString(bean, property);\n\n        // Then\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    public void testGetValueAsString_PropertyIsNonEmptyStringArray() throws Exception {\n        // Given\n        Object bean = new Object() {\n            public String[] getSomeProperty() {\n                return new String[]{\"value1\", \"value2\"};\n            }\n        };\n        String property = \"someProperty\";\n        String expectedValue = \"value1\";\n\n        // When\n        String result = ValidatorUtils.getValueAsString(bean, property);\n\n        // Then\n        assertEquals(expectedValue, result);\n    }\n\n    @Test\n    public void testGetValueAsString_PropertyIsEmptyCollection() throws Exception {\n        // Given\n        Object bean = new Object() {\n            public Collection<?> getSomeProperty() {\n                return Collections.emptyList();\n            }\n        };\n        String property = \"someProperty\";\n\n        // When\n        String result = ValidatorUtils.getValueAsString(bean, property);\n\n        // Then\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    public void testGetValueAsString_PropertyIsNonEmptyCollection() throws Exception {\n        // Given\n        Object bean = new Object() {\n            public Collection<?> getSomeProperty() {\n                return Collections.singletonList(\"value\");\n            }\n        };\n        String property = \"someProperty\";\n        String expectedValue = \"value\";\n\n        // When\n        String result = ValidatorUtils.getValueAsString(bean, property);\n\n        // Then\n        assertEquals(expectedValue, result);\n    }\n}\n"}]