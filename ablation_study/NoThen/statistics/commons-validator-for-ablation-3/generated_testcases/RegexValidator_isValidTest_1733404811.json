[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class RegexValidator_isValidTest {\n\n    private static final String REGEX_1 = \"^[A-Z]{3}$\";\n    private static final String REGEX_2 = \"^[A-Z]{3} [A-Z]{3} \\\\d{3}$\";\n    private static final String REGEX_3 = \"^\\\\d{3}$\";\n    private static final String[] MULTIPLE_REGEX = {REGEX_1, REGEX_2, REGEX_3};\n\n    private RegexValidator multiple;\n    private RegexValidator single1;\n    private RegexValidator single2;\n    private RegexValidator single3;\n\n    @BeforeEach\n    public void setUp() {\n        multiple = new RegexValidator(MULTIPLE_REGEX, false);\n        single1 = new RegexValidator(REGEX_1, false);\n        single2 = new RegexValidator(REGEX_2, false);\n        single3 = new RegexValidator(REGEX_3, false);\n    }\n\n    @Test\n    public void testIsValidWithValidValue() {\n        String value = \"AAC FDE 321\";\n        assertTrue(multiple.isValid(value), \"isValid() Multiple\");\n        assertFalse(single1.isValid(value), \"isValid() 1st\");\n        assertTrue(single2.isValid(value), \"isValid() 2nd\");\n        assertFalse(single3.isValid(value), \"isValid() 3rd\");\n    }\n\n    @Test\n    public void testIsValidWithInvalidValue() {\n        String value = \"AAC*FDE*321\";\n        assertFalse(multiple.isValid(value), \"isValid() Invalid\");\n        assertFalse(single1.isValid(value), \"isValid() 1st\");\n        assertFalse(single2.isValid(value), \"isValid() 2nd\");\n        assertFalse(single3.isValid(value), \"isValid() 3rd\");\n    }\n\n    @Test\n    public void testIsValidWithNullValue() {\n        String value = null;\n        assertFalse(multiple.isValid(value), \"isValid() Null\");\n        assertFalse(single1.isValid(value), \"isValid() 1st\");\n        assertFalse(single2.isValid(value), \"isValid() 2nd\");\n        assertFalse(single3.isValid(value), \"isValid() 3rd\");\n    }\n\n    @Test\n    public void testIsValidWithEmptyValue() {\n        String value = \"\";\n        assertFalse(multiple.isValid(value), \"isValid() Empty\");\n        assertFalse(single1.isValid(value), \"isValid() 1st\");\n        assertFalse(single2.isValid(value), \"isValid() 2nd\");\n        assertFalse(single3.isValid(value), \"isValid() 3rd\");\n    }\n\n    private void checkArray(String message, String[] expected, String[] actual) {\n        if (expected == null) {\n            assertNull(actual, message);\n        } else {\n            assertArrayEquals(expected, actual, message);\n        }\n    }\n}\n"}]