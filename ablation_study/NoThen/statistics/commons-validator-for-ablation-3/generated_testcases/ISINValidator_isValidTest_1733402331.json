[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\nimport org.mockito.Mockito;\n\nclass ISINValidator_isValidTest {\n\n    @Test\n    void testIsValid_ValidCodeWithCountryCheck() {\n        ISINValidator validator = ISINValidator.getInstance(true);\n        CodeValidator mockValidator = Mockito.mock(CodeValidator.class);\n        when(mockValidator.isValid(anyString())).thenReturn(true);\n        when(mockValidator.validate(anyString())).thenReturn(\"US\");\n\n        ISINValidator spyValidator = Mockito.spy(validator);\n        doReturn(mockValidator).when(spyValidator).getValidator();\n        doReturn(true).when(spyValidator).checkCode(anyString());\n\n        assertTrue(spyValidator.isValid(\"US0123456789\"));\n    }\n\n    @Test\n    void testIsValid_ValidCodeWithoutCountryCheck() {\n        ISINValidator validator = ISINValidator.getInstance(false);\n        CodeValidator mockValidator = Mockito.mock(CodeValidator.class);\n        when(mockValidator.isValid(anyString())).thenReturn(true);\n        when(mockValidator.validate(anyString())).thenReturn(\"US\");\n\n        ISINValidator spyValidator = Mockito.spy(validator);\n        doReturn(mockValidator).when(spyValidator).getValidator();\n\n        assertTrue(spyValidator.isValid(\"US0123456789\"));\n    }\n\n    @Test\n    void testIsValid_InvalidCode() {\n        ISINValidator validator = ISINValidator.getInstance(true);\n        CodeValidator mockValidator = Mockito.mock(CodeValidator.class);\n        when(mockValidator.isValid(anyString())).thenReturn(false);\n        when(mockValidator.validate(anyString())).thenReturn(null);\n\n        ISINValidator spyValidator = Mockito.spy(validator);\n        doReturn(mockValidator).when(spyValidator).getValidator();\n\n        assertFalse(spyValidator.isValid(\"INVALIDCODE\"));\n    }\n\n    private CodeValidator getValidator() {\n        return Mockito.mock(CodeValidator.class);\n    }\n}\n"}]