[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class RegexValidator_toStringTest {\n\n    private static final String REGEX_1 = \"AAC\";\n    private static final String REGEX_2 = \"FDE\";\n    private static final String REGEX_3 = \"321\";\n    private static final String[] MULTIPLE_REGEX = {REGEX_1, REGEX_2, REGEX_3};\n\n    private RegexValidator multiple;\n\n    @BeforeEach\n    public void setUp() {\n        multiple = new RegexValidator(MULTIPLE_REGEX, false);\n    }\n\n    @Test\n    public void testToStringSingleRegex() {\n        RegexValidator single = new RegexValidator(REGEX_1, false);\n        assertEquals(\"RegexValidator{AAC}\", single.toString());\n    }\n\n    @Test\n    public void testToStringMultipleRegex() {\n        assertEquals(\"RegexValidator{AAC,FDE,321}\", multiple.toString());\n    }\n\n    @Test\n    public void testToStringEmptyRegex() {\n        RegexValidator empty = new RegexValidator(new String[]{}, false);\n        try {\n            empty.toString();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Regular expressions are missing\", e.getMessage());\n        }\n    }\n\n    @Test\n    public void testToStringNullRegex() {\n        RegexValidator nullRegex = new RegexValidator(new String[]{null}, false);\n        try {\n            nullRegex.toString();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Regular expression[0] is missing\", e.getMessage());\n        }\n    }\n}\n"}]