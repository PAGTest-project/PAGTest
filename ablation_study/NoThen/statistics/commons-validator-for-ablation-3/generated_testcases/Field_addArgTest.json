[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Field_addArgTest {\n    private Field field;\n\n    @BeforeEach\n    public void setUp() {\n        field = new Field();\n    }\n\n    private Arg createArg(String key) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        return arg;\n    }\n\n    private Arg createArg(String key, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setPosition(position);\n        return arg;\n    }\n\n    private Arg createArg(String key, String name) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        return arg;\n    }\n\n    private Arg createArg(String key, String name, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        arg.setPosition(position);\n        return arg;\n    }\n\n    @Test\n    public void testAddArgWithValidArg() {\n        Arg arg = createArg(\"valid-key\", \"valid-name\", 0);\n        field.addArg(arg);\n\n        assertEquals(arg, field.getArg(0), \"testAddArgWithValidArg(1) \");\n        assertEquals(arg, field.getArg(\"valid-name\", 0), \"testAddArgWithValidArg(2) \");\n    }\n\n    @Test\n    public void testAddArgWithNullArg() {\n        field.addArg(null);\n\n        assertNull(field.getArg(0), \"testAddArgWithNullArg(1) \");\n    }\n\n    @Test\n    public void testAddArgWithNullKey() {\n        Arg arg = createArg(null, \"null-key-name\", 0);\n        field.addArg(arg);\n\n        assertNull(field.getArg(0), \"testAddArgWithNullKey(1) \");\n    }\n\n    @Test\n    public void testAddArgWithEmptyKey() {\n        Arg arg = createArg(\"\", \"empty-key-name\", 0);\n        field.addArg(arg);\n\n        assertNull(field.getArg(0), \"testAddArgWithEmptyKey(1) \");\n    }\n\n    @Test\n    public void testAddArgWithNullName() {\n        Arg arg = createArg(\"null-name-key\", null, 0);\n        field.addArg(arg);\n\n        assertEquals(arg, field.getArg(0), \"testAddArgWithNullName(1) \");\n        assertEquals(arg, field.getArg(Field.DEFAULT_ARG, 0), \"testAddArgWithNullName(2) \");\n    }\n\n    @Test\n    public void testAddArgWithMultipleArgs() {\n        field.addArg(createArg(\"key1\", \"name1\", 0));\n        field.addArg(createArg(\"key2\", \"name2\", 1));\n        field.addArg(createArg(\"key3\", \"name3\", 2));\n\n        assertEquals(3, field.getArgs(\"name1\").length, \"testAddArgWithMultipleArgs(1) \");\n        assertEquals(\"key1\", field.getArg(\"name1\", 0).getKey(), \"testAddArgWithMultipleArgs(2) \");\n        assertEquals(\"key2\", field.getArg(\"name2\", 1).getKey(), \"testAddArgWithMultipleArgs(3) \");\n        assertEquals(\"key3\", field.getArg(\"name3\", 2).getKey(), \"testAddArgWithMultipleArgs(4) \");\n    }\n}\n"}]