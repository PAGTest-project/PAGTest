[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\n\npublic class Util_replaceTest {\n\n    @Test\n    public void testReplaceElementExists() {\n        List<Integer> list = Arrays.asList(1, 2, 3, 4);\n        List<Integer> replacements = Arrays.asList(5, 6);\n        List<Integer> result = Util.replace(list, 3, replacements);\n        assertEquals(Arrays.asList(1, 2, 4, 5, 6), result);\n    }\n\n    @Test\n    public void testReplaceElementDoesNotExist() {\n        List<Integer> list = Arrays.asList(1, 2, 3, 4);\n        List<Integer> replacements = Arrays.asList(5, 6);\n        List<Integer> result = Util.replace(list, 7, replacements);\n        assertEquals(Arrays.asList(1, 2, 3, 4, 5, 6), result);\n    }\n\n    @Test\n    public void testReplaceEmptyList() {\n        List<Integer> list = Arrays.asList();\n        List<Integer> replacements = Arrays.asList(5, 6);\n        List<Integer> result = Util.replace(list, 3, replacements);\n        assertEquals(Arrays.asList(5, 6), result);\n    }\n\n    @Test\n    public void testReplaceEmptyReplacements() {\n        List<Integer> list = Arrays.asList(1, 2, 3, 4);\n        List<Integer> replacements = Arrays.asList();\n        List<Integer> result = Util.replace(list, 3, replacements);\n        assertEquals(Arrays.asList(1, 2, 4), result);\n    }\n\n    @Test\n    public void testReplaceNoChange() {\n        List<Integer> list = Arrays.asList(1, 2, 3, 4);\n        List<Integer> replacements = Arrays.asList();\n        List<Integer> result = Util.replace(list, 5, replacements);\n        assertEquals(Arrays.asList(1, 2, 3, 4), result);\n    }\n}\n"}]