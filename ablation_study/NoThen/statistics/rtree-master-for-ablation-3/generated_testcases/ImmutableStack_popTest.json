[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.internal.util;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\nimport java.util.Iterator;\nimport org.junit.Test;\n\npublic class ImmutableStack_popTest {\n\n    @Test\n    public void testPopOnNonEmptyStack() {\n        ImmutableStack<Integer> stack = ImmutableStack.create(1);\n        stack = stack.push(2);\n        stack = stack.push(3);\n\n        ImmutableStack<Integer> poppedStack = stack.pop();\n        assertEquals(Integer.valueOf(2), poppedStack.peek());\n    }\n\n    @Test\n    public void testPopOnSingleElementStack() {\n        ImmutableStack<Integer> stack = ImmutableStack.create(1);\n\n        ImmutableStack<Integer> poppedStack = stack.pop();\n        assertTrue(poppedStack.isEmpty());\n    }\n\n    @Test(expected = RuntimeException.class)\n    public void testPopOnEmptyStackThrowsException() {\n        ImmutableStack.empty().pop();\n    }\n}\n"}]