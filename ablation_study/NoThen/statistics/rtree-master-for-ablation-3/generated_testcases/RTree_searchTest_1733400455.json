[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.geometry.Point;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\nimport rx.Observable;\nimport rx.functions.Func2;\n\npublic class RTree_searchTest {\n\n    private RTree<Object, Geometry> tree;\n\n    @Before\n    public void setUp() {\n        List<Entry<Object, Geometry>> entries = new ArrayList<>();\n        entries.add(Entries.entry(\"entry1\", new Point(1, 1)));\n        entries.add(Entries.entry(\"entry2\", new Point(2, 2)));\n        entries.add(Entries.entry(\"entry3\", new Point(3, 3)));\n        tree = RTree.star().maxChildren(4).<Object, Geometry>create().add(entries);\n    }\n\n    @Test\n    public void testSearchWithinMaxDistance() {\n        Point searchPoint = new Point(1.5, 1.5);\n        double maxDistance = 1.5;\n        Func2<Geometry, Geometry, Double> distanceFunc = (g1, g2) -> g1.distance(g2.mbr());\n\n        Observable<Entry<Object, Geometry>> result = tree.search(searchPoint, maxDistance, distanceFunc);\n\n        List<Entry<Object, Geometry>> entries = result.toList().toBlocking().single();\n        assertEquals(2, entries.size());\n        assertTrue(entries.stream().anyMatch(e -> e.value().equals(\"entry1\")));\n        assertTrue(entries.stream().anyMatch(e -> e.value().equals(\"entry2\")));\n    }\n\n    @Test\n    public void testSearchOutsideMaxDistance() {\n        Point searchPoint = new Point(10, 10);\n        double maxDistance = 1.0;\n        Func2<Geometry, Geometry, Double> distanceFunc = (g1, g2) -> g1.distance(g2.mbr());\n\n        Observable<Entry<Object, Geometry>> result = tree.search(searchPoint, maxDistance, distanceFunc);\n\n        List<Entry<Object, Geometry>> entries = result.toList().toBlocking().single();\n        assertEquals(0, entries.size());\n    }\n}\n"}]