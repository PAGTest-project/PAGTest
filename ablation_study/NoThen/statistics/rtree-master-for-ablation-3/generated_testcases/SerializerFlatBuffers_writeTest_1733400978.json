[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.fbs;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.nio.ByteBuffer;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.Context;\nimport com.github.davidmoten.rtree.Entry;\nimport com.github.davidmoten.rtree.RTree;\nimport com.github.davidmoten.rtree.geometry.Geometries;\nimport com.github.davidmoten.rtree.geometry.Point;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\nimport com.google.flatbuffers.FlatBufferBuilder;\n\npublic class SerializerFlatBuffers_writeTest {\n\n    private SerializerFlatBuffers<Object, Point> serializer;\n    private RTree<Object, Point> tree;\n\n    @Before\n    public void setUp() {\n        serializer = new SerializerFlatBuffers<>(null, null);\n        tree = RTree.create();\n    }\n\n    @Test\n    public void testWriteWithEmptyTree() throws IOException {\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        serializer.write(tree, os);\n        byte[] bytes = os.toByteArray();\n        ByteBuffer bb = ByteBuffer.wrap(bytes);\n        Tree_ t = Tree_.getRootAsTree_(bb);\n        assertEquals(0, t.size());\n        assertTrue(t.root() == null);\n    }\n\n    @Test\n    public void testWriteWithNonEmptyTree() throws IOException {\n        tree = tree.add(new Entry<Object, Point>() {\n            @Override\n            public Object value() {\n                return new Object();\n            }\n\n            @Override\n            public Point geometry() {\n                return Geometries.point(1, 2);\n            }\n        });\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        serializer.write(tree, os);\n        byte[] bytes = os.toByteArray();\n        ByteBuffer bb = ByteBuffer.wrap(bytes);\n        Tree_ t = Tree_.getRootAsTree_(bb);\n        assertEquals(1, t.size());\n        assertTrue(t.root() != null);\n    }\n\n    @Test\n    public void testToBounds() {\n        FlatBufferBuilder builder = new FlatBufferBuilder();\n        Rectangle rect = Geometries.rectangle(0, 0, 1, 1);\n        int boundsOffset = serializer.toBounds(builder, rect);\n        builder.finish(boundsOffset);\n        ByteBuffer bb = builder.dataBuffer();\n        Bounds_ bounds = Bounds_.getRootAsBounds_(bb);\n        assertEquals(BoundsType_.BoundsDouble, bounds.type());\n        BoxDouble_ box = bounds.boxDouble();\n        assertEquals(0.0, box.x1(), 0.001);\n        assertEquals(0.0, box.y1(), 0.001);\n        assertEquals(1.0, box.x2(), 0.001);\n        assertEquals(1.0, box.y2(), 0.001);\n    }\n}\n"}]