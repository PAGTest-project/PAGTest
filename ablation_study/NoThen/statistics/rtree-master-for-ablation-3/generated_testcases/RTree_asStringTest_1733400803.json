[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class RTree_asStringTest {\n\n    private RTree<Object, Rectangle> tree;\n\n    @Before\n    public void setUp() {\n        tree = RTree.star().maxChildren(4).<Object, Rectangle> create();\n    }\n\n    @Test\n    public void testAsStringWithEmptyTree() {\n        assertEquals(\"\", tree.asString());\n    }\n\n    @Test\n    public void testAsStringWithNonEmptyTree() {\n        Entry<Object, Rectangle> e1 = RTreeTest.e(1);\n        List<Entry<Object, Rectangle>> list = new ArrayList<Entry<Object, Rectangle>>();\n        for (int i = 1; i <= 17; i++)\n            list.add(e1);\n        tree = tree.add(list);\n        assertTrue(tree.asString().length() > 0);\n    }\n\n    @Test\n    public void testAsStringAfterDeletion() {\n        Entry<Object, Rectangle> e1 = RTreeTest.e(1);\n        List<Entry<Object, Rectangle>> list = new ArrayList<Entry<Object, Rectangle>>();\n        for (int i = 1; i <= 17; i++)\n            list.add(e1);\n        tree = tree.add(list);\n        tree = tree.delete(e1, true);\n        assertTrue(tree.asString().length() > 0);\n    }\n\n    @Test\n    public void testAsStringAfterSearch() {\n        Entry<Object, Rectangle> e1 = RTreeTest.e(1);\n        List<Entry<Object, Rectangle>> list = new ArrayList<Entry<Object, Rectangle>>();\n        for (int i = 1; i <= 17; i++)\n            list.add(e1);\n        tree = tree.add(list);\n        tree.search(geometry -> true).subscribe();\n        assertTrue(tree.asString().length() > 0);\n    }\n\n    private static Entry<Object, Rectangle> e(int i) {\n        return Entries.entry(new Object(), Geometries.rectangle(0, 0, i, i));\n    }\n}\n"}]