{"file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "dependencies": ["package net.hydromatic.morel;", "import net.hydromatic.morel.foreign.Calcite;", "import net.hydromatic.morel.foreign.CalciteForeignValue;", "import net.hydromatic.morel.foreign.ForeignValue;", "import com.google.common.collect.ImmutableList;", "import com.google.common.collect.ImmutableMap;", "import org.apache.calcite.adapter.java.ReflectiveSchema;", "import org.apache.calcite.schema.Schema;", "import org.apache.calcite.schema.SchemaPlus;", "import org.junit.jupiter.api.Test;", "import java.io.ByteArrayInputStream;", "import java.io.ByteArrayOutputStream;", "import java.io.InputStream;", "import java.io.PrintStream;", "import java.util.Map;", "import static org.apache.calcite.util.Util.toLinux;", "import static org.hamcrest.MatcherAssert.assertThat;", "import static org.hamcrest.core.Is.is;"], "name": "CalciteTest", "description": "Tests the functionality of CalciteForeignValue with nested schemas.", "class_members": {"variables": [{"name": "debug", "type": "final boolean"}], "methods": [], "nested_classes": [{"name": "UserSchema", "description": "Java object that will, via reflection, become the 'user' schema."}, {"name": "User", "description": "Row in the 'users' table."}, {"name": "TaskSchema", "description": "Java object that will, via reflection, become the 'task' schema."}, {"name": "Task", "description": "Row in the 'tasks' table."}]}, "fixtures": [], "test_cases": [{"name": "testNestedSchema", "primary_tested": ["Calcite.withDataSets(Map<String, DataSet>)"], "associated_methods": ["CalciteForeignValue.value()", "CalciteForeignValue.type(TypeSystem)", "Calcite.foreignValues()"], "external_dependencies": {"modules": ["Calcite", "CalciteForeignValue", "ForeignValue", "ImmutableList", "ImmutableMap", "ReflectiveSchema", "Schema", "SchemaPlus", "ByteArrayInputStream", "ByteArrayOutputStream", "InputStream", "PrintStream", "Main", "UserSchema", "TaskSchema", "User", "Task"], "class_members": [{"name": "debug", "type": "variable"}], "project_specific_resources": ["Util.toLinux(String)"]}, "category": "unit", "fixtures_used": [], "description": "Tests that if you create a CalciteForeignValue whose schema has nested schemas, those schemas appear as fields."}]}