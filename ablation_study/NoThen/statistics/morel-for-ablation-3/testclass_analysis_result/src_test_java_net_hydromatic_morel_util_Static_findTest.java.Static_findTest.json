{"file_path": "src/test/java/net/hydromatic/morel/util/Static_findTest.java", "testclass_name": "Static_findTest", "dependencies": ["package net.hydromatic.morel.util;", "import com.google.common.collect.ImmutableList;", "import org.junit.jupiter.api.Test;", "import java.util.List;", "import java.util.function.Predicate;", "import static org.junit.jupiter.api.Assertions.assertEquals;"], "name": "Static_findTest", "description": "Unit tests for the Static.find method with different list types and predicates.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testFindRandomAccessList", "primary_tested": ["Static.find(List<Integer>,Predicate<Integer>)"], "external_dependencies": {"modules": ["ImmutableList", "Predicate", "Static"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the Static.find method with a random access list and a predicate that matches an element."}, {"name": "testFindNonRandomAccessList", "primary_tested": ["Static.find(List<Integer>,Predicate<Integer>)"], "external_dependencies": {"modules": ["ImmutableList", "Predicate", "Static"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the Static.find method with a non-random access list and a predicate that matches an element."}, {"name": "testFindNoMatch", "primary_tested": ["Static.find(List<Integer>,Predicate<Integer>)"], "external_dependencies": {"modules": ["ImmutableList", "Predicate", "Static"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the Static.find method with a predicate that does not match any element in the list."}]}