[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.ast;\n\nimport net.hydromatic.morel.compile.Environments;\nimport net.hydromatic.morel.type.Binding;\nimport net.hydromatic.morel.type.PrimitiveType;\nimport net.hydromatic.morel.type.TypeSystem;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class FromBuilder_addAllTest {\n\n    private FromBuilder fromBuilder;\n    private TypeSystem typeSystem;\n    private Core.Pat pat;\n    private Core.Exp exp;\n    private Core.Exp condition;\n    private List<Core.FromStep> steps;\n\n    @BeforeEach\n    public void setUp() {\n        typeSystem = new TypeSystem();\n        fromBuilder = new FromBuilder(typeSystem, Environments.empty());\n        CoreBuilder coreBuilder = new CoreBuilder(typeSystem);\n        pat = coreBuilder.idPat(PrimitiveType.INT, \"i\");\n        exp = coreBuilder.intLiteral(1);\n        condition = coreBuilder.boolLiteral(true);\n        steps = Arrays.asList(coreBuilder.scan(Binding.of(pat), pat, exp, condition));\n    }\n\n    @Test\n    public void testAddAll() {\n        FromBuilder result = fromBuilder.addAll(steps);\n        assertEquals(fromBuilder, result);\n        assertEquals(1, fromBuilder.bindings().size());\n    }\n\n    @Test\n    public void testAddAllEmpty() {\n        FromBuilder result = fromBuilder.addAll(Arrays.asList());\n        assertEquals(fromBuilder, result);\n        assertEquals(0, fromBuilder.bindings().size());\n    }\n\n    @Test\n    public void testAddAllMultipleSteps() {\n        CoreBuilder coreBuilder = new CoreBuilder(typeSystem);\n        Core.Pat pat2 = coreBuilder.idPat(PrimitiveType.INT, \"j\");\n        Core.Exp exp2 = coreBuilder.intLiteral(2);\n        Core.FromStep step2 = coreBuilder.scan(Binding.of(pat2), pat2, exp2, condition);\n        steps = Arrays.asList(steps.get(0), step2);\n\n        FromBuilder result = fromBuilder.addAll(steps);\n        assertEquals(fromBuilder, result);\n        assertEquals(2, fromBuilder.bindings().size());\n    }\n}\n"}]