[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.hamcrest.MatcherAssert.assertThat;\nimport static org.hamcrest.Matchers.is;\nimport static org.hamcrest.Matchers.isEmptyString;\n\npublic class TailList_clearTest {\n    private List<String> backingList;\n    private TailList<String> tailList;\n\n    @BeforeEach\n    public void setUp() {\n        backingList = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\", \"d\"));\n        tailList = new TailList<>(backingList, 2);\n    }\n\n    @Test\n    public void testClear() {\n        assertThat(tailList.size(), is(2));\n        assertThat(backingList.size(), is(4));\n\n        tailList.clear();\n\n        assertThat(tailList.size(), is(0));\n        assertThat(backingList.size(), is(2));\n        assertThat(backingList.get(0), is(\"a\"));\n        assertThat(backingList.get(1), is(\"b\"));\n    }\n\n    @Test\n    public void testClearEmptyList() {\n        TailList<String> emptyTailList = new TailList<>(new ArrayList<>(), 0);\n\n        assertThat(emptyTailList.size(), is(0));\n\n        emptyTailList.clear();\n\n        assertThat(emptyTailList.size(), is(0));\n    }\n\n    @Test\n    public void testClearWithNoElementsToRemove() {\n        TailList<String> noRemoveTailList = new TailList<>(backingList, 4);\n\n        assertThat(noRemoveTailList.size(), is(0));\n\n        noRemoveTailList.clear();\n\n        assertThat(noRemoveTailList.size(), is(0));\n        assertThat(backingList.size(), is(4));\n    }\n}\n"}]