[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_basicWithImagesTest {\n\n    private static final String TEST_TAG = \"img\";\n    private static final String TEST_ATTRIBUTE = \"src\";\n    private static final String TEST_SCHEME = \"http\";\n\n    @Test\n    public void testBasicWithImages_AddsImgTag() {\n        Safelist safelist = Safelist.basicWithImages();\n        assertTrue(safelist.isSafeTag(TEST_TAG));\n    }\n\n    @Test\n    public void testBasicWithImages_AddsImgAttributes() {\n        Safelist safelist = Safelist.basicWithImages();\n        Attributes attributes = new Attributes();\n        Attribute validAttribute = new Attribute(TEST_ATTRIBUTE, TEST_SCHEME + \"://someValue\");\n        attributes.put(validAttribute);\n        Element validElement = new Element(Tag.valueOf(TEST_TAG), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(TEST_TAG, validElement, validAttribute));\n    }\n\n    @Test\n    public void testBasicWithImages_InvalidProtocol() {\n        Safelist safelist = Safelist.basicWithImages();\n        Attributes attributes = new Attributes();\n        Attribute invalidAttribute = new Attribute(TEST_ATTRIBUTE, \"invalid-scheme://someValue\");\n        attributes.put(invalidAttribute);\n        Element invalidElement = new Element(Tag.valueOf(TEST_TAG), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(TEST_TAG, invalidElement, invalidAttribute));\n    }\n\n    @Test\n    public void testBasicWithImages_EnforcedAttributes() {\n        Safelist safelist = Safelist.basicWithImages();\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(TEST_TAG);\n        assertTrue(enforcedAttributes.hasKeyIgnoreCase(\"align\"));\n        assertTrue(enforcedAttributes.hasKeyIgnoreCase(\"alt\"));\n        assertTrue(enforcedAttributes.hasKeyIgnoreCase(\"height\"));\n        assertTrue(enforcedAttributes.hasKeyIgnoreCase(\"width\"));\n    }\n}\n"}]