[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.helper.ChangeNotifyingArrayList;\nimport org.jsoup.helper.Validate;\nimport org.jsoup.internal.StringUtil;\nimport org.jsoup.parser.ParseSettings;\nimport org.jsoup.parser.Parser;\nimport org.jsoup.parser.Tag;\nimport org.jsoup.parser.TokenQueue;\nimport org.jsoup.select.Collector;\nimport org.jsoup.select.Elements;\nimport org.jsoup.select.Evaluator;\nimport org.jsoup.select.NodeFilter;\nimport org.jsoup.select.NodeTraversor;\nimport org.jsoup.select.NodeVisitor;\nimport org.jsoup.select.QueryParser;\nimport org.jsoup.select.Selector;\nimport org.jspecify.annotations.Nullable;\n\nimport java.io.IOException;\nimport java.lang.ref.WeakReference;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.LinkedHashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.atomic.AtomicBoolean;\nimport java.util.function.Consumer;\nimport java.util.regex.Pattern;\nimport java.util.regex.PatternSyntaxException;\nimport java.util.stream.Collectors;\nimport java.util.stream.Stream;\n\nimport static org.jsoup.internal.Normalizer.normalize;\nimport static org.jsoup.nodes.TextNode.lastCharIsWhitespace;\nimport static org.jsoup.parser.Parser.NamespaceHtml;\nimport static org.jsoup.parser.TokenQueue.escapeCssIdentifier;\n\npublic class Element_getElementsByAttributeStartingTest {\n    private static final List<Element> EmptyChildren = Collections.emptyList();\n    private static final Pattern ClassSplit = Pattern.compile(\"\\\\s+\");\n    private static final String BaseUriKey = Attributes.internalKey(\"baseUri\");\n    private Tag tag;\n    private @Nullable WeakReference<List<Element>> shadowChildrenRef;\n    List<Node> childNodes;\n    @Nullable Attributes attributes;\n\n    public Element(String tag, String namespace) {\n        this(Tag.valueOf(tag, namespace, ParseSettings.preserveCase), null);\n    }\n\n    public Element(String tag) {\n        this(Tag.valueOf(tag, Parser.NamespaceHtml, ParseSettings.preserveCase);\n    }\n\n    public Element(Tag tag, @Nullable String baseUri, @Nullable Attributes attributes) {\n        Validate.notNull(tag);\n        childNodes = EmptyNodes;\n        this.attributes = attributes;\n        this.tag = tag;\n        if (baseUri != null)\n            this.setBaseUri(baseUri);\n    }\n\n    public Element(Tag tag, @Nullable String baseUri) {\n        this(tag, baseUri, null);\n    }\n\n    public Elements getElementsByAttributeStarting(String keyPrefix) {\n        Validate.notEmpty(keyPrefix);\n        keyPrefix = keyPrefix.trim();\n\n        return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);\n    }\n}\n"}]