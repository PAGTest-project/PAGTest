[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_appendElementTest {\n    private Element parentElement;\n\n    @BeforeEach\n    public void setUp() {\n        parentElement = new Element(\"div\");\n    }\n\n    @Test\n    public void testAppendElement() {\n        Element child = parentElement.appendElement(\"span\", \"http://www.w3.org/1999/xhtml\");\n        assertEquals(Tag.valueOf(\"span\", \"http://www.w3.org/1999/xhtml\", Parser.htmlParser().settings()), child.tag());\n        assertEquals(1, parentElement.childNodeSize());\n        assertEquals(child, parentElement.child(0));\n    }\n\n    @Test\n    public void testAppendElementWithDefaultNamespace() {\n        Element child = parentElement.appendElement(\"span\");\n        assertEquals(Tag.valueOf(\"span\", Parser.NamespaceHtml, Parser.htmlParser().settings()), child.tag());\n        assertEquals(1, parentElement.childNodeSize());\n        assertEquals(child, parentElement.child(0));\n    }\n\n    @Test\n    public void testAppendElementWithInvalidTagName() {\n        assertThrows(IllegalArgumentException.class, () -> parentElement.appendElement(\"\", \"http://www.w3.org/1999/xhtml\"));\n    }\n\n    @Test\n    public void testAppendElementWithNullTagName() {\n        assertThrows(IllegalArgumentException.class, () -> parentElement.appendElement(null, \"http://www.w3.org/1999/xhtml\"));\n    }\n\n    @Test\n    public void testAppendElementWithNullNamespace() {\n        Element child = parentElement.appendElement(\"span\", null);\n        assertEquals(Tag.valueOf(\"span\", Parser.NamespaceHtml, Parser.htmlParser().settings()), child.tag());\n        assertEquals(1, parentElement.childNodeSize());\n        assertEquals(child, parentElement.child(0));\n    }\n}\n"}]