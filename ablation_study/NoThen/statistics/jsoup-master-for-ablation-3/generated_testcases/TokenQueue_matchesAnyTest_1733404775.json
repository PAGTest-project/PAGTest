[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_matchesAnyTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"abc\");\n    }\n\n    @Test\n    public void testMatchesAnyWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        assertFalse(tokenQueue.matchesAny('a', 'b', 'c'));\n    }\n\n    @Test\n    public void testMatchesAnyWithMatchingChar() {\n        assertTrue(tokenQueue.matchesAny('a', 'b', 'c'));\n    }\n\n    @Test\n    public void testMatchesAnyWithNonMatchingChar() {\n        assertFalse(tokenQueue.matchesAny('x', 'y', 'z'));\n    }\n\n    @Test\n    public void testMatchesAnyWithMixedChars() {\n        assertTrue(tokenQueue.matchesAny('x', 'y', 'a'));\n    }\n\n    @Test\n    public void testMatchesAnyAfterConsumeToAny() {\n        tokenQueue = new TokenQueue(\"abcde\");\n        tokenQueue.consumeToAny(\"b\", \"d\");\n        assertTrue(tokenQueue.matchesAny('b', 'd'));\n    }\n\n    @Test\n    public void testMatchesAnyAfterConsumeWhitespace() {\n        tokenQueue = new TokenQueue(\"  abc\");\n        tokenQueue.consumeWhitespace();\n        assertTrue(tokenQueue.matchesAny('a', 'b', 'c'));\n    }\n}\n"}]