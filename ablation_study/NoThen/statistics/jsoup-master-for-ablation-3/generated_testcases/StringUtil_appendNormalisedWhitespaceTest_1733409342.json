[{"strategy": "generate", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_appendNormalisedWhitespaceTest {\n\n    private StringBuilder accum;\n\n    @BeforeEach\n    public void setUp() {\n        accum = StringUtil.borrowBuilder();\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithLeadingWhitespace() {\n        String input = \"  Hello World\";\n        StringUtil.appendNormalisedWhitespace(accum, input, true);\n        assertEquals(\"Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithoutLeadingWhitespace() {\n        String input = \"  Hello World\";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\" Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithMultipleSpaces() {\n        String input = \"Hello   World\";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\"Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithNewlineAndTab() {\n        String input = \"Hello\\n\\tWorld\";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\"Hello World\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithInvisibleChars() {\n        String input = \"Hello\\u200BWorld\";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\"HelloWorld\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithEmptyString() {\n        String input = \"\";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\"\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithOnlyWhitespace() {\n        String input = \"   \";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\" \", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithOnlyWhitespaceAndStripLeading() {\n        String input = \"   \";\n        StringUtil.appendNormalisedWhitespace(accum, input, true);\n        assertEquals(\"\", accum.toString());\n    }\n\n    @Test\n    public void testAppendNormalisedWhitespaceWithHighSurrogate() {\n        String input = \"\\ud869\\udeb2\\u304b\\u309a  1\";\n        StringUtil.appendNormalisedWhitespace(accum, input, false);\n        assertEquals(\"\\ud869\\udeb2\\u304b\\u309a 1\", accum.toString());\n    }\n}\n"}]