[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_relaxedTest {\n\n    @Test\n    public void testRelaxed_AddTags() {\n        Safelist safelist = Safelist.relaxed();\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"img\"));\n        assertTrue(safelist.isSafeTag(\"table\"));\n    }\n\n    @Test\n    public void testRelaxed_AddAttributes() {\n        Safelist safelist = Safelist.relaxed();\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        Attribute imgSrcAttribute = new Attribute(\"src\", \"http://example.com/image.jpg\");\n        attributes.put(hrefAttribute);\n        attributes.put(imgSrcAttribute);\n        Element aElement = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", aElement, hrefAttribute));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, imgSrcAttribute));\n    }\n\n    @Test\n    public void testRelaxed_AddProtocols() {\n        Safelist safelist = Safelist.relaxed();\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        Attribute imgSrcAttribute = new Attribute(\"src\", \"https://example.com/image.jpg\");\n        attributes.put(hrefAttribute);\n        attributes.put(imgSrcAttribute);\n        Element aElement = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", aElement, hrefAttribute));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, imgSrcAttribute));\n    }\n\n    @Test\n    public void testRelaxed_InvalidProtocols() {\n        Safelist safelist = Safelist.relaxed();\n        Attributes attributes = new Attributes();\n        Attribute invalidHrefAttribute = new Attribute(\"href\", \"invalid://example.com\");\n        Attribute invalidImgSrcAttribute = new Attribute(\"src\", \"invalid://example.com/image.jpg\");\n        attributes.put(invalidHrefAttribute);\n        attributes.put(invalidImgSrcAttribute);\n        Element aElement = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", aElement, invalidHrefAttribute));\n        assertFalse(safelist.isSafeAttribute(\"img\", imgElement, invalidImgSrcAttribute));\n    }\n}\n"}]