[{"strategy": "retry", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_releaseBuilderTest {\n\n    private StringBuilder sb;\n\n    @BeforeEach\n    public void setUp() {\n        sb = StringUtil.borrowBuilder();\n    }\n\n    @Test\n    public void testReleaseBuilderWithNormalSize() {\n        sb.append(\"test string\");\n        String result = StringUtil.releaseBuilder(sb);\n        assertEquals(\"test string\", result);\n    }\n\n    @Test\n    public void testReleaseBuilderWithMaxSize() {\n        for (int i = 0; i < StringUtil.MaxBuilderSize; i++) {\n            sb.append(\"a\");\n        }\n        String result = StringUtil.releaseBuilder(sb);\n        assertEquals(\"a\".repeat(StringUtil.MaxBuilderSize), result);\n    }\n\n    @Test\n    public void testReleaseBuilderWithExceedingMaxSize() {\n        for (int i = 0; i < StringUtil.MaxBuilderSize + 1; i++) {\n            sb.append(\"a\");\n        }\n        String result = StringUtil.releaseBuilder(sb);\n        assertEquals(\"a\".repeat(StringUtil.MaxBuilderSize + 1), result);\n    }\n\n    @Test\n    public void testReleaseBuilderWithNull() {\n        assertThrows(IllegalArgumentException.class, () -> StringUtil.releaseBuilder(null));\n    }\n\n    @Test\n    public void testReleaseBuilderWithEmptyBuilder() {\n        String result = StringUtil.releaseBuilder(sb);\n        assertEquals(\"\", result);\n    }\n}\n"}]