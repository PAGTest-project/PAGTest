[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class Attribute_setValueTest {\n\n    @Test\n    public void testSetValue_NoParent() {\n        Attribute attribute = new Attribute(\"key\", \"oldValue\", null);\n        String result = attribute.setValue(\"newValue\");\n        assertEquals(\"oldValue\", result);\n        assertEquals(\"newValue\", attribute.getValue());\n    }\n\n    @Test\n    public void testSetValue_WithParent() {\n        Attributes parent = Mockito.mock(Attributes.class);\n        when(parent.indexOfKey(\"key\")).thenReturn(0);\n        when(parent.get(\"key\")).thenReturn(\"parentValue\");\n\n        Attribute attribute = new Attribute(\"key\", \"oldValue\", parent);\n        String result = attribute.setValue(\"newValue\");\n        assertEquals(\"parentValue\", result);\n        assertEquals(\"newValue\", attribute.getValue());\n    }\n\n    @Test\n    public void testSetValue_WithParentNotFound() {\n        Attributes parent = Mockito.mock(Attributes.class);\n        when(parent.indexOfKey(\"key\")).thenReturn(Attributes.NotFound);\n\n        Attribute attribute = new Attribute(\"key\", \"oldValue\", parent);\n        String result = attribute.setValue(\"newValue\");\n        assertEquals(\"oldValue\", result);\n        assertEquals(\"newValue\", attribute.getValue());\n    }\n}\n"}]