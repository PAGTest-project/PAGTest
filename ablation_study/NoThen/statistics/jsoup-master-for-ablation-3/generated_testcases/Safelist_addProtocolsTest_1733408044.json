[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.helper.ValidationException;\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_addProtocolsTest {\n    private Safelist safelist;\n    private static final String TEST_TAG = \"a\";\n    private static final String TEST_ATTRIBUTE = \"href\";\n    private static final String TEST_SCHEME = \"http\";\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testAddProtocols_validProtocols() {\n        safelist.addProtocols(TEST_TAG, TEST_ATTRIBUTE, TEST_SCHEME, \"https\");\n\n        Attributes attributes = new Attributes();\n        Attribute validAttribute = new Attribute(TEST_ATTRIBUTE, TEST_SCHEME + \"://someValue\");\n        attributes.put(validAttribute);\n        Element validElement = new Element(Tag.valueOf(TEST_TAG), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(TEST_TAG, validElement, validAttribute));\n    }\n\n    @Test\n    public void testAddProtocols_invalidProtocols() {\n        safelist.addProtocols(TEST_TAG, TEST_ATTRIBUTE, TEST_SCHEME);\n\n        Attributes attributes = new Attributes();\n        Attribute invalidAttribute = new Attribute(TEST_ATTRIBUTE, \"ftp://someValue\");\n        attributes.put(invalidAttribute);\n        Element invalidElement = new Element(Tag.valueOf(TEST_TAG), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(TEST_TAG, invalidElement, invalidAttribute));\n    }\n\n    @Test\n    public void testAddProtocols_emptyProtocol() {\n        assertThrows(ValidationException.class, () -> {\n            safelist.addProtocols(TEST_TAG, TEST_ATTRIBUTE, \"\");\n        });\n    }\n\n    @Test\n    public void testAddProtocols_nullProtocols() {\n        assertThrows(ValidationException.class, () -> {\n            safelist.addProtocols(TEST_TAG, TEST_ATTRIBUTE, (String[]) null);\n        });\n    }\n\n    @Test\n    public void testAddProtocols_emptyTag() {\n        assertThrows(ValidationException.class, () -> {\n            safelist.addProtocols(\"\", TEST_ATTRIBUTE, TEST_SCHEME);\n        });\n    }\n\n    @Test\n    public void testAddProtocols_emptyAttribute() {\n        assertThrows(ValidationException.class, () -> {\n            safelist.addProtocols(TEST_TAG, \"\", TEST_SCHEME);\n        });\n    }\n}\n"}]