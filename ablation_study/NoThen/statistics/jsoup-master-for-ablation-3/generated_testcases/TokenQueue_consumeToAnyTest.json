[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeToAnyTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"sample text for testing\");\n    }\n\n    @Test\n    public void testConsumeToAnyWithMatch() {\n        tokenQueue = new TokenQueue(\"sample text for testing\");\n        String result = tokenQueue.consumeToAny(\"text\", \"for\");\n        assertEquals(\"sample \", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithoutMatch() {\n        tokenQueue = new TokenQueue(\"sample text for testing\");\n        String result = tokenQueue.consumeToAny(\"nonexistent\", \"terminator\");\n        assertEquals(\"sample text for testing\", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        String result = tokenQueue.consumeToAny(\"text\", \"for\");\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithMultipleMatches() {\n        tokenQueue = new TokenQueue(\"sample text for testing\");\n        String result = tokenQueue.consumeToAny(\"text\", \"for\", \"sample\");\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    public void testConsumeToAnyWithPartialMatch() {\n        tokenQueue = new TokenQueue(\"sample text for testing\");\n        String result = tokenQueue.consumeToAny(\"text\", \"for\", \"test\");\n        assertEquals(\"sample \", result);\n    }\n}\n"}]