[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_equalsTest {\n    private Attributes attributes1;\n    private Attributes attributes2;\n\n    @BeforeEach\n    public void setUp() {\n        attributes1 = new Attributes();\n        attributes2 = new Attributes();\n    }\n\n    @Test\n    public void testEqualsWhenIdentical() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        attributes2.put(\"key1\", \"value1\");\n        attributes2.put(\"key2\", \"value2\");\n\n        assertTrue(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsWhenDifferentSize() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        attributes2.put(\"key1\", \"value1\");\n\n        assertFalse(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsWhenDifferentKeys() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        attributes2.put(\"key1\", \"value1\");\n        attributes2.put(\"key3\", \"value2\");\n\n        assertFalse(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsWhenDifferentValues() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        attributes2.put(\"key1\", \"value1\");\n        attributes2.put(\"key2\", \"value3\");\n\n        assertFalse(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsWhenOneIsNull() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        assertFalse(attributes1.equals(null));\n    }\n\n    @Test\n    public void testEqualsWhenSameObject() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        assertTrue(attributes1.equals(attributes1));\n    }\n\n    @Test\n    public void testEqualsWhenDifferentClass() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key2\", \"value2\");\n\n        assertFalse(attributes1.equals(\"not an Attributes object\"));\n    }\n\n    @Test\n    public void testEqualsWhenNormalized() {\n        attributes1.put(\"KEY1\", \"value1\");\n        attributes1.put(\"KEY2\", \"value2\");\n        attributes1.normalize();\n\n        attributes2.put(\"key1\", \"value1\");\n        attributes2.put(\"key2\", \"value2\");\n\n        assertTrue(attributes1.equals(attributes2));\n    }\n\n    @Test\n    public void testEqualsWhenDeduplicated() {\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.put(\"key1\", \"value1\");\n        attributes1.deduplicate(ParseSettings.preserveCase);\n\n        attributes2.put(\"key1\", \"value1\");\n\n        assertTrue(attributes1.equals(attributes2));\n    }\n}\n"}]