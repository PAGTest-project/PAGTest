[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Parser_parseFragmentTest {\n\n    private Parser parser;\n    private HtmlTreeBuilder treeBuilder;\n\n    @BeforeEach\n    public void setUp() {\n        treeBuilder = new HtmlTreeBuilder();\n        parser = new Parser(treeBuilder);\n    }\n\n    @Test\n    public void testParseFragmentWithValidHtml() {\n        String fragmentHtml = \"<div>Test</div>\";\n        Element context = new Element(\"body\");\n        String baseUri = \"http://example.com\";\n        ParseErrorList errorList = ParseErrorList.tracking(10);\n\n        List<Node> nodes = parseFragment(fragmentHtml, context, baseUri, errorList);\n\n        assertEquals(1, nodes.size());\n        assertTrue(nodes.get(0) instanceof Element);\n        assertEquals(\"div\", ((Element) nodes.get(0)).tagName());\n    }\n\n    @Test\n    public void testParseFragmentWithInvalidHtml() {\n        String fragmentHtml = \"<div>Test<div>\";\n        Element context = new Element(\"body\");\n        String baseUri = \"http://example.com\";\n        ParseErrorList errorList = ParseErrorList.tracking(10);\n\n        List<Node> nodes = parseFragment(fragmentHtml, context, baseUri, errorList);\n\n        assertEquals(1, nodes.size());\n        assertTrue(nodes.get(0) instanceof Element);\n        assertEquals(\"div\", ((Element) nodes.get(0)).tagName());\n        assertEquals(1, errorList.size());\n    }\n\n    @Test\n    public void testParseFragmentWithEmptyHtml() {\n        String fragmentHtml = \"\";\n        Element context = new Element(\"body\");\n        String baseUri = \"http://example.com\";\n        ParseErrorList errorList = ParseErrorList.tracking(10);\n\n        List<Node> nodes = parseFragment(fragmentHtml, context, baseUri, errorList);\n\n        assertEquals(0, nodes.size());\n        assertEquals(0, errorList.size());\n    }\n\n    @Test\n    public void testParseFragmentWithNoContext() {\n        String fragmentHtml = \"<div>Test</div>\";\n        Element context = null;\n        String baseUri = \"http://example.com\";\n        ParseErrorList errorList = ParseErrorList.tracking(10);\n\n        List<Node> nodes = parseFragment(fragmentHtml, context, baseUri, errorList);\n\n        assertEquals(1, nodes.size());\n        assertTrue(nodes.get(0) instanceof Element);\n        assertEquals(\"div\", ((Element) nodes.get(0)).tagName());\n    }\n\n    @Test\n    public void testParseFragmentWithNoBaseUri() {\n        String fragmentHtml = \"<div>Test</div>\";\n        Element context = new Element(\"body\");\n        String baseUri = null;\n        ParseErrorList errorList = ParseErrorList.tracking(10);\n\n        List<Node> nodes = parseFragment(fragmentHtml, context, baseUri, errorList);\n\n        assertEquals(1, nodes.size());\n        assertTrue(nodes.get(0) instanceof Element);\n        assertEquals(\"div\", ((Element) nodes.get(0)).tagName());\n    }\n\n    private List<Node> parseFragment(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) {\n        HtmlTreeBuilder treeBuilder = new HtmlTreeBuilder();\n        Parser parser = new Parser(treeBuilder);\n        parser.errors = errorList;\n        return treeBuilder.parseFragment(fragmentHtml, context, baseUri, parser);\n    }\n}\n"}]