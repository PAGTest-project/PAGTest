[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"One Two\");\n    }\n\n    @Test\n    public void testConsumeValidSequence() {\n        tokenQueue.addFirst(\"One\");\n        tokenQueue.consume(\"One\");\n        assertEquals(\" Two\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testConsumeInvalidSequence() {\n        assertThrows(IllegalStateException.class, () -> tokenQueue.consume(\"Three\"));\n    }\n\n    @Test\n    public void testConsumeLongerThanRemaining() {\n        tokenQueue.addFirst(\"One\");\n        assertThrows(IllegalStateException.class, () -> tokenQueue.consume(\"One Two Three\"));\n    }\n\n    @Test\n    public void testConsumeEmptyQueue() {\n        TokenQueue emptyQueue = new TokenQueue(\"\");\n        assertThrows(IllegalStateException.class, () -> emptyQueue.consume(\"One\"));\n    }\n\n    @Test\n    public void testConsumeAfterConsumeTo() {\n        tokenQueue.consumeTo(\"Two\");\n        tokenQueue.consume(\"Two\");\n        assertEquals(\"\", tokenQueue.remainder());\n    }\n\n    @Test\n    public void testConsumeAfterConsumeWhitespace() {\n        tokenQueue.consumeWhitespace();\n        tokenQueue.consume(\"One\");\n        assertEquals(\"Two\", tokenQueue.remainder());\n    }\n}\n"}]