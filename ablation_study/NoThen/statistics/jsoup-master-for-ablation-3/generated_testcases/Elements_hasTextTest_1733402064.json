[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_hasTextTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        elements = new Elements();\n    }\n\n    @Test\n    public void testHasTextWithText() {\n        Element element = new Element(\"p\");\n        element.text(\"Sample text\");\n        elements.add(element);\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithoutText() {\n        Element element = new Element(\"p\");\n        elements.add(element);\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithMultipleElements() {\n        Element element1 = new Element(\"p\");\n        element1.text(\"Sample text 1\");\n        Element element2 = new Element(\"p\");\n        element2.text(\"Sample text 2\");\n        Element element3 = new Element(\"p\");\n        elements.add(element1);\n        elements.add(element2);\n        elements.add(element3);\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithNoElements() {\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithEmptyText() {\n        Element element = new Element(\"p\");\n        element.text(\"\");\n        elements.add(element);\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithWhitespaceText() {\n        Element element = new Element(\"p\");\n        element.text(\"   \");\n        elements.add(element);\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasTextWithMixedElements() {\n        Element element1 = new Element(\"p\");\n        element1.text(\"Sample text 1\");\n        Element element2 = new Element(\"p\");\n        element2.text(\"\");\n        Element element3 = new Element(\"p\");\n        element3.text(\"Sample text 2\");\n        elements.add(element1);\n        elements.add(element2);\n        elements.add(element3);\n        assertTrue(elements.hasText());\n    }\n}\n"}]