[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_removeClassTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testRemoveClassSuccess() {\n        element.addClass(\"testClass\");\n        assertEquals(\"testClass\", element.className());\n\n        Element result = element.removeClass(\"testClass\");\n        assertEquals(\"\", element.className());\n        assertSame(element, result);\n    }\n\n    @Test\n    public void testRemoveClassNonExistent() {\n        element.addClass(\"existingClass\");\n        assertEquals(\"existingClass\", element.className());\n\n        Element result = element.removeClass(\"nonExistentClass\");\n        assertEquals(\"existingClass\", element.className());\n        assertSame(element, result);\n    }\n\n    @Test\n    public void testRemoveClassNull() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            element.removeClass(null);\n        });\n    }\n\n    @Test\n    public void testRemoveClassEmpty() {\n        element.addClass(\"testClass\");\n        assertEquals(\"testClass\", element.className());\n\n        Element result = element.removeClass(\"\");\n        assertEquals(\"testClass\", element.className());\n        assertSame(element, result);\n    }\n\n    @Test\n    public void testRemoveClassMultiple() {\n        element.addClass(\"class1 class2 class3\");\n        assertEquals(\"class1 class2 class3\", element.className());\n\n        Element result = element.removeClass(\"class2\");\n        assertEquals(\"class1 class3\", element.className());\n        assertSame(element, result);\n    }\n}\n"}]