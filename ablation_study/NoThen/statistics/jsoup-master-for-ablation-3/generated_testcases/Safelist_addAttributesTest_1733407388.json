[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_addAttributesTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testAddAttributes_ValidAttributes() {\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        Attribute classAttribute = new Attribute(\"class\", \"btn\");\n        attributes.put(hrefAttribute);\n        attributes.put(classAttribute);\n        Element element = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", element, hrefAttribute));\n        assertTrue(safelist.isSafeAttribute(\"a\", element, classAttribute));\n    }\n\n    @Test\n    public void testAddAttributes_InvalidAttributes() {\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        Attributes attributes = new Attributes();\n        Attribute invalidAttribute = new Attribute(\"invalid\", \"value\");\n        attributes.put(invalidAttribute);\n        Element element = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", element, invalidAttribute));\n    }\n\n    @Test\n    public void testAddAttributes_NoAttributesSupplied() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(\"a\");\n        });\n    }\n\n    @Test\n    public void testAddAttributes_EmptyTag() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(\"\", \"href\");\n        });\n    }\n\n    @Test\n    public void testAddAttributes_NullAttributes() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(\"a\", (String[]) null);\n        });\n    }\n\n    @Test\n    public void testAddAttributes_EmptyAttribute() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            safelist.addAttributes(\"a\", \"href\", \"\");\n        });\n    }\n}\n"}]