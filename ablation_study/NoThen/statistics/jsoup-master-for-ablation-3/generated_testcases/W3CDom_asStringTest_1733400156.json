[{"strategy": "retry", "code": "\npackage org.jsoup.helper;\n\nimport org.junit.jupiter.api.Test;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.DocumentType;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.transform.TransformerException;\nimport java.util.HashMap;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class W3CDom_asStringTest {\n\n    @Test\n    public void testAsString_WithPropertiesAndDoctype() throws ParserConfigurationException {\n        // Given\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document doc = builder.newDocument();\n        DocumentType doctype = doc.getImplementation().createDocumentType(\"html\", \"\", \"about:legacy-compat\");\n        doc.appendChild(doctype);\n\n        Map<String, String> properties = new HashMap<>();\n        properties.put(\"method\", \"html\");\n\n        // When\n        String result = W3CDom.asString(doc, properties);\n\n        // Then\n        assertEquals(\"<!DOCTYPE html SYSTEM \\\"about:legacy-compat\\\">\", result.trim());\n    }\n\n    @Test\n    public void testAsString_TransformerException() throws ParserConfigurationException {\n        // Given\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder builder = factory.newDocumentBuilder();\n        Document doc = builder.newDocument();\n\n        // Mocking a TransformerException\n        Document finalDoc = doc;\n        Map<String, String> properties = new HashMap<>();\n        properties.put(\"invalidProperty\", \"invalidValue\");\n\n        // When and Then\n        assertThrows(IllegalStateException.class, () -> W3CDom.asString(finalDoc, properties));\n    }\n}\n"}]