[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.NoSuchElementException;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeIterator_nextTest {\n\n    private NodeIterator<Node> nodeIterator;\n    private Document doc;\n\n    @BeforeEach\n    public void setUp() {\n        String html = \"<div id=out1><div id=1><p>One<p>Two</div><div id=2><p>Three<p>Four</div></div><div id=out2>Out2\";\n        doc = Jsoup.parse(html);\n        nodeIterator = new NodeIterator<>(doc, Node.class);\n    }\n\n    @Test\n    public void testNextWithValidNode() {\n        assertTrue(nodeIterator.hasNext());\n        Node node = nodeIterator.next();\n        assertNotNull(node);\n        assertEquals(\"html\", node.nodeName());\n    }\n\n    @Test\n    public void testNextWithNoSuchElementException() {\n        while (nodeIterator.hasNext()) {\n            nodeIterator.next();\n        }\n        assertThrows(NoSuchElementException.class, () -> nodeIterator.next());\n    }\n\n    @Test\n    public void testRestart() {\n        Node firstNode = nodeIterator.next();\n        nodeIterator.restart(doc.body());\n        Node restartedNode = nodeIterator.next();\n        assertNotEquals(firstNode, restartedNode);\n        assertEquals(\"body\", restartedNode.nodeName());\n    }\n\n    @Test\n    public void testRemove() {\n        while (nodeIterator.hasNext()) {\n            Node node = nodeIterator.next();\n            if (\"1\".equals(node.attr(\"id\"))) {\n                nodeIterator.remove();\n            }\n        }\n        assertTrue(doc.select(\"div#1\").isEmpty());\n    }\n}\n"}]