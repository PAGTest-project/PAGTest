[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass Element_siblingElementsTest {\n\n    @Test\n    void testSiblingElementsWithParent() {\n        // Given\n        Element parent = mock(Element.class);\n        Element sibling1 = new Element(\"div\");\n        Element sibling2 = new Element(\"span\");\n        Element current = new Element(\"p\");\n        current.parentNode = parent;\n\n        when(parent.childElementsList()).thenReturn(new Elements(sibling1, current, sibling2));\n\n        // When\n        Elements siblings = current.siblingElements();\n\n        // Then\n        assertEquals(2, siblings.size());\n        assertTrue(siblings.contains(sibling1));\n        assertTrue(siblings.contains(sibling2));\n    }\n\n    @Test\n    void testSiblingElementsWithoutParent() {\n        // Given\n        Element current = new Element(\"p\");\n        current.parentNode = null;\n\n        // When\n        Elements siblings = current.siblingElements();\n\n        // Then\n        assertEquals(0, siblings.size());\n    }\n}\n"}]