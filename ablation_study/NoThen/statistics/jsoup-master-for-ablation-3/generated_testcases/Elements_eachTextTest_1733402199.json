[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.TextNode;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class Elements_eachTextTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        elements = new Elements();\n    }\n\n    @Test\n    public void testEachTextWithTextNodes() {\n        Element element1 = new Element(\"div\");\n        element1.appendText(\"Hello\");\n        Element element2 = new Element(\"div\");\n        element2.appendText(\"World\");\n\n        elements.add(element1);\n        elements.add(element2);\n\n        List<String> expected = Arrays.asList(\"Hello\", \"World\");\n        assertEquals(expected, elements.eachText());\n    }\n\n    @Test\n    public void testEachTextWithNoTextNodes() {\n        Element element1 = new Element(\"div\");\n        Element element2 = new Element(\"div\");\n\n        elements.add(element1);\n        elements.add(element2);\n\n        List<String> expected = Arrays.asList();\n        assertEquals(expected, elements.eachText());\n    }\n\n    @Test\n    public void testEachTextWithMixedNodes() {\n        Element element1 = new Element(\"div\");\n        element1.appendText(\"Hello\");\n        Element element2 = new Element(\"div\");\n        element2.appendText(\"World\");\n        Element element3 = new Element(\"div\");\n\n        elements.add(element1);\n        elements.add(element2);\n        elements.add(element3);\n\n        List<String> expected = Arrays.asList(\"Hello\", \"World\");\n        assertEquals(expected, elements.eachText());\n    }\n\n    @Test\n    public void testEachTextWithDocument() {\n        String html = \"<div>Hello</div><div>World</div><div></div>\";\n        Document doc = Jsoup.parse(html);\n        Elements elements = doc.select(\"div\");\n\n        List<String> expected = Arrays.asList(\"Hello\", \"World\");\n        assertEquals(expected, elements.eachText());\n    }\n}\n"}]