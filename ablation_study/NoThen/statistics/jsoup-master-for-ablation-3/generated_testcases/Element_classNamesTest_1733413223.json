[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_classNamesTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testClassNamesEmpty() {\n        assertEquals(0, element.classNames().size());\n    }\n\n    @Test\n    public void testClassNamesSingleClass() {\n        element.addClass(\"class1\");\n        assertEquals(1, element.classNames().size());\n        assertTrue(element.classNames().contains(\"class1\"));\n    }\n\n    @Test\n    public void testClassNamesMultipleClasses() {\n        element.addClass(\"class1\");\n        element.addClass(\"class2\");\n        assertEquals(2, element.classNames().size());\n        assertTrue(element.classNames().contains(\"class1\"));\n        assertTrue(element.classNames().contains(\"class2\"));\n    }\n\n    @Test\n    public void testClassNamesWithWhitespace() {\n        element.attr(\"class\", \" class1  class2 \");\n        assertEquals(2, element.classNames().size());\n        assertTrue(element.classNames().contains(\"class1\"));\n        assertTrue(element.classNames().contains(\"class2\"));\n    }\n\n    @Test\n    public void testClassNamesRemoveClass() {\n        element.addClass(\"class1\");\n        element.addClass(\"class2\");\n        element.removeClass(\"class1\");\n        assertEquals(1, element.classNames().size());\n        assertTrue(element.classNames().contains(\"class2\"));\n    }\n\n    @Test\n    public void testClassNamesRemoveNonExistentClass() {\n        element.addClass(\"class1\");\n        element.removeClass(\"class2\");\n        assertEquals(1, element.classNames().size());\n        assertTrue(element.classNames().contains(\"class1\"));\n    }\n}\n"}]