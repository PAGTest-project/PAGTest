[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.ConcurrentModificationException;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_normalizeTest {\n    private Attributes attributes;\n\n    @BeforeEach\n    public void setUp() {\n        attributes = new Attributes();\n    }\n\n    @Test\n    public void testNormalizeWithNoInternalKeys() {\n        attributes.put(\"key1\", \"value1\");\n        attributes.put(\"key2\", \"value2\");\n        attributes.normalize();\n        assertEquals(\"key1\", attributes.keys[0]);\n        assertEquals(\"key2\", attributes.keys[1]);\n    }\n\n    @Test\n    public void testNormalizeWithInternalKeys() {\n        attributes.put(\"/internalKey1\", \"value1\");\n        attributes.put(\"key2\", \"value2\");\n        attributes.normalize();\n        assertEquals(\"/internalKey1\", attributes.keys[0]);\n        assertEquals(\"key2\", attributes.keys[1]);\n    }\n\n    @Test\n    public void testNormalizeWithMixedKeys() {\n        attributes.put(\"/internalKey1\", \"value1\");\n        attributes.put(\"key2\", \"value2\");\n        attributes.put(\"key3\", \"value3\");\n        attributes.normalize();\n        assertEquals(\"/internalKey1\", attributes.keys[0]);\n        assertEquals(\"key2\", attributes.keys[1]);\n        assertEquals(\"key3\", attributes.keys[2]);\n    }\n\n    @Test\n    public void testNormalizeWithAllInternalKeys() {\n        attributes.put(\"/internalKey1\", \"value1\");\n        attributes.put(\"/internalKey2\", \"value2\");\n        attributes.normalize();\n        assertEquals(\"/internalKey1\", attributes.keys[0]);\n        assertEquals(\"/internalKey2\", attributes.keys[1]);\n    }\n\n    @Test\n    public void testNormalizeWithEmptyAttributes() {\n        attributes.normalize();\n        assertEquals(0, attributes.size);\n    }\n}\n"}]