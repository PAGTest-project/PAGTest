[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_addTagsTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testAddTags_ValidTags() {\n        safelist.addTags(\"a\", \"b\", \"blockquote\");\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"b\"));\n        assertTrue(safelist.isSafeTag(\"blockquote\"));\n    }\n\n    @Test\n    public void testAddTags_EmptyTag() {\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags(\"\"));\n    }\n\n    @Test\n    public void testAddTags_NullTag() {\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags((String) null));\n    }\n\n    @Test\n    public void testAddTags_NoscriptTag() {\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags(\"noscript\"));\n    }\n\n    @Test\n    public void testAddTags_MixedValidAndInvalidTags() {\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags(\"a\", \"noscript\", \"b\"));\n    }\n\n    @Test\n    public void testAddTags_CaseInsensitive() {\n        safelist.addTags(\"A\", \"B\", \"BLOCKQUOTE\");\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"b\"));\n        assertTrue(safelist.isSafeTag(\"blockquote\"));\n    }\n\n    @Test\n    public void testAddTags_NoTags() {\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags());\n    }\n\n    @Test\n    public void testAddTags_NullArray() {\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags((String[]) null));\n    }\n}\n"}]