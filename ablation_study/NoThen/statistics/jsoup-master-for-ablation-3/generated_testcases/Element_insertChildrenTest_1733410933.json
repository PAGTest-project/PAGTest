[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.helper.Validate;\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Element_insertChildrenTest {\n\n    @Test\n    void testInsertChildren_ValidIndex() {\n        Element element = new Element(\"div\");\n        Collection<Node> children = Arrays.asList(new Element(\"span\"), new TextNode(\"text\"));\n        int index = 0;\n\n        Element result = element.insertChildren(index, children);\n\n        assertEquals(element, result);\n        assertEquals(2, element.childNodeSize());\n    }\n\n    @Test\n    void testInsertChildren_NegativeIndex() {\n        Element element = new Element(\"div\");\n        Collection<Node> children = Arrays.asList(new Element(\"span\"), new TextNode(\"text\"));\n        int index = -1;\n\n        Element result = element.insertChildren(index, children);\n\n        assertEquals(element, result);\n        assertEquals(2, element.childNodeSize());\n    }\n\n    @Test\n    void testInsertChildren_NullChildren() {\n        Element element = new Element(\"div\");\n        Collection<Node> children = null;\n        int index = 0;\n\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            element.insertChildren(index, children);\n        });\n\n        assertEquals(\"Children collection to be inserted must not be null.\", exception.getMessage());\n    }\n\n    @Test\n    void testInsertChildren_OutOfBoundsIndex() {\n        Element element = new Element(\"div\");\n        Collection<Node> children = Arrays.asList(new Element(\"span\"), new TextNode(\"text\"));\n        int index = 2;\n\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            element.insertChildren(index, children);\n        });\n\n        assertEquals(\"Insert position out of bounds.\", exception.getMessage());\n    }\n}\n"}]