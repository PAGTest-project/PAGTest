[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Parser_setTreeBuilderTest {\n    private Parser parser;\n\n    @BeforeEach\n    public void setUp() {\n        parser = new Parser(new HtmlTreeBuilder());\n    }\n\n    @Test\n    public void testSetTreeBuilder() {\n        TreeBuilder newTreeBuilder = new XmlTreeBuilder();\n        Parser updatedParser = parser.setTreeBuilder(newTreeBuilder);\n\n        assertEquals(newTreeBuilder, updatedParser.getTreeBuilder());\n        assertEquals(parser, newTreeBuilder.parser);\n    }\n\n    @Test\n    public void testSetTreeBuilderAndParseInput() {\n        TreeBuilder newTreeBuilder = new XmlTreeBuilder();\n        parser.setTreeBuilder(newTreeBuilder);\n\n        String html = \"<root><child>text</child></root>\";\n        Document doc = parser.parseInput(html, \"\");\n\n        assertNotNull(doc);\n        assertEquals(\"root\", doc.child(0).nodeName());\n    }\n\n    @Test\n    public void testSetTreeBuilderAndParseFragmentInput() {\n        TreeBuilder newTreeBuilder = new XmlTreeBuilder();\n        parser.setTreeBuilder(newTreeBuilder);\n\n        String fragment = \"<child>text</child>\";\n        Element context = new Element(\"root\");\n        String baseUri = \"\";\n\n        List<Node> nodes = parser.parseFragmentInput(fragment, context, baseUri);\n\n        assertNotNull(nodes);\n        assertEquals(1, nodes.size());\n        assertEquals(\"child\", nodes.get(0).nodeName());\n    }\n}\n"}]