[{"strategy": "generate", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createBindingResponseTest {\n\n    private TransportAddress mappedAddress;\n    private Request request;\n\n    @BeforeEach\n    public void setUp() {\n        mappedAddress = new TransportAddress(\"127.0.0.1\", 3478, Transport.UDP);\n        request = MessageFactory.createBindingRequest();\n    }\n\n    @Test\n    public void testCreateBindingResponse() {\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_SUCCESS_RESPONSE);\n        XorMappedAddressAttribute xorMappedAddressAttribute = AttributeFactory\n                .createXorMappedAddressAttribute(mappedAddress, request.getTransactionID());\n        expectedResponse.putAttribute(xorMappedAddressAttribute);\n\n        Response actualResponse = MessageFactory.createBindingResponse(request, mappedAddress);\n\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.XOR_MAPPED_ADDRESS), actualResponse.getAttribute(Attribute.XOR_MAPPED_ADDRESS));\n    }\n\n    @Test\n    public void testCreateBindingResponseWithNullRequest() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            MessageFactory.createBindingResponse(null, mappedAddress);\n        });\n    }\n\n    @Test\n    public void testCreateBindingResponseWithNullMappedAddress() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            MessageFactory.createBindingResponse(request, null);\n        });\n    }\n}\n"}]