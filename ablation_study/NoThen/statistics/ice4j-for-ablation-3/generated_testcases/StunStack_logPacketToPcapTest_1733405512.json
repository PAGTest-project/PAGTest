[{"strategy": "retry", "code": "\npackage org.ice4j.stack;\n\nimport org.ice4j.*;\nimport org.ice4j.message.*;\nimport org.ice4j.socket.*;\nimport org.junit.jupiter.api.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.net.*;\n\npublic class StunStack_logPacketToPcapTest {\n\n    private StunStack stunStack;\n    private DatagramPacket datagramPacket;\n    private InetAddress interfaceAddress;\n    private int interfacePort;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        stunStack = new StunStack();\n        datagramPacket = new DatagramPacket(new byte[1024], 1024);\n        interfaceAddress = InetAddress.getByName(\"127.0.0.1\");\n        interfacePort = 12345;\n    }\n\n    @Test\n    public void testLogPacketToPcapEnabled() throws Exception {\n        // Given\n        PacketLogger mockPacketLogger = new PacketLogger() {\n            @Override\n            public void logPacket(byte[] fromAddress, int fromPort, byte[] toAddress, int toPort, byte[] data, boolean isSent) {\n                // Mock implementation\n            }\n\n            @Override\n            public boolean isEnabled() {\n                return true;\n            }\n        };\n        StunStack.packetLogger = mockPacketLogger;\n\n        // When\n        StunStack.logPacketToPcap(datagramPacket, true, interfaceAddress, interfacePort);\n\n        // Then\n        // No exception means the packet was logged successfully\n    }\n\n    @Test\n    public void testLogPacketToPcapDisabled() throws Exception {\n        // Given\n        PacketLogger mockPacketLogger = new PacketLogger() {\n            @Override\n            public void logPacket(byte[] fromAddress, int fromPort, byte[] toAddress, int toPort, byte[] data, boolean isSent) {\n                // Mock implementation\n            }\n\n            @Override\n            public boolean isEnabled() {\n                return false;\n            }\n        };\n        StunStack.packetLogger = mockPacketLogger;\n\n        // When\n        StunStack.logPacketToPcap(datagramPacket, true, interfaceAddress, interfacePort);\n\n        // Then\n        // No exception means the packet logging was skipped as expected\n    }\n\n    @Test\n    public void testLogPacketToPcapNullInterfaceAddress() throws Exception {\n        // Given\n        PacketLogger mockPacketLogger = new PacketLogger() {\n            @Override\n            public void logPacket(byte[] fromAddress, int fromPort, byte[] toAddress, int toPort, byte[] data, boolean isSent) {\n                // Mock implementation\n            }\n\n            @Override\n            public boolean isEnabled() {\n                return true;\n            }\n        };\n        StunStack.packetLogger = mockPacketLogger;\n\n        // When\n        StunStack.logPacketToPcap(datagramPacket, true, null, interfacePort);\n\n        // Then\n        // No exception means the packet logging was skipped as expected\n    }\n}\n"}]