[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.*;\nimport org.ice4j.*;\nimport org.junit.jupiter.api.*;\n\npublic class UnknownAttributesAttribute_addAttributeIDTest {\n    private UnknownAttributesAttribute unknownAttributesAttribute;\n    private MsgFixture binMessagesFixture;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        unknownAttributesAttribute = new UnknownAttributesAttribute();\n        binMessagesFixture = new MsgFixture();\n    }\n\n    @Test\n    public void testAddAttributeID_NewAttribute() {\n        char attributeID = 'A';\n        assertFalse(unknownAttributesAttribute.contains(attributeID));\n\n        unknownAttributesAttribute.addAttributeID(attributeID);\n        assertTrue(unknownAttributesAttribute.contains(attributeID));\n        assertEquals(1, unknownAttributesAttribute.getAttributeCount());\n    }\n\n    @Test\n    public void testAddAttributeID_DuplicateAttribute() {\n        char attributeID = 'B';\n        unknownAttributesAttribute.addAttributeID(attributeID);\n        assertTrue(unknownAttributesAttribute.contains(attributeID));\n        assertEquals(1, unknownAttributesAttribute.getAttributeCount());\n\n        unknownAttributesAttribute.addAttributeID(attributeID);\n        assertTrue(unknownAttributesAttribute.contains(attributeID));\n        assertEquals(1, unknownAttributesAttribute.getAttributeCount());\n    }\n\n    @Test\n    public void testAddAttributeID_EncodeUpdated() {\n        char attributeID1 = 'C';\n        char attributeID2 = 'D';\n        unknownAttributesAttribute.addAttributeID(attributeID1);\n        unknownAttributesAttribute.addAttributeID(attributeID2);\n\n        byte[] expectedReturn = binMessagesFixture.unknownAttsEncodeExpectedResult;\n        byte[] actualReturn = unknownAttributesAttribute.encode();\n        assertArrayEquals(actualReturn, expectedReturn);\n    }\n}\n"}]