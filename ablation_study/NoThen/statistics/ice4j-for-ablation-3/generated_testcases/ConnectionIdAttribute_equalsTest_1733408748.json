[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport org.ice4j.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.*;\n\npublic class ConnectionIdAttribute_equalsTest {\n    private ConnectionIdAttribute connectionIdAttribute;\n    private MsgFixture msgFixture;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        this.connectionIdAttribute = new ConnectionIdAttribute();\n        this.msgFixture = new MsgFixture();\n    }\n\n    @Test\n    public void testEquals_SameObject() {\n        assertTrue(connectionIdAttribute.equals(connectionIdAttribute), \"An object should be equal to itself\");\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        Object obj = new Object();\n        assertFalse(connectionIdAttribute.equals(obj), \"An object of different class should not be equal\");\n    }\n\n    @Test\n    public void testEquals_DifferentConnectionIdValue() throws StunException {\n        ConnectionIdAttribute other = new ConnectionIdAttribute();\n        other.decodeAttributeBody(msgFixture.connectionId, (char) 0, ConnectionIdAttribute.DATA_LENGTH);\n        connectionIdAttribute.setConnectionIdValue(MsgFixture.CONNECTION_ID + 1);\n        assertFalse(connectionIdAttribute.equals(other), \"Attributes with different connectionIdValue should not be equal\");\n    }\n\n    @Test\n    public void testEquals_SameConnectionIdValue() throws StunException {\n        ConnectionIdAttribute other = new ConnectionIdAttribute();\n        other.decodeAttributeBody(msgFixture.connectionId, (char) 0, ConnectionIdAttribute.DATA_LENGTH);\n        connectionIdAttribute.setConnectionIdValue(MsgFixture.CONNECTION_ID);\n        assertTrue(connectionIdAttribute.equals(other), \"Attributes with the same connectionIdValue should be equal\");\n    }\n}\n"}]