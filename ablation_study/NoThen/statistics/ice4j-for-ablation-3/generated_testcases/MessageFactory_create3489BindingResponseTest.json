[{"strategy": "generate", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_create3489BindingResponseTest {\n\n    @Test\n    public void testCreate3489BindingResponseWithAllAddresses() {\n        TransportAddress mappedAddress = new TransportAddress(\"192.168.1.1\", 1234, Transport.UDP);\n        TransportAddress sourceAddress = new TransportAddress(\"192.168.1.2\", 5678, Transport.UDP);\n        TransportAddress changedAddress = new TransportAddress(\"192.168.1.3\", 9012, Transport.UDP);\n\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_SUCCESS_RESPONSE);\n        expectedResponse.putAttribute(AttributeFactory.createMappedAddressAttribute(mappedAddress));\n        expectedResponse.putAttribute(AttributeFactory.createSourceAddressAttribute(sourceAddress));\n        expectedResponse.putAttribute(AttributeFactory.createChangedAddressAttribute(changedAddress));\n\n        Response actualResponse = MessageFactory.create3489BindingResponse(mappedAddress, sourceAddress, changedAddress);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.MAPPED_ADDRESS), actualResponse.getAttribute(Attribute.MAPPED_ADDRESS));\n        assertEquals(expectedResponse.getAttribute(Attribute.SOURCE_ADDRESS), actualResponse.getAttribute(Attribute.SOURCE_ADDRESS));\n        assertEquals(expectedResponse.getAttribute(Attribute.CHANGED_ADDRESS), actualResponse.getAttribute(Attribute.CHANGED_ADDRESS));\n    }\n\n    @Test\n    public void testCreate3489BindingResponseWithNullSourceAddress() {\n        TransportAddress mappedAddress = new TransportAddress(\"192.168.1.1\", 1234, Transport.UDP);\n        TransportAddress changedAddress = new TransportAddress(\"192.168.1.3\", 9012, Transport.UDP);\n\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_SUCCESS_RESPONSE);\n        expectedResponse.putAttribute(AttributeFactory.createMappedAddressAttribute(mappedAddress));\n        expectedResponse.putAttribute(AttributeFactory.createChangedAddressAttribute(changedAddress));\n\n        Response actualResponse = MessageFactory.create3489BindingResponse(mappedAddress, null, changedAddress);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.MAPPED_ADDRESS), actualResponse.getAttribute(Attribute.MAPPED_ADDRESS));\n        assertNull(actualResponse.getAttribute(Attribute.SOURCE_ADDRESS));\n        assertEquals(expectedResponse.getAttribute(Attribute.CHANGED_ADDRESS), actualResponse.getAttribute(Attribute.CHANGED_ADDRESS));\n    }\n\n    @Test\n    public void testCreate3489BindingResponseWithNullChangedAddress() {\n        TransportAddress mappedAddress = new TransportAddress(\"192.168.1.1\", 1234, Transport.UDP);\n        TransportAddress sourceAddress = new TransportAddress(\"192.168.1.2\", 5678, Transport.UDP);\n\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_SUCCESS_RESPONSE);\n        expectedResponse.putAttribute(AttributeFactory.createMappedAddressAttribute(mappedAddress));\n        expectedResponse.putAttribute(AttributeFactory.createSourceAddressAttribute(sourceAddress));\n\n        Response actualResponse = MessageFactory.create3489BindingResponse(mappedAddress, sourceAddress, null);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.MAPPED_ADDRESS), actualResponse.getAttribute(Attribute.MAPPED_ADDRESS));\n        assertEquals(expectedResponse.getAttribute(Attribute.SOURCE_ADDRESS), actualResponse.getAttribute(Attribute.SOURCE_ADDRESS));\n        assertNull(actualResponse.getAttribute(Attribute.CHANGED_ADDRESS));\n    }\n\n    @Test\n    public void testCreate3489BindingResponseWithNullSourceAndChangedAddress() {\n        TransportAddress mappedAddress = new TransportAddress(\"192.168.1.1\", 1234, Transport.UDP);\n\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_SUCCESS_RESPONSE);\n        expectedResponse.putAttribute(AttributeFactory.createMappedAddressAttribute(mappedAddress));\n\n        Response actualResponse = MessageFactory.create3489BindingResponse(mappedAddress, null, null);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.MAPPED_ADDRESS), actualResponse.getAttribute(Attribute.MAPPED_ADDRESS));\n        assertNull(actualResponse.getAttribute(Attribute.SOURCE_ADDRESS));\n        assertNull(actualResponse.getAttribute(Attribute.CHANGED_ADDRESS));\n    }\n}\n"}]