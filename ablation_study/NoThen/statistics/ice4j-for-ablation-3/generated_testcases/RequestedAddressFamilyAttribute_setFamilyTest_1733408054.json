[{"strategy": "generate", "code": "\npackage org.ice4j.attribute;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.junit.jupiter.api.*;\n\npublic class RequestedAddressFamilyAttribute_setFamilyTest {\n    private RequestedAddressFamilyAttribute requestedAddressFamilyAttribute;\n    private MsgFixture msgFixture;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        this.requestedAddressFamilyAttribute = new RequestedAddressFamilyAttribute();\n        this.msgFixture = new MsgFixture();\n    }\n\n    @Test\n    public void testSetFamilyIPv4() {\n        assertTrue(requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv4));\n        assertEquals(RequestedAddressFamilyAttribute.IPv4, requestedAddressFamilyAttribute.getFamily());\n    }\n\n    @Test\n    public void testSetFamilyIPv6() {\n        assertTrue(requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv6));\n        assertEquals(RequestedAddressFamilyAttribute.IPv6, requestedAddressFamilyAttribute.getFamily());\n    }\n\n    @Test\n    public void testSetFamilyInvalid() {\n        assertFalse(requestedAddressFamilyAttribute.setFamily((char) 0x03));\n        assertEquals(RequestedAddressFamilyAttribute.IPv4, requestedAddressFamilyAttribute.getFamily());\n    }\n\n    @Test\n    public void testEncodeAfterSetFamilyIPv4() {\n        requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv4);\n        byte[] expectedReturn = msgFixture.requestedAddressFamilyV4;\n        byte[] actualReturn = requestedAddressFamilyAttribute.encode();\n        assertArrayEquals(expectedReturn, actualReturn);\n    }\n\n    @Test\n    public void testEncodeAfterSetFamilyIPv6() {\n        requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv6);\n        byte[] expectedReturn = msgFixture.requestedAddressFamilyV6;\n        byte[] actualReturn = requestedAddressFamilyAttribute.encode();\n        assertArrayEquals(expectedReturn, actualReturn);\n    }\n\n    @Test\n    public void testEqualsAfterSetFamilyIPv4() {\n        requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv4);\n        RequestedAddressFamilyAttribute other = new RequestedAddressFamilyAttribute();\n        other.setFamily(RequestedAddressFamilyAttribute.IPv4);\n        assertTrue(requestedAddressFamilyAttribute.equals(other));\n    }\n\n    @Test\n    public void testEqualsAfterSetFamilyIPv6() {\n        requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv6);\n        RequestedAddressFamilyAttribute other = new RequestedAddressFamilyAttribute();\n        other.setFamily(RequestedAddressFamilyAttribute.IPv6);\n        assertTrue(requestedAddressFamilyAttribute.equals(other));\n    }\n\n    @Test\n    public void testEqualsAfterSetFamilyInvalid() {\n        requestedAddressFamilyAttribute.setFamily(RequestedAddressFamilyAttribute.IPv4);\n        RequestedAddressFamilyAttribute other = new RequestedAddressFamilyAttribute();\n        other.setFamily((char) 0x03);\n        assertFalse(requestedAddressFamilyAttribute.equals(other));\n    }\n}\n"}]