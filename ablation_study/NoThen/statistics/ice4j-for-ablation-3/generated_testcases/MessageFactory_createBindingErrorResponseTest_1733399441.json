[{"strategy": "generate", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createBindingErrorResponseTest {\n\n    @Test\n    public void testCreateBindingErrorResponseWithReasonPhrase() {\n        char errorCode = ErrorCodeAttribute.UNKNOWN_ATTRIBUTE;\n        String reasonPhrase = \"Unknown attribute\";\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_ERROR_RESPONSE);\n        ErrorCodeAttribute errorCodeAttribute = AttributeFactory.createErrorCodeAttribute(errorCode, reasonPhrase);\n        expectedResponse.putAttribute(errorCodeAttribute);\n\n        Response actualResponse = MessageFactory.createBindingErrorResponse(errorCode, reasonPhrase);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.ERROR_CODE), actualResponse.getAttribute(Attribute.ERROR_CODE));\n    }\n\n    @Test\n    public void testCreateBindingErrorResponseWithoutReasonPhrase() {\n        char errorCode = ErrorCodeAttribute.UNKNOWN_ATTRIBUTE;\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_ERROR_RESPONSE);\n        ErrorCodeAttribute errorCodeAttribute = AttributeFactory.createErrorCodeAttribute(errorCode, null);\n        expectedResponse.putAttribute(errorCodeAttribute);\n\n        Response actualResponse = MessageFactory.createBindingErrorResponse(errorCode);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.ERROR_CODE), actualResponse.getAttribute(Attribute.ERROR_CODE));\n    }\n\n    @Test\n    public void testCreateBindingErrorResponseUnknownAttributes() {\n        char[] unknownAttributes = {0x0001, 0x0002};\n        Response expectedResponse = new Response();\n        expectedResponse.setMessageType(Message.BINDING_ERROR_RESPONSE);\n        ErrorCodeAttribute errorCodeAttribute = AttributeFactory.createErrorCodeAttribute(ErrorCodeAttribute.UNKNOWN_ATTRIBUTE, null);\n        expectedResponse.putAttribute(errorCodeAttribute);\n        UnknownAttributesAttribute unknownAttributesAttribute = AttributeFactory.createUnknownAttributesAttribute();\n        for (char attr : unknownAttributes) {\n            unknownAttributesAttribute.addAttributeID(attr);\n        }\n        expectedResponse.putAttribute(unknownAttributesAttribute);\n\n        Response actualResponse = MessageFactory.createBindingErrorResponseUnknownAttributes(unknownAttributes);\n        assertEquals(expectedResponse.getMessageType(), actualResponse.getMessageType());\n        assertEquals(expectedResponse.getAttribute(Attribute.ERROR_CODE), actualResponse.getAttribute(Attribute.ERROR_CODE));\n        assertEquals(expectedResponse.getAttribute(Attribute.UNKNOWN_ATTRIBUTES), actualResponse.getAttribute(Attribute.UNKNOWN_ATTRIBUTES));\n    }\n}\n"}]