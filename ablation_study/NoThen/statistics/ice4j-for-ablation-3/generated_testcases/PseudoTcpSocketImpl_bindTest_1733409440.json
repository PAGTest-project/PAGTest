[{"strategy": "retry", "code": "\npackage org.ice4j.pseudotcp;\n\nimport org.junit.jupiter.api.Test;\nimport java.io.IOException;\nimport java.net.DatagramSocket;\nimport java.net.InetAddress;\nimport java.net.InetSocketAddress;\nimport java.net.UnknownHostException;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass PseudoTcpSocketImpl_bindTest {\n\n    @Test\n    void testBindWithExistingSocket() throws IOException {\n        // Given\n        PseudoTcpSocketImpl pseudoTcpSocket = new PseudoTcpSocketImpl(12345);\n        DatagramSocket mockSocket = mock(DatagramSocket.class);\n        pseudoTcpSocket.socket = mockSocket;\n        InetAddress host = InetAddress.getByName(\"127.0.0.1\");\n        int port = 12345;\n\n        // When\n        pseudoTcpSocket.bind(host, port);\n\n        // Then\n        verify(mockSocket).close();\n        assertNotNull(pseudoTcpSocket.socket);\n        assertEquals(new InetSocketAddress(host.getHostAddress(), port), ((InetSocketAddress) pseudoTcpSocket.socket.getLocalSocketAddress()));\n    }\n\n    @Test\n    void testBindWithoutExistingSocket() throws IOException {\n        // Given\n        PseudoTcpSocketImpl pseudoTcpSocket = new PseudoTcpSocketImpl(12345);\n        InetAddress host = InetAddress.getByName(\"127.0.0.1\");\n        int port = 12345;\n\n        // When\n        pseudoTcpSocket.bind(host, port);\n\n        // Then\n        assertNotNull(pseudoTcpSocket.socket);\n        assertEquals(new InetSocketAddress(host.getHostAddress(), port), ((InetSocketAddress) pseudoTcpSocket.socket.getLocalSocketAddress()));\n    }\n}\n"}]