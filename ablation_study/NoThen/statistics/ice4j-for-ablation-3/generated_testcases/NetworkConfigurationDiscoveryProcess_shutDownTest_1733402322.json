[{"strategy": "generate", "code": "\npackage org.ice4j.stunclient;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.message.*;\nimport org.ice4j.stack.*;\nimport org.junit.jupiter.api.*;\n\npublic class NetworkConfigurationDiscoveryProcess_shutDownTest {\n    private NetworkConfigurationDiscoveryProcess stunAddressDiscoverer;\n    private ResponseSequenceServer responseServer;\n    private TransportAddress discovererAddress;\n    private TransportAddress responseServerAddress;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        StunStack stunStack = new StunStack();\n\n        responseServerAddress = new TransportAddress(\"127.0.0.1\", 3478, Transport.UDP);\n        discovererAddress = new TransportAddress(\"127.0.0.1\", 5678, Transport.UDP);\n\n        responseServer = new ResponseSequenceServer(stunStack, responseServerAddress);\n        stunAddressDiscoverer = new NetworkConfigurationDiscoveryProcess(\n                stunStack,\n                discovererAddress, responseServerAddress);\n\n        stunAddressDiscoverer.start();\n        responseServer.start();\n\n        System.setProperty(StackProperties.MAX_CTRAN_RETRANS_TIMER, \"100\");\n        System.setProperty(StackProperties.MAX_CTRAN_RETRANSMISSIONS, \"2\");\n    }\n\n    @Test\n    public void testShutDown() throws Exception {\n        // Given\n        Response testIResponse1 = MessageFactory.create3489BindingResponse(\n                discovererAddress, responseServerAddress, responseServerAddress);\n        responseServer.addMessage(testIResponse1);\n\n        // When\n        StunDiscoveryReport report = stunAddressDiscoverer.determineAddress();\n        assertNotNull(report);\n\n        // Then\n        stunAddressDiscoverer.shutDown();\n        assertNull(stunAddressDiscoverer.getLocalAddress());\n        assertNull(stunAddressDiscoverer.getRequestSender());\n        assertFalse(stunAddressDiscoverer.isStarted());\n    }\n}\n"}]