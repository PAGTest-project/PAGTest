[{"strategy": "retry", "code": "\npackage org.ice4j.pseudotcp;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.util.logging.Level;\n\nimport static org.mockito.Mockito.*;\n\npublic class PseudoTcpSocketImpl_onTcpOpenTest {\n\n    @Test\n    public void testOnTcpOpen() throws IOException {\n        // Given\n        PseudoTcpSocketImpl socketImpl = new PseudoTcpSocketImpl(12345);\n        PseudoTCPBase tcp = Mockito.mock(PseudoTCPBase.class);\n        InetSocketAddress remoteAddress = new InetSocketAddress(\"localhost\", 12345);\n        socketImpl.doConnect(remoteAddress, 0);\n\n        // When\n        socketImpl.onTcpOpen(tcp);\n\n        // Then\n        verify(tcp, times(1)).connect();\n        verify(tcp, times(1)).notifyClock(anyLong());\n        verify(tcp, times(1)).getAvailable();\n        verify(tcp, times(1)).getAvailableSendBuffer();\n        verify(tcp, times(1)).getBytesBufferedNotSent();\n        verify(tcp, times(1)).getAckNotify();\n        verify(tcp, times(1)).getConversationID();\n        verify(tcp, times(1)).setConversationID(anyLong());\n        verify(tcp, times(1)).getSendBufferSize();\n        verify(tcp, times(1)).getRecvBufferSize();\n        verify(tcp, times(1)).getM_rwnd_scale();\n        verify(tcp, times(1)).getM_swnd_scale();\n        verify(tcp, times(1)).getCongestionWindow();\n        verify(tcp, times(1)).getBytesInFlight();\n        verify(tcp, times(1)).getRoundTripTimeEstimateMs();\n        verify(tcp, times(1)).getMTU();\n        verify(tcp, times(1)).notifyMTU(anyInt());\n        verify(tcp, times(1)).getOption(any());\n        verify(tcp, times(1)).setOption(any(), anyLong());\n        verify(tcp, times(1)).close(anyBoolean());\n        verify(tcp, times(1)).queue(any(), anyInt(), anyInt(), anyBoolean());\n        verify(tcp, times(1)).packet(anyLong(), anyShort(), anyLong(), anyLong());\n        verify(tcp, times(1)).parseSeg(any(), anyInt());\n        verify(tcp, times(1)).segToStr(any());\n        verify(tcp, times(1)).parse(any(), anyInt());\n        verify(tcp, times(1)).clock_check(anyLong());\n        verify(tcp, times(1)).process(any());\n        verify(tcp, times(1)).transmit(any(), anyLong());\n        verify(tcp, times(1)).attemptSend(any());\n        verify(tcp, times(1)).closedown(any());\n        verify(tcp, times(1)).adjustMTU();\n        verify(tcp, times(1)).isReceiveBufferFull();\n        verify(tcp, times(1)).disableWindowScale();\n        verify(tcp, times(1)).queueConnectMessage();\n        verify(tcp, times(1)).parseOptions(any(), anyInt(), anyInt());\n        verify(tcp, times(1)).applyOption(anyShort(), any(), anyLong());\n        verify(tcp, times(1)).applyWindowScaleOption(anyShort());\n        verify(tcp, times(1)).resizeSendBuffer(anyInt());\n        verify(tcp, times(1)).resizeReceiveBuffer(anyInt());\n        verify(tcp, times(1)).getM_snd_wnd();\n        verify(tcp, times(1)).getState();\n    }\n}\n"}]