{"file_path": "src/test/java/org/ice4j/pseudotcp/PseudoTcpStreamTest.java", "testclass_name": "PseudoTcpStreamTest", "dependencies": ["package org.ice4j.pseudotcp;", "import static org.junit.jupiter.api.Assertions.*;", "import java.io.*;", "import java.net.*;", "import java.util.concurrent.atomic.*;", "import java.util.logging.*;", "import org.junit.jupiter.api.*;"], "name": "PseudoTcpStreamTest", "description": "Tests for PseudoTcpStream functionality including connection, transfer, and timeout scenarios.", "class_members": {"variables": [{"name": "logger", "type": "static final Logger"}], "methods": [{"name": "receiveBuffer", "signature": "private static byte[] receiveBuffer(InputStream input, int size) throws IOException"}, {"name": "doTestTimeout", "signature": "private void doTestTimeout(final TimeoutOperationTest testOperation) throws Exception"}], "nested_classes": [{"name": "TimeoutOperationTest", "description": "Interface used to pass timeout test function"}]}, "fixtures": [], "test_cases": [{"name": "testConnectTransferClose", "primary_tested": ["PseudoTcpSocket.accept(int)", "PseudoTcpSocket.connect(InetSocketAddress,int)", "PseudoTcpSocket.getInputStream().read()", "PseudoTcpSocket.getOutputStream().write(byte[])", "PseudoTcpSocket.close()"], "associated_methods": ["PseudoTcpTestBase.createDummyData(int)", "PseudoTcpSocket.getLocalPort()", "PseudoTcpSocket.getState()"], "external_dependencies": {"modules": ["PseudoTcpSocket", "PseudoTcpSocketFactory", "PseudoTcpTestBase", "InetSocketAddress", "InetAddress", "AtomicBoolean", "Thread", "IOException", "PseudoTcpState"], "class_members": [{"name": "logger", "type": "variable"}], "project_specific_resources": ["PseudoTcpTestBase.createDummyData(int)"]}, "category": "integration", "fixtures_used": [], "description": "Tests the connection, data transfer, and closing of PseudoTcpSocket."}, {"name": "testAccept", "primary_tested": ["PseudoTcpSocketImpl.accept(int)"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "IOException"]}, "category": "unit", "fixtures_used": [], "description": "Tests the timeout on the accept method of PseudoTcpSocketImpl."}, {"name": "testReadTimeout", "primary_tested": ["PseudoTcpSocketImpl.setPTCPOption(Option,int)", "PseudoTcpSocketImpl.getInputStream().read(byte[])"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "Option", "IOException"], "class_members": [{"name": "doTestTimeout", "type": "method"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the timeout on the read method of PseudoTcpSocketImpl."}, {"name": "testWriteTimeout", "primary_tested": ["PseudoTcpSocketImpl.setPTCPOption(Option,int)", "PseudoTcpSocketImpl.getOutputStream().write(byte[])"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "Option", "IOException", "PseudoTCPBase"], "class_members": [{"name": "doTestTimeout", "type": "method"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the timeout on the write method of PseudoTcpSocketImpl."}, {"name": "testFlushTimeout", "primary_tested": ["PseudoTcpSocketImpl.setPTCPOption(Option,int)", "PseudoTcpSocketImpl.getOutputStream().flush()"], "external_dependencies": {"modules": ["PseudoTcpSocketImpl", "Option", "IOException", "PseudoTCPBase"], "class_members": [{"name": "doTestTimeout", "type": "method"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the timeout on the flush method of PseudoTcpSocketImpl."}]}