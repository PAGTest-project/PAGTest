[{"uris": "src/test/java/test/signalling/SignallingCallback.java.SignallingCallback", "name": "SignallingCallback", "methods": ["[void]onSignalling(String)"], "implementations": []}, {"uris": "src/main/java/org/ice4j/ResponseCollector.java.ResponseCollector", "name": "ResponseCollector", "methods": ["[void]processResponse(StunResponseEvent)", "[void]processTimeout(StunTimeoutEvent)"], "implementations": ["src/main/java/org/ice4j/ice/ConnectivityCheckClient.java.ConnectivityCheckClient", "src/main/java/org/ice4j/socket/GoogleRelayedCandidateDelegate.java.GoogleRelayedCandidateDelegate"]}, {"uris": "src/main/java/org/ice4j/stack/MessageEventHandler.java.MessageEventHandler", "name": "MessageEventHandler", "methods": ["[void]handleMessageEvent(StunMessageEvent)"], "implementations": ["src/main/java/org/ice4j/stack/StunStack.java.StunStack", "src/main/java/org/ice4j/socket/GoogleRelayedCandidateDelegate.java.GoogleRelayedCandidateDelegate", "src/main/java/org/ice4j/socket/RelayedCandidateDatagramSocket.java.RelayedCandidateDatagramSocket"]}, {"uris": "src/main/java/org/ice4j/stack/ChannelDataEventHandler.java.ChannelDataEventHandler", "name": "ChannelDataEventHandler", "methods": ["[void]handleMessageEvent(ChannelDataMessageEvent)"], "implementations": []}, {"uris": "src/main/java/org/ice4j/stack/PacketLogger.java.PacketLogger", "name": "PacketLogger", "methods": ["[void]logPacket(byte[],int,byte[],int,byte[],boolean)", "[boolean]isEnabled()"], "implementations": []}, {"uris": "src/main/java/org/ice4j/stack/PeerUdpMessageEventHandler.java.PeerUdpMessageEventHandler", "name": "PeerUdpMessageEventHandler", "methods": ["[void]handleMessageEvent(PeerUdpMessageEvent)"], "implementations": []}, {"uris": "src/main/java/org/ice4j/stack/ErrorHandler.java.ErrorHandler", "name": "ErrorHandler", "methods": ["[void]handleError(String,Throwable)", "[void]handleFatalError(Runnable,String,Throwable)"], "implementations": ["src/main/java/org/ice4j/stack/NetAccessManager.java.NetAccessManager"]}, {"uris": "src/main/java/org/ice4j/stack/RequestListener.java.RequestListener", "name": "RequestListener", "methods": ["[void]processRequest(StunMessageEvent)"], "implementations": ["src/test/java/org/ice4j/stunclient/ResponseSequenceServer.java.ResponseSequenceServer", "src/main/java/org/ice4j/ice/ConnectivityCheckServer.java.ConnectivityCheckServer"]}, {"uris": "src/main/java/org/ice4j/attribute/ContentDependentAttribute.java.ContentDependentAttribute", "name": "ContentDependentAttribute", "methods": ["[byte[]]encode(StunStack,byte[],int,int)"], "implementations": ["src/main/java/org/ice4j/attribute/MessageIntegrityAttribute.java.MessageIntegrityAttribute", "src/main/java/org/ice4j/attribute/FingerprintAttribute.java.FingerprintAttribute"]}, {"uris": "src/main/java/org/ice4j/security/CredentialsAuthority.java.CredentialsAuthority", "name": "CredentialsAuthority", "methods": ["[byte[]]getLocalKey(String)", "[byte[]]getRemoteKey(String,String)", "[boolean]checkLocalUserName(String)"], "implementations": ["src/main/java/org/ice4j/security/LongTermCredentialSession.java.LongTermCredentialSession", "src/main/java/org/ice4j/ice/ConnectivityCheckServer.java.ConnectivityCheckServer"]}, {"uris": "src/main/java/org/ice4j/pseudotcp/IPseudoTcpNotify.java.IPseudoTcpNotify", "name": "IPseudoTcpNotify", "methods": ["[void]OnTcpOpen(PseudoTCPBase)", "[void]OnTcpReadable(PseudoTCPBase)", "[void]OnTcpWriteable(PseudoTCPBase)", "[void]OnTcpClosed(PseudoTCPBase,IOException)", "[WriteResult]TcpWritePacket(PseudoTCPBase,byte[],int)"], "implementations": []}, {"uris": "src/main/java/org/ice4j/pseudotcp/PseudoTcpNotify.java.PseudoTcpNotify", "name": "PseudoTcpNotify", "methods": ["[void]onTcpOpen(PseudoTCPBase)", "[void]onTcpReadable(PseudoTCPBase)", "[void]onTcpWriteable(PseudoTCPBase)", "[void]onTcpClosed(PseudoTCPBase,IOException)", "[WriteResult]tcpWritePacket(PseudoTCPBase,byte[],int)"], "implementations": ["src/main/java/org/ice4j/pseudotcp/PseudoTcpSocketImpl.java.PseudoTcpSocketImpl"]}, {"uris": "src/main/java/org/ice4j/ice/harvest/TrickleCallback.java.TrickleCallback", "name": "TrickleCallback", "methods": ["[void]onIceCandidates(Collection<LocalCandidate>)"], "implementations": []}, {"uris": "src/main/java/org/ice4j/ice/harvest/CandidateHarvester.java.CandidateHarvester", "name": "CandidateHarvester", "methods": ["[Collection<LocalCandidate>]harvest(Component)", "[HarvestStatistics]getHarvestStatistics()", "[boolean]isHostHarvester()"], "implementations": ["src/main/java/org/ice4j/ice/harvest/SinglePortUdpHarvester.java.SinglePortUdpHarvester", "src/main/java/org/ice4j/ice/harvest/TcpHarvester.java.TcpHarvester"]}, {"uris": "src/main/java/org/ice4j/socket/MultiplexedXXXSocket.java.MultiplexedXXXSocket", "name": "MultiplexedXXXSocket", "methods": ["[DatagramPacketFilter]getFilter()"], "implementations": ["src/main/java/org/ice4j/socket/MultiplexedDatagramSocket.java.MultiplexedDatagramSocket", "src/main/java/org/ice4j/socket/MultiplexedSocket.java.MultiplexedSocket"]}, {"uris": "src/main/java/org/ice4j/socket/DatagramSocketFactory.java.DatagramSocketFactory", "name": "DatagramSocketFactory", "methods": ["[DatagramSocket]createUnboundDatagramSocket()"], "implementations": []}, {"uris": "src/main/java/org/ice4j/socket/DatagramPacketFilter.java.DatagramPacketFilter", "name": "DatagramPacketFilter", "methods": ["[boolean]accept(DatagramPacket)"], "implementations": ["src/main/java/org/ice4j/socket/RtcpDemuxPacketFilter.java.RtcpDemuxPacketFilter", "src/main/java/org/ice4j/socket/HttpDemuxFilter.java.HttpDemuxFilter", "src/main/java/org/ice4j/socket/DTLSDatagramFilter.java.DTLSDatagramFilter", "src/main/java/org/ice4j/socket/StunDatagramPacketFilter.java.StunDatagramPacketFilter"]}]