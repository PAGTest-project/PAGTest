[{"strategy": "generate", "code": "\npackage org.apache.commons.dbutils;\n\nimport static org.junit.Assert.*;\nimport static org.mockito.Mockito.*;\n\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class ResultSetIterator_hasNextTest {\n\n    private ResultSet resultSet;\n    private ResultSetIterator resultSetIterator;\n\n    @Before\n    public void setUp() throws SQLException {\n        resultSet = mock(ResultSet.class);\n        resultSetIterator = new ResultSetIterator(resultSet);\n    }\n\n    @Test\n    public void testHasNextReturnsTrueWhenNotLast() throws SQLException {\n        when(resultSet.isLast()).thenReturn(false);\n        assertTrue(resultSetIterator.hasNext());\n    }\n\n    @Test\n    public void testHasNextReturnsFalseWhenLast() throws SQLException {\n        when(resultSet.isLast()).thenReturn(true);\n        assertFalse(resultSetIterator.hasNext());\n    }\n\n    @Test(expected = RuntimeException.class)\n    public void testHasNextThrowsRuntimeExceptionOnSQLException() throws SQLException {\n        when(resultSet.isLast()).thenThrow(new SQLException(\"Mocked SQLException\"));\n        resultSetIterator.hasNext();\n    }\n}\n"}]