[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class TransformedMap_transformedMapTest {\n\n    @Test\n    public void testTransformedMapWithNonEmptyMap() {\n        // Given\n        Map<String, Integer> originalMap = new HashMap<>();\n        originalMap.put(\"key1\", 1);\n        originalMap.put(\"key2\", 2);\n\n        Transformer<String, String> keyTransformer = input -> \"transformed_\" + input;\n        Transformer<Integer, Integer> valueTransformer = input -> input * 2;\n\n        // When\n        TransformedMap<String, Integer> transformedMap = TransformedMap.transformedMap(originalMap, keyTransformer, valueTransformer);\n\n        // Then\n        assertEquals(2, transformedMap.size());\n        assertTrue(transformedMap.containsKey(\"transformed_key1\"));\n        assertTrue(transformedMap.containsKey(\"transformed_key2\"));\n        assertEquals(2, transformedMap.get(\"transformed_key1\"));\n        assertEquals(4, transformedMap.get(\"transformed_key2\"));\n    }\n\n    @Test\n    public void testTransformedMapWithEmptyMap() {\n        // Given\n        Map<String, Integer> originalMap = new HashMap<>();\n\n        Transformer<String, String> keyTransformer = input -> \"transformed_\" + input;\n        Transformer<Integer, Integer> valueTransformer = input -> input * 2;\n\n        // When\n        TransformedMap<String, Integer> transformedMap = TransformedMap.transformedMap(originalMap, keyTransformer, valueTransformer);\n\n        // Then\n        assertTrue(transformedMap.isEmpty());\n    }\n}\n"}]