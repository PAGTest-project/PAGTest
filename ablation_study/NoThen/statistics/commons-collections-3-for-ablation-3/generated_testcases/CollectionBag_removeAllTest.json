[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.bag;\n\nimport org.apache.commons.collections4.Bag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Arrays;\nimport java.util.Collection;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class CollectionBag_removeAllTest {\n\n    private CollectionBag<String> bag;\n    private Bag<String> decoratedBag;\n\n    @BeforeEach\n    public void setUp() {\n        decoratedBag = Mockito.mock(Bag.class);\n        bag = new CollectionBag<>(decoratedBag);\n    }\n\n    @Test\n    public void testRemoveAll_WithNonNullCollection() {\n        Collection<String> coll = Arrays.asList(\"A\", \"B\", \"C\");\n        when(decoratedBag.remove(\"A\", 1)).thenReturn(true);\n        when(decoratedBag.remove(\"B\", 1)).thenReturn(false);\n        when(decoratedBag.remove(\"C\", 1)).thenReturn(true);\n        when(decoratedBag.getCount(\"A\")).thenReturn(1);\n        when(decoratedBag.getCount(\"B\")).thenReturn(1);\n        when(decoratedBag.getCount(\"C\")).thenReturn(1);\n\n        boolean result = bag.removeAll(coll);\n\n        assertTrue(result);\n        verify(decoratedBag, times(1)).remove(\"A\", 1);\n        verify(decoratedBag, times(1)).remove(\"B\", 1);\n        verify(decoratedBag, times(1)).remove(\"C\", 1);\n    }\n\n    @Test\n    public void testRemoveAll_WithNullCollection() {\n        when(decoratedBag.removeAll(null)).thenReturn(true);\n\n        boolean result = bag.removeAll(null);\n\n        assertTrue(result);\n        verify(decoratedBag, times(1)).removeAll(null);\n    }\n}\n"}]