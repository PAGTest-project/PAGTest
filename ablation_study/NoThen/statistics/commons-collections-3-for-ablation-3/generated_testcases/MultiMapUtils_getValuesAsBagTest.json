[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.apache.commons.collections4.bag.HashBag;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\nimport java.util.Collection;\n\nclass MultiMapUtils_getValuesAsBagTest {\n\n    @Test\n    void testGetValuesAsBag_WithNullMap() {\n        Bag<String> result = MultiMapUtils.getValuesAsBag(null, \"key\");\n        assertNull(result);\n    }\n\n    @Test\n    void testGetValuesAsBag_WithNonBagCollection() {\n        MultiValuedMap<String, String> map = mock(MultiValuedMap.class);\n        Collection<String> collection = mock(Collection.class);\n        when(map.get(\"key\")).thenReturn(collection);\n        when(collection.iterator()).thenReturn(mock(java.util.Iterator.class));\n\n        Bag<String> result = MultiMapUtils.getValuesAsBag(map, \"key\");\n        assertNotNull(result);\n        assertTrue(result instanceof HashBag);\n    }\n\n    @Test\n    void testGetValuesAsBag_WithBagCollection() {\n        MultiValuedMap<String, String> map = mock(MultiValuedMap.class);\n        Bag<String> bag = mock(Bag.class);\n        when(map.get(\"key\")).thenReturn(bag);\n\n        Bag<String> result = MultiMapUtils.getValuesAsBag(map, \"key);\n        assertSame(bag, result);\n    }\n}\n"}]