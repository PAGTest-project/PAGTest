[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.commons.collections4.KeyValue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonMap_equalsTest {\n\n    private SingletonMap<String, String> singletonMap;\n\n    @BeforeEach\n    public void setUp() {\n        singletonMap = new SingletonMap<>(\"key\", \"value\");\n    }\n\n    @Test\n    public void testEquals_SameInstance() {\n        assertTrue(singletonMap.equals(singletonMap));\n    }\n\n    @Test\n    public void testEquals_DifferentType() {\n        assertFalse(singletonMap.equals(\"not a map\"));\n    }\n\n    @Test\n    public void testEquals_DifferentSizeMap() {\n        Map<String, String> differentSizeMap = new HashMap<>();\n        differentSizeMap.put(\"key1\", \"value1\");\n        differentSizeMap.put(\"key2\", \"value2\");\n        assertFalse(singletonMap.equals(differentSizeMap));\n    }\n\n    @Test\n    public void testEquals_SameKeyDifferentValue() {\n        Map<String, String> sameKeyDifferentValueMap = new HashMap<>();\n        sameKeyDifferentValueMap.put(\"key\", \"differentValue\");\n        assertFalse(singletonMap.equals(sameKeyDifferentValueMap));\n    }\n\n    @Test\n    public void testEquals_DifferentKeySameValue() {\n        Map<String, String> differentKeySameValueMap = new HashMap<>();\n        differentKeySameValueMap.put(\"differentKey\", \"value\");\n        assertFalse(singletonMap.equals(differentKeySameValueMap));\n    }\n\n    @Test\n    public void testEquals_SameKeySameValue() {\n        Map<String, String> sameKeySameValueMap = new HashMap<>();\n        sameKeySameValueMap.put(\"key\", \"value\");\n        assertTrue(singletonMap.equals(sameKeySameValueMap));\n    }\n\n    @Test\n    public void testEquals_NullKey() {\n        SingletonMap<String, String> nullKeyMap = new SingletonMap<>(null, \"value\");\n        Map<String, String> nullKeyHashMap = new HashMap<>();\n        nullKeyHashMap.put(null, \"value\");\n        assertTrue(nullKeyMap.equals(nullKeyHashMap));\n    }\n\n    @Test\n    public void testEquals_NullValue() {\n        SingletonMap<String, String> nullValueMap = new SingletonMap<>(\"key\", null);\n        Map<String, String> nullValueHashMap = new HashMap<>();\n        nullValueHashMap.put(\"key\", null);\n        assertTrue(nullValueMap.equals(nullValueHashMap));\n    }\n\n    @Test\n    public void testEquals_NullKeyAndValue() {\n        SingletonMap<String, String> nullKeyAndValueMap = new SingletonMap<>(null, null);\n        Map<String, String> nullKeyAndValueHashMap = new HashMap<>();\n        nullKeyAndValueHashMap.put(null, null);\n        assertTrue(nullKeyAndValueMap.equals(nullKeyAndValueHashMap));\n    }\n}\n"}]