[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ObjectGraphIterator_hasNextTest {\n\n    private ObjectGraphIterator<String> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        iterator = new ObjectGraphIterator<>(null);\n    }\n\n    @Test\n    public void testHasNext_NoElements() {\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test\n    public void testHasNext_WithElements() {\n        List<String> list = new ArrayList<>();\n        list.add(\"Element1\");\n        list.add(\"Element2\");\n        iterator = new ObjectGraphIterator<>(list.iterator());\n        assertTrue(iterator.hasNext());\n    }\n\n    @Test\n    public void testHasNext_AfterNext() {\n        List<String> list = new ArrayList<>();\n        list.add(\"Element1\");\n        list.add(\"Element2\");\n        iterator = new ObjectGraphIterator<>(list.iterator());\n        assertTrue(iterator.hasNext());\n        iterator.next();\n        assertTrue(iterator.hasNext());\n        iterator.next();\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test\n    public void testHasNext_WithTransformer() {\n        Transformer<String, String> transformer = input -> input + \"_transformed\";\n        List<String> list = new ArrayList<>();\n        list.add(\"Element1\");\n        list.add(\"Element2\");\n        iterator = new ObjectGraphIterator<>(list.iterator(), transformer);\n        assertTrue(iterator.hasNext());\n    }\n\n    @Test\n    public void testHasNext_NoSuchElementException() {\n        assertThrows(NoSuchElementException.class, () -> {\n            iterator.next();\n        });\n    }\n\n    @Test\n    public void testHasNext_RemoveNotSupported() {\n        List<String> list = new ArrayList<>();\n        list.add(\"Element1\");\n        iterator = new ObjectGraphIterator<>(list.iterator());\n        iterator.next();\n        assertThrows(UnsupportedOperationException.class, () -> {\n            iterator.remove();\n        });\n    }\n}\n"}]