[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.ArrayList;\nimport java.util.BitSet;\nimport java.util.Comparator;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ComparatorChain_equalsTest {\n\n    @Test\n    void testEquals() {\n        // Given\n        Comparator<Comparable<Object>> comparator1 = Comparator.naturalOrder();\n        Comparator<Comparable<Object>> comparator2 = Comparator.naturalOrder();\n        List<Comparator<Comparable<Object>>> comparators = new ArrayList<>();\n        comparators.add(comparator1);\n        BitSet bits = new BitSet();\n        ComparatorChain<Comparable<Object>> chain1 = new ComparatorChain<>(comparators, bits);\n        ComparatorChain<Comparable<Object>> chain2 = new ComparatorChain<>(comparators, bits);\n        ComparatorChain<Comparable<Object>> chain3 = new ComparatorChain<>(comparators, new BitSet());\n        ComparatorChain<Comparable<Object>> chain4 = new ComparatorChain<>(new ArrayList<>(), bits);\n\n        // When and Then\n        assertTrue(chain1.equals(chain1)); // Same instance\n        assertFalse(chain1.equals(null)); // Null object\n        assertTrue(chain1.equals(chain2)); // Same comparators and bits\n        assertFalse(chain1.equals(chain3)); // Different bits\n        assertFalse(chain1.equals(chain4)); // Different comparators\n        assertFalse(chain1.equals(new Object())); // Different class\n    }\n}\n"}]