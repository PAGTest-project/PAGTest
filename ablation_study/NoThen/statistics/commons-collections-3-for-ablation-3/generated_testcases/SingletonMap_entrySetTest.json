[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertInstanceOf;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.BoundedMap;\nimport org.apache.commons.collections4.KeyValue;\nimport org.apache.commons.collections4.OrderedMap;\nimport org.apache.commons.collections4.keyvalue.TiedMapEntry;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonMap_entrySetTest {\n\n    private SingletonMap<String, String> singletonMap;\n\n    @BeforeEach\n    public void setUp() {\n        singletonMap = new SingletonMap<>(\"key\", \"value\");\n    }\n\n    @Test\n    public void testEntrySet() {\n        Set<Map.Entry<String, String>> entrySet = singletonMap.entrySet();\n        assertEquals(1, entrySet.size());\n        Map.Entry<String, String> entry = entrySet.iterator().next();\n        assertInstanceOf(TiedMapEntry.class, entry);\n        assertEquals(\"key\", entry.getKey());\n        assertEquals(\"value\", entry.getValue());\n    }\n\n    @Test\n    public void testEntrySetAfterPut() {\n        singletonMap.put(\"key\", \"newValue\");\n        Set<Map.Entry<String, String>> entrySet = singletonMap.entrySet();\n        assertEquals(1, entrySet.size());\n        Map.Entry<String, String> entry = entrySet.iterator().next();\n        assertInstanceOf(TiedMapEntry.class, entry);\n        assertEquals(\"key\", entry.getKey());\n        assertEquals(\"newValue\", entry.getValue());\n    }\n\n    @Test\n    public void testEntrySetWithNullKey() {\n        SingletonMap<String, String> nullKeyMap = new SingletonMap<>(null, \"value\");\n        Set<Map.Entry<String, String>> entrySet = nullKeyMap.entrySet();\n        assertEquals(1, entrySet.size());\n        Map.Entry<String, String> entry = entrySet.iterator().next();\n        assertInstanceOf(TiedMapEntry.class, entry);\n        assertEquals(null, entry.getKey());\n        assertEquals(\"value\", entry.getValue());\n    }\n\n    @Test\n    public void testEntrySetWithNullValue() {\n        SingletonMap<String, String> nullValueMap = new SingletonMap<>(\"key\", null);\n        Set<Map.Entry<String, String>> entrySet = nullValueMap.entrySet();\n        assertEquals(1, entrySet.size());\n        Map.Entry<String, String> entry = entrySet.iterator().next();\n        assertInstanceOf(TiedMapEntry.class, entry);\n        assertEquals(\"key\", entry.getKey());\n        assertEquals(null, entry.getValue());\n    }\n}\n"}]