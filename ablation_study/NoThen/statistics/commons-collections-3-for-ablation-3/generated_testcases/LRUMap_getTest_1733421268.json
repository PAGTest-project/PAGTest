[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class LRUMap_getTest {\n\n    private LRUMap<String, String> lruMap;\n\n    @BeforeEach\n    public void setUp() {\n        lruMap = new LRUMap<>(2);\n    }\n\n    @Test\n    public void testGetExistingKeyWithUpdateToMRU() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n\n        assertEquals(\"value1\", lruMap.get(\"key1\", true));\n        assertEquals(\"value2\", lruMap.get(\"key2\", true));\n\n        // Ensure \"key1\" is now the most recently used\n        lruMap.put(\"key3\", \"value3\");\n        assertNull(lruMap.get(\"key2\"));\n        assertEquals(\"value1\", lruMap.get(\"key1\"));\n        assertEquals(\"value3\", lruMap.get(\"key3\"));\n    }\n\n    @Test\n    public void testGetExistingKeyWithoutUpdateToMRU() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n\n        assertEquals(\"value1\", lruMap.get(\"key1\", false));\n        assertEquals(\"value2\", lruMap.get(\"key2\", false));\n\n        // Ensure the order remains the same\n        lruMap.put(\"key3\", \"value3\");\n        assertNull(lruMap.get(\"key1\"));\n        assertEquals(\"value2\", lruMap.get(\"key2\"));\n        assertEquals(\"value3\", lruMap.get(\"key3\"));\n    }\n\n    @Test\n    public void testGetNonExistingKey() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n\n        assertNull(lruMap.get(\"key3\", true));\n        assertNull(lruMap.get(\"key3\", false));\n    }\n\n    @Test\n    public void testGetWithEmptyMap() {\n        assertNull(lruMap.get(\"key1\", true));\n        assertNull(lruMap.get(\"key1\", false));\n    }\n\n    @Test\n    public void testGetWithFullMapAndUpdateToMRU() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n\n        assertEquals(\"value1\", lruMap.get(\"key1\", true));\n        assertEquals(\"value2\", lruMap.get(\"key2\", true));\n\n        // Ensure \"key1\" is now the most recently used\n        lruMap.put(\"key3\", \"value3\");\n        assertNull(lruMap.get(\"key2\"));\n        assertEquals(\"value1\", lruMap.get(\"key1\"));\n        assertEquals(\"value3\", lruMap.get(\"key3\"));\n    }\n\n    @Test\n    public void testGetWithFullMapWithoutUpdateToMRU() {\n        lruMap.put(\"key1\", \"value1\");\n        lruMap.put(\"key2\", \"value2\");\n\n        assertEquals(\"value1\", lruMap.get(\"key1\", false));\n        assertEquals(\"value2\", lruMap.get(\"key2\", false));\n\n        // Ensure the order remains the same\n        lruMap.put(\"key3\", \"value3\");\n        assertNull(lruMap.get(\"key1\"));\n        assertEquals(\"value2\", lruMap.get(\"key2\"));\n        assertEquals(\"value3\", lruMap.get(\"key3\"));\n    }\n}\n"}]