[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass PassiveExpiringMap_containsKeyTest {\n\n    private PassiveExpiringMap<String, String> map;\n\n    @BeforeEach\n    void setUp() {\n        map = new PassiveExpiringMap<>(new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(1000L), new HashMap<>());\n    }\n\n    @Test\n    void testContainsKey_KeyExistsAndNotExpired() {\n        map.put(\"key1\", \"value1\");\n        assertTrue(map.containsKey(\"key1\"));\n    }\n\n    @Test\n    void testContainsKey_KeyExistsButExpired() throws InterruptedException {\n        map.put(\"key2\", \"value2\");\n        Thread.sleep(1001); // Wait for the entry to expire\n        assertFalse(map.containsKey(\"key2\"));\n    }\n\n    @Test\n    void testContainsKey_KeyDoesNotExist() {\n        assertFalse(map.containsKey(\"key3\"));\n    }\n}\n"}]