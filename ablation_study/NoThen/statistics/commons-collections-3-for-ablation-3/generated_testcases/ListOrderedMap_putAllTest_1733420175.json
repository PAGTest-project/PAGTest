[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ListOrderedMap_putAllTest {\n\n    private ListOrderedMap<Integer, String> map;\n\n    @BeforeEach\n    void setUp() {\n        map = new ListOrderedMap<>();\n    }\n\n    @Test\n    void testPutAll_IndexOutOfBounds() {\n        Map<Integer, String> inputMap = new HashMap<>();\n        inputMap.put(1, \"one\");\n        inputMap.put(2, \"two\");\n\n        assertThrows(IndexOutOfBoundsException.class, () -> map.putAll(-1, inputMap));\n        assertThrows(IndexOutOfBoundsException.class, () -> map.putAll(1, inputMap));\n    }\n\n    @Test\n    void testPutAll_AddNewEntries() {\n        Map<Integer, String> inputMap = new HashMap<>();\n        inputMap.put(1, \"one\");\n        inputMap.put(2, \"two\");\n\n        map.putAll(0, inputMap);\n\n        assertEquals(2, map.size());\n        assertEquals(\"one\", map.get(1));\n        assertEquals(\"two\", map.get(2));\n    }\n\n    @Test\n    void testPutAll_ReplaceExistingEntries() {\n        map.put(1, \"oldOne\");\n        map.put(2, \"oldTwo\");\n\n        Map<Integer, String> inputMap = new HashMap<>();\n        inputMap.put(1, \"newOne\");\n        inputMap.put(2, \"newTwo\");\n\n        map.putAll(0, inputMap);\n\n        assertEquals(2, map.size());\n        assertEquals(\"newOne\", map.get(1));\n        assertEquals(\"newTwo\", map.get(2));\n    }\n}\n"}]