[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.function.Predicate;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_addCompositedTest {\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    protected void setUpTest() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>();\n        two = new HashSet<>();\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testAddCompositedSingleCollection() {\n        setUpTest();\n        one.add(\"1\");\n        c.addComposited(one);\n        assertEquals(1, c.size());\n        assertTrue(c.contains(\"1\"));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testAddCompositedNullCollection() {\n        setUpTest();\n        c.addComposited(null);\n        assertEquals(0, c.size());\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testAddCompositedMultipleCollections() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        assertEquals(2, c.size());\n        assertTrue(c.contains(\"1\"));\n        assertTrue(c.contains(\"2\"));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testAddCompositedArrayOfCollections() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        Collection<String> three = new HashSet<>();\n        three.add(\"3\");\n        c.addComposited(new Collection[]{one, two, three});\n        assertEquals(3, c.size());\n        assertTrue(c.contains(\"1\"));\n        assertTrue(c.contains(\"2\"));\n        assertTrue(c.contains(\"3\"));\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testAddCompositedWithClear() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        c.clear();\n        assertTrue(one.isEmpty());\n        assertTrue(two.isEmpty());\n        assertTrue(c.isEmpty());\n    }\n\n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testAddCompositedWithRemoveComposited() {\n        setUpTest();\n        one.add(\"1\");\n        two.add(\"2\");\n        c.addComposited(one, two);\n        c.removeComposited(one);\n        assertEquals(1, c.size());\n        assertFalse(c.contains(\"1\"));\n        assertTrue(c.contains(\"2\"));\n    }\n}\n"}]