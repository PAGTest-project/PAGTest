[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_removeTest {\n    private CircularFifoQueue<String> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(5);\n    }\n\n    @Test\n    public void testRemoveSuccess() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        assertEquals(\"1\", queue.remove());\n        assertEquals(2, queue.size());\n    }\n\n    @Test\n    public void testRemoveFromEmptyQueue() {\n        assertThrows(NoSuchElementException.class, () -> queue.remove());\n    }\n\n    @Test\n    public void testRemoveWithWrapAround() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.add(\"4\");\n        queue.add(\"5\");\n        queue.add(\"6\"); // This will wrap around\n        assertEquals(\"2\", queue.remove());\n        assertEquals(4, queue.size());\n    }\n\n    @Test\n    public void testRemoveAllElements() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.add(\"3\");\n        queue.remove();\n        queue.remove();\n        queue.remove();\n        assertTrue(queue.isEmpty());\n    }\n\n    @Test\n    public void testRemoveAfterClear() {\n        queue.add(\"1\");\n        queue.add(\"2\");\n        queue.clear();\n        assertThrows(NoSuchElementException.class, () -> queue.remove());\n    }\n}\n"}]