[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class DefaultedMap_getTest {\n\n    @Test\n    public void testGet_KeyExistsInMap() {\n        // Given\n        Map<String, String> map = new HashMap<>();\n        map.put(\"key1\", \"value1\");\n        DefaultedMap<String, String> defaultedMap = new DefaultedMap<>(map, mock(Transformer.class));\n\n        // When\n        String result = defaultedMap.get(\"key1\");\n\n        // Then\n        assertEquals(\"value1\", result);\n    }\n\n    @Test\n    public void testGet_KeyNotInMapButExistsInMapAsNull() {\n        // Given\n        Map<String, String> map = new HashMap<>();\n        map.put(\"key1\", null);\n        DefaultedMap<String, String> defaultedMap = new DefaultedMap<>(map, mock(Transformer.class));\n\n        // When\n        String result = defaultedMap.get(\"key1\");\n\n        // Then\n        assertEquals(null, result);\n    }\n\n    @Test\n    public void testGet_KeyNotInMapAndTransformerReturnsValue() {\n        // Given\n        Map<String, String> map = new HashMap<>();\n        Transformer<String, String> transformer = mock(Transformer.class);\n        when(transformer.apply(\"key1\")).thenReturn(\"default\");\n        DefaultedMap<String, String> defaultedMap = new DefaultedMap<>(map, transformer);\n\n        // When\n        String result = defaultedMap.get(\"key1\");\n\n        // Then\n        assertEquals(\"default\", result);\n    }\n}\n"}]