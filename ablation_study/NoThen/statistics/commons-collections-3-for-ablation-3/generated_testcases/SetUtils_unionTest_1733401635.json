[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass SetUtils_unionTest {\n\n    @Test\n    void testUnion() {\n        // Given\n        Set<Integer> setA = new HashSet<>(Set.of(1, 2, 3));\n        Set<Integer> setB = new HashSet<>(Set.of(3, 4, 5));\n\n        // When\n        SetView<Integer> result = SetUtils.union(setA, setB);\n\n        // Then\n        assertEquals(5, result.size());\n        assertTrue(result.contains(1));\n        assertTrue(result.contains(2));\n        assertTrue(result.contains(3));\n        assertTrue(result.contains(4));\n        assertTrue(result.contains(5));\n    }\n\n    @Test\n    void testUnionWithEmptySets() {\n        // Given\n        Set<Integer> setA = new HashSet<>();\n        Set<Integer> setB = new HashSet<>();\n\n        // When\n        SetView<Integer> result = SetUtils.union(setA, setB);\n\n        // Then\n        assertTrue(result.isEmpty());\n    }\n\n    @Test\n    void testUnionWithNullSetA() {\n        // Given\n        Set<Integer> setA = null;\n        Set<Integer> setB = new HashSet<>(Set.of(1, 2, 3));\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> SetUtils.union(setA, setB));\n    }\n\n    @Test\n    void testUnionWithNullSetB() {\n        // Given\n        Set<Integer> setA = new HashSet<>(Set.of(1, 2, 3));\n        Set<Integer> setB = null;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> SetUtils.union(setA, setB));\n    }\n}\n"}]