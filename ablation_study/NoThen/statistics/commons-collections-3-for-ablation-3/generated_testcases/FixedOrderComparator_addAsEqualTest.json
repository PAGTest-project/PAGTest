[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass FixedOrderComparator_addAsEqualTest {\n\n    private FixedOrderComparator<String> comparator;\n\n    @BeforeEach\n    void setUp() {\n        comparator = new FixedOrderComparator<>(Arrays.asList(\"existingObj\"));\n    }\n\n    @Test\n    void testAddAsEqual_NewObjectAdded() {\n        // Given\n        String existingObj = \"existingObj\";\n        String newObj = \"newObj\";\n\n        // When\n        boolean result = comparator.addAsEqual(existingObj, newObj);\n\n        // Then\n        assertTrue(result);\n    }\n\n    @Test\n    void testAddAsEqual_ExistingObjectNotKnown() {\n        // Given\n        String existingObj = \"unknownObj\";\n        String newObj = \"newObj\";\n\n        // When / Then\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            comparator.addAsEqual(existingObj, newObj);\n        });\n        assertEquals(\"unknownObj not known to \" + comparator, exception.getMessage());\n    }\n}\n"}]