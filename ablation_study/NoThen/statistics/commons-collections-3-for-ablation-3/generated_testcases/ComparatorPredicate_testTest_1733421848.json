[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.functors;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\nimport java.util.Comparator;\n\npublic class ComparatorPredicate_testTest {\n\n    @Test\n    public void testComparatorPredicate() {\n        // Given\n        Comparator<Integer> comparator = mock(Comparator.class);\n        when(comparator.compare(anyInt(), anyInt())).thenReturn(0, 1, -1);\n\n        ComparatorPredicate<Integer> predicate = new ComparatorPredicate<>(0, comparator, ComparatorPredicate.Criterion.EQUAL);\n\n        // When and Then\n        assertTrue(predicate.test(0)); // EQUAL\n\n        predicate = new ComparatorPredicate<>(0, comparator, ComparatorPredicate.Criterion.GREATER);\n        assertTrue(predicate.test(1)); // GREATER\n\n        predicate = new ComparatorPredicate<>(0, comparator, ComparatorPredicate.Criterion.LESS);\n        assertTrue(predicate.test(-1)); // LESS\n\n        predicate = new ComparatorPredicate<>(0, comparator, ComparatorPredicate.Criterion.GREATER_OR_EQUAL);\n        assertTrue(predicate.test(0)); // GREATER_OR_EQUAL\n        assertTrue(predicate.test(1)); // GREATER_OR_EQUAL\n\n        predicate = new ComparatorPredicate<>(0, comparator, ComparatorPredicate.Criterion.LESS_OR_EQUAL);\n        assertTrue(predicate.test(0)); // LESS_OR_EQUAL\n        assertTrue(predicate.test(-1)); // LESS_OR_EQUAL\n    }\n}\n"}]