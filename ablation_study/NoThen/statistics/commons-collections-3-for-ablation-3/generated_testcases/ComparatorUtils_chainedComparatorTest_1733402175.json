[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Comparator;\n\nimport org.apache.commons.collections4.comparators.ComparatorChain;\nimport org.junit.jupiter.api.Test;\n\npublic class ComparatorUtils_chainedComparatorTest {\n\n    @Test\n    public void testChainedComparatorWithValidComparators() {\n        Comparator<Integer> comparator1 = Comparator.naturalOrder();\n        Comparator<Integer> comparator2 = Comparator.reverseOrder();\n\n        Comparator<Integer> chainedComparator = ComparatorUtils.chainedComparator(comparator1, comparator2);\n\n        assertTrue(chainedComparator instanceof ComparatorChain);\n        assertEquals(1, chainedComparator.compare(1, 2));\n        assertEquals(-1, chainedComparator.compare(2, 1));\n    }\n\n    @Test\n    public void testChainedComparatorWithNullComparator() {\n        Comparator<Integer> comparator1 = Comparator.naturalOrder();\n        Comparator<Integer> nullComparator = null;\n\n        assertThrows(NullPointerException.class, () -> {\n            ComparatorUtils.chainedComparator(comparator1, nullComparator);\n        });\n    }\n\n    @Test\n    public void testChainedComparatorWithEmptyComparators() {\n        Comparator<Integer>[] emptyComparators = new Comparator[0];\n\n        Comparator<Integer> chainedComparator = ComparatorUtils.chainedComparator(emptyComparators);\n\n        assertTrue(chainedComparator instanceof ComparatorChain);\n    }\n\n    @Test\n    public void testChainedComparatorWithSingleComparator() {\n        Comparator<Integer> comparator1 = Comparator.naturalOrder();\n\n        Comparator<Integer> chainedComparator = ComparatorUtils.chainedComparator(comparator1);\n\n        assertTrue(chainedComparator instanceof ComparatorChain);\n        assertEquals(1, chainedComparator.compare(1, 2));\n        assertEquals(-1, chainedComparator.compare(2, 1));\n    }\n}\n"}]