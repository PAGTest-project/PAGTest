[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.queue;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CircularFifoQueue_sizeTest {\n\n    private CircularFifoQueue<Integer> queue;\n\n    @BeforeEach\n    public void setUp() {\n        queue = new CircularFifoQueue<>(3);\n    }\n\n    @Test\n    public void testSizeWhenQueueIsEmpty() {\n        assertEquals(0, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueIsFull() {\n        queue.add(1);\n        queue.add(2);\n        queue.add(3);\n        assertEquals(3, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenQueueHasElementsButNotFull() {\n        queue.add(1);\n        queue.add(2);\n        assertEquals(2, queue.size());\n    }\n\n    @Test\n    public void testSizeAfterAddingAndRemovingElements() {\n        queue.add(1);\n        queue.add(2);\n        queue.add(3);\n        queue.remove();\n        assertEquals(2, queue.size());\n    }\n\n    @Test\n    public void testSizeAfterClearingQueue() {\n        queue.add(1);\n        queue.add(2);\n        queue.clear();\n        assertEquals(0, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenEndIsLessThanStart() {\n        queue.add(1);\n        queue.add(2);\n        queue.add(3);\n        queue.remove();\n        queue.add(4);\n        assertEquals(3, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenEndEqualsStartAndQueueIsFull() {\n        queue.add(1);\n        queue.add(2);\n        queue.add(3);\n        assertEquals(3, queue.size());\n    }\n\n    @Test\n    public void testSizeWhenEndEqualsStartAndQueueIsEmpty() {\n        queue.add(1);\n        queue.remove();\n        assertEquals(0, queue.size());\n    }\n}\n"}]