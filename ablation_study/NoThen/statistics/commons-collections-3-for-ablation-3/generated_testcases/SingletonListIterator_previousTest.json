[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.NoSuchElementException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonListIterator_previousTest {\n\n    private static final Object testValue = new Object();\n    private SingletonListIterator<Object> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        iterator = new SingletonListIterator<>(testValue);\n    }\n\n    @Test\n    public void testPreviousSuccess() {\n        iterator.next(); // Move to the object\n        Object previousValue = iterator.previous();\n        assertEquals(testValue, previousValue, \"Previous value should be the same as the initial object\");\n    }\n\n    @Test\n    public void testPreviousBeforeFirst() {\n        assertThrows(NoSuchElementException.class, () -> {\n            iterator.previous();\n        }, \"Calling previous before first should throw NoSuchElementException\");\n    }\n\n    @Test\n    public void testPreviousAfterRemove() {\n        iterator.next(); // Move to the object\n        iterator.remove(); // Remove the object\n        assertThrows(NoSuchElementException.class, () -> {\n            iterator.previous();\n        }, \"Calling previous after remove should throw NoSuchElementException\");\n    }\n\n    @Test\n    public void testPreviousAfterReset() {\n        iterator.next(); // Move to the object\n        iterator.reset(); // Reset the iterator\n        assertThrows(NoSuchElementException.class, () -> {\n            iterator.previous();\n        }, \"Calling previous after reset should throw NoSuchElementException\");\n    }\n}\n"}]