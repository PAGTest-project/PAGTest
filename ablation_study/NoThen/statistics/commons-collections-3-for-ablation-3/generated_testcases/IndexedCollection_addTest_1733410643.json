[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class IndexedCollection_addTest {\n\n    private IndexedCollection<Integer, String> indexedCollection;\n    private Transformer<String, Integer> keyTransformer;\n\n    @BeforeEach\n    public void setUp() {\n        keyTransformer = new Transformer<String, Integer>() {\n            @Override\n            public Integer apply(String input) {\n                return Integer.parseInt(input);\n            }\n        };\n        Collection<String> coll = new ArrayList<>();\n        indexedCollection = IndexedCollection.nonUniqueIndexedCollection(coll, keyTransformer);\n    }\n\n    @Test\n    public void testAddSuccess() {\n        String object = \"123\";\n        assertTrue(indexedCollection.add(object));\n        assertEquals(object, indexedCollection.get(123));\n    }\n\n    @Test\n    public void testAddFailure() {\n        String object = \"123\";\n        assertTrue(indexedCollection.add(object));\n        assertFalse(indexedCollection.add(object)); // Adding the same object again should fail\n    }\n\n    @Test\n    public void testAddUniqueIndexFailure() {\n        Collection<String> coll = new ArrayList<>();\n        indexedCollection = IndexedCollection.uniqueIndexedCollection(coll, keyTransformer);\n        String object1 = \"123\";\n        String object2 = \"123\";\n        assertTrue(indexedCollection.add(object1));\n        assertThrows(IllegalArgumentException.class, () -> indexedCollection.add(object2));\n    }\n\n    @Test\n    public void testAddNonUniqueIndexSuccess() {\n        String object1 = \"123\";\n        String object2 = \"123\";\n        assertTrue(indexedCollection.add(object1));\n        assertTrue(indexedCollection.add(object2));\n        assertEquals(object1, indexedCollection.get(123));\n    }\n}\n"}]