[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiValueMap_removeMappingTest {\n\n    private MultiValueMap<String, String> multiValueMap;\n\n    @BeforeEach\n    public void setUp() {\n        multiValueMap = new MultiValueMap<>();\n        multiValueMap.put(\"key1\", \"value1\");\n        multiValueMap.put(\"key1\", \"value2\");\n        multiValueMap.put(\"key2\", \"value3\");\n    }\n\n    @Test\n    public void testRemoveMappingSuccess() {\n        assertTrue(multiValueMap.removeMapping(\"key1\", \"value1\"));\n        assertFalse(multiValueMap.containsValue(\"key1\", \"value1\"));\n        assertEquals(2, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testRemoveMappingNonExistentValue() {\n        assertFalse(multiValueMap.removeMapping(\"key1\", \"nonExistentValue\"));\n        assertEquals(3, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testRemoveMappingNonExistentKey() {\n        assertFalse(multiValueMap.removeMapping(\"nonExistentKey\", \"value1\"));\n        assertEquals(3, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testRemoveMappingLastValue() {\n        assertTrue(multiValueMap.removeMapping(\"key2\", \"value3\"));\n        assertFalse(multiValueMap.containsKey(\"key2\"));\n        assertEquals(2, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testRemoveMappingAndClear() {\n        multiValueMap.clear();\n        assertFalse(multiValueMap.removeMapping(\"key1\", \"value1\"));\n        assertEquals(0, multiValueMap.totalSize());\n    }\n\n    @Test\n    public void testRemoveMappingAndIterator() {\n        Iterator<String> iterator = multiValueMap.iterator(\"key1\");\n        while (iterator.hasNext()) {\n            String value = iterator.next();\n            if (\"value1\".equals(value)) {\n                iterator.remove();\n            }\n        }\n        assertFalse(multiValueMap.containsValue(\"key1\", \"value1\"));\n        assertEquals(2, multiValueMap.totalSize());\n    }\n}\n"}]