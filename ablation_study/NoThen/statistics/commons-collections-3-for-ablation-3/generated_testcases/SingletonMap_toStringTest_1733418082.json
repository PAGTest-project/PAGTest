[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonMap_toStringTest {\n    private SingletonMap<String, String> singletonMap;\n\n    @BeforeEach\n    public void setUp() {\n        singletonMap = new SingletonMap<>(\"key\", \"value\");\n    }\n\n    @Test\n    public void testToStringWithNormalKeyAndValue() {\n        assertEquals(\"{key=value}\", singletonMap.toString());\n    }\n\n    @Test\n    public void testToStringWithKeyAsMap() {\n        singletonMap = new SingletonMap<>(singletonMap, \"value\");\n        assertEquals(\"{(this Map)=value}\", singletonMap.toString());\n    }\n\n    @Test\n    public void testToStringWithValueAsMap() {\n        singletonMap = new SingletonMap<>(\"key\", singletonMap);\n        assertEquals(\"{key=(this Map)}\", singletonMap.toString());\n    }\n\n    @Test\n    public void testToStringWithBothKeyAndValueAsMap() {\n        singletonMap = new SingletonMap<>(singletonMap, singletonMap);\n        assertEquals(\"{(this Map)=(this Map)}\", singletonMap.toString());\n    }\n\n    @Test\n    public void testToStringAfterSetValue() {\n        singletonMap.setValue(\"newValue\");\n        assertEquals(\"{key=newValue}\", singletonMap.toString());\n    }\n}\n"}]