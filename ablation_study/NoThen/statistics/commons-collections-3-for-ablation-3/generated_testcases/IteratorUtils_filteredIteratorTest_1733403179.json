[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.function.Predicate;\n\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class IteratorUtils_filteredIteratorTest {\n\n    @Test\n    public void testFilteredIterator_NormalCase() {\n        // Given\n        Iterator<Integer> iterator = Arrays.asList(1, 2, 3).iterator();\n        Predicate<Integer> predicate = i -> i % 2 == 0;\n\n        // When\n        Iterator<Integer> filteredIterator = IteratorUtils.filteredIterator(iterator, new Predicate<Integer>() {\n            @Override\n            public boolean test(Integer integer) {\n                return predicate.test(integer);\n            }\n        });\n\n        // Then\n        assertNotNull(filteredIterator);\n    }\n\n    @Test\n    public void testFilteredIterator_NullIterator() {\n        // Given\n        Iterator<Integer> iterator = null;\n        Predicate<Integer> predicate = i -> i % 2 == 0;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> {\n            IteratorUtils.filteredIterator(iterator, new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer integer) {\n                    return predicate.test(integer);\n                }\n            });\n        });\n    }\n\n    @Test\n    public void testFilteredIterator_NullPredicate() {\n        // Given\n        Iterator<Integer> iterator = Arrays.asList(1, 2, 3).iterator();\n        Predicate<Integer> predicate = null;\n\n        // When & Then\n        assertThrows(NullPointerException.class, () -> {\n            IteratorUtils.filteredIterator(iterator, new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer integer) {\n                    return predicate != null && predicate.test(integer);\n                }\n            });\n        });\n    }\n}\n"}]