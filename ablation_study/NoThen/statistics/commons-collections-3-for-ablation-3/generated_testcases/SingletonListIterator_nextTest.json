[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.NoSuchElementException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonListIterator_nextTest {\n\n    private static final Object testValue = new Object();\n    private SingletonListIterator<Object> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        iterator = new SingletonListIterator<>(testValue);\n    }\n\n    @Test\n    public void testNextSuccess() {\n        assertTrue(iterator.hasNext(), \"Iterator should have next item\");\n        assertEquals(testValue, iterator.next(), \"Iteration value is correct\");\n        assertFalse(iterator.hasNext(), \"Iterator should have no next item\");\n    }\n\n    @Test\n    public void testNextAfterReset() {\n        iterator.next();\n        iterator.reset();\n        assertTrue(iterator.hasNext(), \"Iterator should have next item after reset\");\n        assertEquals(testValue, iterator.next(), \"Iteration value is correct after reset\");\n    }\n\n    @Test\n    public void testNextAfterRemove() {\n        iterator.next();\n        iterator.remove();\n        assertFalse(iterator.hasNext(), \"Iterator should have no next item after remove\");\n        assertThrows(NoSuchElementException.class, () -> iterator.next(), \"NoSuchElementException must be thrown after remove\");\n    }\n\n    @Test\n    public void testNextWithoutHasNext() {\n        iterator.next();\n        assertThrows(NoSuchElementException.class, () -> iterator.next(), \"NoSuchElementException must be thrown without hasNext check\");\n    }\n\n    @Test\n    public void testNextAfterPrevious() {\n        iterator.next();\n        iterator.previous();\n        assertTrue(iterator.hasNext(), \"Iterator should have next item after previous\");\n        assertEquals(testValue, iterator.next(), \"Iteration value is correct after previous\");\n    }\n}\n"}]