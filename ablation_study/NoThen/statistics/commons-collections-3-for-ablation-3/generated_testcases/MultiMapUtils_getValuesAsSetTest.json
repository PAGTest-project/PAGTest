[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport org.apache.commons.collections4.multimap.ArrayListValuedHashMap;\nimport org.apache.commons.collections4.multimap.HashSetValuedHashMap;\nimport org.junit.jupiter.api.Test;\n\npublic class MultiMapUtils_getValuesAsSetTest {\n\n    @Test\n    public void testGetValuesAsSet_WithNullMap() {\n        MultiValuedMap<String, String> map = null;\n        Set<String> result = MultiMapUtils.getValuesAsSet(map, \"key\");\n        assertNull(result);\n    }\n\n    @Test\n    public void testGetValuesAsSet_WithEmptyMap() {\n        MultiValuedMap<String, String> map = MultiMapUtils.emptyMultiValuedMap();\n        Set<String> result = MultiMapUtils.getValuesAsSet(map, \"key\");\n        assertTrue(result.isEmpty());\n    }\n\n    @Test\n    public void testGetValuesAsSet_WithArrayListValuedHashMap() {\n        MultiValuedMap<String, String> map = new ArrayListValuedHashMap<>();\n        map.put(\"key\", \"value1\");\n        map.put(\"key\", \"value2\");\n        Set<String> result = MultiMapUtils.getValuesAsSet(map, \"key\");\n        assertEquals(new HashSet<>(Arrays.asList(\"value1\", \"value2\")), result);\n    }\n\n    @Test\n    public void testGetValuesAsSet_WithHashSetValuedHashMap() {\n        MultiValuedMap<String, String> map = new HashSetValuedHashMap<>();\n        map.put(\"key\", \"value1\");\n        map.put(\"key\", \"value2\");\n        Set<String> result = MultiMapUtils.getValuesAsSet(map, \"key\");\n        assertEquals(new HashSet<>(Arrays.asList(\"value1\", \"value2\")), result);\n    }\n\n    @Test\n    public void testGetValuesAsSet_WithNonExistentKey() {\n        MultiValuedMap<String, String> map = new ArrayListValuedHashMap<>();\n        map.put(\"key1\", \"value1\");\n        Set<String> result = MultiMapUtils.getValuesAsSet(map, \"key2\");\n        assertTrue(result.isEmpty());\n    }\n}\n"}]