[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class PassiveExpiringMap_keySetTest {\n\n    private PassiveExpiringMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new PassiveExpiringMap<>(1, TimeUnit.SECONDS);\n    }\n\n    @Test\n    public void testKeySetWithExpiredEntries() throws InterruptedException {\n        // Given\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n        Thread.sleep(1500); // Ensure entries expire\n\n        // When\n        Set<String> keySet = map.keySet();\n\n        // Then\n        assertTrue(keySet.isEmpty());\n    }\n\n    @Test\n    public void testKeySetWithoutExpiredEntries() {\n        // Given\n        map.put(\"key1\", \"value1\");\n        map.put(\"key2\", \"value2\");\n\n        // When\n        Set<String> keySet = map.keySet();\n\n        // Then\n        assertEquals(2, keySet.size());\n        assertTrue(keySet.contains(\"key1\"));\n        assertTrue(keySet.contains(\"key2\"));\n    }\n}\n"}]