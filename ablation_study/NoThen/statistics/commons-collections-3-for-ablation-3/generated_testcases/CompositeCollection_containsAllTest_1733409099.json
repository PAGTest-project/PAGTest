[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_containsAllTest {\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    protected void setUpTest() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\n        two = new HashSet<>(Arrays.asList(\"d\", \"e\", \"f\"));\n        c.addComposited(one, two);\n    }\n\n    @Test\n    public void testContainsAllWithNullCollection() {\n        assertFalse(c.containsAll(null));\n    }\n\n    @Test\n    public void testContainsAllWithEmptyCollection() {\n        assertTrue(c.containsAll(new ArrayList<>()));\n    }\n\n    @Test\n    public void testContainsAllWithAllElementsPresent() {\n        Collection<String> testCollection = Arrays.asList(\"a\", \"d\");\n        assertTrue(c.containsAll(testCollection));\n    }\n\n    @Test\n    public void testContainsAllWithSomeElementsMissing() {\n        Collection<String> testCollection = Arrays.asList(\"a\", \"x\");\n        assertFalse(c.containsAll(testCollection));\n    }\n\n    @Test\n    public void testContainsAllAfterAddingElements() {\n        c.add(\"g\");\n        Collection<String> testCollection = Arrays.asList(\"a\", \"g\");\n        assertTrue(c.containsAll(testCollection));\n    }\n\n    @Test\n    public void testContainsAllAfterClearingCollection() {\n        c.clear();\n        Collection<String> testCollection = Arrays.asList(\"a\", \"d\");\n        assertFalse(c.containsAll(testCollection));\n    }\n}\n"}]