[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Set;\nimport org.junit.jupiter.api.Test;\n\npublic class SetUtils_unmodifiableSetTest {\n\n    @Test\n    public void testUnmodifiableSetWithNullInput() {\n        Set<Integer> result = SetUtils.unmodifiableSet((Integer[]) null);\n        assertNull(result);\n    }\n\n    @Test\n    public void testUnmodifiableSetWithEmptyInput() {\n        Set<Integer> result = SetUtils.unmodifiableSet();\n        assertTrue(result.isEmpty());\n    }\n\n    @Test\n    public void testUnmodifiableSetWithNonEmptyInput() {\n        Set<Integer> result = SetUtils.unmodifiableSet(1, 2, 3);\n        assertEquals(3, result.size());\n        assertTrue(result.contains(1));\n        assertTrue(result.contains(2));\n        assertTrue(result.contains(3));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithDuplicates() {\n        Set<Integer> result = SetUtils.unmodifiableSet(1, 2, 2, 3, 3, 3);\n        assertEquals(3, result.size());\n        assertTrue(result.contains(1));\n        assertTrue(result.contains(2));\n        assertTrue(result.contains(3));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithSynchronizedSet() {\n        Set<Integer> synchronizedSet = SetUtils.synchronizedSet(SetUtils.hashSet(1, 2, 3));\n        Set<Integer> result = SetUtils.unmodifiableSet(synchronizedSet.toArray(new Integer[0]));\n        assertEquals(3, result.size());\n        assertTrue(result.contains(1));\n        assertTrue(result.contains(2));\n        assertTrue(result.contains(3));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithPredicatedSet() {\n        Set<Integer> predicatedSet = SetUtils.predicatedSet(SetUtils.hashSet(1, 2, 3), e -> e > 0);\n        Set<Integer> result = SetUtils.unmodifiableSet(predicatedSet.toArray(new Integer[0]));\n        assertEquals(3, result.size());\n        assertTrue(result.contains(1));\n        assertTrue(result.contains(2));\n        assertTrue(result.contains(3));\n    }\n\n    @Test\n    public void testUnmodifiableSetWithInvalidInput() {\n        assertThrows(NullPointerException.class, () -> {\n            SetUtils.unmodifiableSet(new Integer[] { null });\n        });\n    }\n}\n"}]