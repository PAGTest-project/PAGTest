[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.NoSuchElementException;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class LoopingListIterator_nextTest {\n\n    private LoopingListIterator<String> loopingListIterator;\n    private List<String> list;\n\n    @BeforeEach\n    public void setUp() {\n        list = Arrays.asList(\"a\", \"b\", \"c\");\n        loopingListIterator = new LoopingListIterator<>(list);\n    }\n\n    @Test\n    public void testNextWithElements() {\n        assertEquals(\"a\", loopingListIterator.next());\n        assertEquals(\"b\", loopingListIterator.next());\n        assertEquals(\"c\", loopingListIterator.next());\n        assertEquals(\"a\", loopingListIterator.next()); // Looping back to the start\n    }\n\n    @Test\n    public void testNextWithEmptyList() {\n        list = Arrays.asList();\n        loopingListIterator = new LoopingListIterator<>(list);\n        assertThrows(NoSuchElementException.class, () -> {\n            loopingListIterator.next();\n        });\n    }\n\n    @Test\n    public void testNextWithReset() {\n        assertEquals(\"a\", loopingListIterator.next());\n        assertEquals(\"b\", loopingListIterator.next());\n        loopingListIterator.reset();\n        assertEquals(\"a\", loopingListIterator.next());\n    }\n\n    @Test\n    public void testNextWithHasNext() {\n        assertTrue(loopingListIterator.hasNext());\n        assertEquals(\"a\", loopingListIterator.next());\n        assertTrue(loopingListIterator.hasNext());\n        assertEquals(\"b\", loopingListIterator.next());\n        assertTrue(loopingListIterator.hasNext());\n        assertEquals(\"c\", loopingListIterator.next());\n        assertTrue(loopingListIterator.hasNext());\n        assertEquals(\"a\", loopingListIterator.next());\n    }\n}\n"}]