[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonListIterator_removeTest {\n\n    private static final Object testValue = new Object();\n    private SingletonListIterator<Object> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        iterator = new SingletonListIterator<>(testValue);\n    }\n\n    @Test\n    public void testRemoveSuccess() {\n        iterator.next();\n        iterator.remove();\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test\n    public void testRemoveWithoutNextCall() {\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.remove();\n        });\n    }\n\n    @Test\n    public void testRemoveTwice() {\n        iterator.next();\n        iterator.remove();\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.remove();\n        });\n    }\n\n    @Test\n    public void testRemoveAfterReset() {\n        iterator.next();\n        iterator.reset();\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.remove();\n        });\n    }\n\n    @Test\n    public void testRemoveAfterSet() {\n        iterator.next();\n        iterator.set(new Object());\n        iterator.remove();\n        assertFalse(iterator.hasNext());\n    }\n}\n"}]