[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport org.apache.commons.collections4.Transformer;\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class TransformedMap_putAllTest {\n\n    @Test\n    public void testPutAll() {\n        // Given\n        Map<String, String> originalMap = new HashMap<>();\n        originalMap.put(\"key1\", \"value1\");\n        originalMap.put(\"key2\", \"value2\");\n\n        Transformer<String, String> keyTransformer = mock(Transformer.class);\n        Transformer<String, String> valueTransformer = mock(Transformer.class);\n\n        when(keyTransformer.apply(\"key1\")).thenReturn(\"transformedKey1\");\n        when(keyTransformer.apply(\"key2\")).thenReturn(\"transformedKey2\");\n        when(valueTransformer.apply(\"value1\")).thenReturn(\"transformedValue1\");\n        when(valueTransformer.apply(\"value2\")).thenReturn(\"transformedValue2\");\n\n        TransformedMap<String, String> transformedMap = new TransformedMap<>(new HashMap<>(), keyTransformer, valueTransformer);\n\n        // When\n        transformedMap.putAll(originalMap);\n\n        // Then\n        Map<String, String> expectedMap = new HashMap<>();\n        expectedMap.put(\"transformedKey1\", \"transformedValue1\");\n        expectedMap.put(\"transformedKey2\", \"transformedValue2\");\n\n        assertEquals(expectedMap, transformedMap.decorated());\n    }\n}\n"}]