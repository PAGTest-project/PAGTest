[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class SingletonListIterator_setTest {\n\n    private static final Object testValue = new Object();\n    private SingletonListIterator<Object> iterator;\n\n    @BeforeEach\n    public void setUp() {\n        iterator = new SingletonListIterator<>(testValue);\n    }\n\n    @Test\n    public void testSetSuccess() {\n        iterator.next();\n        iterator.set(new Object());\n        assertEquals(new Object(), iterator.next());\n    }\n\n    @Test\n    public void testSetWithoutNextCall() {\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.set(new Object());\n        });\n    }\n\n    @Test\n    public void testSetAfterRemove() {\n        iterator.next();\n        iterator.remove();\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.set(new Object());\n        });\n    }\n\n    @Test\n    public void testSetAfterReset() {\n        iterator.next();\n        iterator.reset();\n        assertThrows(IllegalStateException.class, () -> {\n            iterator.set(new Object());\n        });\n    }\n}\n"}]