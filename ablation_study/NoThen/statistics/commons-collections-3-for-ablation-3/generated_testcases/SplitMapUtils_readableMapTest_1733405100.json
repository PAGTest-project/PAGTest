[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass SplitMapUtils_readableMapTest {\n\n    @Test\n    void testReadableMapWithIterableMap() {\n        IterableMap<String, String> iterableMap = new HashMap<>();\n        IterableMap<String, String> result = SplitMapUtils.readableMap(iterableMap);\n        assertSame(iterableMap, result);\n    }\n\n    @Test\n    void testReadableMapWithNonIterableMap() {\n        Map<String, String> nonIterableMap = new HashMap<>();\n        IterableMap<String, String> result = SplitMapUtils.readableMap(nonIterableMap);\n        assertTrue(result instanceof IterableMap);\n    }\n\n    @Test\n    void testReadableMapWithNonMapGet() {\n        Get<String, String> nonMapGet = new Get<String, String>() {\n            @Override\n            public String get(Object key) {\n                return null;\n            }\n\n            @Override\n            public boolean containsKey(Object key) {\n                return false;\n            }\n\n            @Override\n            public boolean containsValue(Object value) {\n                return false;\n            }\n\n            @Override\n            public Set<Entry<String, String>> entrySet() {\n                return null;\n            }\n        };\n        IterableMap<String, String> result = SplitMapUtils.readableMap(nonMapGet);\n        assertTrue(result instanceof WrappedGet);\n    }\n\n    @Test\n    void testReadableMapWithNullGet() {\n        assertThrows(NullPointerException.class, () -> {\n            SplitMapUtils.readableMap(null);\n        });\n    }\n}\n"}]