[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_clearTest {\n\n    private CompositeMap<String, String> compositeMap;\n    private Map<String, String> map1;\n    private Map<String, String> map2;\n\n    @BeforeEach\n    public void setUp() {\n        map1 = new HashMap<>();\n        map1.put(\"key1\", \"value1\");\n        map1.put(\"key2\", \"value2\");\n\n        map2 = new HashMap<>();\n        map2.put(\"key3\", \"value3\");\n        map2.put(\"key4\", \"value4\");\n\n        compositeMap = new CompositeMap<>(map1, map2);\n    }\n\n    @Test\n    public void testClear() {\n        compositeMap.clear();\n        assertTrue(map1.isEmpty());\n        assertTrue(map2.isEmpty());\n    }\n\n    @Test\n    public void testClearWithEmptyCompositeMap() {\n        CompositeMap<String, String> emptyCompositeMap = new CompositeMap<>();\n        emptyCompositeMap.clear();\n        assertTrue(emptyCompositeMap.isEmpty());\n    }\n\n    @Test\n    public void testClearWithSingleMap() {\n        CompositeMap<String, String> singleMapComposite = new CompositeMap<>(map1);\n        singleMapComposite.clear();\n        assertTrue(map1.isEmpty());\n    }\n\n    @Test\n    public void testClearWithMultipleMaps() {\n        Map<String, String> map3 = new HashMap<>();\n        map3.put(\"key5\", \"value5\");\n        map3.put(\"key6\", \"value6\");\n\n        compositeMap.addComposited(map3);\n        compositeMap.clear();\n\n        assertTrue(map1.isEmpty());\n        assertTrue(map2.isEmpty());\n        assertTrue(map3.isEmpty());\n    }\n}\n"}]