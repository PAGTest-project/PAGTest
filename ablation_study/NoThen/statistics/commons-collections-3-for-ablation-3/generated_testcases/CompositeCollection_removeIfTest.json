[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.function.Predicate;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_removeIfTest {\n\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    public void setUp() {\n        c = new CompositeCollection<>();\n        one = new HashSet<>(Arrays.asList(\"a\", \"b\"));\n        two = new HashSet<>(Arrays.asList(\"c\", \"d\"));\n        c.addComposited(one, two);\n    }\n\n    @Test\n    public void testRemoveIf_AllElementsRemoved() {\n        Predicate<String> filter = s -> true;\n        assertTrue(c.removeIf(filter));\n        assertEquals(0, c.size());\n    }\n\n    @Test\n    public void testRemoveIf_NoElementsRemoved() {\n        Predicate<String> filter = s -> false;\n        assertFalse(c.removeIf(filter));\n        assertEquals(4, c.size());\n    }\n\n    @Test\n    public void testRemoveIf_SomeElementsRemoved() {\n        Predicate<String> filter = s -> s.equals(\"a\") || s.equals(\"c\");\n        assertTrue(c.removeIf(filter));\n        assertEquals(2, c.size());\n        assertFalse(c.contains(\"a\"));\n        assertFalse(c.contains(\"c\"));\n    }\n\n    @Test\n    public void testRemoveIf_NullFilter() {\n        assertFalse(c.removeIf(null));\n        assertEquals(4, c.size());\n    }\n}\n"}]