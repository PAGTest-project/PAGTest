[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.collection;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashSet;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeCollection_sizeTest {\n\n    private CompositeCollection<String> c;\n    private Collection<String> one;\n    private Collection<String> two;\n\n    @BeforeEach\n    public void setUp() {\n        c = new CompositeCollection<>();\n        one = new ArrayList<>(Arrays.asList(\"1\", \"2\"));\n        two = new HashSet<>(Arrays.asList(\"3\", \"4\"));\n    }\n\n    @Test\n    public void testSizeWithEmptyComposite() {\n        assertEquals(0, c.size());\n    }\n\n    @Test\n    public void testSizeWithSingleCollection() {\n        c.addComposited(one);\n        assertEquals(2, c.size());\n    }\n\n    @Test\n    public void testSizeWithMultipleCollections() {\n        c.addComposited(one, two);\n        assertEquals(4, c.size());\n    }\n\n    @Test\n    public void testSizeAfterAddingElement() {\n        c.addComposited(one);\n        c.add(\"5\");\n        assertEquals(3, c.size());\n    }\n\n    @Test\n    public void testSizeAfterRemovingElement() {\n        c.addComposited(one);\n        c.remove(\"1\");\n        assertEquals(1, c.size());\n    }\n\n    @Test\n    public void testSizeAfterRemovingCollection() {\n        c.addComposited(one, two);\n        c.removeComposited(one);\n        assertEquals(2, c.size());\n    }\n}\n"}]