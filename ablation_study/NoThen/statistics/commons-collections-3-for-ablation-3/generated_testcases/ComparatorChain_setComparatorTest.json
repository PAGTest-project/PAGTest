[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4.comparators;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Comparator;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ComparatorChain_setComparatorTest {\n\n    @Test\n    void testSetComparator_ForwardSort() {\n        // Given\n        ComparatorChain<String> chain = new ComparatorChain<>();\n        Comparator<String> comparator = Comparator.naturalOrder();\n        chain.addComparator(comparator);\n\n        // When\n        chain.setComparator(0, comparator, false);\n\n        // Then\n        assertFalse(chain.isLocked());\n    }\n\n    @Test\n    void testSetComparator_ReverseSort() {\n        // Given\n        ComparatorChain<String> chain = new ComparatorChain<>();\n        Comparator<String> comparator = Comparator.naturalOrder();\n        chain.addComparator(comparator);\n\n        // When\n        chain.setComparator(0, comparator, true);\n\n        // Then\n        assertFalse(chain.isLocked());\n    }\n\n    @Test\n    void testSetComparator_LockedChain() {\n        // Given\n        ComparatorChain<String> chain = new ComparatorChain<>();\n        Comparator<String> comparator = Comparator.naturalOrder();\n        chain.addComparator(comparator);\n        chain.compare(\"a\", \"b\"); // This will lock the chain\n\n        // When & Then\n        assertThrows(UnsupportedOperationException.class, () -> {\n            chain.setComparator(0, comparator, false);\n        });\n    }\n}\n"}]