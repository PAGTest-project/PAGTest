[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class StaticBucketMap_getTest {\n\n    private StaticBucketMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new StaticBucketMap<>(17);\n    }\n\n    @Test\n    public void testGetExistingKey() {\n        map.put(\"key1\", \"value1\");\n        assertEquals(\"value1\", map.get(\"key1\"));\n    }\n\n    @Test\n    public void testGetNonExistingKey() {\n        assertNull(map.get(\"key2\"));\n    }\n\n    @Test\n    public void testGetNullKey() {\n        map.put(null, \"nullValue\");\n        assertEquals(\"nullValue\", map.get(null));\n    }\n\n    @Test\n    public void testGetAfterRemove() {\n        map.put(\"key3\", \"value3\");\n        map.remove(\"key3\");\n        assertNull(map.get(\"key3\"));\n    }\n\n    @Test\n    public void testGetWithMultipleEntries() {\n        map.put(\"key4\", \"value4\");\n        map.put(\"key5\", \"value5\");\n        assertEquals(\"value4\", map.get(\"key4\"));\n        assertEquals(\"value5\", map.get(\"key5\"));\n    }\n\n    @Test\n    public void testGetWithSameHashDifferentKey() {\n        // Assuming \"A\" and \"B\" hash to the same bucket\n        map.put(\"A\", \"valueA\");\n        map.put(\"B\", \"valueB\");\n        assertEquals(\"valueA\", map.get(\"A\"));\n        assertEquals(\"valueB\", map.get(\"B\"));\n    }\n\n    @Test\n    public void testGetWithCollision() {\n        // Assuming \"C\" and \"D\" hash to the same bucket\n        map.put(\"C\", \"valueC\");\n        map.put(\"D\", \"valueD\");\n        assertEquals(\"valueC\", map.get(\"C\"));\n        assertEquals(\"valueD\", map.get(\"D\"));\n    }\n\n    @Test\n    public void testGetWithNullValue() {\n        map.put(\"key6\", null);\n        assertNull(map.get(\"key6\"));\n    }\n\n    @Test\n    public void testGetWithNullKeyAndNullValue() {\n        map.put(null, null);\n        assertNull(map.get(null));\n    }\n\n    @Test\n    public void testGetWithEmptyMap() {\n        assertNull(map.get(\"nonExistentKey\"));\n    }\n\n    @Test\n    public void testGetWithConcurrentModification() {\n        map.put(\"key7\", \"value7\");\n        map.put(\"key8\", \"value8\");\n        map.remove(\"key7\");\n        assertNull(map.get(\"key7\"));\n        assertEquals(\"value8\", map.get(\"key8\"));\n    }\n}\n"}]