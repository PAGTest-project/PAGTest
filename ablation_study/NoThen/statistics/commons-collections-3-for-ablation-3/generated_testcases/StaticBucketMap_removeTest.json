[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class StaticBucketMap_removeTest {\n\n    private StaticBucketMap<String, String> map;\n\n    @BeforeEach\n    public void setUp() {\n        map = new StaticBucketMap<>(17);\n    }\n\n    @Test\n    public void testRemoveExistingKey() {\n        map.put(\"key1\", \"value1\");\n        assertTrue(map.containsKey(\"key1\"));\n        assertEquals(\"value1\", map.remove(\"key1\"));\n        assertFalse(map.containsKey(\"key1\"));\n    }\n\n    @Test\n    public void testRemoveNonExistingKey() {\n        assertFalse(map.containsKey(\"key2\"));\n        assertNull(map.remove(\"key2\"));\n    }\n\n    @Test\n    public void testRemoveNullKey() {\n        map.put(null, \"nullValue\");\n        assertTrue(map.containsKey(null));\n        assertEquals(\"nullValue\", map.remove(null));\n        assertFalse(map.containsKey(null));\n    }\n\n    @Test\n    public void testRemoveFromEmptyMap() {\n        assertFalse(map.containsKey(\"key3\"));\n        assertNull(map.remove(\"key3\"));\n    }\n\n    @Test\n    public void testRemoveWithMultipleEntriesInBucket() {\n        map.put(\"key4\", \"value4\");\n        map.put(\"key5\", \"value5\");\n        assertTrue(map.containsKey(\"key4\"));\n        assertTrue(map.containsKey(\"key5\"));\n        assertEquals(\"value4\", map.remove(\"key4\"));\n        assertFalse(map.containsKey(\"key4\"));\n        assertTrue(map.containsKey(\"key5\"));\n    }\n}\n"}]