[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass BoundedIterator_hasNextTest {\n\n    @Test\n    void testHasNextWithinBounds() {\n        Iterator<String> mockIterator = mock(Iterator.class);\n        when(mockIterator.hasNext()).thenReturn(true);\n\n        BoundedIterator<String> boundedIterator = new BoundedIterator<>(mockIterator, 0, 1);\n        assertTrue(boundedIterator.hasNext());\n    }\n\n    @Test\n    void testHasNextOutOfBounds() {\n        Iterator<String> mockIterator = mock(Iterator.class);\n        when(mockIterator.hasNext()).thenReturn(true);\n\n        BoundedIterator<String> boundedIterator = new BoundedIterator<>(mockIterator, 0, 0);\n        assertFalse(boundedIterator.hasNext());\n    }\n\n    @Test\n    void testHasNextWithNoElements() {\n        Iterator<String> mockIterator = mock(Iterator.class);\n        when(mockIterator.hasNext()).thenReturn(false);\n\n        BoundedIterator<String> boundedIterator = new BoundedIterator<>(mockIterator, 0, 1);\n        assertFalse(boundedIterator.hasNext());\n    }\n}\n"}]