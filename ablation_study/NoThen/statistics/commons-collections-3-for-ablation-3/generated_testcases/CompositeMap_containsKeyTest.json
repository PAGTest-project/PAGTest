[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.map;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CompositeMap_containsKeyTest {\n\n    private CompositeMap<String, String> compositeMap;\n    private Map<String, String> mapOne;\n    private Map<String, String> mapTwo;\n\n    @BeforeEach\n    public void setUp() {\n        mapOne = new HashMap<>();\n        mapOne.put(\"1\", \"one\");\n        mapOne.put(\"2\", \"two\");\n\n        mapTwo = new HashMap<>();\n        mapTwo.put(\"3\", \"three\");\n        mapTwo.put(\"4\", \"four\");\n\n        compositeMap = new CompositeMap<>(mapOne, mapTwo);\n    }\n\n    @Test\n    public void testContainsKey_KeyInFirstMap() {\n        assertTrue(compositeMap.containsKey(\"1\"));\n    }\n\n    @Test\n    public void testContainsKey_KeyInSecondMap() {\n        assertTrue(compositeMap.containsKey(\"3\"));\n    }\n\n    @Test\n    public void testContainsKey_KeyNotPresent() {\n        assertFalse(compositeMap.containsKey(\"5\"));\n    }\n\n    @Test\n    public void testContainsKey_AfterAddingNewMap() {\n        Map<String, String> newMap = new HashMap<>();\n        newMap.put(\"5\", \"five\");\n        compositeMap.addComposited(newMap);\n        assertTrue(compositeMap.containsKey(\"5\"));\n    }\n\n    @Test\n    public void testContainsKey_AfterRemovingKey() {\n        compositeMap.remove(\"1\");\n        assertFalse(compositeMap.containsKey(\"1\"));\n    }\n\n    @Test\n    public void testContainsKey_AfterRemovingCompositedMap() {\n        compositeMap.removeComposited(mapOne);\n        assertFalse(compositeMap.containsKey(\"1\"));\n    }\n\n    @Test\n    public void testContainsKey_NullKey() {\n        assertFalse(compositeMap.containsKey(null));\n    }\n\n    @Test\n    public void testContainsKey_EmptyCompositeMap() {\n        compositeMap = new CompositeMap<>();\n        assertFalse(compositeMap.containsKey(\"1\"));\n    }\n}\n"}]