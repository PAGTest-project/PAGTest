[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4.iterators;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.NoSuchElementException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class BoundedIterator_nextTest {\n\n    private List<String> testList;\n\n    @BeforeEach\n    public void setUp() {\n        testList = Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n    }\n\n    @Test\n    public void testNextWithinBounds() {\n        Iterator<String> iter = new BoundedIterator<>(testList.iterator(), 1, 3);\n        assertTrue(iter.hasNext());\n        assertEquals(\"B\", iter.next());\n        assertTrue(iter.hasNext());\n        assertEquals(\"C\", iter.next());\n        assertTrue(iter.hasNext());\n        assertEquals(\"D\", iter.next());\n        assertFalse(iter.hasNext());\n    }\n\n    @Test\n    public void testNextOutOfBounds() {\n        Iterator<String> iter = new BoundedIterator<>(testList.iterator(), 1, 3);\n        iter.next(); // Move to \"B\"\n        iter.next(); // Move to \"C\"\n        iter.next(); // Move to \"D\"\n        assertThrows(NoSuchElementException.class, () -> iter.next());\n    }\n\n    @Test\n    public void testNextWithOffsetGreaterThanSize() {\n        Iterator<String> iter = new BoundedIterator<>(testList.iterator(), 10, 4);\n        assertFalse(iter.hasNext());\n        assertThrows(NoSuchElementException.class, () -> iter.next());\n    }\n\n    @Test\n    public void testNextWithMaxZero() {\n        Iterator<String> iter = new BoundedIterator<>(testList.iterator(), 0, 0);\n        assertFalse(iter.hasNext());\n        assertThrows(NoSuchElementException.class, () -> iter.next());\n    }\n}\n"}]