{"file_path": "src/test/java/org/apache/commons/collections4/map/PassiveExpiringMap_putTest.java", "testclass_name": "PassiveExpiringMap_putTest", "dependencies": ["package org.apache.commons.collections4.map;", "import org.junit.jupiter.api.Test;", "import java.util.HashMap;", "import java.util.Map;", "import java.util.concurrent.TimeUnit;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNull;"], "name": "PassiveExpiringMap_putTest", "description": "Unit tests for the put method of PassiveExpiringMap, which tests the behavior of entries based on their expiration settings.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testPut_EntryNeverExpires", "primary_tested": ["PassiveExpiringMap.put(String,String)"], "associated_methods": ["PassiveExpiringMap.get(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap", "java.util.HashMap", "java.util.Map", "java.util.concurrent.TimeUnit"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the put method when entries never expire."}, {"name": "testPut_EntryAlwaysExpires", "primary_tested": ["PassiveExpiringMap.put(String,String)"], "associated_methods": ["PassiveExpiringMap.get(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap", "java.util.HashMap", "java.util.Map", "java.util.concurrent.TimeUnit"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the put method when entries always expire immediately."}, {"name": "testPut_EntryExpiresAfterTime", "primary_tested": ["PassiveExpiringMap.put(String,String)"], "associated_methods": ["PassiveExpiringMap.get(String)"], "external_dependencies": {"modules": ["PassiveExpiringMap", "java.util.HashMap", "java.util.Map", "java.util.concurrent.TimeUnit"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the put method when entries expire after a specified time."}]}