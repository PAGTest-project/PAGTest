{"original": {}, "apt": {"net.datafaker.providers.base.Locality[String]localeStringWithRandom(Random)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Locality[String]localeStringWithoutReplacement(Random)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Compass[String]word()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.AbstractProvider[boolean]equals(Object)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.IdNumber[String]invalid()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Lorem[List<String>]words(int)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Color[String]hex(boolean)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.BaseFaker[B]getFaker()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Internet[String]macAddress(String)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Internet[String]ipV4Cidr()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Internet[InetAddress]getIpV6Address()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Internet[String]slug(List<String>,String)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Internet[String]uuidv7()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.DateAndTime[T]future(int,TimeUnit,T)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.DateAndTime[T]past(int,TimeUnit,T)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.DateAndTime[T]between(T,T)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.DateAndTime[Timestamp]birthday(int,int)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.DateAndTime[LocalDate]birthdayLocalDate(int,int)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.DateAndTime[Period]period(Period,Period)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.providers.base.Azure[String]subscriptionId()": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.idnumbers.RomanianIdNumber[String]generateInvalid(BaseProviders)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.idnumbers.SouthAfricanIdNumber[String]generateInvalid(BaseProviders)": [{"Instruction Coverage": 0.5714285714285714}, {"Branch Coverage": 0.5}, {"Line Coverage": 0.5}], "net.datafaker.idnumbers.SwedenIdNumber[boolean]isValidSwedishSsn(String)": [{"Instruction Coverage": 0.9032258064516129}, {"Branch Coverage": 1.0}, {"Line Coverage": 0.8}], "net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil[String]cpf(BaseProviders,boolean,boolean)": [{"Instruction Coverage": 0.9425287356321839}, {"Branch Coverage": 0.875}, {"Line Coverage": 0.9285714285714286}], "net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil[boolean]isCNPJValid(String)": [{"Instruction Coverage": 0.9642857142857143}, {"Branch Coverage": 0.5}, {"Line Coverage": 0.875}], "net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil[Boolean]isCPFValid(String)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}], "net.datafaker.idnumbers.pt.br.IdNumberGeneratorPtBrUtil[int]digit(int)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.service.FakeValuesService[void]addUrl(Locale,URL)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.service.FakeValuesService[Object]fetch(String,FakerContext)": [{"Instruction Coverage": 0.38461538461538464}, {"Branch Coverage": 0.25}, {"Line Coverage": 0.45454545454545453}], "net.datafaker.service.FakeValuesService[String]safeFetch(String,FakerContext,String)": [{"Instruction Coverage": 0.16071428571428573}, {"Branch Coverage": 0.1111111111111111}, {"Line Coverage": 0.16666666666666666}], "net.datafaker.service.FakeValuesService[String]regexify(String,FakerContext)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.5}, {"Line Coverage": 1.0}], "net.datafaker.service.FakeValuesService[String]examplify(String,FakerContext)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.875}, {"Line Coverage": 1.0}], "net.datafaker.service.FakeValuesService[String]csv(String,char,boolean,int)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.service.FakeValuesService[Class<?>]primitiveToWrapper(Class<?>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.service.RandomService[long]nextLong(long)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 0.75}, {"Line Coverage": 1.0}], "net.datafaker.service.RandomService[String]hex(int,boolean)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.service.RandomService[int]hashCode()": [{"Instruction Coverage": 0.9333333333333333}, {"Branch Coverage": 0.75}, {"Line Coverage": 1.0}], "net.datafaker.service.FakeValues[boolean]equals(Object)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.internal.helper.JavaNames[String]toJavaNames(String,boolean)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.internal.helper.WordUtils[String]capitalize(String)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": 1.0}, {"Line Coverage": 1.0}], "net.datafaker.transformations.CsvTransformer[String]getStartStream(Schema<IN, ?>)": [{"Instruction Coverage": 1.0}, {"Branch Coverage": -1.0}, {"Line Coverage": 1.0}]}}