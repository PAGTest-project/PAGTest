{"file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "dependencies": ["package net.datafaker.providers.base;", "import org.junit.jupiter.api.RepeatedTest;", "import org.junit.jupiter.api.Test;", "import static org.assertj.core.api.Assertions.assertThat;"], "name": "FileTest", "description": "Unit tests for file-related functionalities provided by the BaseFaker class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testExtension", "primary_tested": ["BaseFaker.file().extension()"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of file extensions with specific allowed values."}, {"name": "testMimeTypeFormat", "primary_tested": ["BaseFaker.file().mimeType()"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the format of generated MIME types."}, {"name": "testFileName", "primary_tested": ["BaseFaker.file().fileName()"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of file names with specific patterns."}, {"name": "testFileNameSpecifyExtension", "primary_tested": ["BaseFaker.file().fileName(String,String,String,String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of file names with a specified extension."}, {"name": "testFileNameSpecifyDir", "primary_tested": ["BaseFaker.file().fileName(String,String,String,String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of file names with a specified directory."}, {"name": "testFileNameSpecifySeparator", "primary_tested": ["BaseFaker.file().fileName(String,String,String,String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of file names with a specified separator."}, {"name": "testFileNameSpecifyName", "primary_tested": ["BaseFaker.file().fileName(String,String,String,String)"], "external_dependencies": {"modules": ["BaseFaker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of file names with a specified name."}]}