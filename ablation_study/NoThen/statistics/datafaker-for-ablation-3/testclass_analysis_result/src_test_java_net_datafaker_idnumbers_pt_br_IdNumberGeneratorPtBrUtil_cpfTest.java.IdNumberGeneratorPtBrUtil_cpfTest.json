{"file_path": "src/test/java/net/datafaker/idnumbers/pt/br/IdNumberGeneratorPtBrUtil_cpfTest.java", "testclass_name": "IdNumberGeneratorPtBrUtil_cpfTest", "dependencies": ["package net.datafaker.idnumbers.pt.br;", "import net.datafaker.providers.base.BaseProviders;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.mockito.Mockito.mock;", "import static org.mockito.Mockito.when;", "import net.datafaker.service.RandomService;"], "name": "IdNumberGeneratorPtBrUtil_cpfTest", "description": "Unit tests for the CPF generation and validation functionality in IdNumberGeneratorPtBrUtil.", "class_members": {"variables": [{"name": "faker", "type": "BaseProviders"}, {"name": "randomService", "type": "RandomService"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testCpfValidFormatted", "primary_tested": ["IdNumberGeneratorPtBrUtil.cpf(BaseProviders,boolean,boolean)", "IdNumberGeneratorPtBrUtil.isCPFValid(String)"], "external_dependencies": {"modules": ["BaseProviders", "RandomService", "IdNumberGeneratorPtBrUtil"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the generation of a valid formatted CPF and validates it."}, {"name": "testCpfValidUnformatted", "primary_tested": ["IdNumberGeneratorPtBrUtil.cpf(BaseProviders,boolean,boolean)", "IdNumberGeneratorPtBrUtil.isCPFValid(String)"], "external_dependencies": {"modules": ["BaseProviders", "RandomService", "IdNumberGeneratorPtBrUtil"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the generation of a valid unformatted CPF and validates it."}, {"name": "testCpfInvalidFormatted", "primary_tested": ["IdNumberGeneratorPtBrUtil.cpf(BaseProviders,boolean,boolean)", "IdNumberGeneratorPtBrUtil.isCPFValid(String)"], "external_dependencies": {"modules": ["BaseProviders", "RandomService", "IdNumberGeneratorPtBrUtil"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the generation of an invalid formatted CPF and validates it."}, {"name": "testCpfInvalidUnformatted", "primary_tested": ["IdNumberGeneratorPtBrUtil.cpf(BaseProviders,boolean,boolean)", "IdNumberGeneratorPtBrUtil.isCPFValid(String)"], "external_dependencies": {"modules": ["BaseProviders", "RandomService", "IdNumberGeneratorPtBrUtil"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "randomService", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the generation of an invalid unformatted CPF and validates it."}]}