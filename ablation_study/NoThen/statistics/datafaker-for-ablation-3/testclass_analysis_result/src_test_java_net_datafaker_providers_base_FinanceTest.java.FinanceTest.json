{"file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "dependencies": ["package net.datafaker.providers.base;", "import org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit;", "import org.junit.jupiter.api.RepeatedTest;", "import org.junit.jupiter.api.Test;", "import static net.datafaker.providers.base.Finance.*;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.util.List;", "import java.util.Collection;", "import java.util.Set;"], "name": "FinanceTest", "description": "Test suite for validating various financial data generation functionalities provided by the Finance class.", "class_members": {"variables": [{"name": "finance", "type": "Finance"}], "methods": [{"name": "assertCardLuhnDigit", "signature": "void assertCardLuhnDigit(String creditCard)"}]}, "fixtures": [], "test_cases": [{"name": "creditCard", "primary_tested": ["Finance.creditCard()"], "associated_methods": ["FinanceTest.assertCardLuhnDigit(String)"], "external_dependencies": {"modules": ["Finance", "LuhnCheckDigit"], "class_members": [{"name": "finance", "type": "variable"}, {"name": "assertCardLuhnDigit", "type": "method"}]}, "category": "unit", "description": "Tests the generation of a valid credit card number using the Luhn algorithm."}, {"name": "nasdaqTicker", "primary_tested": ["Finance.nasdaqTicker()"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid NASDAQ ticker symbol."}, {"name": "nyseTicker", "primary_tested": ["Finance.nyseTicker()"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid NYSE ticker symbol."}, {"name": "bic", "primary_tested": ["Finance.bic()"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid BIC (Bank Identifier Code)."}, {"name": "iban", "primary_tested": ["Finance.iban()"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid IBAN (International Bank Account Number)."}, {"name": "ibanWithCountryCode", "primary_tested": ["Finance.iban(String)"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid IBAN with a specific country code (DE)."}, {"name": "ibanCountryCodes", "primary_tested": ["Finance.ibanSupportedCountries()"], "external_dependencies": {"modules": ["Finance"]}, "category": "unit", "description": "Tests the retrieval of supported IBAN country codes."}, {"name": "ibanWithAllCountryCodes", "primary_tested": ["Finance.iban(String)"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of IBANs for all supported country codes."}, {"name": "creditCardWithType", "primary_tested": ["Finance.creditCard(CreditCardType)"], "associated_methods": ["FinanceTest.assertCardLuhnDigit(String)"], "external_dependencies": {"modules": ["Finance", "LuhnCheckDigit"], "class_members": [{"name": "finance", "type": "variable"}, {"name": "assertCardLuhnDigit", "type": "method"}]}, "category": "unit", "description": "Tests the generation of valid credit card numbers for all supported types using the Luhn algorithm."}, {"name": "costaRicaIbanMustBeValid", "primary_tested": ["Finance.iban(String)"], "external_dependencies": {"modules": ["Finance", "BaseFaker", "fr.marcwrobel.jbanking.iban.Iban"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid IBAN for Costa Rica."}, {"name": "visaCard", "primary_tested": ["Finance.creditCard(CreditCardType)"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid Visa credit card number."}, {"name": "discoverCard", "primary_tested": ["Finance.creditCard(CreditCardType)"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid Discover credit card number."}, {"name": "usRoutingNumber", "primary_tested": ["Finance.usRoutingNumber()"], "external_dependencies": {"modules": ["Finance"], "class_members": [{"name": "finance", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of a valid US routing number."}]}