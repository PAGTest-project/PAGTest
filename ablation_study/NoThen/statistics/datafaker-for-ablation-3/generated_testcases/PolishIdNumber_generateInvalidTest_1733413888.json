[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class PolishIdNumber_generateInvalidTest {\n\n    @Test\n    public void testGenerateInvalid() {\n        // Given\n        BaseProviders faker = Mockito.mock(BaseProviders.class);\n        when(faker.timeAndDate().birthday()).thenReturn(LocalDate.of(1990, 1, 1));\n        when(faker.number().randomDigit()).thenReturn(1, 2, 3);\n        when(faker.random().nextInt(5)).thenReturn(2);\n\n        PolishIdNumber polishIdNumber = new PolishIdNumber();\n\n        // When\n        String result = polishIdNumber.generateInvalid(faker);\n\n        // Then\n        assertEquals(\"19210111231\", result);\n    }\n}\n"}]