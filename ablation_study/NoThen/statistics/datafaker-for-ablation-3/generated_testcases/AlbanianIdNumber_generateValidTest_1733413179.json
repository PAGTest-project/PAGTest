[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.Faker;\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.IdNumber.IdNumberRequest;\nimport net.datafaker.providers.base.PersonIdNumber;\nimport net.datafaker.providers.base.PersonIdNumber.Gender;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class AlbanianIdNumber_generateValidTest {\n    private AlbanianIdNumber generator;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        generator = new AlbanianIdNumber();\n        faker = new Faker();\n    }\n\n    @Test\n    public void testGenerateValid() {\n        IdNumberRequest request = new IdNumberRequest();\n        PersonIdNumber personIdNumber = generator.generateValid(faker, request);\n\n        assertNotNull(personIdNumber);\n        assertNotNull(personIdNumber.getIdNumber());\n        assertNotNull(personIdNumber.getBirthDate());\n        assertNotNull(personIdNumber.getGender());\n\n        String idNumber = personIdNumber.getIdNumber();\n        LocalDate birthDate = personIdNumber.getBirthDate();\n        Gender gender = personIdNumber.getGender();\n\n        String expectedBasePart = generator.yy(birthDate.getYear()) +\n                generator.mm(birthDate.getMonthValue(), gender) +\n                generator.dd(birthDate.getDayOfMonth()) +\n                generator.sss(faker);\n\n        String expectedIdNumber = expectedBasePart + generator.checksum(expectedBasePart);\n\n        assertEquals(expectedIdNumber, idNumber);\n    }\n\n    @Test\n    public void testGenerateInvalid() {\n        String invalidIdNumber = generator.generateInvalid(faker);\n        assertNotNull(invalidIdNumber);\n    }\n\n    @Test\n    public void testYy() {\n        assertEquals(\"00\", generator.yy(1800));\n        assertEquals(\"01\", generator.yy(1801));\n        assertEquals(\"09\", generator.yy(1809));\n        assertEquals(\"10\", generator.yy(1810));\n        assertEquals(\"99\", generator.yy(1899));\n    }\n\n    @Test\n    public void testMm() {\n        assertEquals(\"01\", generator.mm(1, Gender.MALE));\n        assertEquals(\"02\", generator.mm(2, Gender.MALE));\n        assertEquals(\"09\", generator.mm(9, Gender.MALE));\n        assertEquals(\"12\", generator.mm(12, Gender.MALE));\n        assertEquals(\"51\", generator.mm(1, Gender.FEMALE));\n        assertEquals(\"52\", generator.mm(2, Gender.FEMALE));\n        assertEquals(\"58\", generator.mm(8, Gender.FEMALE));\n        assertEquals(\"62\", generator.mm(12, Gender.FEMALE));\n    }\n\n    @Test\n    public void testDd() {\n        assertEquals(\"01\", generator.dd(1));\n        assertEquals(\"02\", generator.dd(2));\n        assertEquals(\"09\", generator.dd(9));\n        assertEquals(\"10\", generator.dd(10));\n        assertEquals(\"31\", generator.dd(31));\n    }\n\n    @Test\n    public void testSss() {\n        String sss = generator.sss(faker);\n        assertNotNull(sss);\n        assertEquals(3, sss.length());\n    }\n\n    @Test\n    public void testChecksum() {\n        assertEquals('W', generator.checksum(\"000000000\"));\n        assertEquals('A', generator.checksum(\"000000001\"));\n        assertEquals('B', generator.checksum(\"000000002\"));\n        assertEquals('C', generator.checksum(\"000000003\"));\n        assertEquals('D', generator.checksum(\"000000004\"));\n    }\n}\n"}]