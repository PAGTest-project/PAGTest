[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers.pt.br;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\nimport net.datafaker.service.RandomService;\n\npublic class IdNumberGeneratorPtBrUtil_cpfTest {\n\n    private BaseProviders faker;\n    private RandomService randomService;\n\n    @BeforeEach\n    public void setUp() {\n        faker = mock(BaseProviders.class);\n        randomService = mock(RandomService.class);\n        when(faker.random()).thenReturn(randomService);\n    }\n\n    @Test\n    public void testCpfValidFormatted() {\n        when(randomService.nextInt(9)).thenReturn(1);\n        String cpf = IdNumberGeneratorPtBrUtil.cpf(faker, true, true);\n        assertTrue(IdNumberGeneratorPtBrUtil.isCPFValid(cpf));\n    }\n\n    @Test\n    public void testCpfValidUnformatted() {\n        when(randomService.nextInt(9)).thenReturn(1);\n        String cpf = IdNumberGeneratorPtBrUtil.cpf(faker, false, true);\n        assertTrue(IdNumberGeneratorPtBrUtil.isCPFValid(cpf));\n    }\n\n    @Test\n    public void testCpfInvalidFormatted() {\n        when(randomService.nextInt(1000000000)).thenReturn(123456789);\n        when(randomService.nextInt(90)).thenReturn(10);\n        String cpf = IdNumberGeneratorPtBrUtil.cpf(faker, true, false);\n        assertFalse(IdNumberGeneratorPtBrUtil.isCPFValid(cpf));\n    }\n\n    @Test\n    public void testCpfInvalidUnformatted() {\n        when(randomService.nextInt(1000000000)).thenReturn(123456789);\n        when(randomService.nextInt(90)).thenReturn(10);\n        String cpf = IdNumberGeneratorPtBrUtil.cpf(faker, false, false);\n        assertFalse(IdNumberGeneratorPtBrUtil.isCPFValid(cpf));\n    }\n}\n"}]