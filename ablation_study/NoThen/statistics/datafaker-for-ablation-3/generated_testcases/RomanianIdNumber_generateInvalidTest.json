[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.Faker;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotEquals;\n\npublic class RomanianIdNumber_generateInvalidTest {\n    private RomanianIdNumber impl;\n    private Faker faker;\n\n    @BeforeEach\n    public void setUp() {\n        impl = new RomanianIdNumber();\n        faker = new Faker();\n    }\n\n    @Test\n    public void testGenerateInvalid() {\n        String invalidIdNumber = impl.generateInvalid(faker);\n        String basePart = invalidIdNumber.substring(0, invalidIdNumber.length() - 1);\n        int expectedChecksum = (impl.checksum(basePart) + 1) % 10;\n        int actualChecksum = Character.getNumericValue(invalidIdNumber.charAt(invalidIdNumber.length() - 1));\n        assertEquals(expectedChecksum, actualChecksum);\n    }\n\n    @Test\n    public void testGenerateInvalidChecksumNotEqualToValid() {\n        String invalidIdNumber = impl.generateInvalid(faker);\n        String basePart = invalidIdNumber.substring(0, invalidIdNumber.length() - 1);\n        int invalidChecksum = Character.getNumericValue(invalidIdNumber.charAt(invalidIdNumber.length() - 1));\n        int validChecksum = impl.checksum(basePart);\n        assertNotEquals(validChecksum, invalidChecksum);\n    }\n}\n"}]