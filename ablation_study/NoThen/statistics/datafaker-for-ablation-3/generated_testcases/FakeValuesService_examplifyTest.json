[{"strategy": "retry", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.Locale;\n\npublic class FakeValuesService_examplifyTest {\n    private FakeValuesService fakeValuesService;\n    private FakerContext context;\n\n    @BeforeEach\n    public void setUp() {\n        fakeValuesService = new FakeValuesService();\n        context = new FakerContext(Locale.ENGLISH, new RandomService());\n    }\n\n    @Test\n    public void testExamplifyWithNullExample() {\n        String result = fakeValuesService.examplify(null, context);\n        assertNull(result);\n    }\n\n    @Test\n    public void testExamplifyWithLettersOnly() {\n        String example = \"abc\";\n        String result = fakeValuesService.examplify(example, context);\n        assertNotNull(result);\n        assertNotEquals(example, result);\n        assertTrue(result.matches(\"[a-zA-Z]+\"));\n    }\n\n    @Test\n    public void testExamplifyWithDigitsOnly() {\n        String example = \"123\";\n        String result = fakeValuesService.examplify(example, context);\n        assertNotNull(result);\n        assertNotEquals(example, result);\n        assertTrue(result.matches(\"[0-9]+\"));\n    }\n\n    @Test\n    public void testExamplifyWithMixedCharacters() {\n        String example = \"a1b2c3\";\n        String result = fakeValuesService.examplify(example, context);\n        assertNotNull(result);\n        assertNotEquals(example, result);\n        assertTrue(result.matches(\"[a-zA-Z0-9]+\"));\n    }\n\n    @Test\n    public void testExamplifyWithEmptyString() {\n        String example = \"\";\n        String result = fakeValuesService.examplify(example, context);\n        assertNotNull(result);\n        assertEquals(example, result);\n    }\n}\n"}]