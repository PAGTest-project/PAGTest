[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Lorem_sentenceTest {\n    private Lorem lorem;\n\n    @BeforeEach\n    public void setUp() {\n        BaseProviders faker = new BaseProviders() {\n            @Override\n            public Lorem lorem() {\n                return lorem;\n            }\n        };\n        lorem = new Lorem(faker);\n    }\n\n    @Test\n    public void testSentenceWithFixedWordCount() {\n        String sentence = lorem.sentence(5, 0);\n        String[] words = sentence.split(\" \");\n        assertEquals(6, words.length); // 5 words + 1 capitalized word\n    }\n\n    @Test\n    public void testSentenceWithRandomWords() {\n        String sentence = lorem.sentence(5, 3);\n        String[] words = sentence.split(\" \");\n        assertTrue(words.length >= 6 && words.length <= 9); // 5 words + 1 to 4 random words\n    }\n\n    @Test\n    public void testSentenceWithZeroWordCount() {\n        String sentence = lorem.sentence(0, 0);\n        assertEquals(\".\", sentence);\n    }\n\n    @Test\n    public void testSentenceWithNegativeWordCount() {\n        String sentence = lorem.sentence(-1, 0);\n        assertEquals(\".\", sentence);\n    }\n\n    @Test\n    public void testSentenceWithRandomWordsToAdd() {\n        String sentence = lorem.sentence(3, 5);\n        String[] words = sentence.split(\" \");\n        assertTrue(words.length >= 4 && words.length <= 9); // 3 words + 1 to 6 random words\n    }\n}\n"}]