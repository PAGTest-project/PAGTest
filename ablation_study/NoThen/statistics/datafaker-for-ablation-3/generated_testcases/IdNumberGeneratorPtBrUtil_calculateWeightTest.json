[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers.pt.br;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class IdNumberGeneratorPtBrUtil_calculateWeightTest {\n\n    @Test\n    void testCalculateWeightSimple() {\n        String num = \"123456789012\";\n        int weight = 9;\n        int start = 4;\n        int end = 12;\n        int expected = 242; // Corrected expected value\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    void testCalculateWeightWithDifferentWeight() {\n        String num = \"123456789012\";\n        int weight = 5;\n        int start = 0;\n        int end = 4;\n        int expected = 30; // Corrected expected value\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    void testCalculateWeightWithSingleDigit() {\n        String num = \"1\";\n        int weight = 10;\n        int start = 0;\n        int end = 1;\n        int expected = 10; // Calculated manually for \"1\" with weight 10\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    void testCalculateWeightWithZeroWeight() {\n        String num = \"123456789012\";\n        int weight = 0;\n        int start = 0;\n        int end = 12;\n        int expected = 0; // Any number multiplied by 0 is 0\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    void testCalculateWeightWithFullRange() {\n        String num = \"123456789012\";\n        int weight = 12;\n        int start = 0;\n        int end = 12;\n        int expected = 304; // Corrected expected value\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n}\n"}]