[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class Lorem_maxLengthSentenceTest {\n    private Lorem lorem;\n\n    @BeforeEach\n    public void setUp() {\n        lorem = new Lorem(new BaseProviders() {\n            @Override\n            public Lorem lorem() {\n                return new Lorem(this);\n            }\n\n            @Override\n            public void addUrl(java.util.Locale locale, java.net.URL url) {\n                // Implementation not needed for this test\n            }\n        });\n    }\n\n    @Test\n    void testMaxLengthSentenceWithPositiveLength() {\n        int fixedLength = 20;\n        String result = lorem.maxLengthSentence(fixedLength);\n        assertEquals(fixedLength, result.length());\n    }\n\n    @Test\n    void testMaxLengthSentenceWithZeroLength() {\n        int fixedLength = 0;\n        String result = lorem.maxLengthSentence(fixedLength);\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    void testMaxLengthSentenceWithNegativeLength() {\n        int fixedLength = -5;\n        String result = lorem.maxLengthSentence(fixedLength);\n        assertEquals(\"\", result);\n    }\n\n    @Test\n    void testMaxLengthSentenceWithLengthOne() {\n        int fixedLength = 1;\n        String result = lorem.maxLengthSentence(fixedLength);\n        assertEquals(fixedLength, result.length());\n    }\n}\n"}]