[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.providers.base.Compass.CompassPoint;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.params.ParameterizedTest;\nimport org.junit.jupiter.params.provider.EnumSource;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class Compass_azimuthTest {\n\n    private Compass compass;\n\n    @BeforeEach\n    public void setUp() {\n        BaseProviders faker = new BaseProviders() {\n            @Override\n            public String resolve(String key) {\n                return \"resolvedValue\"; // Placeholder implementation for testing purposes\n            }\n\n            @Override\n            public void addUrl(java.util.Locale locale, java.net.URL url) {\n                // Placeholder implementation for testing purposes\n            }\n        };\n        compass = new Compass(faker);\n    }\n\n    @Test\n    void azimuthWithoutCompassPoint() {\n        assertThat(compass.azimuth()).isNotEmpty();\n    }\n\n    @ParameterizedTest\n    @EnumSource(CompassPoint.class)\n    void azimuthWithCompassPoint(CompassPoint compassPoint) {\n        compass.compassPoint(compassPoint);\n        assertThat(compass.azimuth()).isNotEmpty();\n    }\n}\n"}]