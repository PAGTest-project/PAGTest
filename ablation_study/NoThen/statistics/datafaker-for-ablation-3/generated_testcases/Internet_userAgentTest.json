[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.mockito.Mockito.*;\n\npublic class Internet_userAgentTest {\n\n    @Test\n    public void testUserAgentWithNullAgent() {\n        // Given\n        BaseProviders faker = mock(BaseProviders.class);\n        Internet internet = new Internet(faker);\n        UserAgent mockUserAgent = mock(UserAgent.class);\n        when(mockUserAgent.toString()).thenReturn(\"chrome\");\n        when(UserAgent.any(faker)).thenReturn(mockUserAgent);\n        when(internet.resolve(\"internet.user_agent.chrome\")).thenReturn(\"MockUserAgentString\");\n\n        // When\n        String result = internet.userAgent(null);\n\n        // Then\n        assertNotNull(result);\n    }\n\n    @Test\n    public void testUserAgentWithNonNullAgent() {\n        // Given\n        BaseProviders faker = mock(BaseProviders.class);\n        Internet internet = new Internet(faker);\n        UserAgent mockUserAgent = mock(UserAgent.class);\n        when(mockUserAgent.toString()).thenReturn(\"firefox\");\n        when(internet.resolve(\"internet.user_agent.firefox\")).thenReturn(\"MockUserAgentString\");\n\n        // When\n        String result = internet.userAgent(mockUserAgent);\n\n        // Then\n        assertNotNull(result);\n    }\n}\n"}]