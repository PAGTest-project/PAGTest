[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertNotEquals;\n\npublic class SwedenIdNumber_generateInvalidTest {\n\n    private SwedenIdNumber swedenIdNumber;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setUp() {\n        swedenIdNumber = new SwedenIdNumber();\n        faker = Mockito.mock(BaseProviders.class);\n    }\n\n    @Test\n    public void testGenerateInvalid_InvalidSsn() {\n        String invalidSsn = swedenIdNumber.generateInvalid(faker);\n        assertFalse(SwedenIdNumber.isValidSwedishSsn(invalidSsn));\n    }\n\n    @Test\n    public void testGenerateInvalid_DifferentInvalidSsns() {\n        String invalidSsn1 = swedenIdNumber.generateInvalid(faker);\n        String invalidSsn2 = swedenIdNumber.generateInvalid(faker);\n        assertNotEquals(invalidSsn1, invalidSsn2);\n    }\n}\n"}]