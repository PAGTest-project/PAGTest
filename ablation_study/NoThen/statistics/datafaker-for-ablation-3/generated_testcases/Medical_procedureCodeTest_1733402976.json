[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.Locale;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class Medical_procedureCodeTest {\n    private Medical medical;\n\n    @BeforeEach\n    public void setUp() {\n        BaseFaker faker = new BaseFaker(Locale.US);\n        medical = new Medical(faker);\n    }\n\n    @Test\n    void testProcedureCodeUS() {\n        // will use icd-10-pcs - https://www.johndcook.com/blog/2019/05/05/regex_icd_codes/\n        for (int i = 0; i < 100; i++) { // Loading the US data is slow.\n            String actual = medical.procedureCode();\n            assertThat(actual).matches(\"[0-9A-HJ-NP-RT-Z][0-9A-HJ-NP-RT-Z][0-9A-HJ-NP-RT-Z][0-9A-HJ-NP-RT-Z][0-9A-HJ-NP-RT-Z][0-9A-HJ-NP-RT-Z][0-9A-HJ-NP-RT-Z]\");\n        }\n    }\n}\n"}]