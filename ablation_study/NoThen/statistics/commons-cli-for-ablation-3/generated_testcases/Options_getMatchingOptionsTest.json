[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport java.util.List;\n\npublic class Options_getMatchingOptionsTest {\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n    }\n\n    @Test\n    public void testGetMatchingOptionsExactMatch() {\n        options.addOption(\"a\", \"apple\", false, \"apple option\");\n        List<String> matchingOptions = options.getMatchingOptions(\"apple\");\n        assertEquals(1, matchingOptions.size());\n        assertTrue(matchingOptions.contains(\"apple\"));\n    }\n\n    @Test\n    public void testGetMatchingOptionsPartialMatch() {\n        options.addOption(\"b\", \"banana\", false, \"banana option\");\n        options.addOption(\"c\", \"cherry\", false, \"cherry option\");\n        List<String> matchingOptions = options.getMatchingOptions(\"ban\");\n        assertEquals(1, matchingOptions.size());\n        assertTrue(matchingOptions.contains(\"banana\"));\n    }\n\n    @Test\n    public void testGetMatchingOptionsNoMatch() {\n        options.addOption(\"d\", \"date\", false, \"date option\");\n        List<String> matchingOptions = options.getMatchingOptions(\"fig\");\n        assertTrue(matchingOptions.isEmpty());\n    }\n\n    @Test\n    public void testGetMatchingOptionsMultipleMatches() {\n        options.addOption(\"e\", \"elephant\", false, \"elephant option\");\n        options.addOption(\"f\", \"elephantine\", false, \"elephantine option\");\n        List<String> matchingOptions = options.getMatchingOptions(\"ele\");\n        assertEquals(2, matchingOptions.size());\n        assertTrue(matchingOptions.contains(\"elephant\"));\n        assertTrue(matchingOptions.contains(\"elephantine\"));\n    }\n}\n"}]