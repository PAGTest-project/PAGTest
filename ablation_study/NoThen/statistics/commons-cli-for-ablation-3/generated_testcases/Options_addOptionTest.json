[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Options_addOptionTest {\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n    }\n\n    @Test\n    public void testAddOptionWithShortAndLongOpt() {\n        Option opt = new Option(\"a\", \"apple\", false, \"description\");\n        options.addOption(opt);\n\n        assertTrue(options.hasOption(\"a\"));\n        assertTrue(options.hasLongOption(\"apple\"));\n        assertEquals(opt, options.getOption(\"a\"));\n        assertEquals(opt, options.getOption(\"apple\"));\n    }\n\n    @Test\n    public void testAddOptionWithRequired() {\n        Option opt = new Option(\"b\", \"banana\", true, \"description\");\n        opt.setRequired(true);\n        options.addOption(opt);\n\n        assertTrue(options.hasOption(\"b\"));\n        assertTrue(options.hasLongOption(\"banana\"));\n        assertTrue(options.getRequiredOptions().contains(\"b\"));\n    }\n\n    @Test\n    public void testAddOptionWithoutLongOpt() {\n        Option opt = new Option(\"c\", false, \"description\");\n        options.addOption(opt);\n\n        assertTrue(options.hasOption(\"c\"));\n        assertFalse(options.hasLongOption(\"c\"));\n        assertEquals(opt, options.getOption(\"c\"));\n    }\n\n    @Test\n    public void testAddOptionWithDuplicateKey() {\n        Option opt1 = new Option(\"d\", \"date\", false, \"description1\");\n        Option opt2 = new Option(\"d\", \"date\", false, \"description2\");\n        options.addOption(opt1);\n        options.addOption(opt2);\n\n        assertTrue(options.hasOption(\"d\"));\n        assertTrue(options.hasLongOption(\"date\"));\n        assertEquals(opt2, options.getOption(\"d\"));\n        assertEquals(opt2, options.getOption(\"date\"));\n    }\n\n    @Test\n    public void testAddOptionWithRequiredAndDuplicateKey() {\n        Option opt1 = new Option(\"e\", \"egg\", false, \"description1\");\n        opt1.setRequired(true);\n        Option opt2 = new Option(\"e\", \"egg\", false, \"description2\");\n        opt2.setRequired(true);\n        options.addOption(opt1);\n        options.addOption(opt2);\n\n        assertTrue(options.hasOption(\"e\"));\n        assertTrue(options.hasLongOption(\"egg\"));\n        assertTrue(options.getRequiredOptions().contains(\"e\"));\n        assertEquals(opt2, options.getOption(\"e\"));\n        assertEquals(opt2, options.getOption(\"egg\"));\n    }\n}\n"}]