[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class HelpFormatter_printHelpTest {\n\n    private HelpFormatter formatter;\n    private StringWriter stringWriter;\n    private PrintWriter printWriter;\n\n    @BeforeEach\n    public void setUp() {\n        formatter = new HelpFormatter();\n        stringWriter = new StringWriter();\n        printWriter = new PrintWriter(stringWriter);\n    }\n\n    @Test\n    public void testPrintHelpWithHeaderAndFooter() {\n        Options options = new Options();\n        options.addOption(Option.builder(\"f\").longOpt(\"file\").hasArg().argName(\"FILE\").desc(\"The file to be processed\").build());\n        options.addOption(Option.builder(\"v\").longOpt(\"version\").desc(\"Print the version of the application\").build());\n        options.addOption(Option.builder(\"h\").longOpt(\"help\").desc(\"Print this help message\").build());\n\n        String header = \"Do something useful with an input file\\n\\n\";\n        String footer = \"\\nPlease report issues at https://example.com/issues\";\n\n        formatter.printHelp(printWriter, 80, \"myapp\", header, options, 1, 3, footer, true);\n        printWriter.flush();\n\n        String expectedOutput = \"usage: myapp -f <FILE> [-h] [-v]\\n\" +\n                                \"Do something useful with an input file\\n\\n\" +\n                                \" -f,--file <FILE>   The file to be processed\\n\" +\n                                \" -h,--help          Print this help message\\n\" +\n                                \" -v,--version       Print the version of the application\\n\\n\" +\n                                \"Please report issues at https://example.com/issues\\n\";\n\n        assertEquals(expectedOutput, stringWriter.toString());\n    }\n\n    @Test\n    public void testPrintHelpWithoutHeaderAndFooter() {\n        Options options = new Options();\n        options.addOption(Option.builder(\"f\").longOpt(\"file\").hasArg().argName(\"FILE\").desc(\"The file to be processed\").build());\n        options.addOption(Option.builder(\"v\").longOpt(\"version\").desc(\"Print the version of the application\").build());\n        options.addOption(Option.builder(\"h\").longOpt(\"help\").desc(\"Print this help message\").build());\n\n        formatter.printHelp(printWriter, 80, \"myapp\", null, options, 1, 3, null, true);\n        printWriter.flush();\n\n        String expectedOutput = \"usage: myapp -f <FILE> [-h] [-v]\\n\" +\n                                \" -f,--file <FILE>   The file to be processed\\n\" +\n                                \" -h,--help          Print this help message\\n\" +\n                                \" -v,--version       Print the version of the application\\n\";\n\n        assertEquals(expectedOutput, stringWriter.toString());\n    }\n}\n"}]