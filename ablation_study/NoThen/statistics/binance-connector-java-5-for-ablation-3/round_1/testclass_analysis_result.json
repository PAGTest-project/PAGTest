[{"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_sortJSONObjectTest.java", "testclass_name": "JSONParser_sortJSONObjectTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.json.JSONObject;", "import org.junit.Test;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import static org.junit.Assert.assertEquals;"], "name": "JSONParser_sortJSONObjectTest", "description": "Unit test for the JSONParser.sortJSONObject method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testSortJSONObject", "primary_tested": ["JSONParser.sortJSONObject(JSONObject)"], "associated_methods": ["JSONParser.addKeyValue(JSONObject,String,Object)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser", "LinkedHashMap", "Map"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the sorting functionality of the JSONParser.sortJSONObject method by adding key-value pairs to a JSONObject and verifying the sorted order."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_buildStreamUrlTest.java", "testclass_name": "UrlBuilder_buildStreamUrlTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import java.util.ArrayList;"], "name": "UrlBuilder_buildStreamUrlTest", "description": "Unit tests for the buildStreamUrl method in the UrlBuilder class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testBuildStreamUrlWithStreams", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList"]}, "category": "unit", "description": "Tests the buildStreamUrl method with a list of streams."}, {"name": "testBuildStreamUrlWithoutStreams", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder", "ArrayList"]}, "category": "unit", "description": "Tests the buildStreamUrl method without any streams."}, {"name": "testBuildStreamUrlWithNullStreams", "primary_tested": ["UrlBuilder.buildStreamUrl(String,ArrayList<String>)"], "external_dependencies": {"modules": ["UrlBuilder"]}, "category": "unit", "description": "Tests the buildStreamUrl method with null streams."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_addKeyValueTest.java", "testclass_name": "JSONParser_addKeyValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.json.JSONObject;", "import org.junit.Test;", "import static org.junit.Assert.*;"], "name": "JSONParser_addKeyValueTest", "description": "Unit tests for the addKeyValue method in the JSONParser class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testAddKeyValueWithNullParameters", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method when the parameters JSONObject is null."}, {"name": "testAddKeyValueWithExistingParameters", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method when the parameters JSONObject already contains key-value pairs."}, {"name": "testAddKeyValueWithNullValue", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method when the value to be added is null."}, {"name": "testAddKeyValueWithExistingKey", "primary_tested": ["JSONParser.addKeyValue(JSONObject,String,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"]}, "category": "unit", "description": "Tests the addKeyValue method when the key already exists in the parameters JSONObject."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkRequiredParameterTest.java", "testclass_name": "ParameterChecker_checkRequiredParameterTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import java.util.HashMap;", "import java.util.Map;"], "name": "ParameterChecker_checkRequiredParameterTest", "description": "Unit tests for the ParameterChecker.checkRequiredParameter method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCheckRequiredParameterPresent", "primary_tested": ["ParameterChecker.checkRequiredParameter(Map<String,Object>,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the ParameterChecker.checkRequiredParameter method does not throw an exception when the required parameter is present."}, {"name": "testCheckRequiredParameterMissing", "primary_tested": ["ParameterChecker.checkRequiredParameter(Map<String,Object>,String)"], "external_dependencies": {"modules": ["ParameterChecker", "HashMap", "Map", "BinanceConnectorException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the ParameterChecker.checkRequiredParameter method throws a BinanceConnectorException when the required parameter is missing."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkParameterTypeTest.java", "testclass_name": "ParameterChecker_checkParameterTypeTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;"], "name": "ParameterChecker_checkParameterTypeTest", "description": "Unit tests for the ParameterChecker.checkParameterType method, which validates the type of a given parameter.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCheckParameterTypeValidString", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "String"]}, "category": "unit", "description": "Tests the checkParameterType method with a valid String parameter."}, {"name": "testCheckParameterTypeValidInteger", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "Integer"]}, "category": "unit", "description": "Tests the checkParameterType method with a valid Integer parameter."}, {"name": "testCheckParameterTypeInvalidType", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "Integer", "String", "BinanceConnectorException"]}, "category": "unit", "description": "Tests the checkParameterType method with an invalid type (Integer passed as String)."}, {"name": "testCheckParameterTypeEmptyString", "primary_tested": ["ParameterChecker.checkParameterType(Object,Class,String)"], "external_dependencies": {"modules": ["ParameterChecker", "String", "BinanceConnectorException"]}, "category": "unit", "description": "Tests the checkParameterType method with an empty String parameter."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_pullValueTest.java", "testclass_name": "JSONParser_pullValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.json.JSONObject;", "import org.junit.Test;", "import static org.junit.Assert.*;"], "name": "JSONParser_pullValueTest", "description": "Unit tests for the JSONParser.pullValue method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testPullValue_NullParameters", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the behavior of JSONParser.pullValue when the parameters JSONObject is null."}, {"name": "testPullValue_ExistingKey", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "associated_methods": ["JSONObject.put(String,Object)", "JSONObject.has(String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the behavior of JSONParser.pullValue when the key exists in the JSONObject."}, {"name": "testPullValue_NonExistingKey", "primary_tested": ["JSONParser.pullValue(JSONObject,String)"], "associated_methods": ["JSONObject.has(String)"], "external_dependencies": {"modules": ["JSONObject", "JSONParser"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the behavior of JSONParser.pullValue when the key does not exist in the JSONObject."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkOneOfParametersRequiredTest.java", "testclass_name": "ParameterChecker_checkOneOfParametersRequiredTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONObject;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;"], "name": "ParameterChecker_checkOneOfParametersRequiredTest", "description": "Unit tests for the ParameterChecker.checkOneOfParametersRequired method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testCheckOneOfParametersRequired_AllParametersMissing", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "BinanceConnectorException", "ParameterChecker"]}, "category": "unit", "description": "Tests the scenario where all parameters are missing and expects a BinanceConnectorException."}, {"name": "testCheckOneOfParametersRequired_OneParameterPresent", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"]}, "category": "unit", "description": "Tests the scenario where one parameter is present and expects no exception."}, {"name": "testCheckOneOfParametersRequired_AllParametersPresent", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"]}, "category": "unit", "description": "Tests the scenario where all parameters are present and expects no exception."}, {"name": "testCheckOneOfParametersRequired_NullParams", "primary_tested": ["ParameterChecker.checkOneOfParametersRequired(JSONObject,String[])"], "external_dependencies": {"modules": ["JSONObject", "BinanceConnectorException", "ParameterChecker"]}, "category": "unit", "description": "Tests the scenario where the params object is null and expects a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_processIdTest.java", "testclass_name": "ParameterChecker_processIdTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import java.util.UUID;"], "name": "ParameterChecker_processIdTest", "description": "Unit tests for the ParameterChecker.processId method with various input types.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testProcessIdWithValidInteger", "primary_tested": ["ParameterChecker.processId(Integer,String)"], "external_dependencies": {"modules": ["ParameterChecker"]}, "category": "unit", "description": "Tests the processId method with a valid Integer input."}, {"name": "testProcessIdWithValidString", "primary_tested": ["ParameterChecker.processId(String,String)"], "external_dependencies": {"modules": ["ParameterChecker"]}, "category": "unit", "description": "Tests the processId method with a valid String input."}, {"name": "testProcessIdWithNull", "primary_tested": ["ParameterChecker.processId(Object,String)"], "associated_methods": ["UUID.fromString(String)"], "external_dependencies": {"modules": ["ParameterChecker", "UUID"]}, "category": "unit", "description": "Tests the processId method with a null input and checks if a valid UUID is generated."}, {"name": "testProcessIdWithEmptyString", "primary_tested": ["ParameterChecker.processId(String,String)"], "associated_methods": ["UUID.fromString(String)"], "external_dependencies": {"modules": ["ParameterChecker", "UUID"]}, "category": "unit", "description": "Tests the processId method with an empty String input and checks if a valid UUID is generated."}, {"name": "testProcessIdWithInvalidType", "primary_tested": ["ParameterChecker.processId(Object,String)"], "external_dependencies": {"modules": ["ParameterChecker", "BinanceConnectorException"]}, "category": "unit", "description": "Tests the processId method with an invalid type (Double) input and expects a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresInternalTransferTest.java", "testclass_name": "SubAccount_futuresInternalTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_futuresInternalTransferTest", "description": "Tests for the internal futures transfer functionality of the SubAccount service in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesInternalTransferSuccess", "primary_tested": ["SubAccount.futuresInternalTransfer(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful internal futures transfer between sub-accounts."}, {"name": "testFuturesInternalTransferMissingParameter", "primary_tested": ["SubAccount.futuresInternalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing parameters in the internal futures transfer request, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/ParameterChecker_checkOnlyOneOfParametersTest.java", "testclass_name": "ParameterChecker_checkOnlyOneOfParametersTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONObject;", "import org.junit.Test;", "import com.binance.connector.client.exceptions.BinanceConnectorException;"], "name": "ParameterChecker_checkOnlyOneOfParametersTest", "description": "Unit tests for the ParameterChecker.checkOnlyOneOfParameters method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testCheckOnlyOneOfParameters_OnlyOneParameterPresent", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method when only one parameter is present."}, {"name": "testCheckOnlyOneOfParameters_MoreThanOneParameterPresent", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker", "BinanceConnectorException"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method when more than one parameter is present, expecting a BinanceConnectorException."}, {"name": "testCheckOnlyOneOfParameters_NoParametersPresent", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method when no parameters are present."}, {"name": "testCheckOnlyOneOfParameters_NullParams", "primary_tested": ["ParameterChecker.checkOnlyOneOfParameters(JSONObject,String,String,String)"], "external_dependencies": {"modules": ["JSONObject", "ParameterChecker"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the checkOnlyOneOfParameters method when the params object is null."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_joinStreamUrlsTest.java", "testclass_name": "UrlBuilder_joinStreamUrlsTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import java.util.ArrayList;"], "name": "UrlBuilder_joinStreamUrlsTest", "description": "Unit tests for the joinStreamUrls method in the UrlBuilder class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testJoinStreamUrlsWithEmptyStreams", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["StringBuilder", "ArrayList", "UrlBuilder"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinStreamUrls method with an empty list of streams."}, {"name": "testJoinStreamUrlsWithSingleStream", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["StringBuilder", "ArrayList", "UrlBuilder"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinStreamUrls method with a single stream in the list."}, {"name": "testJoinStreamUrlsWithMultipleStreams", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["StringBuilder", "ArrayList", "UrlBuilder"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinStreamUrls method with multiple streams in the list."}, {"name": "testJoinStreamUrlsWithNullStreams", "primary_tested": ["UrlBuilder.joinStreamUrls(StringBuilder,ArrayList<String>)"], "external_dependencies": {"modules": ["StringBuilder", "UrlBuilder"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinStreamUrls method with a null list of streams."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/JSONParser_getJSONIntValueTest.java", "testclass_name": "JSONParser_getJSONIntValueTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import org.json.JSONException;", "import org.junit.Test;"], "name": "JSONParser_getJSONIntValueTest", "description": "Unit tests for the JSONParser.getJSONIntValue method.", "class_members": {"variables": [{"name": "mockJson", "type": "String"}]}, "fixtures": [], "test_cases": [{"name": "testGetJSONIntValueSuccess", "primary_tested": ["JSONParser.getJSONIntValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "mockJson", "type": "variable"}]}, "category": "unit", "description": "Tests the successful retrieval of an integer value from a JSON string."}, {"name": "testGetJSONIntValueMissingKey", "primary_tested": ["JSONParser.getJSONIntValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "mockJson", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior when attempting to retrieve an integer value using a missing key, expecting a JSONException."}, {"name": "testGetJSONIntValueInvalidJson", "primary_tested": ["JSONParser.getJSONIntValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"]}, "category": "unit", "description": "Tests the behavior when attempting to retrieve an integer value from an invalid JSON string, expecting a JSONException."}, {"name": "testGetJSONIntValueNonIntValue", "primary_tested": ["JSONParser.getJSONIntValue(String,String)"], "external_dependencies": {"modules": ["JSONParser"], "class_members": [{"name": "mockJson", "type": "variable"}]}, "category": "unit", "description": "Tests the behavior when attempting to retrieve an integer value from a JSON string where the value is not an integer, expecting a JSONException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_redeemIndexPlanTest.java", "testclass_name": "AutoInvest_redeemIndexPlanTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "AutoInvest_redeemIndexPlanTest", "description": "Unit tests for redeeming index plans in the AutoInvest feature of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testRedeemIndexPlanWithoutParameters", "primary_tested": ["AutoInvest.redeemIndexPlan(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of redeeming an index plan without providing necessary parameters, expecting a BinanceConnectorException."}, {"name": "testRedeemIndexPlanWithValidParameters", "primary_tested": ["AutoInvest.redeemIndexPlan(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful redemption of an index plan with valid parameters."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanAdjustLTVTest.java", "testclass_name": "CryptoLoans_loanAdjustLTVTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_loanAdjustLTVTest", "description": "Unit tests for the loanAdjustLTV method in the CryptoLoans service of the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testLoanAdjustLTVWithoutParameters", "primary_tested": ["CryptoLoans.loanAdjustLTV(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "HttpMethod", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loanAdjustLTV method without parameters, expecting a BinanceConnectorException."}, {"name": "testLoanAdjustLTVWithParameters", "primary_tested": ["CryptoLoans.loanAdjustLTV(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "HttpMethod", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loanAdjustLTV method with parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Mining_hashrateResaleRequestTest.java", "testclass_name": "Mining_hashrateResaleRequestTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Mining_hashrateResaleRequestTest", "description": "Tests for the hashrate resale request functionality in the Mining class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "mining", "type": "Mining"}]}, "fixtures": ["init"], "test_cases": [{"name": "testHashrateResaleRequestSuccess", "primary_tested": ["Mining.hashrateResaleRequest(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["MockWebServer", "Mining", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "HttpMethod", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "mining", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful execution of the hashrate resale request."}, {"name": "testHashrateResaleRequestMissingParameter", "primary_tested": ["Mining.hashrateResaleRequest(Map<String,Object>)"], "external_dependencies": {"modules": ["Mining", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "mining", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing parameters in the hashrate resale request, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_updateIpRestrictionTest.java", "testclass_name": "SubAccount_updateIpRestrictionTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_updateIpRestrictionTest", "description": "Tests for updating IP restriction for sub-accounts in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testUpdateIpRestrictionSuccess", "primary_tested": ["SubAccount.updateIpRestriction(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful update of IP restriction for a sub-account."}, {"name": "testUpdateIpRestrictionMissingParameter", "primary_tested": ["SubAccount.updateIpRestriction(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockData"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing parameters when updating IP restriction for a sub-account, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_joinQueryParametersTest.java", "testclass_name": "UrlBuilder_joinQueryParametersTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import java.util.LinkedHashMap;", "import java.util.Map;"], "name": "UrlBuilder_joinQueryParametersTest", "description": "Unit tests for the joinQueryParameters method in the UrlBuilder class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testJoinQueryParametersWithNullParams", "primary_tested": ["UrlBuilder.joinQueryParameters(StringBuilder,Map)"], "external_dependencies": {"modules": ["UrlBuilder", "StringBuilder"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinQueryParameters method with null parameters."}, {"name": "testJoinQueryParametersWithEmptyParams", "primary_tested": ["UrlBuilder.joinQueryParameters(StringBuilder,Map)"], "external_dependencies": {"modules": ["UrlBuilder", "StringBuilder", "LinkedHashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinQueryParameters method with empty parameters."}, {"name": "testJoinQueryParametersWithStringParams", "primary_tested": ["UrlBuilder.joinQueryParameters(StringBuilder,Map)"], "external_dependencies": {"modules": ["UrlBuilder", "StringBuilder", "LinkedHashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinQueryParameters method with string parameters."}, {"name": "testJoinQueryParametersWithDoubleParams", "primary_tested": ["UrlBuilder.joinQueryParameters(StringBuilder,Map)"], "external_dependencies": {"modules": ["UrlBuilder", "StringBuilder", "LinkedHashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinQueryParameters method with double parameters."}, {"name": "testJoinQueryParametersWithMixedParams", "primary_tested": ["UrlBuilder.joinQueryParameters(StringBuilder,Map)"], "external_dependencies": {"modules": ["UrlBuilder", "StringBuilder", "LinkedHashMap", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the joinQueryParameters method with mixed parameters."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_universalTransferTest.java", "testclass_name": "Wallet_universalTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_universalTransferTest", "description": "Tests for the universal transfer functionality in the Wallet service of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testUniversalTransfer", "primary_tested": ["Wallet.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.MOCK_RESPONSE", "MockData.PREFIX", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the universal transfer functionality of the Wallet service."}, {"name": "testUniversalTransferMissingRequiredParameter", "primary_tested": ["Wallet.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.MOCK_RESPONSE", "MockData.PREFIX", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing required parameters in the universal transfer functionality of the Wallet service, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubDepositTest.java", "testclass_name": "SubAccount_managedSubDepositTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_managedSubDepositTest", "description": "Tests for the managed sub-account deposit functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "amount", "type": "double"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testManagedSubDeposit", "primary_tested": ["SubAccount.managedSubDeposit(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "amount", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account deposit functionality with all required parameters."}, {"name": "testManagedSubDepositWithoutRequiredParameters", "primary_tested": ["SubAccount.managedSubDeposit(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account deposit functionality without the required 'amount' parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_loanBorrowTest.java", "testclass_name": "CryptoLoans_loanBorrowTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_loanBorrowTest", "description": "Unit tests for the loan borrow functionality in the CryptoLoans service.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testLoanBorrow", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality of the CryptoLoans service with all required parameters."}, {"name": "testLoanBorrowMissingParameters", "primary_tested": ["CryptoLoans.loanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "com.binance.connector.client.exceptions.BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the loan borrow functionality of the CryptoLoans service when a required parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubAccountSnapshotTest.java", "testclass_name": "SubAccount_managedSubAccountSnapshotTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_managedSubAccountSnapshotTest", "description": "Tests for the managed sub-account snapshot functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testManagedSubAccountSnapshotWithoutParameters", "primary_tested": ["SubAccount.managedSubAccountSnapshot(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account snapshot functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testManagedSubAccountSnapshotWithValidParameters", "primary_tested": ["SubAccount.managedSubAccountSnapshot(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account snapshot functionality with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_flexibleSubscriptionPreviewTest.java", "testclass_name": "SimpleEarn_flexibleSubscriptionPreviewTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_flexibleSubscriptionPreviewTest", "description": "Tests for the flexible subscription preview functionality in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testFlexibleSubscriptionPreview", "primary_tested": ["SimpleEarn.flexibleSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible subscription preview functionality with valid parameters."}, {"name": "testFlexibleSubscriptionPreviewWithoutProductId", "primary_tested": ["SimpleEarn.flexibleSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible subscription preview functionality without the required productId parameter, expecting a BinanceConnectorException."}, {"name": "testFlexibleSubscriptionPreviewWithoutAmount", "primary_tested": ["SimpleEarn.flexibleSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible subscription preview functionality without the required amount parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Trade_cancelReplaceTest.java", "testclass_name": "Trade_cancelReplaceTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.RequestHandler;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Trade_cancelReplaceTest", "description": "Unit tests for the cancelReplace functionality in the Trade class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "trade", "type": "Trade"}]}, "fixtures": ["init"], "test_cases": [{"name": "testCancelReplaceWithoutParameters", "primary_tested": ["Trade.cancelReplace(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "BinanceConnectorException", "MockWebServerDispatcher", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "trade", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cancelReplace method without providing any parameters, expecting a BinanceConnectorException."}, {"name": "testCancelReplaceWithValidParameters", "primary_tested": ["Trade.cancelReplace(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "trade", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cancelReplace method with valid parameters, expecting a successful response."}, {"name": "testCancelReplaceWithMissingMandatoryParameter", "primary_tested": ["Trade.cancelReplace(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "BinanceConnectorException", "MockWebServerDispatcher", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "trade", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cancelReplace method with a missing mandatory parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_subAccountToSubAccountTest.java", "testclass_name": "SubAccount_subAccountToSubAccountTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_subAccountToSubAccountTest", "description": "Tests for the sub-account to sub-account transfer functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testSubAccountToSubAccountSuccess", "primary_tested": ["SubAccount.subAccountToSubAccount(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful transfer of assets from one sub-account to another."}, {"name": "testSubAccountToSubAccountMissingParameter", "primary_tested": ["SubAccount.subAccountToSubAccount(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing parameters in the sub-account to sub-account transfer."}, {"name": "testSubAccountToSubAccountInvalidEmail", "primary_tested": ["SubAccount.subAccountToSubAccount(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of an invalid email address in the sub-account to sub-account transfer."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresPositionRiskV2Test.java", "testclass_name": "SubAccount_futuresPositionRiskV2Test", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_futuresPositionRiskV2Test", "description": "Tests for the futures position risk V2 functionality of the SubAccount API.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesPositionRiskV2WithoutParameters", "primary_tested": ["SubAccount.futuresPositionRiskV2(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the futures position risk V2 functionality without parameters, expecting a BinanceConnectorException."}, {"name": "testFuturesPositionRiskV2WithValidParameters", "primary_tested": ["SubAccount.futuresPositionRiskV2(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "UrlBuilder"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the futures position risk V2 functionality with valid parameters, expecting a successful response."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Convert_quoteInquiryTest.java", "testclass_name": "Convert_quoteInquiryTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Convert_quoteInquiryTest", "description": "Tests for the quote inquiry functionality in the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testQuoteInquirySuccess", "primary_tested": ["Convert.quoteInquiry(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful quote inquiry functionality of the Convert API."}, {"name": "testQuoteInquiryMissingParameter", "primary_tested": ["Convert.quoteInquiry(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the Convert API when a required parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_universalTransferTest.java", "testclass_name": "SubAccount_universalTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_universalTransferTest", "description": "Tests for the universal transfer functionality of the SubAccount service in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testUniversalTransferSuccess", "primary_tested": ["SubAccount.universalTransfer(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "UrlBuilder", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful universal transfer functionality of the SubAccount service."}, {"name": "testUniversalTransferMissingAmount", "primary_tested": ["SubAccount.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing amount parameter in the universal transfer functionality of the SubAccount service."}, {"name": "testUniversalTransferInvalidAsset", "primary_tested": ["SubAccount.universalTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of invalid asset type in the universal transfer functionality of the SubAccount service."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresAccountV2Test.java", "testclass_name": "SubAccount_futuresAccountV2Test", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_futuresAccountV2Test", "description": "Tests for the futures account V2 functionality of the SubAccount service in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesAccountV2", "primary_tested": ["SubAccount.futuresAccountV2(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the futures account V2 functionality with valid parameters."}, {"name": "testFuturesAccountV2WithoutParameters", "primary_tested": ["SubAccount.futuresAccountV2(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the futures account V2 functionality without providing parameters, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_depositAddressTest.java", "testclass_name": "SubAccount_depositAddressTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_depositAddressTest", "description": "Tests for the deposit address functionality of the SubAccount service in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testDepositAddress", "primary_tested": ["SubAccount.depositAddress(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deposit address functionality with valid parameters."}, {"name": "testDepositAddressMissingEmail", "primary_tested": ["SubAccount.depositAddress(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deposit address functionality when the email parameter is missing, expecting a BinanceConnectorException."}, {"name": "testDepositAddressMissingCoin", "primary_tested": ["SubAccount.depositAddress(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the deposit address functionality when the coin parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Margin_nextHourlyInterestRateTest.java", "testclass_name": "Margin_nextHourlyInterestRateTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.RequestHandler;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Margin_nextHourlyInterestRateTest", "description": "Unit tests for the next hourly interest rate functionality in the Margin class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "margin", "type": "Margin"}]}, "fixtures": ["init"], "test_cases": [{"name": "testNextHourlyInterestRate", "primary_tested": ["Margin.nextHourlyInterestRate(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "Margin", "HmacSignatureGenerator", "LinkedHashMap", "Dispatcher", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "margin", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the next hourly interest rate functionality with valid parameters."}, {"name": "testNextHourlyInterestRateMissingAssets", "primary_tested": ["Margin.nextHourlyInterestRate(Map<String,Object>)"], "external_dependencies": {"modules": ["Margin", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "margin", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the next hourly interest rate functionality when the 'assets' parameter is missing, expecting a BinanceConnectorException."}, {"name": "testNextHourlyInterestRateMissingIsIsolated", "primary_tested": ["Margin.nextHourlyInterestRate(Map<String,Object>)"], "external_dependencies": {"modules": ["Margin", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "margin", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the next hourly interest rate functionality when the 'isIsolated' parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_enableLeverageTokenTest.java", "testclass_name": "SubAccount_enableLeverageTokenTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_enableLeverageTokenTest", "description": "Tests for enabling leverage token for sub-accounts in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": [], "nested_classes": []}, "fixtures": ["init"], "test_cases": [{"name": "testEnableLeverageToken", "primary_tested": ["SubAccount.enableLeverageToken(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of enabling leverage token for a sub-account."}, {"name": "testEnableLeverageTokenMissingEmail", "primary_tested": ["SubAccount.enableLeverageToken(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception handling when the email parameter is missing while enabling leverage token for a sub-account."}, {"name": "testEnableLeverageTokenMissingEnableBlvt", "primary_tested": ["SubAccount.enableLeverageToken(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception handling when the enableBlvt parameter is missing while enabling leverage token for a sub-account."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/VIPLoans_repayTest.java", "testclass_name": "VIPLoans_repayTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "VIPLoans_repayTest", "description": "Unit tests for the VIPLoans repay functionality.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "vipLoans", "type": "VIPLoans"}]}, "fixtures": ["init"], "test_cases": [{"name": "testRepaySuccess", "primary_tested": ["VIPLoans.repay(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["MockWebServer", "VIPLoans", "LinkedHashMap", "Dispatcher", "MockWebServerDispatcher", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "vipLoans", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.API_KEY", "MockData.SECRET_KEY", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful repayment functionality of the VIPLoans."}, {"name": "testRepayMissingOrderId", "primary_tested": ["VIPLoans.repay(Map<String,Object>)"], "external_dependencies": {"modules": ["VIPLoans", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "vipLoans", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the VIPLoans repay method when the orderId parameter is missing."}, {"name": "testRepayMissingAmount", "primary_tested": ["VIPLoans.repay(Map<String,Object>)"], "external_dependencies": {"modules": ["VIPLoans", "LinkedHashMap", "BinanceConnectorException"], "class_members": [{"name": "vipLoans", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the VIPLoans repay method when the amount parameter is missing."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_subscribeFlexibleProductTest.java", "testclass_name": "SimpleEarn_subscribeFlexibleProductTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_subscribeFlexibleProductTest", "description": "Tests for subscribing to a flexible product in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSubscribeFlexibleProductSuccess", "primary_tested": ["SimpleEarn.subscribeFlexibleProduct(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Dispatcher"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful subscription to a flexible product in the SimpleEarn module."}, {"name": "testSubscribeFlexibleProductMissingProductId", "primary_tested": ["SimpleEarn.subscribeFlexibleProduct(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception thrown when the productId is missing during subscription to a flexible product in the SimpleEarn module."}, {"name": "testSubscribeFlexibleProductMissingAmount", "primary_tested": ["SimpleEarn.subscribeFlexibleProduct(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception thrown when the amount is missing during subscription to a flexible product in the SimpleEarn module."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_futuresTransferTest.java", "testclass_name": "SubAccount_futuresTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_futuresTransferTest", "description": "Tests for the futures transfer functionality of the SubAccount in the Binance Connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesTransferSuccess", "primary_tested": ["SubAccount.futuresTransfer(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful futures transfer for a sub-account."}, {"name": "testFuturesTransferMissingRequiredParameter", "primary_tested": ["SubAccount.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockData"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing required parameters in the futures transfer for a sub-account."}, {"name": "testFuturesTransferInvalidType", "primary_tested": ["SubAccount.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockData"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of an invalid type parameter in the futures transfer for a sub-account."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_getFuturesInternalTransferTest.java", "testclass_name": "SubAccount_getFuturesInternalTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_getFuturesInternalTransferTest", "description": "Tests for the internal transfer functionality of futures in the SubAccount service.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "futuresType", "type": "final int"}, {"name": "amount", "type": "final double"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testGetFuturesInternalTransfer", "primary_tested": ["SubAccount.getFuturesInternalTransfer(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the internal transfer functionality of futures in the SubAccount service with all required parameters."}, {"name": "testGetFuturesInternalTransferMissingEmail", "primary_tested": ["SubAccount.getFuturesInternalTransfer(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the internal transfer functionality of futures in the SubAccount service when the email parameter is missing, expecting a BinanceConnectorException."}, {"name": "testGetFuturesInternalTransferMissingFuturesType", "primary_tested": ["SubAccount.getFuturesInternalTransfer(Map<String,Object>)"], "associated_methods": [], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the internal transfer functionality of futures in the SubAccount service when the futuresType parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_setFlexibleAutoSubscribeTest.java", "testclass_name": "SimpleEarn_setFlexibleAutoSubscribeTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_setFlexibleAutoSubscribeTest", "description": "Tests for setting flexible auto-subscribe functionality in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSetFlexibleAutoSubscribe", "primary_tested": ["SimpleEarn.setFlexibleAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful setting of flexible auto-subscribe with all required parameters."}, {"name": "testSetFlexibleAutoSubscribeMissingProductId", "primary_tested": ["SimpleEarn.setFlexibleAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap", "Map"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception thrown when the 'productId' parameter is missing."}, {"name": "testSetFlexibleAutoSubscribeMissingAutoSubscribe", "primary_tested": ["SimpleEarn.setFlexibleAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "LinkedHashMap", "Map"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exception thrown when the 'autoSubscribe' parameter is missing."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_lockedSubscriptionPreviewTest.java", "testclass_name": "SimpleEarn_lockedSubscriptionPreviewTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_lockedSubscriptionPreviewTest", "description": "Tests for the locked subscription preview functionality in the SimpleEarn module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "amount", "type": "static final double"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testLockedSubscriptionPreview", "primary_tested": ["SimpleEarn.lockedSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "amount", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the locked subscription preview functionality with valid parameters."}, {"name": "testLockedSubscriptionPreviewWithoutProjectId", "primary_tested": ["SimpleEarn.lockedSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "amount", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the locked subscription preview functionality without the required projectId parameter, expecting a BinanceConnectorException."}, {"name": "testLockedSubscriptionPreviewWithoutAmount", "primary_tested": ["SimpleEarn.lockedSubscriptionPreview(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the locked subscription preview functionality without the required amount parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_exchangeInfoTest.java", "testclass_name": "Market_exchangeInfoTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ProxyAuth;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_exchangeInfoTest", "description": "Unit tests for the exchangeInfo method in the Market class, focusing on parameter validation and valid parameter scenarios.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "market", "type": "Market"}]}, "fixtures": ["init"], "test_cases": [{"name": "testExchangeInfoSymbolAndSymbolsTogether", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException", "Market"], "class_members": [{"name": "market", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests that an exception is thrown when both 'symbol' and 'symbols' parameters are provided together."}, {"name": "testExchangeInfoSymbolAndPermissionsTogether", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException", "Market"], "class_members": [{"name": "market", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests that an exception is thrown when both 'symbol' and 'permissions' parameters are provided together."}, {"name": "testExchangeInfoSymbolsAndPermissionsTogether", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["BinanceConnectorException", "Market"], "class_members": [{"name": "market", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests that an exception is thrown when both 'symbols' and 'permissions' parameters are provided together."}, {"name": "testExchangeInfoValidParameters", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["Market", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "market", "type": "variable"}, {"name": "mockWebServer", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo method with valid parameters, ensuring the correct response is returned."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_managedSubWithdrawTest.java", "testclass_name": "SubAccount_managedSubWithdrawTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_managedSubWithdrawTest", "description": "Tests for the managed sub-account withdrawal functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testManagedSubWithdrawWithoutParameters", "primary_tested": ["SubAccount.managedSubWithdraw(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account withdrawal functionality without providing any parameters, expecting a BinanceConnectorException."}, {"name": "testManagedSubWithdrawWithValidParameters", "primary_tested": ["SubAccount.managedSubWithdraw(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account withdrawal functionality with valid parameters, expecting a successful response."}, {"name": "testManagedSubWithdrawWithMissingRequiredParameter", "primary_tested": ["SubAccount.managedSubWithdraw(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "BinanceConnectorException", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the managed sub-account withdrawal functionality with a missing required parameter, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/UrlBuilder_buildFullUrlTest.java", "testclass_name": "UrlBuilder_buildFullUrlTest", "dependencies": ["package com.binance.connector.client.utils;", "import org.junit.Test;", "import static org.junit.Assert.*;", "import java.util.LinkedHashMap;", "import java.util.Map;"], "name": "UrlBuilder_buildFullUrlTest", "description": "Unit tests for the buildFullUrl method in the UrlBuilder class.", "class_members": {"variables": [{"name": "baseUrl", "type": "String"}, {"name": "urlPath", "type": "String"}, {"name": "parameters", "type": "Map<String, Object>"}, {"name": "expected", "type": "String"}, {"name": "actual", "type": "String"}]}, "test_cases": [{"name": "testBuildFullUrlWithoutParameters", "primary_tested": ["UrlBuilder.buildFullUrl(String,String,Map<String,Object>)"], "external_dependencies": {"modules": ["UrlBuilder"], "class_members": [{"name": "baseUrl", "type": "variable"}, {"name": "urlPath", "type": "variable"}, {"name": "parameters", "type": "variable"}]}, "category": "unit", "description": "Tests the buildFullUrl method without parameters."}, {"name": "testBuildFullUrlWithParameters", "primary_tested": ["UrlBuilder.buildFullUrl(String,String,Map<String,Object>)"], "external_dependencies": {"modules": ["UrlBuilder"], "class_members": [{"name": "baseUrl", "type": "variable"}, {"name": "urlPath", "type": "variable"}, {"name": "parameters", "type": "variable"}]}, "category": "unit", "description": "Tests the buildFullUrl method with parameters."}, {"name": "testBuildFullUrlWithEmptyParameters", "primary_tested": ["UrlBuilder.buildFullUrl(String,String,Map<String,Object>)"], "external_dependencies": {"modules": ["UrlBuilder"], "class_members": [{"name": "baseUrl", "type": "variable"}, {"name": "urlPath", "type": "variable"}, {"name": "parameters", "type": "variable"}]}, "category": "unit", "description": "Tests the buildFullUrl method with empty parameters."}, {"name": "testBuildFullUrlWithEncodedParameters", "primary_tested": ["UrlBuilder.buildFullUrl(String,String,Map<String,Object>)"], "external_dependencies": {"modules": ["UrlBuilder"], "class_members": [{"name": "baseUrl", "type": "variable"}, {"name": "urlPath", "type": "variable"}, {"name": "parameters", "type": "variable"}]}, "category": "unit", "description": "Tests the buildFullUrl method with encoded parameters."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Market_klinesTest.java", "testclass_name": "Market_klinesTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Market_klinesTest", "description": "Unit tests for the klines functionality of the SpotClientImpl class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testKlinesWithoutSymbol", "primary_tested": ["Market.klines(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "Map", "LinkedHashMap"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the klines functionality without a symbol parameter, expecting a BinanceConnectorException."}, {"name": "testKlinesWithoutInterval", "primary_tested": ["Market.klines(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "Map", "LinkedHashMap"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the klines functionality without an interval parameter, expecting a BinanceConnectorException."}, {"name": "testKlinesSuccess", "primary_tested": ["Market.klines(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "Map", "LinkedHashMap"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful klines functionality with both symbol and interval parameters."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Futures_futuresTransferTest.java", "testclass_name": "Futures_futuresTransferTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.utils.ProxyAuth;", "import com.binance.connector.client.utils.signaturegenerator.HmacSignatureGenerator;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Futures_futuresTransferTest", "description": "Unit tests for the futures transfer functionality in the Futures class.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}, {"name": "futures", "type": "Futures"}]}, "fixtures": ["init"], "test_cases": [{"name": "testFuturesTransferSuccess", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["MockWebServer", "MockWebServerDispatcher", "Futures", "HttpMethod", "BinanceConnectorException", "HmacSignatureGenerator"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}, {"name": "futures", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful execution of the futures transfer functionality."}, {"name": "testFuturesTransferMissingAsset", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["Futures", "BinanceConnectorException"], "class_members": [{"name": "futures", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the futures transfer functionality when the 'asset' parameter is missing."}, {"name": "testFuturesTransferMissingAmount", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["Futures", "BinanceConnectorException"], "class_members": [{"name": "futures", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the futures transfer functionality when the 'amount' parameter is missing."}, {"name": "testFuturesTransferInvalidType", "primary_tested": ["Futures.futuresTransfer(Map<String,Object>)"], "external_dependencies": {"modules": ["Futures", "BinanceConnectorException"], "class_members": [{"name": "futures", "type": "variable"}]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the behavior of the futures transfer functionality when the 'type' parameter is invalid."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SubAccount_subAccountToMasterTest.java", "testclass_name": "SubAccount_subAccountToMasterTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SubAccount_subAccountToMasterTest", "description": "Tests for the sub-account to master transfer functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testSubAccountToMasterSuccess", "primary_tested": ["SubAccount.subAccountToMaster(Map<String,Object>)"], "associated_methods": ["UrlBuilder.urlEncode(String)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "UrlBuilder", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful transfer of assets from a sub-account to the master account."}, {"name": "testSubAccountToMasterMissingAsset", "primary_tested": ["SubAccount.subAccountToMaster(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing 'asset' parameter in the transfer request, expecting a BinanceConnectorException."}, {"name": "testSubAccountToMasterMissingAmount", "primary_tested": ["SubAccount.subAccountToMaster(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException", "MockWebServer", "MockData"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing 'amount' parameter in the transfer request, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/utils/RequestBuilder_buildPublicRequestTest.java", "testclass_name": "RequestBuilder_buildPublicRequestTest", "dependencies": ["package com.binance.connector.client.utils;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import org.junit.Test;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import okhttp3.Request;"], "name": "RequestBuilder_buildPublicRequestTest", "description": "Unit tests for the buildPublicRequest method in the RequestBuilder class.", "class_members": {"variables": [{"name": "VALID_URL", "type": "static final String"}, {"name": "INVALID_URL", "type": "static final String"}]}, "test_cases": [{"name": "testBuildPublicRequestPost", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with POST HTTP method."}, {"name": "testBuildPublicRequestGet", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with GET HTTP method."}, {"name": "testBuildPublicRequestPut", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with PUT HTTP method."}, {"name": "testBuildPublicRequestDelete", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "Request"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with DELETE HTTP method."}, {"name": "testBuildPublicRequestInvalidHttpMethod", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "VALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with an invalid HTTP method, expecting a BinanceConnectorException."}, {"name": "testBuildPublicRequestInvalidUrl", "primary_tested": ["RequestBuilder.buildPublicRequest(String,HttpMethod)"], "external_dependencies": {"modules": ["RequestBuilder", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "INVALID_URL", "type": "variable"}]}, "category": "unit", "description": "Tests the buildPublicRequest method with an invalid URL, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanBorrowTest.java", "testclass_name": "CryptoLoans_flexibleLoanBorrowTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_flexibleLoanBorrowTest", "description": "Tests for the flexible loan borrow functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testFlexibleLoanBorrow", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality with valid parameters."}, {"name": "testFlexibleLoanBorrowMissingLoanCoin", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality when the loanCoin parameter is missing, expecting a BinanceConnectorException."}, {"name": "testFlexibleLoanBorrowMissingCollateralCoin", "primary_tested": ["CryptoLoans.flexibleLoanBorrow(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the flexible loan borrow functionality when the collateralCoin parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/SimpleEarn_setLockedAutoSubscribeTest.java", "testclass_name": "SimpleEarn_setLockedAutoSubscribeTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "SimpleEarn_setLockedAutoSubscribeTest", "description": "Tests for setting locked auto-subscribe functionality in the SimpleEarn module.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testSetLockedAutoSubscribe", "primary_tested": ["SimpleEarn.setLockedAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of setting locked auto-subscribe with valid parameters."}, {"name": "testSetLockedAutoSubscribeInvalidPositionId", "primary_tested": ["SimpleEarn.setLockedAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of setting locked auto-subscribe with an invalid position ID."}, {"name": "testSetLockedAutoSubscribeMissingAutoSubscribe", "primary_tested": ["SimpleEarn.setLockedAutoSubscribe(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the functionality of setting locked auto-subscribe when the autoSubscribe parameter is missing, expecting an exception."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/Wallet_cloudMiningHistoryTest.java", "testclass_name": "Wallet_cloudMiningHistoryTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "Wallet_cloudMiningHistoryTest", "description": "Tests for the cloud mining history functionality in the Wallet module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testCloudMiningHistory", "primary_tested": ["Wallet.cloudMiningHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cloud mining history functionality with valid parameters."}, {"name": "testCloudMiningHistoryMissingStartTime", "primary_tested": ["Wallet.cloudMiningHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "com.binance.connector.client.exceptions.BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cloud mining history functionality when the startTime parameter is missing, expecting a BinanceConnectorException."}, {"name": "testCloudMiningHistoryMissingEndTime", "primary_tested": ["Wallet.cloudMiningHistory(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "com.binance.connector.client.exceptions.BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the cloud mining history functionality when the endTime parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/AutoInvest_targetAssetRoiListTest.java", "testclass_name": "AutoInvest_targetAssetRoiListTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "AutoInvest_targetAssetRoiListTest", "description": "Tests for the target asset ROI list functionality in the AutoInvest module of the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testTargetAssetRoiList", "primary_tested": ["AutoInvest.targetAssetRoiList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the target asset ROI list functionality with all required parameters."}, {"name": "testTargetAssetRoiListMissingTargetAsset", "primary_tested": ["AutoInvest.targetAssetRoiList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the target asset ROI list functionality when the 'targetAsset' parameter is missing, expecting a BinanceConnectorException."}, {"name": "testTargetAssetRoiListMissingHisRoiType", "primary_tested": ["AutoInvest.targetAssetRoiList(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "LinkedHashMap", "Map", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK", "MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the target asset ROI list functionality when the 'hisRoiType' parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_collateralRepayRateTest.java", "testclass_name": "CryptoLoans_collateralRepayRateTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_collateralRepayRateTest", "description": "Unit tests for the collateral repay rate functionality in the Binance Spot Client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testCollateralRepayRate", "primary_tested": ["CryptoLoans.collateralRepayRate(Map<String,Object>)"], "associated_methods": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY", "MockData.PREFIX", "MockData.MOCK_RESPONSE", "MockData.HTTP_STATUS_OK"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the collateral repay rate functionality with all required parameters."}, {"name": "testCollateralRepayRateMissingLoanCoin", "primary_tested": ["CryptoLoans.collateralRepayRate(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the collateral repay rate functionality when the loanCoin parameter is missing, expecting a BinanceConnectorException."}, {"name": "testCollateralRepayRateMissingCollateralCoin", "primary_tested": ["CryptoLoans.collateralRepayRate(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the collateral repay rate functionality when the collateralCoin parameter is missing, expecting a BinanceConnectorException."}, {"name": "testCollateralRepayRateMissingRepayAmount", "primary_tested": ["CryptoLoans.collateralRepayRate(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "BinanceConnectorException"], "class_members": [{"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockData.API_KEY", "MockData.SECRET_KEY"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the collateral repay rate functionality when the repayAmount parameter is missing, expecting a BinanceConnectorException."}]}, {"file_path": "src/test/java/com/binance/connector/client/impl/spot/CryptoLoans_flexibleLoanRepayTest.java", "testclass_name": "CryptoLoans_flexibleLoanRepayTest", "dependencies": ["package com.binance.connector.client.impl.spot;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.ParameterChecker;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "CryptoLoans_flexibleLoanRepayTest", "description": "Unit tests for the flexible loan repay functionality in the Binance connector client.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}], "methods": []}, "fixtures": ["init"], "test_cases": [{"name": "testFlexibleLoanRepaySuccess", "primary_tested": ["CryptoLoans.flexibleLoanRepay(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the successful repayment of a flexible loan."}, {"name": "testFlexibleLoanRepayMissingRepayAmount", "primary_tested": ["CryptoLoans.flexibleLoanRepay(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of missing repay amount in the flexible loan repayment."}, {"name": "testFlexibleLoanRepayInvalidLoanCoin", "primary_tested": ["CryptoLoans.flexibleLoanRepay(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of an invalid loan coin type in the flexible loan repayment."}, {"name": "testFlexibleLoanRepayInvalidCollateralCoin", "primary_tested": ["CryptoLoans.flexibleLoanRepay(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "Dispatcher", "MockWebServerDispatcher", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the handling of an invalid collateral coin type in the flexible loan repayment."}]}]