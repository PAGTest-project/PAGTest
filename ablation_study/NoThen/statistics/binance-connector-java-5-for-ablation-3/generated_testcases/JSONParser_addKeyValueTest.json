[{"strategy": "retry", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.json.JSONObject;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class JSONParser_addKeyValueTest {\n\n    @Test\n    public void testAddKeyValueWithNullParameters() {\n        JSONObject result = JSONParser.addKeyValue(null, \"key1\", \"value1\");\n        assertEquals(\"value1\", result.get(\"key1\"));\n    }\n\n    @Test\n    public void testAddKeyValueWithExistingParameters() {\n        JSONObject parameters = new JSONObject();\n        parameters.put(\"key2\", \"value2\");\n        JSONObject result = JSONParser.addKeyValue(parameters, \"key1\", \"value1\");\n        assertEquals(\"value1\", result.get(\"key1\"));\n        assertEquals(\"value2\", result.get(\"key2\"));\n    }\n\n    @Test\n    public void testAddKeyValueWithNullValue() {\n        JSONObject parameters = new JSONObject();\n        JSONObject result = JSONParser.addKeyValue(parameters, \"key1\", null);\n        assertNull(result.opt(\"key1\"));\n    }\n\n    @Test\n    public void testAddKeyValueWithExistingKey() {\n        JSONObject parameters = new JSONObject();\n        parameters.put(\"key1\", \"oldValue\");\n        JSONObject result = JSONParser.addKeyValue(parameters, \"key1\", \"newValue\");\n        assertEquals(\"newValue\", result.get(\"key1\"));\n    }\n}\n"}]