[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class JSONParser_buildJSONStringTest {\n\n    @Test\n    public void testBuildJSONStringSuccess() {\n        JSONObject parameters = new JSONObject();\n        parameters.put(\"param1\", \"value1\");\n        parameters.put(\"param2\", 123);\n\n        String expected = \"{\\\"id\\\":\\\"123\\\",\\\"method\\\":\\\"testMethod\\\",\\\"params\\\":{\\\"param1\\\":\\\"value1\\\",\\\"param2\\\":123}}\";\n        String actual = JSONParser.buildJSONString(\"123\", \"testMethod\", parameters);\n\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testBuildJSONStringWithEmptyParameters() {\n        JSONObject parameters = new JSONObject();\n\n        String expected = \"{\\\"id\\\":\\\"123\\\",\\\"method\\\":\\\"testMethod\\\",\\\"params\\\":{}}\";\n        String actual = JSONParser.buildJSONString(\"123\", \"testMethod\", parameters);\n\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testBuildJSONStringWithNullParameters() {\n        JSONObject parameters = null;\n\n        String expected = \"{\\\"id\\\":\\\"123\\\",\\\"method\\\":\\\"testMethod\\\",\\\"params\\\":null}\";\n        String actual = JSONParser.buildJSONString(\"123\", \"testMethod\", parameters);\n\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testBuildJSONStringWithInvalidParameters() {\n        JSONObject parameters = new JSONObject();\n        parameters.put(\"param1\", new Object()); // Invalid object that cannot be serialized\n\n        assertThrows(JSONException.class, () -> {\n            JSONParser.buildJSONString(\"123\", \"testMethod\", parameters);\n        });\n    }\n}\n"}]