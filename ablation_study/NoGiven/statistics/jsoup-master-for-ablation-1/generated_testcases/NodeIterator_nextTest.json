[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Node;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.NoSuchElementException;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class NodeIterator_nextTest {\n    private String html;\n\n    @BeforeEach\n    public void setUp() {\n        html = \"<html><head></head><body><div id='1'><p>One</p><p>Two</p></div><div id='2'><p>Three</p><p>Four</p></div></body></html>\";\n    }\n\n    @Test\n    public void testNextWithValidNode() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        assertTrue(it.hasNext());\n        assertNotNull(it.next());\n    }\n\n    @Test\n    public void testNextWithNoSuchElementException() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        while (it.hasNext()) {\n            it.next();\n        }\n        assertThrows(NoSuchElementException.class, it::next);\n    }\n\n    @Test\n    public void testNextWithRestart() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        it.restart(doc.body().child(0));\n        assertTrue(it.hasNext());\n        assertNotNull(it.next());\n    }\n\n    @Test\n    public void testNextWithRemove() {\n        Document doc = Jsoup.parse(html);\n        NodeIterator<Node> it = NodeIterator.from(doc);\n        Node firstNode = it.next();\n        it.remove();\n        assertNull(firstNode.parent());\n    }\n}\n"}]