[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_hasTextTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        elements = new Elements();\n    }\n\n    @Test\n    public void testHasText_WithTextElements() {\n        Element element1 = new Element(\"div\");\n        element1.text(\"Hello\");\n        Element element2 = new Element(\"span\");\n        element2.text(\"World\");\n\n        elements.addAll(Arrays.asList(element1, element2));\n\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasText_WithoutTextElements() {\n        Element element1 = new Element(\"div\");\n        Element element2 = new Element(\"span\");\n\n        elements.addAll(Arrays.asList(element1, element2));\n\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasText_MixedElements() {\n        Element element1 = new Element(\"div\");\n        element1.text(\"Hello\");\n        Element element2 = new Element(\"span\");\n\n        elements.addAll(Arrays.asList(element1, element2));\n\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasText_EmptyElements() {\n        assertFalse(elements.hasText());\n    }\n\n    @Test\n    public void testHasText_UsingTextMethod() {\n        String body = \"<div>Hello</div><span></span>\";\n        Document doc = Jsoup.parse(body);\n        elements = doc.select(\"div, span\");\n\n        assertTrue(elements.hasText());\n    }\n\n    @Test\n    public void testHasText_UsingEachTextMethod() {\n        String body = \"<div>Hello</div><span></span>\";\n        Document doc = Jsoup.parse(body);\n        elements = doc.select(\"div, span\");\n\n        List<String> texts = elements.eachText();\n        assertEquals(1, texts.size());\n        assertTrue(elements.hasText());\n    }\n}\n"}]