[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_basicWithImagesTest {\n\n    @Test\n    public void testBasicWithImages_AddsImgTag() {\n        Safelist safelist = Safelist.basicWithImages();\n        assertTrue(safelist.isSafeTag(\"img\"));\n    }\n\n    @Test\n    public void testBasicWithImages_AddsImgAttributes() {\n        Safelist safelist = Safelist.basicWithImages();\n        Attributes attributes = new Attributes();\n        Attribute alignAttr = new Attribute(\"align\", \"left\");\n        Attribute altAttr = new Attribute(\"alt\", \"image\");\n        Attribute heightAttr = new Attribute(\"height\", \"100\");\n        Attribute srcAttr = new Attribute(\"src\", \"http://example.com/image.jpg\");\n        Attribute titleAttr = new Attribute(\"title\", \"Image Title\");\n        Attribute widthAttr = new Attribute(\"width\", \"200\");\n        attributes.put(alignAttr);\n        attributes.put(altAttr);\n        attributes.put(heightAttr);\n        attributes.put(srcAttr);\n        attributes.put(titleAttr);\n        attributes.put(widthAttr);\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, alignAttr));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, altAttr));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, heightAttr));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, srcAttr));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, titleAttr));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, widthAttr));\n    }\n\n    @Test\n    public void testBasicWithImages_AddsImgProtocols() {\n        Safelist safelist = Safelist.basicWithImages();\n        Attributes attributes = new Attributes();\n        Attribute httpSrcAttr = new Attribute(\"src\", \"http://example.com/image.jpg\");\n        Attribute httpsSrcAttr = new Attribute(\"src\", \"https://example.com/image.jpg\");\n        attributes.put(httpSrcAttr);\n        attributes.put(httpsSrcAttr);\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, httpSrcAttr));\n        assertTrue(safelist.isSafeAttribute(\"img\", imgElement, httpsSrcAttr));\n    }\n\n    @Test\n    public void testBasicWithImages_InvalidProtocol() {\n        Safelist safelist = Safelist.basicWithImages();\n        Attributes attributes = new Attributes();\n        Attribute invalidSrcAttr = new Attribute(\"src\", \"ftp://example.com/image.jpg\");\n        attributes.put(invalidSrcAttr);\n        Element imgElement = new Element(Tag.valueOf(\"img\"), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(\"img\", imgElement, invalidSrcAttr));\n    }\n}\n"}]