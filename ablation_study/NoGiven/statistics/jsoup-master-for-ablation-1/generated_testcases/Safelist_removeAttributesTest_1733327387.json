[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_removeAttributesTest {\n\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testRemoveAttributes_SingleTagSingleAttribute() {\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        safelist.removeAttributes(\"a\", \"href\");\n\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        Attribute classAttribute = new Attribute(\"class\", \"example\");\n        attributes.put(hrefAttribute);\n        attributes.put(classAttribute);\n        Element element = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", element, hrefAttribute));\n        assertTrue(safelist.isSafeAttribute(\"a\", element, classAttribute));\n    }\n\n    @Test\n    public void testRemoveAttributes_AllTagsSingleAttribute() {\n        safelist.addTags(\"a\", \"div\");\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        safelist.addAttributes(\"div\", \"id\", \"class\");\n        safelist.removeAttributes(\":all\", \"class\");\n\n        Attributes aAttributes = new Attributes();\n        Attribute aHrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        Attribute aClassAttribute = new Attribute(\"class\", \"example\");\n        aAttributes.put(aHrefAttribute);\n        aAttributes.put(aClassAttribute);\n        Element aElement = new Element(Tag.valueOf(\"a\"), \"\", aAttributes);\n\n        Attributes divAttributes = new Attributes();\n        Attribute divIdAttribute = new Attribute(\"id\", \"example\");\n        Attribute divClassAttribute = new Attribute(\"class\", \"example\");\n        divAttributes.put(divIdAttribute);\n        divAttributes.put(divClassAttribute);\n        Element divElement = new Element(Tag.valueOf(\"div\"), \"\", divAttributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", aElement, aHrefAttribute));\n        assertFalse(safelist.isSafeAttribute(\"a\", aElement, aClassAttribute));\n        assertTrue(safelist.isSafeAttribute(\"div\", divElement, divIdAttribute));\n        assertFalse(safelist.isSafeAttribute(\"div\", divElement, divClassAttribute));\n    }\n\n    @Test\n    public void testRemoveAttributes_TagNotAllowed() {\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\", \"class\");\n        safelist.removeAttributes(\"div\", \"id\");\n\n        Attributes attributes = new Attributes();\n        Attribute idAttribute = new Attribute(\"id\", \"example\");\n        attributes.put(idAttribute);\n        Element element = new Element(Tag.valueOf(\"div\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"div\", element, idAttribute));\n    }\n\n    @Test\n    public void testRemoveAttributes_NoAttributesLeft() {\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\");\n        safelist.removeAttributes(\"a\", \"href\");\n\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        attributes.put(hrefAttribute);\n        Element element = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", element, hrefAttribute));\n        assertFalse(safelist.attributes.containsKey(TagName.valueOf(\"a\")));\n    }\n}\n"}]