[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.function.Predicate;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_removeIfTest {\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        String html = \"<div class='test'>Test Element</div><div class='remove'>Remove Element</div>\";\n        Document doc = Jsoup.parse(html);\n        elements = new Elements(doc.select(\"div\"));\n    }\n\n    @Test\n    public void testRemoveIf_AllElementsRemoved() {\n        Predicate<Element> filter = element -> element.hasClass(\"remove\");\n        boolean anyRemoved = elements.removeIf(filter);\n        assertTrue(anyRemoved);\n        assertEquals(1, elements.size());\n        assertFalse(elements.first().hasClass(\"remove\"));\n    }\n\n    @Test\n    public void testRemoveIf_NoElementsRemoved() {\n        Predicate<Element> filter = element -> element.hasClass(\"nonexistent\");\n        boolean anyRemoved = elements.removeIf(filter);\n        assertFalse(anyRemoved);\n        assertEquals(2, elements.size());\n    }\n\n    @Test\n    public void testRemoveIf_SomeElementsRemoved() {\n        Predicate<Element> filter = element -> element.text().equals(\"Remove Element\");\n        boolean anyRemoved = elements.removeIf(filter);\n        assertTrue(anyRemoved);\n        assertEquals(1, elements.size());\n        assertEquals(\"Test Element\", elements.first().text());\n    }\n}\n"}]