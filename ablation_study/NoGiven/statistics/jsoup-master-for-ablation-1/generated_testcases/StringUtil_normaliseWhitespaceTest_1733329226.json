[{"strategy": "generate", "code": "\npackage org.jsoup.internal;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StringUtil_normaliseWhitespaceTest {\n\n    @Test\n    public void testNormaliseWhitespace() {\n        // Test case for normalising whitespace\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"  hello  world  \"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\tworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\nworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\rworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\fworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello world\"));\n        assertEquals(\"\", StringUtil.normaliseWhitespace(\"\"));\n        assertEquals(\"\", StringUtil.normaliseWhitespace(\"   \"));\n        assertEquals(\"\", StringUtil.normaliseWhitespace(\"\\t\\n\\r\\f\"));\n    }\n\n    @Test\n    public void testNormaliseWhitespaceWithLeadingWhitespace() {\n        // Test case for normalising whitespace with leading whitespace\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"  hello  world  \"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\thello\\tworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\nhello\\nworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\rhello\\rworld\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\fhello\\fworld\"));\n    }\n\n    @Test\n    public void testNormaliseWhitespaceWithTrailingWhitespace() {\n        // Test case for normalising whitespace with trailing whitespace\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello  world  \"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\tworld\\t\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\nworld\\n\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\rworld\\r\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"hello\\fworld\\f\"));\n    }\n\n    @Test\n    public void testNormaliseWhitespaceWithMixedWhitespace() {\n        // Test case for normalising whitespace with mixed whitespace\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"  hello\\tworld\\n\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\thello\\nworld\\r\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\nhello\\rworld\\f\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\rhello\\fworld\\t\"));\n        assertEquals(\"hello world\", StringUtil.normaliseWhitespace(\"\\fhello\\tworld\\n\"));\n    }\n\n    @Test\n    public void testNormaliseWhitespaceWithNoWhitespace() {\n        // Test case for normalising whitespace with no whitespace\n        assertEquals(\"helloworld\", StringUtil.normaliseWhitespace(\"helloworld\"));\n    }\n}\n"}]