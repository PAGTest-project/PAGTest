[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_removeTest {\n    private Attributes attributes;\n\n    @BeforeEach\n    public void setUp() {\n        attributes = new Attributes();\n        attributes.add(\"Key1\", \"Val1\");\n        attributes.add(\"Key2\", \"Val2\");\n    }\n\n    @Test\n    public void testRemoveExistingKey() {\n        assertTrue(attributes.hasKey(\"Key1\"));\n        assertEquals(2, attributes.size());\n\n        attributes.remove(\"Key1\");\n\n        assertFalse(attributes.hasKey(\"Key1\"));\n        assertEquals(1, attributes.size());\n    }\n\n    @Test\n    public void testRemoveNonExistingKey() {\n        assertFalse(attributes.hasKey(\"Key3\"));\n        assertEquals(2, attributes.size());\n\n        attributes.remove(\"Key3\");\n\n        assertFalse(attributes.hasKey(\"Key3\"));\n        assertEquals(2, attributes.size());\n    }\n\n    @Test\n    public void testRemoveWithCheckCapacity() {\n        for (int i = 3; i <= 100; i++) {\n            attributes.add(\"Key\" + i, \"Val\" + i);\n        }\n\n        assertTrue(attributes.hasKey(\"Key1\"));\n        assertEquals(100, attributes.size());\n\n        attributes.remove(\"Key1\");\n\n        assertFalse(attributes.hasKey(\"Key1\"));\n        assertEquals(99, attributes.size());\n    }\n}\n"}]