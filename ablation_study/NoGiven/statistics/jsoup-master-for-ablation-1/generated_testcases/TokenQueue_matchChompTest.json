[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_matchChompTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"test sequence\");\n    }\n\n    @Test\n    public void testMatchChompSuccess() {\n        tokenQueue.consumeTo(\"sequence\");\n        assertTrue(tokenQueue.matchChomp(\"sequence\"));\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testMatchChompFailure() {\n        tokenQueue.consumeTo(\"sequence\");\n        assertFalse(tokenQueue.matchChomp(\"invalid\"));\n        assertFalse(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testMatchChompWithEmptyQueue() {\n        tokenQueue.consumeTo(\"sequence\");\n        tokenQueue.matchChomp(\"sequence\");\n        assertFalse(tokenQueue.matchChomp(\"sequence\"));\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testMatchChompWithPartialMatch() {\n        tokenQueue.consumeTo(\"sequence\");\n        assertFalse(tokenQueue.matchChomp(\"seq\"));\n        assertFalse(tokenQueue.isEmpty());\n    }\n}\n"}]