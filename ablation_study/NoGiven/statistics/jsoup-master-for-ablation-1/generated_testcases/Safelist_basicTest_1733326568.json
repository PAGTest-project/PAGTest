[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_basicTest {\n\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = Safelist.basic();\n    }\n\n    @Test\n    public void testBasicSafelistTags() {\n        assertTrue(safelist.isSafeTag(\"a\"));\n        assertTrue(safelist.isSafeTag(\"blockquote\"));\n        assertFalse(safelist.isSafeTag(\"script\"));\n    }\n\n    @Test\n    public void testBasicSafelistAttributes() {\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        attributes.put(hrefAttribute);\n        Element aElement = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", aElement, hrefAttribute));\n\n        Attribute invalidAttribute = new Attribute(\"onclick\", \"alert('xss')\");\n        attributes.put(invalidAttribute);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", aElement, invalidAttribute));\n    }\n\n    @Test\n    public void testBasicSafelistProtocols() {\n        Attributes attributes = new Attributes();\n        Attribute hrefAttribute = new Attribute(\"href\", \"http://example.com\");\n        attributes.put(hrefAttribute);\n        Element aElement = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", aElement, hrefAttribute));\n\n        Attribute invalidHrefAttribute = new Attribute(\"href\", \"javascript:alert('xss')\");\n        attributes.put(invalidHrefAttribute);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", aElement, invalidHrefAttribute));\n    }\n\n    @Test\n    public void testBasicSafelistEnforcedAttributes() {\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertEquals(\"nofollow\", enforcedAttributes.get(\"rel\"));\n    }\n}\n"}]