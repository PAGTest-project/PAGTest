[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_htmlTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testHtmlWithPrettyPrint() {\n        element.text(\"Test Text\");\n        element.outputSettings().prettyPrint(true);\n        String html = element.html();\n        assertEquals(\"<div>Test Text</div>\", html.trim());\n    }\n\n    @Test\n    public void testHtmlWithoutPrettyPrint() {\n        element.text(\"Test Text\");\n        element.outputSettings().prettyPrint(false);\n        String html = element.html();\n        assertEquals(\"<div>Test Text</div>\", html);\n    }\n\n    @Test\n    public void testHtmlWithChildNodes() {\n        Element child = new Element(\"p\");\n        child.text(\"Child Text\");\n        element.appendChild(child);\n        element.outputSettings().prettyPrint(true);\n        String html = element.html();\n        assertEquals(\"<div>\\n <p>Child Text</p>\\n</div>\", html.trim());\n    }\n\n    @Test\n    public void testHtmlWithAttributes() {\n        element.attr(\"class\", \"test\");\n        element.text(\"Test Text\");\n        element.outputSettings().prettyPrint(true);\n        String html = element.html();\n        assertEquals(\"<div class=\\\"test\\\">Test Text</div>\", html.trim());\n    }\n\n    @Test\n    public void testHtmlWithEmptyElement() {\n        element.outputSettings().prettyPrint(true);\n        String html = element.html();\n        assertEquals(\"<div></div>\", html.trim());\n    }\n}\n"}]