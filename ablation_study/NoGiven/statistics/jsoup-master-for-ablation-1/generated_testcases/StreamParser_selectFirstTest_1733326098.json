[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Evaluator;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.jspecify.annotations.Nullable;\n\nimport java.io.IOException;\nimport java.io.StringReader;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class StreamParser_selectFirstTest {\n    private StreamParser streamParser;\n\n    @BeforeEach\n    public void setUp() {\n        streamParser = new StreamParser(Jsoup.parse(\"\"));\n    }\n\n    @Test\n    public void testSelectFirstWithExistingMatch() throws IOException {\n        String html = \"<html><body><p>First</p><p>Second</p></body></html>\";\n        streamParser.parse(new StringReader(html), \"http://example.com\");\n\n        Evaluator eval = new Evaluator.Tag(\"p\");\n        Element first = streamParser.selectFirst(eval);\n\n        assertNotNull(first);\n        assertEquals(\"First\", first.text());\n    }\n\n    @Test\n    public void testSelectFirstWithNoMatch() throws IOException {\n        String html = \"<html><body><div>First</div><div>Second</div></body></html>\";\n        streamParser.parse(new StringReader(html), \"http://example.com\");\n\n        Evaluator eval = new Evaluator.Tag(\"p\");\n        Element first = streamParser.selectFirst(eval);\n\n        assertNull(first);\n    }\n\n    @Test\n    public void testSelectFirstWithPartialParse() throws IOException {\n        String html = \"<html><body><p>First</p><p>Second</p></body></html>\";\n        streamParser.parse(new StringReader(html), \"http://example.com\");\n\n        // Simulate partial parse by stopping the parser\n        streamParser.stop();\n\n        Evaluator eval = new Evaluator.Tag(\"p\");\n        Element first = streamParser.selectFirst(eval);\n\n        assertNotNull(first);\n        assertEquals(\"First\", first.text());\n    }\n\n    @Test\n    public void testSelectFirstWithFragmentParse() throws IOException {\n        String html = \"<p>First</p><p>Second</p>\";\n        streamParser.parseFragment(new StringReader(html), null, \"http://example.com\");\n\n        Evaluator eval = new Evaluator.Tag(\"p\");\n        Element first = streamParser.selectFirst(eval);\n\n        assertNotNull(first);\n        assertEquals(\"First\", first.text());\n    }\n\n    @Test\n    public void testSelectFirstWithIOException() {\n        String html = \"<html><body><p>First</p><p>Second</p></body></html>\";\n        streamParser.parse(new StringReader(html), \"http://example.com\");\n\n        Evaluator eval = new Evaluator.Tag(\"p\");\n        assertThrows(IOException.class, () -> {\n            // Simulate an IOException by closing the reader\n            streamParser.close();\n            streamParser.selectFirst(eval);\n        });\n    }\n}\n"}]