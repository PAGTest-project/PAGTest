[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attribute_setKeyTest {\n    private Attribute attribute;\n    private Attributes parent;\n\n    @BeforeEach\n    public void setUp() {\n        parent = new Attributes();\n        attribute = new Attribute(\"oldKey\", \"value\", parent);\n        parent.put(\"oldKey\", \"value\");\n    }\n\n    @Test\n    public void testSetKeyValid() {\n        attribute.setKey(\"newKey\");\n        assertEquals(\"newKey\", attribute.getKey());\n        assertEquals(\"value\", parent.get(\"newKey\"));\n        assertNull(parent.get(\"oldKey\"));\n    }\n\n    @Test\n    public void testSetKeyNull() {\n        assertThrows(IllegalArgumentException.class, () -> attribute.setKey(null));\n    }\n\n    @Test\n    public void testSetKeyEmpty() {\n        assertThrows(IllegalArgumentException.class, () -> attribute.setKey(\"\"));\n    }\n\n    @Test\n    public void testSetKeyWithSpaces() {\n        attribute.setKey(\" newKey \");\n        assertEquals(\"newKey\", attribute.getKey());\n        assertEquals(\"value\", parent.get(\"newKey\"));\n        assertNull(parent.get(\"oldKey\"));\n    }\n\n    @Test\n    public void testSetKeyNoParent() {\n        attribute = new Attribute(\"oldKey\", \"value\");\n        attribute.setKey(\"newKey\");\n        assertEquals(\"newKey\", attribute.getKey());\n    }\n\n    @Test\n    public void testSetKeyUpdateRanges() {\n        Map<String, Range.AttributeRange> ranges = parent.getRanges();\n        ranges.put(\"oldKey\", new Range.AttributeRange(new Range(new Position(0, 0, 0), new Position(0, 0, 0))));\n\n        attribute.setKey(\"newKey\");\n        assertEquals(\"newKey\", attribute.getKey());\n        assertEquals(\"value\", parent.get(\"newKey\"));\n        assertNull(parent.get(\"oldKey\"));\n        assertNotNull(ranges.get(\"newKey\"));\n        assertNull(ranges.get(\"oldKey\"));\n    }\n}\n"}]