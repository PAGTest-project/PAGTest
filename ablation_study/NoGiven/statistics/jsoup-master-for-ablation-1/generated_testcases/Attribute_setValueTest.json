[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attribute_setValueTest {\n    private Attribute attribute;\n    private Attributes parent;\n\n    @BeforeEach\n    public void setUp() {\n        parent = new Attributes();\n        attribute = new Attribute(\"key\", \"value\", parent);\n    }\n\n    @Test\n    public void testSetValueWithParent() {\n        String oldVal = attribute.setValue(\"newValue\");\n        assertEquals(\"value\", oldVal);\n        assertEquals(\"newValue\", attribute.getValue());\n        assertEquals(\"newValue\", parent.get(\"key\"));\n    }\n\n    @Test\n    public void testSetValueWithoutParent() {\n        attribute.parent = null;\n        String oldVal = attribute.setValue(\"newValue\");\n        assertEquals(\"value\", oldVal);\n        assertEquals(\"newValue\", attribute.getValue());\n    }\n\n    @Test\n    public void testSetValueNull() {\n        String oldVal = attribute.setValue(null);\n        assertEquals(\"value\", oldVal);\n        assertNull(attribute.getValue());\n        assertNull(parent.get(\"key\"));\n    }\n\n    @Test\n    public void testSetValueEmptyString() {\n        String oldVal = attribute.setValue(\"\");\n        assertEquals(\"value\", oldVal);\n        assertEquals(\"\", attribute.getValue());\n        assertEquals(\"\", parent.get(\"key\"));\n    }\n\n    @Test\n    public void testSetValueWithExistingKey() {\n        parent.put(\"key\", \"existingValue\");\n        String oldVal = attribute.setValue(\"newValue\");\n        assertEquals(\"existingValue\", oldVal);\n        assertEquals(\"newValue\", attribute.getValue());\n        assertEquals(\"newValue\", parent.get(\"key\"));\n    }\n\n    @Test\n    public void testSetValueWithNonExistingKey() {\n        attribute.key = \"newKey\";\n        String oldVal = attribute.setValue(\"newValue\");\n        assertNull(oldVal);\n        assertEquals(\"newValue\", attribute.getValue());\n        assertNull(parent.get(\"newKey\"));\n    }\n\n    @Test\n    public void testSetValueWithParentAndNullOldValue() {\n        attribute.val = null;\n        String oldVal = attribute.setValue(\"newValue\");\n        assertNull(oldVal);\n        assertEquals(\"newValue\", attribute.getValue());\n        assertEquals(\"newValue\", parent.get(\"key\"));\n    }\n\n    @Test\n    public void testSetValueWithParentAndEmptyOldValue() {\n        attribute.val = \"\";\n        String oldVal = attribute.setValue(\"newValue\");\n        assertEquals(\"\", oldVal);\n        assertEquals(\"newValue\", attribute.getValue());\n        assertEquals(\"newValue\", parent.get(\"key\"));\n    }\n}\n"}]