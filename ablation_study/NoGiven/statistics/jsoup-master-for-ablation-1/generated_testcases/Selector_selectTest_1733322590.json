[{"strategy": "retry", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass Selector_selectTest {\n\n    @Test\n    void testSelectWithValidInputs() {\n        Evaluator evaluator = mock(Evaluator.class);\n        Element root = mock(Element.class);\n        Elements expected = new Elements();\n\n        when(Collector.collect(evaluator, root)).thenReturn(expected);\n\n        Elements result = Selector.select(evaluator, root);\n\n        assertEquals(expected, result);\n    }\n\n    @Test\n    void testSelectWithNullEvaluator() {\n        Element root = mock(Element.class);\n\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            Selector.select(null, root);\n        });\n\n        assertEquals(\"Object must not be null\", exception.getMessage());\n    }\n\n    @Test\n    void testSelectWithNullRoot() {\n        Evaluator evaluator = mock(Evaluator.class);\n\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            Selector.select(evaluator, null);\n        });\n\n        assertEquals(\"Object must not be null\", exception.getMessage());\n    }\n}\n"}]