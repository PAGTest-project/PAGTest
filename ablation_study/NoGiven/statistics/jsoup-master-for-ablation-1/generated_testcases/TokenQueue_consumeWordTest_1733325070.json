[{"strategy": "retry", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeWordTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"hello123 world456\");\n    }\n\n    @Test\n    public void testConsumeWord() {\n        assertEquals(\"hello123\", tokenQueue.consumeWord());\n        assertTrue(tokenQueue.consumeWhitespace());\n        assertEquals(\"world456\", tokenQueue.consumeWord());\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testConsumeWordWithLeadingWhitespace() {\n        tokenQueue = new TokenQueue(\"   leadingWhitespace123\");\n        assertTrue(tokenQueue.consumeWhitespace());\n        assertEquals(\"leadingWhitespace123\", tokenQueue.consumeWord());\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testConsumeWordWithNoWordCharacters() {\n        tokenQueue = new TokenQueue(\"   \");\n        assertTrue(tokenQueue.consumeWhitespace());\n        assertEquals(\"\", tokenQueue.consumeWord());\n        assertTrue(tokenQueue.isEmpty());\n    }\n\n    @Test\n    public void testConsumeWordWithEmptyQueue() {\n        tokenQueue = new TokenQueue(\"\");\n        assertEquals(\"\", tokenQueue.consumeWord());\n        assertTrue(tokenQueue.isEmpty());\n    }\n}\n"}]