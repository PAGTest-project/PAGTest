[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Range_equalsTest {\n    private Range trackedRange;\n    private Range untrackedRange;\n    private Range implicitRange;\n\n    @BeforeEach\n    public void setUp() {\n        trackedRange = new Range(new Range.Position(0, 1, 1), new Range.Position(19, 2, 12));\n        untrackedRange = Range.Untracked;\n        implicitRange = new Range(new Range.Position(0, 1, 1), new Range.Position(0, 1, 1));\n    }\n\n    @Test\n    public void testEquals_SameObject() {\n        assertTrue(trackedRange.equals(trackedRange));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        assertFalse(trackedRange.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        assertFalse(trackedRange.equals(\"Not a Range\"));\n    }\n\n    @Test\n    public void testEquals_TrackedRangesEqual() {\n        Range anotherTrackedRange = new Range(new Range.Position(0, 1, 1), new Range.Position(19, 2, 12));\n        assertTrue(trackedRange.equals(anotherTrackedRange));\n    }\n\n    @Test\n    public void testEquals_TrackedRangesNotEqual() {\n        Range differentTrackedRange = new Range(new Range.Position(1, 1, 2), new Range.Position(20, 2, 13));\n        assertFalse(trackedRange.equals(differentTrackedRange));\n    }\n\n    @Test\n    public void testEquals_UntrackedRange() {\n        assertFalse(trackedRange.equals(untrackedRange));\n    }\n\n    @Test\n    public void testEquals_ImplicitRange() {\n        assertTrue(implicitRange.equals(implicitRange));\n        assertFalse(trackedRange.equals(implicitRange));\n    }\n\n    @Test\n    public void testHashCodeConsistency() {\n        Range anotherTrackedRange = new Range(new Range.Position(0, 1, 1), new Range.Position(19, 2, 12));\n        assertEquals(trackedRange.hashCode(), anotherTrackedRange.hashCode());\n    }\n\n    @Test\n    public void testToString() {\n        assertEquals(\"1,1:0-2,12:19\", trackedRange.toString());\n        assertEquals(\"-1,-1:-1--1,-1:-1\", untrackedRange.toString());\n        assertEquals(\"1,1:0-1,1:0\", implicitRange.toString());\n    }\n}\n"}]