[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_putTest {\n    private Attributes attributes;\n\n    @BeforeEach\n    public void setUp() {\n        attributes = new Attributes();\n    }\n\n    @Test\n    public void testPutNewKey() {\n        attributes.put(\"key1\", \"value1\");\n        assertEquals(\"value1\", attributes.get(\"key1\"));\n        assertEquals(1, attributes.size());\n    }\n\n    @Test\n    public void testPutExistingKey() {\n        attributes.put(\"key1\", \"value1\");\n        attributes.put(\"key1\", \"newValue1\");\n        assertEquals(\"newValue1\", attributes.get(\"key1\"));\n        assertEquals(1, attributes.size());\n    }\n\n    @Test\n    public void testPutNullValue() {\n        attributes.put(\"key1\", null);\n        assertNull(attributes.get(\"key1\"));\n        assertEquals(1, attributes.size());\n    }\n\n    @Test\n    public void testPutMultipleKeys() {\n        attributes.put(\"key1\", \"value1\");\n        attributes.put(\"key2\", \"value2\");\n        assertEquals(\"value1\", attributes.get(\"key1\"));\n        assertEquals(\"value2\", attributes.get(\"key2\"));\n        assertEquals(2, attributes.size());\n    }\n\n    @Test\n    public void testPutWithCapacityCheck() {\n        for (int i = 0; i < 5; i++) {\n            attributes.put(\"key\" + i, \"value\" + i);\n        }\n        assertEquals(5, attributes.size());\n        for (int i = 0; i < 5; i++) {\n            assertEquals(\"value\" + i, attributes.get(\"key\" + i));\n        }\n    }\n}\n"}]