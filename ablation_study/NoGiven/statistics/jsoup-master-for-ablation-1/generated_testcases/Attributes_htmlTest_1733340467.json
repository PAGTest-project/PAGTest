[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.SerializationException;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attributes_htmlTest {\n    private Attributes attributes;\n\n    @BeforeEach\n    public void setUp() {\n        attributes = new Attributes();\n    }\n\n    @Test\n    public void testHtml() {\n        attributes.put(\"Tot\", \"a&p\");\n        attributes.put(\"Hello\", \"There\");\n        attributes.put(\"data-name\", \"Jsoup\");\n\n        String html = attributes.html();\n        assertTrue(html.contains(\"Tot=\\\"a&amp;p\\\"\"));\n        assertTrue(html.contains(\"Hello=\\\"There\\\"\"));\n        assertTrue(html.contains(\"data-name=\\\"Jsoup\\\"\"));\n    }\n\n    @Test\n    public void testHtmlWithNormalization() {\n        attributes.put(\"Tot\", \"a&p\");\n        attributes.put(\"Hello\", \"There\");\n        attributes.put(\"data-name\", \"Jsoup\");\n        attributes.normalize();\n\n        String html = attributes.html();\n        assertTrue(html.contains(\"tot=\\\"a&amp;p\\\"\"));\n        assertTrue(html.contains(\"hello=\\\"There\\\"\"));\n        assertTrue(html.contains(\"data-name=\\\"Jsoup\\\"\"));\n    }\n\n    @Test\n    public void testHtmlWithCapacityCheck() {\n        for (int i = 0; i < 10; i++) {\n            attributes.put(\"key\" + i, \"value\" + i);\n        }\n\n        String html = attributes.html();\n        for (int i = 0; i < 10; i++) {\n            assertTrue(html.contains(\"key\" + i + \"=\\\"value\" + i + \"\\\"\"));\n        }\n    }\n\n    @Test\n    public void testHtmlWithSerializationException() {\n        attributes.put(\"key\", \"value\");\n        attributes.put(\"invalidKey\", new Object()); // This will cause an IOException in html()\n\n        assertThrows(SerializationException.class, () -> {\n            attributes.html();\n        });\n    }\n}\n"}]