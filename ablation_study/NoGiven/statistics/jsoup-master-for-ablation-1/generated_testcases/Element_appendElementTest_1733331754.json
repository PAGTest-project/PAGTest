[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.TextUtil;\nimport org.jsoup.helper.ValidationException;\nimport org.jsoup.internal.StringUtil;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.List;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_appendElementTest {\n    private Element parentElement;\n\n    @BeforeEach\n    public void setUp() {\n        parentElement = new Element(\"div\");\n        parentElement.setBaseUri(\"http://example.com\");\n    }\n\n    @Test\n    public void testAppendElement() {\n        Element child = parentElement.appendElement(\"span\", \"http://www.w3.org/1999/xhtml\");\n        assertNotNull(child);\n        assertEquals(\"span\", child.tagName());\n        assertEquals(\"http://www.w3.org/1999/xhtml\", child.tag().namespace());\n        assertEquals(1, parentElement.childNodeSize());\n        assertEquals(child, parentElement.child(0));\n    }\n\n    @Test\n    public void testAppendElementWithDefaultNamespace() {\n        Element child = parentElement.appendElement(\"span\");\n        assertNotNull(child);\n        assertEquals(\"span\", child.tagName());\n        assertEquals(\"http://www.w3.org/1999/xhtml\", child.tag().namespace());\n        assertEquals(1, parentElement.childNodeSize());\n        assertEquals(child, parentElement.child(0));\n    }\n\n    @Test\n    public void testAppendElementWithDifferentNamespace() {\n        Element child = parentElement.appendElement(\"customTag\", \"http://custom.namespace.com\");\n        assertNotNull(child);\n        assertEquals(\"customTag\", child.tagName());\n        assertEquals(\"http://custom.namespace.com\", child.tag().namespace());\n        assertEquals(1, parentElement.childNodeSize());\n        assertEquals(child, parentElement.child(0));\n    }\n\n    @Test\n    public void testAppendElementWithInvalidTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            parentElement.appendElement(\"invalidTag!\", \"http://www.w3.org/1999/xhtml\");\n        });\n        assertEquals(0, parentElement.childNodeSize());\n    }\n\n    @Test\n    public void testAppendElementWithNullTagName() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            parentElement.appendElement(null, \"http://www.w3.org/1999/xhtml\");\n        });\n        assertEquals(0, parentElement.childNodeSize());\n    }\n\n    @Test\n    public void testAppendElementWithNullNamespace() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            parentElement.appendElement(\"span\", null);\n        });\n        assertEquals(0, parentElement.childNodeSize());\n    }\n}\n"}]