[{"strategy": "retry", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Element_classNamesTest {\n    private Element element;\n\n    @BeforeEach\n    public void setUp() {\n        element = new Element(\"div\");\n    }\n\n    @Test\n    public void testClassNamesWithSingleClass() {\n        element.attr(\"class\", \"single\");\n        Set<String> classNames = element.classNames();\n        assertEquals(1, classNames.size());\n        assertTrue(classNames.contains(\"single\"));\n    }\n\n    @Test\n    public void testClassNamesWithMultipleClasses() {\n        element.attr(\"class\", \"first second third\");\n        Set<String> classNames = element.classNames();\n        assertEquals(3, classNames.size());\n        assertTrue(classNames.contains(\"first\"));\n        assertTrue(classNames.contains(\"second\"));\n        assertTrue(classNames.contains(\"third\"));\n    }\n\n    @Test\n    public void testClassNamesWithEmptyClass() {\n        element.attr(\"class\", \"\");\n        Set<String> classNames = element.classNames();\n        assertTrue(classNames.isEmpty());\n    }\n\n    @Test\n    public void testClassNamesWithWhitespaceOnly() {\n        element.attr(\"class\", \"   \");\n        Set<String> classNames = element.classNames();\n        assertTrue(classNames.isEmpty());\n    }\n\n    @Test\n    public void testClassNamesWithLeadingAndTrailingWhitespace() {\n        element.attr(\"class\", \"  first second  \");\n        Set<String> classNames = element.classNames();\n        assertEquals(2, classNames.size());\n        assertTrue(classNames.contains(\"first\"));\n        assertTrue(classNames.contains(\"second\"));\n    }\n}\n"}]