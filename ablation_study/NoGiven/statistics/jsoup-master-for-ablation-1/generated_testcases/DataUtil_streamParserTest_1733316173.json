[{"strategy": "generate", "code": "\npackage org.jsoup.helper;\n\nimport org.jsoup.parser.Parser;\nimport org.jsoup.parser.StreamParser;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.Assertions;\nimport org.mockito.Mockito;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.nio.charset.Charset;\nimport java.nio.file.Path;\n\nimport static org.mockito.Mockito.*;\n\npublic class DataUtil_streamParserTest {\n\n    private Path mockPath;\n    private Charset mockCharset;\n    private String mockBaseUri;\n    private Parser mockParser;\n    private DataUtil.CharsetDoc mockCharsetDoc;\n    private BufferedReader mockReader;\n\n    @BeforeEach\n    public void setUp() {\n        mockPath = mock(Path.class);\n        mockCharset = mock(Charset.class);\n        mockBaseUri = \"http://example.com\";\n        mockParser = mock(Parser.class);\n        mockCharsetDoc = mock(DataUtil.CharsetDoc.class);\n        mockReader = mock(BufferedReader.class);\n    }\n\n    @AfterEach\n    public void tearDown() {\n        reset(mockPath, mockCharset, mockParser, mockCharsetDoc, mockReader);\n    }\n\n    @Test\n    public void testStreamParser_WithCharset() throws IOException {\n        when(mockCharset.name()).thenReturn(\"UTF-8\");\n        when(DataUtil.detectCharset(any(), eq(\"UTF-8\"), eq(mockBaseUri), eq(mockParser))).thenReturn(mockCharsetDoc);\n        when(mockCharsetDoc.input).thenReturn(mock(ControllableInputStream.class));\n        when(mockCharsetDoc.charset).thenReturn(mockCharset);\n        when(mockReader.readLine()).thenReturn(null);\n\n        StreamParser result = DataUtil.streamParser(mockPath, mockCharset, mockBaseUri, mockParser);\n\n        Assertions.assertNotNull(result);\n        verify(mockCharset, times(1)).name();\n        verify(DataUtil.detectCharset(any(), eq(\"UTF-8\"), eq(mockBaseUri), eq(mockParser)), times(1));\n        verify(mockReader, times(1)).readLine();\n    }\n\n    @Test\n    public void testStreamParser_WithoutCharset() throws IOException {\n        when(DataUtil.detectCharset(any(), eq(null), eq(mockBaseUri), eq(mockParser))).thenReturn(mockCharsetDoc);\n        when(mockCharsetDoc.input).thenReturn(mock(ControllableInputStream.class));\n        when(mockCharsetDoc.charset).thenReturn(Charset.forName(\"UTF-8\"));\n        when(mockReader.readLine()).thenReturn(null);\n\n        StreamParser result = DataUtil.streamParser(mockPath, null, mockBaseUri, mockParser);\n\n        Assertions.assertNotNull(result);\n        verify(DataUtil.detectCharset(any(), eq(null), eq(mockBaseUri), eq(mockParser)), times(1));\n        verify(mockReader, times(1)).readLine();\n    }\n}\n"}]