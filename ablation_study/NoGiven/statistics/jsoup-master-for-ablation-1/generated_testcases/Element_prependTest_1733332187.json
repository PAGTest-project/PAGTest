[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.Mockito.*;\n\nclass Element_prependTest {\n\n    @Test\n    void testPrepend_ValidHtml() {\n        // Given\n        Element element = new Element(\"div\");\n        String html = \"<p>Test</p>\";\n        Node node = mock(Node.class);\n        List<Node> nodes = Collections.singletonList(node);\n\n        NodeUtils nodeUtils = mock(NodeUtils.class);\n        when(nodeUtils.parser(element)).thenReturn(nodeUtils);\n        when(nodeUtils.parseFragmentInput(html, element, element.baseUri())).thenReturn(nodes);\n\n        // When\n        Element result = element.prepend(html);\n\n        // Then\n        assertEquals(element, result);\n        verify(nodeUtils).parser(element);\n        verify(nodeUtils).parseFragmentInput(html, element, element.baseUri());\n        verify(element).addChildren(0, nodes.toArray(new Node[0]));\n    }\n\n    @Test\n    void testPrepend_NullHtml() {\n        // Given\n        Element element = new Element(\"div\");\n        String html = null;\n\n        // When & Then\n        assertThrows(IllegalArgumentException.class, () -> element.prepend(html));\n    }\n}\n"}]