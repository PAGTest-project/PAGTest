[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Safelist_addTagsTest {\n\n    private Safelist safelist;\n\n    @BeforeEach\n    void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    void testAddTags_ValidTags() {\n        // Given\n        String[] tags = {\"p\", \"div\", \"span\"};\n\n        // When\n        safelist.addTags(tags);\n\n        // Then\n        assertTrue(safelist.isSafeTag(\"p\"));\n        assertTrue(safelist.isSafeTag(\"div\"));\n        assertTrue(safelist.isSafeTag(\"span\"));\n    }\n\n    @Test\n    void testAddTags_InvalidTag() {\n        // Given\n        String[] tags = {\"noscript\"};\n\n        // When & Then\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags(tags));\n    }\n\n    @Test\n    void testAddTags_EmptyTag() {\n        // Given\n        String[] tags = {\"\"};\n\n        // When & Then\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags(tags));\n    }\n\n    @Test\n    void testAddTags_NullTags() {\n        // Given\n        String[] tags = null;\n\n        // When & Then\n        assertThrows(IllegalArgumentException.class, () -> safelist.addTags(tags));\n    }\n}\n"}]