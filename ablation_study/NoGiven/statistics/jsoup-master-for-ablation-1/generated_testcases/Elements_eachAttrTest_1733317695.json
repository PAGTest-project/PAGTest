[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class Elements_eachAttrTest {\n\n    @Test\n    public void testEachAttr_WithAttributePresent() {\n        // Given\n        Element element1 = mock(Element.class);\n        Element element2 = mock(Element.class);\n        when(element1.hasAttr(\"class\")).thenReturn(true);\n        when(element2.hasAttr(\"class\")).thenReturn(true);\n        when(element1.attr(\"class\")).thenReturn(\"active\");\n        when(element2.attr(\"class\")).thenReturn(\"inactive\");\n\n        Elements elements = new Elements(Arrays.asList(element1, element2));\n\n        // When\n        List<String> result = elements.eachAttr(\"class\");\n\n        // Then\n        assertEquals(Arrays.asList(\"active\", \"inactive\"), result);\n    }\n\n    @Test\n    public void testEachAttr_WithAttributeNotPresent() {\n        // Given\n        Element element1 = mock(Element.class);\n        Element element2 = mock(Element.class);\n        when(element1.hasAttr(\"class\")).thenReturn(false);\n        when(element2.hasAttr(\"class\")).thenReturn(false);\n\n        Elements elements = new Elements(Arrays.asList(element1, element2));\n\n        // When\n        List<String> result = elements.eachAttr(\"class\");\n\n        // Then\n        assertEquals(Collections.emptyList(), result);\n    }\n}\n"}]