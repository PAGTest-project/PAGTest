[{"strategy": "retry", "code": "\npackage org.jsoup.safety;\n\nimport org.jsoup.nodes.Attribute;\nimport org.jsoup.nodes.Attributes;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.parser.Tag;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_addEnforcedAttributeTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testAddEnforcedAttribute_validTagAttributeAndValue() {\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\");\n        safelist.addEnforcedAttribute(\"a\", \"href\", \"nofollow\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertEquals(\"nofollow\", enforcedAttributes.get(\"href\"));\n    }\n\n    @Test\n    public void testAddEnforcedAttribute_invalidTag() {\n        safelist.addEnforcedAttribute(\"invalidTag\", \"href\", \"nofollow\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"invalidTag\");\n        assertNull(enforcedAttributes);\n    }\n\n    @Test\n    public void testAddEnforcedAttribute_invalidAttribute() {\n        safelist.addTags(\"a\");\n        safelist.addEnforcedAttribute(\"a\", \"invalidAttribute\", \"nofollow\");\n\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertNull(enforcedAttributes);\n    }\n\n    @Test\n    public void testAddEnforcedAttribute_validTagAttributeAndValue_isSafeAttribute() {\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\");\n        safelist.addEnforcedAttribute(\"a\", \"href\", \"nofollow\");\n\n        Attributes attributes = new Attributes();\n        Attribute attribute = new Attribute(\"href\", \"nofollow\");\n        attributes.put(attribute);\n        Element element = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertTrue(safelist.isSafeAttribute(\"a\", element, attribute));\n    }\n\n    @Test\n    public void testAddEnforcedAttribute_validTagAttributeAndValue_isNotSafeAttribute() {\n        safelist.addTags(\"a\");\n        safelist.addAttributes(\"a\", \"href\");\n        safelist.addEnforcedAttribute(\"a\", \"href\", \"nofollow\");\n\n        Attributes attributes = new Attributes();\n        Attribute attribute = new Attribute(\"href\", \"invalidValue\");\n        attributes.put(attribute);\n        Element element = new Element(Tag.valueOf(\"a\"), \"\", attributes);\n\n        assertFalse(safelist.isSafeAttribute(\"a\", element, attribute));\n    }\n}\n"}]