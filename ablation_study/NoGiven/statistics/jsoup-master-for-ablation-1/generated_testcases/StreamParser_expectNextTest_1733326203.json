[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.io.IOException;\n\npublic class StreamParser_expectNextTest {\n\n    @Test\n    public void testExpectNext_ElementFound() throws IOException {\n        StreamParser parser = new StreamParser(Parser.htmlParser());\n        parser.parse(\"<html><body><div id='test'>Test</div></body></html>\", \"http://example.com\");\n\n        Element result = parser.expectNext(\"#test\");\n        assertNotNull(result);\n        assertEquals(\"test\", result.id());\n    }\n\n    @Test\n    public void testExpectNext_ElementNotFound() {\n        StreamParser parser = new StreamParser(Parser.htmlParser());\n        parser.parse(\"<html><body><div id='test'>Test</div></body></html>\", \"http://example.com\");\n\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            parser.expectNext(\"#nonexistent\");\n        });\n\n        String expectedMessage = \"No elements matched the query '#nonexistent' in the document.\";\n        String actualMessage = exception.getMessage();\n\n        assertTrue(actualMessage.contains(expectedMessage));\n    }\n}\n"}]