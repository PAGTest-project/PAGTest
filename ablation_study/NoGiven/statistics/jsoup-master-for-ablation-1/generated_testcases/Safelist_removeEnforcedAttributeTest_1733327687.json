[{"strategy": "generate", "code": "\npackage org.jsoup.safety;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Safelist_removeEnforcedAttributeTest {\n    private Safelist safelist;\n\n    @BeforeEach\n    public void setUp() {\n        safelist = new Safelist();\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_AttributeRemoved() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertFalse(enforcedAttributes.hasKey(\"rel\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_TagRemovedWhenNoAttributesLeft() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n        assertFalse(safelist.enforcedAttributes.containsKey(TagName.valueOf(\"a\")));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_TagNotRemovedWhenOtherAttributesExist() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.addEnforcedAttribute(\"a\", \"href\", \"http://example.com\");\n        safelist.removeEnforcedAttribute(\"a\", \"rel\");\n        assertTrue(safelist.enforcedAttributes.containsKey(TagName.valueOf(\"a\")));\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertTrue(enforcedAttributes.hasKey(\"href\"));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_NoEffectWhenTagNotAllowed() {\n        safelist.removeEnforcedAttribute(\"invalidTag\", \"rel\");\n        assertFalse(safelist.enforcedAttributes.containsKey(TagName.valueOf(\"invalidTag\")));\n    }\n\n    @Test\n    public void testRemoveEnforcedAttribute_NoEffectWhenAttributeNotEnforced() {\n        safelist.addEnforcedAttribute(\"a\", \"rel\", \"nofollow\");\n        safelist.removeEnforcedAttribute(\"a\", \"invalidAttribute\");\n        Attributes enforcedAttributes = safelist.getEnforcedAttributes(\"a\");\n        assertTrue(enforcedAttributes.hasKey(\"rel\"));\n    }\n}\n"}]