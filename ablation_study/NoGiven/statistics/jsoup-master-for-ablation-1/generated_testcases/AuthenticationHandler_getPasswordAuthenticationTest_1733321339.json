[{"strategy": "retry", "code": "\npackage org.jsoup.helper;\n\nimport org.jspecify.annotations.Nullable;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.net.HttpURLConnection;\nimport java.net.PasswordAuthentication;\n\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.mockito.Mockito.*;\n\nclass AuthenticationHandler_getPasswordAuthenticationTest {\n\n    @Test\n    void testGetPasswordAuthentication_NoDelegate() {\n        AuthenticationHandler handler = new AuthenticationHandler();\n        AuthenticationHandler.AuthShim mockHandler = mock(AuthenticationHandler.AuthShim.class);\n        AuthenticationHandler.handler = mockHandler;\n        when(mockHandler.get(handler)).thenReturn(null);\n\n        PasswordAuthentication result = handler.getPasswordAuthentication();\n        assertNull(result);\n    }\n\n    @Test\n    void testGetPasswordAuthentication_MaxAttemptsExceeded() {\n        AuthenticationHandler handler = new AuthenticationHandler();\n        AuthenticationHandler delegate = new AuthenticationHandler();\n        delegate.attemptCount = AuthenticationHandler.MaxAttempts + 1;\n        AuthenticationHandler.AuthShim mockHandler = mock(AuthenticationHandler.AuthShim.class);\n        AuthenticationHandler.handler = mockHandler;\n        when(mockHandler.get(handler)).thenReturn(delegate);\n\n        PasswordAuthentication result = handler.getPasswordAuthentication();\n        assertNull(result);\n    }\n\n    @Test\n    void testGetPasswordAuthentication_AuthNull() {\n        AuthenticationHandler handler = new AuthenticationHandler();\n        AuthenticationHandler delegate = new AuthenticationHandler();\n        delegate.auth = null;\n        AuthenticationHandler.AuthShim mockHandler = mock(AuthenticationHandler.AuthShim.class);\n        AuthenticationHandler.handler = mockHandler;\n        when(mockHandler.get(handler)).thenReturn(delegate);\n\n        PasswordAuthentication result = handler.getPasswordAuthentication();\n        assertNull(result);\n    }\n\n    @Test\n    void testGetPasswordAuthentication_Success() {\n        AuthenticationHandler handler = new AuthenticationHandler();\n        AuthenticationHandler delegate = new AuthenticationHandler();\n        RequestAuthenticator auth = mock(RequestAuthenticator.class);\n        delegate.auth = auth;\n        AuthenticationHandler.AuthShim mockHandler = mock(AuthenticationHandler.AuthShim.class);\n        AuthenticationHandler.handler = mockHandler;\n        when(mockHandler.get(handler)).thenReturn(delegate);\n        when(auth.authenticate(any())).thenReturn(new PasswordAuthentication(\"user\", \"pass\".toCharArray()));\n\n        PasswordAuthentication result = handler.getPasswordAuthentication();\n        assertNotNull(result);\n    }\n}\n"}]