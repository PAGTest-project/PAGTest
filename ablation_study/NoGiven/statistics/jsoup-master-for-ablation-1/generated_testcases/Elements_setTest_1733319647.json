[{"strategy": "generate", "code": "\npackage org.jsoup.select;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Elements_setTest {\n\n    private Elements elements;\n\n    @BeforeEach\n    public void setUp() {\n        Document doc = Jsoup.parse(\"<div><p id='p1'>Paragraph 1</p><p id='p2'>Paragraph 2</p></div>\");\n        elements = new Elements(doc.select(\"p\"));\n    }\n\n    @Test\n    public void testSetElementSuccess() {\n        Element newElement = new Element(\"p\").attr(\"id\", \"p3\").text(\"New Paragraph\");\n        Element oldElement = elements.set(0, newElement);\n\n        assertEquals(\"p1\", oldElement.id());\n        assertEquals(\"p3\", elements.get(0).id());\n        assertEquals(\"New Paragraph\", elements.get(0).text());\n    }\n\n    @Test\n    public void testSetElementNull() {\n        assertThrows(IllegalArgumentException.class, () -> {\n            elements.set(0, null);\n        });\n    }\n\n    @Test\n    public void testSetElementOutOfBounds() {\n        Element newElement = new Element(\"p\").attr(\"id\", \"p3\").text(\"New Paragraph\");\n        assertThrows(IndexOutOfBoundsException.class, () -> {\n            elements.set(elements.size(), newElement);\n        });\n    }\n\n    @Test\n    public void testSetElementReplaceWith() {\n        Element newElement = new Element(\"p\").attr(\"id\", \"p3\").text(\"New Paragraph\");\n        Element oldElement = elements.set(0, newElement);\n\n        assertEquals(\"p1\", oldElement.id());\n        assertEquals(\"p3\", elements.get(0).id());\n        assertEquals(\"New Paragraph\", elements.get(0).text());\n\n        // Verify that the old element's replaceWith method was called\n        assertEquals(newElement, oldElement.nextElementSibling());\n    }\n}\n"}]