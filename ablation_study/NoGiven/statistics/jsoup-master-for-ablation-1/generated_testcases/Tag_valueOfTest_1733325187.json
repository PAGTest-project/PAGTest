[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Tag_valueOfTest {\n\n    private ParseSettings settings;\n\n    @BeforeEach\n    public void setUp() {\n        settings = new ParseSettings(true, true);\n    }\n\n    @Test\n    public void testValueOfKnownTag() {\n        Tag tag = Tag.valueOf(\"div\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"div\", tag.getName());\n        assertEquals(\"div\", tag.normalName());\n    }\n\n    @Test\n    public void testValueOfUnknownTag() {\n        Tag tag = Tag.valueOf(\"unknownTag\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertFalse(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"unknownTag\", tag.getName());\n        assertEquals(\"unknowntag\", tag.normalName());\n    }\n\n    @Test\n    public void testValueOfNormalizedTag() {\n        Tag tag = Tag.valueOf(\"DiV\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"DiV\", tag.getName());\n        assertEquals(\"div\", tag.normalName());\n    }\n\n    @Test\n    public void testValueOfPreserveTagCase() {\n        settings = new ParseSettings(true, false);\n        Tag tag = Tag.valueOf(\"DiV\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"DiV\", tag.getName());\n        assertEquals(\"div\", tag.normalName());\n    }\n\n    @Test\n    public void testValueOfDifferentNamespace() {\n        Tag tag = Tag.valueOf(\"svg\", \"http://www.w3.org/2000/svg\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"svg\", tag.getName());\n        assertEquals(\"svg\", tag.normalName());\n        assertEquals(\"http://www.w3.org/2000/svg\", tag.namespace());\n    }\n\n    @Test\n    public void testValueOfEmptyTag() {\n        Tag tag = Tag.valueOf(\"img\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"img\", tag.getName());\n        assertEquals(\"img\", tag.normalName());\n        assertTrue(tag.isEmpty());\n    }\n\n    @Test\n    public void testValueOfBlockTag() {\n        Tag tag = Tag.valueOf(\"div\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"div\", tag.getName());\n        assertEquals(\"div\", tag.normalName());\n        assertTrue(tag.isBlock());\n    }\n\n    @Test\n    public void testValueOfInlineTag() {\n        Tag tag = Tag.valueOf(\"span\", \"http://www.w3.org/1999/xhtml\", settings);\n        assertTrue(Tag.isKnownTag(tag.getName()));\n        assertEquals(\"span\", tag.getName());\n        assertEquals(\"span\", tag.normalName());\n        assertFalse(tag.isBlock());\n    }\n}\n"}]