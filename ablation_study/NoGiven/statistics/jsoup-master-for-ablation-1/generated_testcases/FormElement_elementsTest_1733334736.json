[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FormElement_elementsTest {\n    private FormElement formElement;\n\n    @BeforeEach\n    public void setUp() {\n        formElement = new FormElement(Tag.valueOf(\"form\"), null, null);\n    }\n\n    @Test\n    public void testElementsWithNoLinkedElements() {\n        Elements elements = formElement.elements();\n        assertTrue(elements.isEmpty());\n    }\n\n    @Test\n    public void testElementsWithLinkedElements() {\n        Element element1 = new Element(Tag.valueOf(\"input\"), null);\n        Element element2 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.addElement(element1);\n        formElement.addElement(element2);\n\n        Elements elements = formElement.elements();\n        assertEquals(2, elements.size());\n        assertTrue(elements.contains(element1));\n        assertTrue(elements.contains(element2));\n    }\n\n    @Test\n    public void testElementsWithRemovedLinkedElement() {\n        Element element1 = new Element(Tag.valueOf(\"input\"), null);\n        Element element2 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.addElement(element1);\n        formElement.addElement(element2);\n        formElement.removeChild(element1);\n\n        Elements elements = formElement.elements();\n        assertEquals(1, elements.size());\n        assertTrue(elements.contains(element2));\n        assertFalse(elements.contains(element1));\n    }\n\n    @Test\n    public void testElementsWithFormChildren() {\n        String html = \"<form><input name='one' value='two'><select name='three'><option value='not'>\" +\n                \"<option value='four' selected><option value='five' selected></select></form>\";\n        Document doc = Jsoup.parse(html);\n        formElement = (FormElement) doc.select(\"form\").first();\n\n        Elements elements = formElement.elements();\n        assertEquals(2, elements.size());\n        assertTrue(elements.stream().anyMatch(el -> el.attr(\"name\").equals(\"one\")));\n        assertTrue(elements.stream().anyMatch(el -> el.attr(\"name\").equals(\"three\")));\n    }\n\n    @Test\n    public void testElementsWithFormChildrenAndLinkedElements() {\n        String html = \"<form><input name='one' value='two'></form>\";\n        Document doc = Jsoup.parse(html);\n        formElement = (FormElement) doc.select(\"form\").first();\n\n        Element element1 = new Element(Tag.valueOf(\"input\"), null);\n        formElement.addElement(element1);\n\n        Elements elements = formElement.elements();\n        assertEquals(2, elements.size());\n        assertTrue(elements.stream().anyMatch(el -> el.attr(\"name\").equals(\"one\")));\n        assertTrue(elements.contains(element1));\n    }\n}\n"}]