[{"strategy": "generate", "code": "\npackage org.jsoup.parser;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class TokenQueue_consumeTest {\n    private TokenQueue tokenQueue;\n\n    @BeforeEach\n    public void setUp() {\n        tokenQueue = new TokenQueue(\"validsequence\");\n    }\n\n    @Test\n    public void testConsumeValidSequence() {\n        tokenQueue.consumeWhitespace();\n        assertDoesNotThrow(() -> tokenQueue.consume(\"valid\"));\n        assertEquals(5, tokenQueue.pos);\n    }\n\n    @Test\n    public void testConsumeInvalidSequence() {\n        tokenQueue.consumeWhitespace();\n        assertThrows(IllegalStateException.class, () -> tokenQueue.consume(\"invalid\"));\n    }\n\n    @Test\n    public void testConsumeSequenceTooLong() {\n        tokenQueue.consumeWhitespace();\n        assertThrows(IllegalStateException.class, () -> tokenQueue.consume(\"validsequenceandmore\"));\n    }\n\n    @Test\n    public void testConsumeEmptyQueue() {\n        TokenQueue emptyQueue = new TokenQueue(\"\");\n        assertThrows(IllegalStateException.class, () -> emptyQueue.consume(\"any\"));\n    }\n\n    @Test\n    public void testConsumeWithWhitespace() {\n        TokenQueue queueWithWhitespace = new TokenQueue(\"  validsequence\");\n        queueWithWhitespace.consumeWhitespace();\n        assertDoesNotThrow(() -> queueWithWhitespace.consume(\"valid\"));\n        assertEquals(7, queueWithWhitespace.pos);\n    }\n\n    @Test\n    public void testConsumeWordBeforeSequence() {\n        TokenQueue queueWithWord = new TokenQueue(\"wordvalidsequence\");\n        assertEquals(\"word\", queueWithWord.consumeWord());\n        assertDoesNotThrow(() -> queueWithWord.consume(\"valid\"));\n        assertEquals(9, queueWithWord.pos);\n    }\n\n    @Test\n    public void testConsumeToEnhancement() {\n        TokenQueue queue = new TokenQueue(\"validsequence\");\n        assertEquals(\"valid\", queue.consumeTo(\"sequence\"));\n        assertEquals(5, queue.pos);\n    }\n\n    @Test\n    public void testConsumeToIgnoreCaseEnhancement() {\n        TokenQueue queue = new TokenQueue(\"VALIDsequence\");\n        assertEquals(\"VALID\", queue.consumeToIgnoreCase(\"sequence\"));\n        assertEquals(5, queue.pos);\n    }\n}\n"}]