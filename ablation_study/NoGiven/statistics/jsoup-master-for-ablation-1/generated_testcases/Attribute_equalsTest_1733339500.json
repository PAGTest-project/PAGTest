[{"strategy": "generate", "code": "\npackage org.jsoup.nodes;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Attribute_equalsTest {\n    private Attribute attribute1;\n    private Attribute attribute2;\n\n    @BeforeEach\n    public void setUp() {\n        attribute1 = new Attribute(\"key1\", \"value1\");\n        attribute2 = new Attribute(\"key2\", \"value2\");\n    }\n\n    @Test\n    public void testEqualsSameObject() {\n        assertTrue(attribute1.equals(attribute1));\n    }\n\n    @Test\n    public void testEqualsNull() {\n        assertFalse(attribute1.equals(null));\n    }\n\n    @Test\n    public void testEqualsDifferentClass() {\n        assertFalse(attribute1.equals(\"not an Attribute\"));\n    }\n\n    @Test\n    public void testEqualsSameKeyAndValue() {\n        Attribute sameAttribute = new Attribute(\"key1\", \"value1\");\n        assertTrue(attribute1.equals(sameAttribute));\n    }\n\n    @Test\n    public void testEqualsDifferentKey() {\n        Attribute differentKey = new Attribute(\"key3\", \"value1\");\n        assertFalse(attribute1.equals(differentKey));\n    }\n\n    @Test\n    public void testEqualsDifferentValue() {\n        Attribute differentValue = new Attribute(\"key1\", \"value3\");\n        assertFalse(attribute1.equals(differentValue));\n    }\n\n    @Test\n    public void testEqualsDifferentKeyAndValue() {\n        assertFalse(attribute1.equals(attribute2));\n    }\n\n    @Test\n    public void testHashCodeConsistency() {\n        Attribute sameAttribute = new Attribute(\"key1\", \"value1\");\n        assertEquals(attribute1.hashCode(), sameAttribute.hashCode());\n    }\n\n    @Test\n    public void testHashCodeDifferentKey() {\n        Attribute differentKey = new Attribute(\"key3\", \"value1\");\n        assertNotEquals(attribute1.hashCode(), differentKey.hashCode());\n    }\n\n    @Test\n    public void testHashCodeDifferentValue() {\n        Attribute differentValue = new Attribute(\"key1\", \"value3\");\n        assertNotEquals(attribute1.hashCode(), differentValue.hashCode());\n    }\n\n    @Test\n    public void testHashCodeDifferentKeyAndValue() {\n        assertNotEquals(attribute1.hashCode(), attribute2.hashCode());\n    }\n}\n"}]