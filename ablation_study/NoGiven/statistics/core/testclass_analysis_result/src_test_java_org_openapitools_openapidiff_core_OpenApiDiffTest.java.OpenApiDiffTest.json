{"file_path": "src/test/java/org/openapitools/openapidiff/core/OpenApiDiffTest.java", "testclass_name": "OpenApiDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import io.swagger.parser.OpenAPIParser;", "import io.swagger.v3.oas.models.OpenAPI;", "import io.swagger.v3.parser.core.models.ParseOptions;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import java.util.List;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.model.ChangedOperation;", "import org.openapitools.openapidiff.core.model.DiffResult;", "import org.openapitools.openapidiff.core.model.Endpoint;", "import org.openapitools.openapidiff.core.output.HtmlRender;", "import org.openapitools.openapidiff.core.output.JsonRender;", "import org.openapitools.openapidiff.core.output.MarkdownRender;", "import org.openapitools.openapidiff.core.output.Render;"], "name": "OpenApiDiffTest", "description": "Test suite for comparing OpenAPI specifications and rendering the differences in various formats.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}, {"name": "OPENAPI_EMPTY_DOC", "type": "final String"}, {"name": "OPENAPI_DOC3", "type": "final String"}, {"name": "PARSER", "type": "static final OpenAPIParser"}], "methods": [{"name": "loadSpecFromFile", "signature": "private static OpenAPI loadSpecFromFile(String specFile)"}]}, "fixtures": [], "test_cases": [{"name": "testEqual", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests that two identical OpenAPI documents are considered equal."}, {"name": "testNewApi", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "Endpoint", "ChangedOperation", "HtmlRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_EMPTY_DOC", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(List<Endpoint>).isNotEmpty()", "TestUtils.assertThat(List<Endpoint>).isEmpty()", "TestUtils.assertThat(List<ChangedOperation>).isEmpty()", "TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the addition of new endpoints in an OpenAPI document."}, {"name": "testDeprecatedApi", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "Endpoint", "ChangedOperation", "HtmlRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_EMPTY_DOC", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(List<Endpoint>).isEmpty()", "TestUtils.assertThat(List<Endpoint>).isNotEmpty()", "TestUtils.assertThat(List<ChangedOperation>).isEmpty()", "TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the deprecation of endpoints in an OpenAPI document."}, {"name": "testDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "ChangedOperation", "HtmlRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(List<ChangedOperation>).isNotEmpty()", "TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the difference between two OpenAPI documents."}, {"name": "testDiffAndMarkdown", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "MarkdownRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the difference between two OpenAPI documents and renders the result in Markdown format."}, {"name": "testDiffAndJson", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "JsonRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the difference between two OpenAPI documents and renders the result in JSON format."}, {"name": "testComparisonConsistency", "primary_tested": ["OpenApiCompare.fromSpecifications(OpenAPI,OpenAPI)"], "associated_methods": ["ChangedOpenApi.isChanged()", "ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "OpenAPI", "DiffResult"], "class_members": [{"name": "OPENAPI_DOC3", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(DiffResult).isEqualTo(DiffResult.NO_CHANGES)", "TestUtils.assertThat(List<Endpoint>).isEmpty()", "TestUtils.assertThat(List<ChangedOperation>).isEmpty()"]}, "category": "unit", "description": "Tests the consistency of OpenAPI comparison results when comparing the same specifications multiple times."}, {"name": "testSpecObjectsAreNotChangesAfterComparison", "primary_tested": ["OpenApiCompare.fromSpecifications(OpenAPI,OpenAPI)"], "associated_methods": ["loadSpecFromFile(String)"], "external_dependencies": {"modules": ["OpenApiCompare", "OpenAPI"], "class_members": [{"name": "OPENAPI_DOC3", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(OpenAPI).isEqualTo(OpenAPI)"]}, "category": "unit", "description": "Tests that the OpenAPI specification objects remain unchanged after comparison."}]}