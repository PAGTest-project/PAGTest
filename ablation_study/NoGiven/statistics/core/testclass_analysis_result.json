[{"file_path": "src/test/java/org/openapitools/openapidiff/core/ReferenceDiffCacheTest.java", "testclass_name": "ReferenceDiffCacheTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import org.junit.jupiter.api.Test;"], "name": "ReferenceDiffCacheTest", "description": "Test class for verifying the behavior of the ReferenceDiffCache.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}]}, "test_cases": [{"name": "testDiffSame", "primary_tested": [], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests that the OpenAPI documents are the same."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/AllOfOneOfDiffTest.java", "testclass_name": "AllOfOneOfDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;"], "name": "AllOfOneOfDiffTest", "description": "Test for checking if allOf referring to oneOf schemas are supported.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "allOfReferringToOneOfSchemasAreSupported", "primary_tested": ["ChangedOpenApi.isCoreChanged()"], "external_dependencies": {"modules": ["ChangedOpenApi", "OpenApiCompare"]}, "category": "unit", "description": "Tests if allOf referring to oneOf schemas are supported by comparing two OpenAPI specifications."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/HtmlRenderTest.java", "testclass_name": "HtmlRenderTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.HtmlRender;"], "name": "HtmlRenderTest", "description": "Tests for the HtmlRender class to ensure it handles rendering without failures when properties are removed.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "renderDoesNotFailWhenPropertyHasBeenRemoved", "primary_tested": ["HtmlRender.render(ChangedOpenApi,OutputStreamWriter)"], "associated_methods": [], "external_dependencies": {"modules": ["HtmlRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the HtmlRender does not fail when rendering a diff where a property has been removed."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/AdditionalPropertiesTest.java", "testclass_name": "AdditionalPropertiesTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.ConsoleRender;"], "name": "AdditionalPropertiesTest", "description": "Tests for additional properties support in OpenAPI diff.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "booleanAdditionalPropertiesAreSupported", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "associated_methods": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "ConsoleRender", "OpenApiCompare"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the rendering of additional properties in OpenAPI diff to ensure the output is not blank."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/RequestDiffTest.java", "testclass_name": "RequestDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiChangedEndpoints;", "import org.junit.jupiter.api.Test;"], "name": "RequestDiffTest", "description": "Test class for comparing differences in OpenAPI request definitions.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}]}, "test_cases": [{"name": "testDiffDifferent", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints between two different documents."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/JsonRenderTest.java", "testclass_name": "JsonRenderTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.JsonRender;"], "name": "JsonRenderTest", "description": "Unit tests for the JsonRender class, ensuring that rendering does not fail under specific conditions.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "renderDoesNotFailWhenPropertyHasBeenRemoved", "primary_tested": ["JsonRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["JsonRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not fail when a property has been removed from the OpenAPI specification."}, {"name": "renderDoesNotFailForJsr310Types", "primary_tested": ["JsonRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["JsonRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not fail when dealing with JSR310 types in the OpenAPI specification."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/OperationDiffTest.java", "testclass_name": "OperationDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.model.DiffResult;"], "name": "OperationDiffTest", "description": "Tests for the OperationDiff functionality in OpenApiDiff.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}]}, "test_cases": [{"name": "testContentDiffWithOneEmptyMediaType", "primary_tested": ["ChangedOpenApi.isChanged()"], "associated_methods": ["ChangedOpenApi.isDifferent()", "ChangedOpenApi.getChangedOperations()", "ChangedOperation.getOperationId()", "OperationId.isDifferent()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "DiffResult", "ChangedOperation", "OperationId"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the content difference with one empty media type in the OpenAPI documents."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ResponseHeaderDiffTest.java", "testclass_name": "ResponseHeaderDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.util.Map;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedHeaders;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.model.ChangedResponse;"], "name": "ResponseHeaderDiffTest", "description": "Tests for differences in response headers between two OpenAPI documents.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}]}, "fixtures": [], "test_cases": [{"name": "testDiffDifferent", "primary_tested": ["ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()", "ChangedResponse.getHeaders()", "ChangedHeaders.isDifferent()", "ChangedHeaders.getChanged()", "ChangedHeaders.getIncreased()", "ChangedHeaders.getMissing()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "ChangedResponse", "ChangedHeaders"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the difference in response headers between two OpenAPI documents, ensuring that the changed, increased, and missing headers are correctly identified."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/AddPropDiffTest.java", "testclass_name": "AddPropDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardCompatible;", "import org.junit.jupiter.api.Test;"], "name": "AddPropDiffTest", "description": "Tests for comparing OpenAPI documents to check if they are the same or backward compatible.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}]}, "test_cases": [{"name": "testDiffSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}]}, "category": "unit", "description": "Tests if two identical OpenAPI documents are considered equal."}, {"name": "testDiffDifferent", "primary_tested": ["TestUtils.assertOpenApiBackwardCompatible(String,String,boolean)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests if an OpenAPI document is backward compatible with another."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ArrayDiffTest.java", "testclass_name": "ArrayDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiChangedEndpoints;", "import org.junit.jupiter.api.Test;"], "name": "ArrayDiffTest", "description": "Tests for comparing differences in OpenAPI array structures.", "class_members": {"variables": [{"name": "OPENAPI_DOC31", "type": "final String"}, {"name": "OPENAPI_DOC32", "type": "final String"}]}, "test_cases": [{"name": "testArrayDiffDifferent", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC31", "type": "variable"}, {"name": "OPENAPI_DOC32", "type": "variable"}]}, "category": "unit", "description": "Tests the functionality to detect changes in endpoints between two OpenAPI documents."}, {"name": "testArrayDiffSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC31", "type": "variable"}]}, "category": "unit", "description": "Tests the functionality to assert that two OpenAPI documents are identical."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/OperationBCTest.java", "testclass_name": "OperationBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import org.junit.jupiter.api.Test;"], "name": "OperationBCTest", "description": "Tests to verify the backward compatibility of operations in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Tests that the specification has changed but remains compatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/RequestBodyBCTest.java", "testclass_name": "RequestBodyBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "RequestBodyBCTest", "description": "Tests for backward compatibility of request bodies in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged when compared to itself."}, {"name": "requiredChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED"]}, "category": "unit", "description": "Tests that the specification is incompatible when the required property of a request body is changed."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/Swagger2CompatibilityTest.java", "testclass_name": "Swagger2CompatibilityTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import org.junit.jupiter.api.Disabled;", "import org.junit.jupiter.api.Test;"], "name": "Swagger2CompatibilityTest", "description": "Tests for compatibility between Swagger 2 and OpenAPI 3 documents.", "class_members": {"variables": [{"name": "SWAGGER_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}]}, "test_cases": [{"name": "testEqual", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "SWAGGER_DOC1", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests the equality of the same Swagger 2 document."}, {"name": "testSwagger2ToOpenapi3", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "SWAGGER_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests the compatibility between a Swagger 2 document and an OpenAPI 3 document."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/AddPropPutDiffTest.java", "testclass_name": "AddPropPutDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;"], "name": "AddPropPutDiffTest", "description": "Tests for the OpenAPI diff functionality, specifically focusing on the compatibility of additional properties in PUT operations.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}]}, "test_cases": [{"name": "testDiffSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests that the OpenAPI documents are the same."}, {"name": "testFieldAdditionalInPutApiIsCompatible", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isDifferent()", "ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the compatibility of additional properties in PUT operations by comparing two OpenAPI documents."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ParametersOverloadingTest.java", "testclass_name": "ParametersOverloadingTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.junit.jupiter.api.Assertions.*;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import org.junit.jupiter.api.Test;"], "name": "ParametersOverloadingTest", "description": "Tests for handling overloaded and duplicated parameter types in OpenAPI specifications.", "class_members": {"variables": [{"name": "OVERLOADED_PARAMETERS", "type": "final String"}, {"name": "DUPLICATED_PARAMETER_TYPES", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "testDiffWithOverloadedParameterTypes", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["OpenApiCompare", "TestUtils"], "class_members": [{"name": "OVERLOADED_PARAMETERS", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI specifications with overloaded parameter types."}, {"name": "testDiffWithDuplicatedParameterTypes", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["OpenApiCompare"], "class_members": [{"name": "DUPLICATED_PARAMETER_TYPES", "type": "variable"}]}, "category": "unit", "description": "Tests the comparison of OpenAPI specifications with duplicated parameter types, expecting an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/PathsBCTest.java", "testclass_name": "PathsBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "PathsBCTest", "description": "Tests for backward compatibility of API paths.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "decreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED"]}, "category": "unit", "description": "Tests that the specification decreases in compatibility."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/PathParameterSchemaDiffTest.java", "testclass_name": "PathParameterSchemaDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import org.junit.jupiter.api.Assertions;", "import org.junit.jupiter.api.DisplayName;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.slf4j.Logger;", "import org.slf4j.LoggerFactory;"], "name": "PathParameterSchemaDiffTest", "description": "Tests for differences in path parameters and schemas in OpenAPI documents.", "class_members": {"variables": [{"name": "TEST_MSG_1", "type": "final String"}, {"name": "TEST_MSG_2", "type": "final String"}]}, "test_cases": [{"name": "pathSamePathParamsDiffParamSameAsInPathButSchemaDiff", "primary_tested": ["ChangedOpenApi.isDifferent()"], "associated_methods": ["ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["Logger", "LoggerFactory", "OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "TEST_MSG_1", "type": "variable"}]}, "category": "unit", "description": "Tests the scenario where the path is the same but the path parameters are different, parameters in the `Parameters` section match the path parameter, but the schema is different."}, {"name": "pathSamePathParamsDiffParamNameDiffSchemaSame", "primary_tested": ["ChangedOpenApi.isDifferent()"], "associated_methods": ["ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["Logger", "LoggerFactory", "OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "TEST_MSG_2", "type": "variable"}]}, "category": "unit", "description": "Tests the scenario where the path is the same but the path parameters are different, parameters in the `Parameters` section match the path parameter, and the schema is the same."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/SecurityRequirementBCTest.java", "testclass_name": "SecurityRequirementBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.*;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SECURITY_REQUIREMENT_SCHEMES_INCREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "SecurityRequirementBCTest", "description": "Tests for backward compatibility of security requirements in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "schemesIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.SECURITY_REQUIREMENT_SCHEMES_INCREASED"]}, "category": "unit", "description": "Tests that an increase in security requirement schemes makes the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/LargeSchemaTest.java", "testclass_name": "LargeSchemaTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardIncompatible;", "import static org.slf4j.LoggerFactory.getLogger;", "import io.swagger.v3.core.util.Yaml;", "import io.swagger.v3.oas.models.Components;", "import io.swagger.v3.oas.models.OpenAPI;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import io.swagger.v3.oas.models.Paths;", "import io.swagger.v3.oas.models.media.ArraySchema;", "import io.swagger.v3.oas.models.media.Content;", "import io.swagger.v3.oas.models.media.MediaType;", "import io.swagger.v3.oas.models.media.ObjectSchema;", "import io.swagger.v3.oas.models.media.Schema;", "import io.swagger.v3.oas.models.media.StringSchema;", "import io.swagger.v3.oas.models.parameters.RequestBody;", "import io.swagger.v3.oas.models.responses.ApiResponse;", "import io.swagger.v3.oas.models.responses.ApiResponses;", "import java.io.File;", "import java.io.IOException;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.List;", "import java.util.Map;", "import java.util.Random;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.slf4j.Logger;"], "name": "LargeSchemaTest", "description": "Test suite for comparing large generated OpenAPI specifications.", "class_members": {"variables": [{"name": "LOG", "type": "Logger"}], "methods": [{"name": "assertOpenApiAreEquals", "signature": "void assertOpenApiAreEquals(OpenAPI oldSpec, OpenAPI newSpec)"}, {"name": "assertOpenApiBackwardIncompatible", "signature": "void assertOpenApiBackwardIncompatible(OpenAPI oldSpec, OpenAPI newSpec)"}, {"name": "largeGeneratedApi", "signature": "OpenAPI largeGeneratedApi()"}, {"name": "refSchema", "signature": "Schema refSchema(int i)"}, {"name": "modelName", "signature": "String modelName(int i)"}]}, "fixtures": [], "test_cases": [{"name": "testGeneratedApiSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(OpenAPI,OpenAPI)"], "external_dependencies": {"modules": ["OpenAPI", "TestUtils"], "class_members": [{"name": "largeGeneratedApi", "type": "method"}]}, "category": "unit", "description": "Tests if the generated OpenAPI specification is the same as itself."}, {"name": "testGeneratedApiDifferent", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(OpenAPI,OpenAPI)"], "external_dependencies": {"modules": ["OpenAPI", "TestUtils"], "class_members": [{"name": "largeGeneratedApi", "type": "method"}]}, "category": "unit", "description": "Tests if the generated OpenAPI specification is different from another generated one."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/OpenApiBCTest.java", "testclass_name": "OpenApiBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "OpenApiBCTest", "description": "Tests for backward compatibility of OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Tests that the specification has changed but remains compatible."}, {"name": "endpointsDecreased", "primary_tested": [], "associated_methods": ["BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED"], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that the specification has decreased endpoints, making it incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/HeadersBCTest.java", "testclass_name": "HeadersBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_HEADERS_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "HeadersBCTest", "description": "Tests for backward compatibility of response headers in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "responseDecreased", "primary_tested": [], "associated_methods": ["BackwardIncompatibleProp.RESPONSE_HEADERS_DECREASED"], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "RESPONSE_HEADERS_DECREASED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to a decrease in response headers."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/ApiResponseBCTest.java", "testclass_name": "ApiResponseBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_RESPONSES_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "ApiResponseBCTest", "description": "Tests for backward compatibility of API responses.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "decreased", "primary_tested": [], "associated_methods": ["BackwardIncompatibleProp.RESPONSE_RESPONSES_DECREASED"], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "RESPONSE_RESPONSES_DECREASED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that the specification has decreased responses, making it incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/MarkdownRenderTest.java", "testclass_name": "MarkdownRenderTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.MarkdownRender;"], "name": "MarkdownRenderTest", "description": "Unit tests for the MarkdownRender class, ensuring that various scenarios do not cause failures or stack overflows.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "renderDoesNotFailWhenPropertyHasBeenRemoved", "primary_tested": ["MarkdownRender.render(ChangedOpenApi,OutputStreamWriter)"], "associated_methods": [], "external_dependencies": {"modules": ["MarkdownRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not fail when a property has been removed from the OpenAPI specification."}, {"name": "renderDoesNotCauseStackOverflowWithRecursiveDefinitions", "primary_tested": ["MarkdownRender.render(ChangedOpenApi,OutputStreamWriter)"], "associated_methods": [], "external_dependencies": {"modules": ["MarkdownRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not cause a stack overflow with recursive definitions in the OpenAPI specification."}, {"name": "renderDoesNotFailWhenHTTPStatusCodeIsRange", "primary_tested": ["MarkdownRender.render(ChangedOpenApi,OutputStreamWriter)"], "associated_methods": [], "external_dependencies": {"modules": ["MarkdownRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not fail when an HTTP status code is a range in the OpenAPI specification."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/SecurityRequirementsBCTest.java", "testclass_name": "SecurityRequirementsBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.*;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SECURITY_REQUIREMENTS_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "SecurityRequirementsBCTest", "description": "Tests for backward compatibility of security requirements in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "decreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.SECURITY_REQUIREMENTS_DECREASED"]}, "category": "unit", "description": "Tests that decreasing security requirements makes the specification incompatible."}, {"name": "schemeTypeChanged", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that changing the scheme type makes the specification backward incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ResponseAddedContentSchemaTest.java", "testclass_name": "ResponseAddedContentSchemaTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import io.swagger.v3.oas.models.media.Content;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import java.util.Map;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.model.ChangedResponse;", "import org.openapitools.openapidiff.core.output.ConsoleRender;", "import org.openapitools.openapidiff.core.output.HtmlRender;", "import org.openapitools.openapidiff.core.output.MarkdownRender;", "import org.openapitools.openapidiff.core.output.Render;"], "name": "ResponseAddedContentSchemaTest", "description": "Tests for the addition of content schema in API responses.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}]}, "fixtures": [], "test_cases": [{"name": "testDiffDifferent", "primary_tested": ["ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()", "ChangedResponse.getOldApiResponse()", "ChangedResponse.getNewApiResponse()"], "associated_methods": ["ChangedOpenApi.getChangedOperations().get(0).getApiResponses().getChanged()"], "external_dependencies": {"modules": ["ChangedOpenApi", "ChangedResponse", "Content", "OpenApiCompare"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the difference in API responses when content schema is added."}, {"name": "testDiffCanBeRendered", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)", "HtmlRender.render(ChangedOpenApi,OutputStreamWriter)", "MarkdownRender.render(ChangedOpenApi,OutputStreamWriter)"], "associated_methods": [], "external_dependencies": {"modules": ["ChangedOpenApi", "ConsoleRender", "HtmlRender", "MarkdownRender", "OpenApiCompare", "OutputStreamWriter"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests if the difference in API responses can be rendered using different renderers."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/MaxLengthBCTest.java", "testclass_name": "MaxLengthBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_MAX_LENGTH_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_MAX_LENGTH_INCREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "MaxLengthBCTest", "description": "Tests for backward compatibility checks related to max length properties in API specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "maxLengthUnchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Asserts that the API specification remains unchanged when the max length is not modified."}, {"name": "requestMaxLengthDecreased", "primary_tested": [], "associated_methods": ["BackwardIncompatibleProp.REQUEST_MAX_LENGTH_DECREASED"], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Asserts that the API specification is incompatible when the request max length is decreased."}, {"name": "responseMaxLengthIncreased", "primary_tested": [], "associated_methods": ["BackwardIncompatibleProp.RESPONSE_MAX_LENGTH_INCREASED"], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Asserts that the API specification is incompatible when the response max length is increased."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/ContentBCTest.java", "testclass_name": "ContentBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_CONTENT_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_CONTENT_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "ContentBCTest", "description": "Tests for backward compatibility of content changes in API specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Asserts that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Asserts that the specification has changed but remains compatible."}, {"name": "requestDecreased", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "REQUEST_CONTENT_DECREASED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Asserts that the request content has decreased, making the specification incompatible."}, {"name": "responseDecreased", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "RESPONSE_CONTENT_DECREASED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Asserts that the response content has decreased, making the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/RecursiveSchemaTest.java", "testclass_name": "RecursiveSchemaTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardIncompatible;", "import org.junit.jupiter.api.Test;"], "name": "RecursiveSchemaTest", "description": "Tests for comparing OpenAPI documents with recursive schemas.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}, {"name": "OPENAPI_DOC3", "type": "final String"}]}, "test_cases": [{"name": "testDiffSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests that two identical OpenAPI documents are considered equal."}, {"name": "testDiffDifferentCyclic", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC3", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"]}, "category": "unit", "description": "Tests that two different OpenAPI documents with cyclic references are considered backward incompatible."}, {"name": "testDiffDifferent", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"]}, "category": "unit", "description": "Tests that two different OpenAPI documents are considered backward incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/ParametersBCTest.java", "testclass_name": "ParametersBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_PARAMS_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_PARAMS_REQUIRED_INCREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "ParametersBCTest", "description": "Tests for backward compatibility of request parameters in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "decreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.REQUEST_PARAMS_DECREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to decreased request parameters."}, {"name": "requiredIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.REQUEST_PARAMS_REQUIRED_INCREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to increased required request parameters."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/OneOfBCTest.java", "testclass_name": "OneOfBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_ONEOF_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_ONEOF_INCREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "OneOfBCTest", "description": "Tests for backward compatibility of OneOf properties in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "requestDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.REQUEST_ONEOF_DECREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to a decrease in request oneOf properties."}, {"name": "responseIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.RESPONSE_ONEOF_INCREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to an increase in response oneOf properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/ReadOnlyBCTest.java", "testclass_name": "ReadOnlyBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_READONLY_INCREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_READONLY_REQUIRED_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "ReadOnlyBCTest", "description": "Tests for backward compatibility of read-only properties in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "requestReadOnlyIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.REQUEST_READONLY_INCREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that an increase in request read-only properties makes the specification incompatible."}, {"name": "requestReadOnlyRequiredDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.REQUEST_READONLY_REQUIRED_DECREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that a decrease in request read-only properties, making them required, makes the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/PathBCTest.java", "testclass_name": "PathBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "PathBCTest", "description": "Tests for backward compatibility of API paths.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "opsDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.OPENAPI_ENDPOINTS_DECREASED"]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to a decrease in operations."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/WriteOnlyBCTest.java", "testclass_name": "WriteOnlyBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_WRITEONLY_INCREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_WRITEONLY_REQUIRED_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "WriteOnlyBCTest", "description": "Tests for backward compatibility of write-only properties in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification has changed but remains compatible."}, {"name": "responseWriteOnlyIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.RESPONSE_WRITEONLY_INCREASED"]}, "category": "unit", "description": "Asserts that the specification is incompatible due to an increase in write-only properties."}, {"name": "responseWriteOnlyRequiredDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["BackwardIncompatibleProp.RESPONSE_WRITEONLY_REQUIRED_DECREASED"]}, "category": "unit", "description": "Asserts that the specification is incompatible due to a decrease in required write-only properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/SecurityDiffTest.java", "testclass_name": "SecurityDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.*;"], "name": "SecurityDiffTest", "description": "Tests for comparing security differences in OpenAPI documents.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}, {"name": "OPENAPI_DOC3", "type": "final String"}, {"name": "OPENAPI_DOC4", "type": "final String"}, {"name": "OPENAPI_DOC5", "type": "final String"}]}, "test_cases": [{"name": "testDiffDifferent", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getChangedOperations()", "ChangedOperation.getPathUrl()", "ChangedOperation.isCompatible()", "ChangedSecurityRequirements.isCompatible()", "ChangedSecurityRequirements.getIncreased()", "ChangedSecurityRequirements.getChanged()", "ChangedSecurityRequirement.getChanged()", "ChangedSecuritySchemeScopes.getIncreased()", "ChangedOAuthFlow.isAuthorizationUrl()"], "external_dependencies": {"modules": ["ChangedOpenApi", "ChangedOperation", "ChangedSecurityRequirements", "ChangedSecurityRequirement", "ChangedSecuritySchemeScopes", "ChangedOAuthFlow", "SecurityRequirement"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the comparison of security differences between two OpenAPI documents."}, {"name": "testWithUnknownSecurityScheme", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["IllegalArgumentException"], "class_members": [{"name": "OPENAPI_DOC3", "type": "variable"}, {"name": "OPENAPI_DOC4", "type": "variable"}]}, "category": "unit", "description": "Tests the handling of unknown security schemes in OpenAPI documents."}, {"name": "testMissingSecurityDefinition", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["IllegalArgumentException"], "class_members": [{"name": "OPENAPI_DOC5", "type": "variable"}]}, "category": "unit", "description": "Tests the handling of missing security definitions in OpenAPI documents."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/OAuthFlowBCTest.java", "testclass_name": "OAuthFlowBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SECURITY_SCHEME_OAUTH2_AUTH_URL_CHANGED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SECURITY_SCHEME_OAUTH2_REFRESH_URL_CHANGED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SECURITY_SCHEME_OAUTH2_TOKEN_URL_CHANGED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "OAuthFlowBCTest", "description": "Tests for backward compatibility of OAuth flow changes in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "authorizationUrlChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.SECURITY_SCHEME_OAUTH2_AUTH_URL_CHANGED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that changing the authorization URL in the OAuth flow results in an incompatible specification."}, {"name": "refreshUrlChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.SECURITY_SCHEME_OAUTH2_REFRESH_URL_CHANGED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that changing the refresh URL in the OAuth flow results in an incompatible specification."}, {"name": "tokenUrlChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.SECURITY_SCHEME_OAUTH2_TOKEN_URL_CHANGED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that changing the token URL in the OAuth flow results in an incompatible specification."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/HeaderBCTest.java", "testclass_name": "HeaderBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_HEADER_EXPLODE_CHANGED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_HEADER_REQUIRED_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_HEADER_REQUIRED_INCREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "HeaderBCTest", "description": "Tests for backward compatibility of response headers in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification has changed but remains compatible."}, {"name": "responseExplodeChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification is incompatible due to a change in response header explode property."}, {"name": "responseRequiredDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification is incompatible due to a decrease in required response headers."}, {"name": "responseRequiredIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification is incompatible due to an increase in required response headers."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/EnumBCTest.java", "testclass_name": "EnumBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_ENUM_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_ENUM_INCREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "EnumBCTest", "description": "Tests for backward compatibility of enum changes in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "requestDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.REQUEST_ENUM_DECREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that a decrease in request enum values makes the specification incompatible."}, {"name": "responseIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["BackwardIncompatibleProp.RESPONSE_ENUM_INCREASED"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that an increase in response enum values makes the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/AsciidocRenderTest.java", "testclass_name": "AsciidocRenderTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.AsciidocRender;"], "name": "AsciidocRenderTest", "description": "Unit tests for the AsciidocRender class, ensuring that various rendering scenarios do not fail.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "renderDoesNotFailWhenPropertyHasBeenRemoved", "primary_tested": ["AsciidocRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["AsciidocRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not fail when a property has been removed."}, {"name": "renderDoesNotCauseStackOverflowWithRecursiveDefinitions", "primary_tested": ["AsciidocRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["AsciidocRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not cause a stack overflow with recursive definitions."}, {"name": "renderDoesNotFailWhenHTTPStatusCodeIsRange", "primary_tested": ["AsciidocRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["AsciidocRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that rendering does not fail when an HTTP status code is a range."}, {"name": "validateAsciiDocChangeFile", "primary_tested": ["AsciidocRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["AsciidocRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the AsciiDoc change file is validated correctly."}, {"name": "validateAsciiDocRangeStatus", "primary_tested": ["AsciidocRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["AsciidocRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the AsciiDoc range status is validated correctly."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/utils/FileUtilsTest.java", "testclass_name": "FileUtilsTest", "dependencies": ["package org.openapitools.openapidiff.core.utils;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;", "import java.io.IOException;", "import java.nio.charset.StandardCharsets;", "import java.nio.file.Files;", "import java.nio.file.Path;", "import java.util.Collections;", "import org.apache.commons.lang3.StringUtils;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.api.io.TempDir;", "import org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.ConsoleRender;"], "name": "FileUtilsTest", "description": "Unit tests for the FileUtils class, focusing on the writeToFile method.", "class_members": {"variables": [{"name": "changedOpenApi", "type": "ChangedOpenApi"}], "methods": [], "nested_classes": []}, "fixtures": ["setup"], "test_cases": [{"name": "writeToFile_filenameIsNull_doesNothing", "primary_tested": ["FileUtils.writeToFile(ConsoleRender,ChangedOpenApi,String)"], "external_dependencies": {"modules": ["FileUtils", "ConsoleRender", "ChangedOpenApi"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setup"], "description": "Tests that the writeToFile method does nothing when the filename is null."}, {"name": "writeToFile_filenameIsEmpty_doesNothing", "primary_tested": ["FileUtils.writeToFile(ConsoleRender,ChangedOpenApi,String)"], "external_dependencies": {"modules": ["FileUtils", "ConsoleRender", "ChangedOpenApi", "StringUtils"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setup"], "description": "Tests that the writeToFile method does nothing when the filename is empty."}, {"name": "writeToFile_fileExists_overwrites_file", "primary_tested": ["FileUtils.writeToFile(ConsoleRender,ChangedOpenApi,String)"], "external_dependencies": {"modules": ["FileUtils", "ConsoleRender", "ChangedOpenApi", "Files", "Path", "StandardCharsets"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setup"], "description": "Tests that the writeToFile method overwrites an existing file when the file exists."}, {"name": "writeToFile_fileDoesNotExist_createsFile", "primary_tested": ["FileUtils.writeToFile(ConsoleRender,ChangedOpenApi,String)"], "external_dependencies": {"modules": ["FileUtils", "ConsoleRender", "ChangedOpenApi", "Path"], "class_members": [{"name": "changedOpenApi", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setup"], "description": "Tests that the writeToFile method creates a new file when the file does not exist."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/AllOfDiffTest.java", "testclass_name": "AllOfDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiChangedEndpoints;", "import org.junit.jupiter.api.Test;"], "name": "AllOfDiffTest", "description": "Tests for comparing OpenAPI documents using the AllOfDiff functionality.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}, {"name": "OPENAPI_DOC3", "type": "static final String"}, {"name": "OPENAPI_DOC4", "type": "static final String"}]}, "test_cases": [{"name": "testDiffSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests that two identical OpenAPI documents are considered the same."}, {"name": "testDiffSameWithAllOf", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiAreEquals(String,String)"]}, "category": "unit", "description": "Tests that two OpenAPI documents with allOf constructs are considered the same."}, {"name": "testDiffDifferent1", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC3", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests that two different OpenAPI documents are detected as having changed endpoints."}, {"name": "testDiffDifferent2", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC4", "type": "variable"}], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests that two different OpenAPI documents are detected as having changed endpoints."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/RequiredBCTest.java", "testclass_name": "RequiredBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_REQUIRED_INCREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_REQUIRED_DECREASED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "RequiredBCTest", "description": "Tests for backward compatibility checks related to required properties in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "description": "Tests that the specification has changed but remains compatible."}, {"name": "requestRequiredIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to an increase in required request properties."}, {"name": "responseRequiredDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "description": "Tests that the specification becomes incompatible due to a decrease in required response properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/PathDiffTest.java", "testclass_name": "PathDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;"], "name": "PathDiffTest", "description": "Test suite for comparing OpenAPI paths and their differences.", "class_members": {"variables": [{"name": "OPENAPI_PATH1", "type": "static final String"}, {"name": "OPENAPI_PATH2", "type": "static final String"}, {"name": "OPENAPI_PATH3", "type": "static final String"}, {"name": "OPENAPI_PATH4", "type": "static final String"}, {"name": "OPENAPI_PATH5", "type": "static final String"}, {"name": "OPENAPI_PATH6", "type": "static final String"}]}, "test_cases": [{"name": "testEqual", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_PATH1", "type": "variable"}, {"name": "OPENAPI_PATH2", "type": "variable"}]}, "category": "unit", "description": "Tests if two OpenAPI paths are equal."}, {"name": "testMultiplePathWithSameSignature", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_PATH3", "type": "variable"}]}, "category": "unit", "description": "Tests if an IllegalArgumentException is thrown when comparing the same OpenAPI path."}, {"name": "testSameTemplateDifferentMethods", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getNewEndpoints()", "Endpoint.getOperation()", "Operation.getOperationId()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "Endpoint", "Operation"], "class_members": [{"name": "OPENAPI_PATH1", "type": "variable"}, {"name": "OPENAPI_PATH4", "type": "variable"}]}, "category": "unit", "description": "Tests if the same OpenAPI template with different methods is handled correctly."}, {"name": "testDiffWithSimilarBeginningPaths", "primary_tested": ["OpenApiCompare.fromLocations(String,String)", "OpenApiCompare.fromSpecifications(OpenAPI,OpenAPI)"], "associated_methods": ["ChangedOpenApi.getOldSpecOpenApi()", "ChangedOpenApi.getNewSpecOpenApi()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "OPENAPI_PATH5", "type": "variable"}, {"name": "OPENAPI_PATH6", "type": "variable"}]}, "category": "unit", "description": "Tests the difference between OpenAPI paths with similar beginnings."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ConsoleRenderTest.java", "testclass_name": "ConsoleRenderTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.output.ConsoleRender;"], "name": "ConsoleRenderTest", "description": "Unit tests for the ConsoleRender class, which handles rendering of OpenAPI diff results to the console.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "renderDoesNotFailWhenPropertyHasBeenRemoved", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["ConsoleRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "description": "Tests that rendering does not fail when a property has been removed from the OpenAPI spec."}, {"name": "renderDoesNotFailWhenHTTPStatusCodeIsRange", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["ConsoleRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "description": "Tests that rendering does not fail when an HTTP status code is a range in the OpenAPI spec."}, {"name": "renderShowsWhatsDeletedSectionWhenEndpointIsDeleted", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["ConsoleRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "description": "Tests that the 'What's Deleted' section is shown when an endpoint is deleted from the OpenAPI spec."}, {"name": "renderShowsWhatsNewSectionWhenEndpointIsAdded", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["ConsoleRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "description": "Tests that the 'What's New' section is shown when a new endpoint is added to the OpenAPI spec."}, {"name": "renderShowsWhatsDeprecatedSectionWhenEndpointIsDeprecated", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["ConsoleRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "description": "Tests that the 'What's Deprecated' section is shown when an endpoint is deprecated in the OpenAPI spec."}, {"name": "renderShowsWhatsChangedSectionWithCorrectFormattingWhenEndpointIsChanged", "primary_tested": ["ConsoleRender.render(ChangedOpenApi,OutputStreamWriter)"], "external_dependencies": {"modules": ["ConsoleRender", "ByteArrayOutputStream", "OutputStreamWriter", "ChangedOpenApi", "OpenApiCompare"], "class_members": []}, "category": "unit", "description": "Tests that the 'What's Changed' section is shown with correct formatting when an endpoint is changed in the OpenAPI spec."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/ParameterBCTest.java", "testclass_name": "ParameterBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_PARAMS_REQUIRED_INCREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_PARAM_ALLOWEMPTY_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_PARAM_EXPLODE_CHANGED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_PARAM_STYLE_CHANGED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "ParameterBCTest", "description": "Tests for backward compatibility of request parameters in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "project_specific_resources": ["TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification has changed but remains compatible."}, {"name": "allowEmptyValueDecreased", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "REQUEST_PARAM_ALLOWEMPTY_DECREASED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification is incompatible due to a decrease in the allowEmptyValue property."}, {"name": "explodeChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "REQUEST_PARAM_EXPLODE_CHANGED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification is incompatible due to a change in the explode property."}, {"name": "requiredIncreased", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "REQUEST_PARAMS_REQUIRED_INCREASED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification is incompatible due to an increase in the required property."}, {"name": "styleChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "REQUEST_PARAM_STYLE_CHANGED", "type": "variable"}], "project_specific_resources": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification is incompatible due to a change in the style property."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ContentDiffTest.java", "testclass_name": "ContentDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;"], "name": "ContentDiffTest", "description": "Unit tests for comparing content differences in OpenAPI documents.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}]}, "test_cases": [{"name": "testContentDiffWithOneEmptyMediaType", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isIncompatible()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the comparison of OpenAPI documents where one has an empty media type, expecting an incompatible result."}, {"name": "testContentDiffWithEmptyMediaTypes", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isUnchanged()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}]}, "category": "unit", "description": "Tests the comparison of OpenAPI documents where both have empty media types, expecting an unchanged result."}, {"name": "testSameContentDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isUnchanged()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"], "class_members": [{"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests the comparison of the same OpenAPI document, expecting an unchanged result."}, {"name": "testAddedResponseContentTypeDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"]}, "category": "unit", "description": "Tests the comparison of OpenAPI documents where a response content type is added, expecting a compatible result."}, {"name": "testRemovedResponseContentTypeDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"]}, "category": "unit", "description": "Tests the comparison of OpenAPI documents where a response content type is removed, expecting an incompatible result."}, {"name": "testAddedRequestContentTypeDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"]}, "category": "unit", "description": "Tests the comparison of OpenAPI documents where a request content type is added, expecting a compatible result."}, {"name": "testRemovedRequestContentTypeDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.isCompatible()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi"]}, "category": "unit", "description": "Tests the comparison of OpenAPI documents where a request content type is removed, expecting an incompatible result."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/SchemaBCTest.java", "testclass_name": "SchemaBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_REQUIRED_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SCHEMA_DISCRIMINATOR_CHANGED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.SCHEMA_TYPE_CHANGED;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "SchemaBCTest", "description": "Tests for backward compatibility of schema changes in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the specification has changed but remains compatible."}, {"name": "discriminatorChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that the discriminator change in the schema makes the specification incompatible."}, {"name": "requestFormatDecreased", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that a decrease in request format makes the specification backward incompatible."}, {"name": "requestFormatIncreased", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that an increase in request format makes the specification backward incompatible."}, {"name": "requestPropsPutIncreased", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that an increase in request properties for PUT operations makes the specification changed but compatible."}, {"name": "responseFormatDecreased", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that a decrease in response format makes the specification backward incompatible."}, {"name": "responseFormatIncreased", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that an increase in response format makes the specification backward incompatible."}, {"name": "responsePropsRequiredDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that a decrease in required response properties makes the specification incompatible."}, {"name": "typeChanged", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Asserts that a change in schema type makes the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/OneOfDiffTest.java", "testclass_name": "OneOfDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiChangedEndpoints;", "import org.junit.jupiter.api.Test;"], "name": "OneOfDiffTest", "description": "Tests for differences in OpenAPI documents involving oneOf schemas.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "static final String"}, {"name": "OPENAPI_DOC2", "type": "static final String"}, {"name": "OPENAPI_DOC3", "type": "static final String"}, {"name": "OPENAPI_DOC4", "type": "static final String"}, {"name": "OPENAPI_DOC5", "type": "static final String"}, {"name": "OPENAPI_DOC6", "type": "static final String"}, {"name": "OPENAPI_DOC7", "type": "static final String"}, {"name": "OPENAPI_DOC8", "type": "static final String"}, {"name": "OPENAPI_DOC9", "type": "static final String"}, {"name": "OPENAPI_DOC10", "type": "static final String"}]}, "test_cases": [{"name": "testDiffSame", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}]}, "category": "unit", "description": "Tests that two identical OpenAPI documents are considered equal."}, {"name": "testDiffDifferentMapping", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests that two OpenAPI documents with different mappings are detected."}, {"name": "testDiffSameWithOneOf", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC2", "type": "variable"}, {"name": "OPENAPI_DOC3", "type": "variable"}]}, "category": "unit", "description": "Tests that two OpenAPI documents with oneOf schemas are considered equal."}, {"name": "testComposedSchema", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC4", "type": "variable"}, {"name": "OPENAPI_DOC5", "type": "variable"}]}, "category": "unit", "description": "Tests that two composed schema OpenAPI documents are backward incompatible."}, {"name": "testComposedSchemaDiff", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC10", "type": "variable"}]}, "category": "unit", "description": "Tests that two identical composed schema OpenAPI documents are considered equal."}, {"name": "testOneOfDiscrimitatorChanged", "primary_tested": ["TestUtils.assertOpenApiBackwardIncompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC6", "type": "variable"}, {"name": "OPENAPI_DOC7", "type": "variable"}]}, "category": "unit", "description": "Tests that a change in the discriminator of oneOf schemas is detected as backward incompatible."}, {"name": "testOneOfDiscrimitatorMissingSameOrder", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC8", "type": "variable"}]}, "category": "unit", "description": "Tests that two OpenAPI documents with missing discriminators in the same order are considered equal."}, {"name": "testOneOfDiscrimitatorMissingDifferentOrder", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC8", "type": "variable"}, {"name": "OPENAPI_DOC9", "type": "variable"}]}, "category": "unit", "description": "Tests that two OpenAPI documents with missing discriminators in different orders are considered equal."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/SecuritySchemeBCTest.java", "testclass_name": "SecuritySchemeBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.*;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.*;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.BackwardIncompatibleProp;"], "name": "SecuritySchemeBCTest", "description": "Tests for backward compatibility of security schemes in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged(String,String)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible(String,String)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the specification has changed but remains compatible."}, {"name": "bearerFormatChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the bearer format change makes the specification incompatible."}, {"name": "inChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardIncompatible(String,String)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the 'in' change makes the specification backward incompatible."}, {"name": "openIdConnectUrlChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the OpenID Connect URL change makes the specification incompatible."}, {"name": "schemeChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the scheme change makes the specification incompatible."}, {"name": "typeChanged", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertOpenApiBackwardIncompatible(String,String)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the type change makes the specification backward incompatible."}, {"name": "scopesIncreased", "primary_tested": [], "external_dependencies": {"modules": ["org.openapitools.openapidiff.core.TestUtils", "org.openapitools.openapidiff.core.model.BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}], "project_specific_resources": ["org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"]}, "category": "unit", "fixtures_used": [], "description": "Asserts that the increase in scopes makes the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/DeferredBuilderChangedTest.java", "testclass_name": "DeferredBuilderChangedTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import java.util.Optional;", "import java.util.concurrent.atomic.AtomicBoolean;", "import org.junit.jupiter.api.Assertions;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedReadOnly;", "import org.openapitools.openapidiff.core.model.schema.ChangedWriteOnly;"], "name": "DeferredBuilderChangedTest", "description": "Test suite for the DeferredBuilderChanged class, focusing on various scenarios involving PendingChanged and RealizedChanged objects.", "class_members": {"variables": [{"name": "changed", "type": "PendingChanged<ChangedReadOnly>"}, {"name": "whenSet", "type": "Optional<ChangedReadOnly>"}, {"name": "mappedValue", "type": "ChangedWriteOnly"}, {"name": "chainedValue", "type": "Optional<?>"}], "methods": [], "nested_classes": [{"name": "ChangedAssertion", "description": "Helper class for asserting changes in DeferredChanged objects."}]}, "fixtures": ["beforeEach"], "test_cases": [{"name": "testPendingChangedValueSetBeforeListeners", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests setting a value in PendingChanged before listeners are added."}, {"name": "testPendingChangedValueSetAfterListeners", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests setting a value in PendingChanged after listeners are added."}, {"name": "testPendingChangedValueEMpty", "primary_tested": ["PendingChanged.setValue(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests setting an empty value in PendingChanged."}, {"name": "testRealizedChange", "primary_tested": ["RealizedChanged.RealizedChanged(String)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["RealizedChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the RealizedChanged constructor with a non-empty value."}, {"name": "testRealizedChangeEmpty", "primary_tested": ["RealizedChanged.RealizedChanged(Optional<String>)"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["RealizedChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the RealizedChanged constructor with an empty value."}, {"name": "testFlatMap", "primary_tested": ["PendingChanged.flatMap(Function<ChangedReadOnly, DeferredChanged<ChangedWriteOnly>>)"], "associated_methods": ["PendingChanged.setValue(Optional<ChangedReadOnly>)", "PendingChanged.setValue(Optional<ChangedWriteOnly>)", "DeferredChanged.ifPresent(Consumer<ChangedWriteOnly>)"], "external_dependencies": {"modules": ["PendingChanged", "DeferredChanged", "ChangedReadOnly", "ChangedWriteOnly"], "class_members": [{"name": "changed", "type": "variable"}, {"name": "whenSet", "type": "variable"}, {"name": "chainedValue", "type": "variable"}, {"name": "mappedValue", "type": "variable"}]}, "category": "unit", "fixtures_used": ["beforeEach"], "description": "Tests the flatMap functionality of PendingChanged."}, {"name": "testDeferredBuilderEmpty", "primary_tested": ["DeferredBuilder.build()"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["DeferredBuilder", "ChangedAssertion"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests building an empty DeferredBuilder."}, {"name": "testDeferredBuilderAllRealized", "primary_tested": ["DeferredBuilder.add(RealizedChanged<String>)", "DeferredBuilder.build()"], "associated_methods": ["ChangedAssertion.assertSet(boolean)"], "external_dependencies": {"modules": ["DeferredBuilder", "RealizedChanged", "ChangedAssertion"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests adding all RealizedChanged objects to DeferredBuilder."}, {"name": "testDeferredBuilderPending", "primary_tested": ["DeferredBuilder.add(RealizedChanged<String>)", "DeferredBuilder.add(PendingChanged<String>)", "DeferredBuilder.build()"], "associated_methods": ["ChangedAssertion.assertNotSet()", "ChangedAssertion.assertSet(boolean)", "PendingChanged.setValue(Optional<String>)"], "external_dependencies": {"modules": ["DeferredBuilder", "RealizedChanged", "PendingChanged", "ChangedAssertion"], "class_members": [{"name": "changed", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests adding a mix of RealizedChanged and PendingChanged objects to DeferredBuilder."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/ParameterDiffTest.java", "testclass_name": "ParameterDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiChangedEndpoints;", "import org.junit.jupiter.api.Test;"], "name": "ParameterDiffTest", "description": "Test suite for comparing differences in parameters between different OpenAPI specifications.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testDiffDifferent", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints between two different parameter files."}, {"name": "issue458MaximumDecreased", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the maximum value decreases."}, {"name": "issue458MaximumIncreased", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the maximum value increases."}, {"name": "issue458MinimumDecreased", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the minimum value decreases."}, {"name": "issue458MinimumIncreased", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the minimum value increases."}, {"name": "issue458IntegerFormatChanged", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the integer format changes."}, {"name": "issue458ExclusiveMinimumChanged", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive minimum changes."}, {"name": "issue458ExclusiveMaximumChanged", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive maximum changes."}, {"name": "issue458ExclusiveMinimumRemoved", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive minimum is removed."}, {"name": "issue458ExclusiveMaximumRemoved", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive maximum is removed."}, {"name": "issue458ExclusiveMaximumTrueToFalse", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive maximum changes from true to false."}, {"name": "issue458ExclusiveMinimumTrueToFalse", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive minimum changes from true to false."}, {"name": "issue458ExclusiveMaximumTrueRemoved", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive maximum with true value is removed."}, {"name": "issue458ExclusiveMinimumTrueRemoved", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when the exclusive minimum with true value is removed."}, {"name": "issue488RenameParameterAddAndRemoveParameterReturnFalse", "primary_tested": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "project_specific_resources": ["TestUtils.assertOpenApiChangedEndpoints(String,String)"]}, "category": "unit", "description": "Tests the comparison of OpenAPI endpoints when a parameter is renamed, added, and removed, expecting a false return."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/OpenApiDiffTest.java", "testclass_name": "OpenApiDiffTest", "dependencies": ["package org.openapitools.openapidiff.core;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.openapitools.openapidiff.core.TestUtils.assertOpenApiAreEquals;", "import io.swagger.parser.OpenAPIParser;", "import io.swagger.v3.oas.models.OpenAPI;", "import io.swagger.v3.parser.core.models.ParseOptions;", "import java.io.ByteArrayOutputStream;", "import java.io.OutputStreamWriter;", "import java.util.List;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.ChangedOpenApi;", "import org.openapitools.openapidiff.core.model.ChangedOperation;", "import org.openapitools.openapidiff.core.model.DiffResult;", "import org.openapitools.openapidiff.core.model.Endpoint;", "import org.openapitools.openapidiff.core.output.HtmlRender;", "import org.openapitools.openapidiff.core.output.JsonRender;", "import org.openapitools.openapidiff.core.output.MarkdownRender;", "import org.openapitools.openapidiff.core.output.Render;"], "name": "OpenApiDiffTest", "description": "Test suite for comparing OpenAPI specifications and rendering the differences in various formats.", "class_members": {"variables": [{"name": "OPENAPI_DOC1", "type": "final String"}, {"name": "OPENAPI_DOC2", "type": "final String"}, {"name": "OPENAPI_EMPTY_DOC", "type": "final String"}, {"name": "OPENAPI_DOC3", "type": "final String"}, {"name": "PARSER", "type": "static final OpenAPIParser"}], "methods": [{"name": "loadSpecFromFile", "signature": "private static OpenAPI loadSpecFromFile(String specFile)"}]}, "fixtures": [], "test_cases": [{"name": "testEqual", "primary_tested": ["TestUtils.assertOpenApiAreEquals(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "OPENAPI_DOC2", "type": "variable"}]}, "category": "unit", "description": "Tests that two identical OpenAPI documents are considered equal."}, {"name": "testNewApi", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "Endpoint", "ChangedOperation", "HtmlRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_EMPTY_DOC", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(List<Endpoint>).isNotEmpty()", "TestUtils.assertThat(List<Endpoint>).isEmpty()", "TestUtils.assertThat(List<ChangedOperation>).isEmpty()", "TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the addition of new endpoints in an OpenAPI document."}, {"name": "testDeprecatedApi", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "Endpoint", "ChangedOperation", "HtmlRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_EMPTY_DOC", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(List<Endpoint>).isEmpty()", "TestUtils.assertThat(List<Endpoint>).isNotEmpty()", "TestUtils.assertThat(List<ChangedOperation>).isEmpty()", "TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the deprecation of endpoints in an OpenAPI document."}, {"name": "testDiff", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "associated_methods": ["ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "ChangedOperation", "HtmlRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(List<ChangedOperation>).isNotEmpty()", "TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the difference between two OpenAPI documents."}, {"name": "testDiffAndMarkdown", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "MarkdownRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the difference between two OpenAPI documents and renders the result in Markdown format."}, {"name": "testDiffAndJson", "primary_tested": ["OpenApiCompare.fromLocations(String,String)"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "JsonRender", "OutputStreamWriter", "ByteArrayOutputStream"], "class_members": [{"name": "OPENAPI_DOC1", "type": "variable"}, {"name": "OPENAPI_DOC2", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(String).isNotBlank()"]}, "category": "unit", "description": "Tests the difference between two OpenAPI documents and renders the result in JSON format."}, {"name": "testComparisonConsistency", "primary_tested": ["OpenApiCompare.fromSpecifications(OpenAPI,OpenAPI)"], "associated_methods": ["ChangedOpenApi.isChanged()", "ChangedOpenApi.getNewEndpoints()", "ChangedOpenApi.getMissingEndpoints()", "ChangedOpenApi.getChangedOperations()"], "external_dependencies": {"modules": ["OpenApiCompare", "ChangedOpenApi", "OpenAPI", "DiffResult"], "class_members": [{"name": "OPENAPI_DOC3", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(DiffResult).isEqualTo(DiffResult.NO_CHANGES)", "TestUtils.assertThat(List<Endpoint>).isEmpty()", "TestUtils.assertThat(List<ChangedOperation>).isEmpty()"]}, "category": "unit", "description": "Tests the consistency of OpenAPI comparison results when comparing the same specifications multiple times."}, {"name": "testSpecObjectsAreNotChangesAfterComparison", "primary_tested": ["OpenApiCompare.fromSpecifications(OpenAPI,OpenAPI)"], "associated_methods": ["loadSpecFromFile(String)"], "external_dependencies": {"modules": ["OpenApiCompare", "OpenAPI"], "class_members": [{"name": "OPENAPI_DOC3", "type": "variable"}], "project_specific_resources": ["TestUtils.assertThat(OpenAPI).isEqualTo(OpenAPI)"]}, "category": "unit", "description": "Tests that the OpenAPI specification objects remain unchanged after comparison."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/backcompat/NumericRangeBCTest.java", "testclass_name": "NumericRangeBCTest", "dependencies": ["package org.openapitools.openapidiff.core.backcompat;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecChangedButCompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecIncompatible;", "import static org.openapitools.openapidiff.core.TestUtils.assertSpecUnchanged;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.REQUEST_NUMERIC_RANGE_DECREASED;", "import static org.openapitools.openapidiff.core.model.BackwardIncompatibleProp.RESPONSE_NUMERIC_RANGE_INCREASED;", "import org.junit.jupiter.api.Test;"], "name": "NumericRangeBCTest", "description": "Tests for backward compatibility of numeric range changes in OpenAPI specifications.", "class_members": {"variables": [{"name": "BASE", "type": "final String"}], "methods": [{"name": "assertIncompatibleRequest", "signature": "void assertIncompatibleRequest(String newSpec)"}, {"name": "assertIncompatibleResponse", "signature": "void assertIncompatibleResponse(String newSpec)"}]}, "fixtures": [], "test_cases": [{"name": "unchanged", "primary_tested": ["TestUtils.assertSpecUnchanged(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification remains unchanged."}, {"name": "changedButCompatible", "primary_tested": ["TestUtils.assertSpecChangedButCompatible(String,String)"], "external_dependencies": {"modules": ["TestUtils"], "class_members": [{"name": "BASE", "type": "variable"}]}, "category": "unit", "description": "Tests that the specification changes but remains compatible."}, {"name": "requestExclusiveMaxCreated", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that creating an exclusive max in the request makes the specification incompatible."}, {"name": "requestExclusiveMaxSet", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that setting an exclusive max in the request makes the specification incompatible."}, {"name": "requestExclusiveMinCreated", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that creating an exclusive min in the request makes the specification incompatible."}, {"name": "requestExclusiveMinSet", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that setting an exclusive min in the request makes the specification incompatible."}, {"name": "requestMaxAdded", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that adding a max in the request makes the specification incompatible."}, {"name": "requestMaxDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that decreasing the max in the request makes the specification incompatible."}, {"name": "requestMinAdded", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that adding a min in the request makes the specification incompatible."}, {"name": "requestMinIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleRequest(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleRequest", "type": "method"}]}, "category": "unit", "description": "Tests that increasing the min in the request makes the specification incompatible."}, {"name": "responseExclusiveMaxDeleted", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that deleting an exclusive max in the response makes the specification incompatible."}, {"name": "responseExclusiveMaxUnset", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that unsetting an exclusive max in the response makes the specification incompatible."}, {"name": "responseExclusiveMinDeleted", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that deleting an exclusive min in the response makes the specification incompatible."}, {"name": "responseExclusiveMinUnset", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that unsetting an exclusive min in the response makes the specification incompatible."}, {"name": "responseMaxDeleted", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that deleting the max in the response makes the specification incompatible."}, {"name": "responseMaxIncreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that increasing the max in the response makes the specification incompatible."}, {"name": "responseMinDecreased", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that decreasing the min in the response makes the specification incompatible."}, {"name": "responseMinDeleted", "primary_tested": ["TestUtils.assertSpecIncompatible(String,String,BackwardIncompatibleProp)"], "associated_methods": ["NumericRangeBCTest.assertIncompatibleResponse(String)"], "external_dependencies": {"modules": ["TestUtils", "BackwardIncompatibleProp"], "class_members": [{"name": "BASE", "type": "variable"}, {"name": "assertIncompatibleResponse", "type": "method"}]}, "category": "unit", "description": "Tests that deleting the min in the response makes the specification incompatible."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/output/AsciidocRender_bigTitleTest.java", "testclass_name": "AsciidocRender_bigTitleTest", "dependencies": ["package org.openapitools.openapidiff.core.output;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "AsciidocRender_bigTitleTest", "description": "Unit test for the bigTitle method in AsciidocRender.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testBigTitle", "primary_tested": ["AsciidocRender.bigTitle(String,String)"], "external_dependencies": {"modules": ["AsciidocRender"]}, "category": "unit", "description": "Tests the bigTitle method of AsciidocRender to ensure it formats the title correctly."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/output/ConsoleRender_titleTest.java", "testclass_name": "ConsoleRender_titleTest", "dependencies": ["package org.openapitools.openapidiff.core.output;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.apache.commons.lang3.StringUtils;", "import org.junit.jupiter.api.Test;"], "name": "ConsoleRender_titleTest", "description": "Unit test for the title rendering functionality in ConsoleRender.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testTitle", "primary_tested": ["ConsoleRender.title(String,char)"], "external_dependencies": {"modules": ["ConsoleRender", "StringUtils"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the title rendering functionality of the ConsoleRender class."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/Change_toStringTest.java", "testclass_name": "Change_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "Change_toStringTest", "description": "Unit test for the toString method of the Change class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testToString", "primary_tested": ["Change.toString()"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the toString method of the Change class to ensure it returns the expected string representation."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_hashCodeTest.java", "testclass_name": "ChangedSchema_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.media.Schema;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_hashCodeTest", "description": "Unit test for the hashCode method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedSchema.hashCode()"], "external_dependencies": {"modules": ["ChangedSchema", "DiffContext", "Schema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of the ChangedSchema class to ensure it returns the expected hash code."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setAddPropTest.java", "testclass_name": "ChangedSchema_setAddPropTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setAddPropTest", "description": "Unit test for the setAddProp method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetAddProp", "primary_tested": ["ChangedSchema.setAddProp(ChangedSchema)"], "associated_methods": ["ChangedSchema.getAddProp()"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setAddProp method of the ChangedSchema class to ensure it correctly sets and retrieves the added property."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setItemsTest.java", "testclass_name": "ChangedSchema_setItemsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setItemsTest", "description": "Unit test for the setItems method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetItems", "primary_tested": ["ChangedSchema.setItems(ChangedSchema)"], "associated_methods": ["ChangedSchema.getItems()"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setItems method of the ChangedSchema class to ensure it correctly sets and retrieves the items."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setRequiredTest.java", "testclass_name": "ChangedSchema_setRequiredTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedRequired;"], "name": "ChangedSchema_setRequiredTest", "description": "Unit tests for the setRequired method in the ChangedSchema class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testSetRequired", "primary_tested": ["ChangedSchema.setRequired(ChangedRequired)"], "associated_methods": ["ChangedSchema.getRequired()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedRequired"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setRequired method of the ChangedSchema class to ensure it correctly sets and retrieves the required field."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setChangeFormatTest.java", "testclass_name": "ChangedSchema_setChangeFormatTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setChangeFormatTest", "description": "Unit test for the setChangeFormat method in the ChangedSchema class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testSetChangeFormat", "primary_tested": ["ChangedSchema.setChangeFormat(boolean)"], "associated_methods": ["ChangedSchema.isChangeFormat()"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setChangeFormat method of the ChangedSchema class to ensure it correctly sets the change format and returns the correct instance."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirements_hashCodeTest.java", "testclass_name": "ChangedSecurityRequirements_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirements_hashCodeTest", "description": "Unit tests for the hashCode method in ChangedSecurityRequirements.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedSecurityRequirements.hashCode()"], "external_dependencies": {"modules": ["SecurityRequirement", "ChangedSecurityRequirements"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of ChangedSecurityRequirements to ensure it returns the expected hash code."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setChangeTitleTest.java", "testclass_name": "ChangedSchema_setChangeTitleTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.media.Schema;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setChangeTitleTest", "description": "Unit test for the setChangeTitle method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetChangeTitle", "primary_tested": ["ChangedSchema.setChangeTitle(boolean)"], "associated_methods": ["ChangedSchema.isChangeTitle()"], "external_dependencies": {"modules": ["ChangedSchema", "Schema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setChangeTitle method of the ChangedSchema class to ensure it correctly sets and retrieves the changeTitle flag."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOperation_setSecurityRequirementsTest.java", "testclass_name": "ChangedOperation_setSecurityRequirementsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOperation_setSecurityRequirementsTest", "description": "Test for setting security requirements in ChangedOperation.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetSecurityRequirements", "primary_tested": ["ChangedOperation.setSecurityRequirements(ChangedSecurityRequirements)"], "associated_methods": ["ChangedOperation.getSecurityRequirements()"], "external_dependencies": {"modules": ["ChangedOperation", "ChangedSecurityRequirements", "Operation", "PathItem"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the functionality of setting security requirements in ChangedOperation and verifies the set value."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setDescriptionTest.java", "testclass_name": "ChangedSchema_setDescriptionTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setDescriptionTest", "description": "Unit test for the setDescription method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetDescription", "primary_tested": ["ChangedSchema.setDescription(ChangedMetadata)"], "associated_methods": ["ChangedSchema.getDescription()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedMetadata"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setDescription method of the ChangedSchema class, ensuring that the description is correctly set and retrieved."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setMaxLengthTest.java", "testclass_name": "ChangedSchema_setMaxLengthTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedMaxLength;"], "name": "ChangedSchema_setMaxLengthTest", "description": "Unit tests for the setMaxLength method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetMaxLength", "primary_tested": ["ChangedSchema.setMaxLength(ChangedMaxLength)"], "associated_methods": ["ChangedSchema.getMaxLength()", "ChangedSchema.getChangedElements()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedMaxLength"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setMaxLength method of the ChangedSchema class, ensuring that the maxLength is correctly set and that the changed elements list is updated accordingly."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedResponse_hashCodeTest.java", "testclass_name": "ChangedResponse_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.responses.ApiResponse;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedResponse_hashCodeTest", "description": "Unit test for the hashCode method in the ChangedResponse class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedResponse.hashCode()"], "external_dependencies": {"modules": ["ApiResponse", "DiffContext", "ChangedResponse", "Objects"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of the ChangedResponse class by comparing the expected hash code with the actual hash code generated by the method."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOperation_hashCodeTest.java", "testclass_name": "ChangedOperation_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertNotEquals;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOperation_hashCodeTest", "description": "Unit tests for the hashCode method in the ChangedOperation class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedOperation.hashCode()"], "associated_methods": ["ChangedOperation.setSummary(ChangedMetadata)"], "external_dependencies": {"modules": ["Operation", "PathItem", "ChangedOperation", "ChangedMetadata"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of ChangedOperation to ensure it changes when the summary is modified."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/output/HttpStatus_getReasonPhraseTest.java", "testclass_name": "HttpStatus_getReasonPhraseTest", "dependencies": ["package org.openapitools.openapidiff.core.output;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;"], "name": "HttpStatus_getReasonPhraseTest", "description": "Unit tests for the HttpStatus.getReasonPhrase method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testGetReasonPhrase_ValidStatusCode", "primary_tested": ["HttpStatus.getReasonPhrase(int)"], "external_dependencies": {"modules": ["HttpStatus"]}, "category": "unit", "description": "Tests the getReasonPhrase method with a valid status code (200)."}, {"name": "testGetReasonPhrase_NegativeStatusCode", "primary_tested": ["HttpStatus.getReasonPhrase(int)"], "external_dependencies": {"modules": ["HttpStatus"]}, "category": "unit", "description": "Tests the getReasonPhrase method with a negative status code, expecting an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setIncreasedPropertiesTest.java", "testclass_name": "ChangedSchema_setIncreasedPropertiesTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import io.swagger.v3.oas.models.media.Schema;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setIncreasedPropertiesTest", "description": "Unit tests for the setIncreasedProperties method in the ChangedSchema class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testSetIncreasedProperties", "primary_tested": ["ChangedSchema.setIncreasedProperties(Map<String,Schema<?>>)"], "associated_methods": ["ChangedSchema.getIncreasedProperties()"], "external_dependencies": {"modules": ["ChangedSchema", "Schema", "Map", "HashMap"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setIncreasedProperties method of the ChangedSchema class to ensure it correctly sets and retrieves increased properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setChangedTypeTest.java", "testclass_name": "ChangedSchema_setChangedTypeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setChangedTypeTest", "description": "Unit tests for the setChangedType method in the ChangedSchema class.", "class_members": {"variables": [{"name": "changedSchema", "type": "ChangedSchema"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testSetChangedType", "primary_tested": ["ChangedSchema.setChangedType(boolean)"], "associated_methods": ["ChangedSchema.isChangedType()"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": [{"name": "changedSchema", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the setChangedType method of the ChangedSchema class to ensure it correctly sets and retrieves the changed type."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/utils/EndpointUtils_convert2EndpointTest.java", "testclass_name": "EndpointUtils_convert2EndpointTest", "dependencies": ["package org.openapitools.openapidiff.core.utils;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.Endpoint;"], "name": "EndpointUtils_convert2EndpointTest", "description": "Unit tests for the EndpointUtils.convert2Endpoint method.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testConvert2Endpoint", "primary_tested": ["EndpointUtils.convert2Endpoint(String,PathItem.HttpMethod,Operation)"], "associated_methods": ["Endpoint.getPathUrl()", "Endpoint.getMethod()", "Endpoint.getSummary()", "Endpoint.getOperation()"], "external_dependencies": {"modules": ["io.swagger.v3.oas.models.Operation", "io.swagger.v3.oas.models.PathItem", "org.openapitools.openapidiff.core.model.Endpoint", "org.openapitools.openapidiff.core.utils.EndpointUtils"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the conversion of a path URL, HTTP method, and operation to an Endpoint object, verifying the properties of the resulting Endpoint."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlows_toStringTest.java", "testclass_name": "ChangedOAuthFlows_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.OAuthFlow;", "import io.swagger.v3.oas.models.security.OAuthFlows;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlows_toStringTest", "description": "Unit test for the toString method of the ChangedOAuthFlows class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testToString", "primary_tested": ["ChangedOAuthFlows.toString()"], "associated_methods": ["ChangedOAuthFlows.setImplicitOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setPasswordOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setClientCredentialOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setAuthorizationCodeOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["OAuthFlows", "ChangedOAuthFlows", "OAuthFlow", "ChangedOAuthFlow", "ChangedExtensions"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the toString method of the ChangedOAuthFlows class, ensuring it correctly represents the object's state."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/utils/Copy_copyMapTest.java", "testclass_name": "Copy_copyMapTest", "dependencies": ["package org.openapitools.openapidiff.core.utils;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "Copy_copyMapTest", "description": "Unit tests for the Copy.copyMap method.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testCopyMap_withNullMap", "primary_tested": ["Copy.copyMap(Map<String,String>)"], "external_dependencies": {"modules": ["Copy", "Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the Copy.copyMap method when the input map is null."}, {"name": "testCopyMap_withNonEmptyMap", "primary_tested": ["Copy.copyMap(Map<String,String>)"], "associated_methods": ["Map.put(String,String)", "Map.size()"], "external_dependencies": {"modules": ["Copy", "Map", "HashMap"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the Copy.copyMap method when the input map is non-empty."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setReadOnlyTest.java", "testclass_name": "ChangedSchema_setReadOnlyTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedReadOnly;"], "name": "ChangedSchema_setReadOnlyTest", "description": "Unit test for the setReadOnly method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetReadOnly", "primary_tested": ["ChangedSchema.setReadOnly(ChangedReadOnly)"], "associated_methods": ["ChangedSchema.getReadOnly()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedReadOnly"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setReadOnly method of the ChangedSchema class to ensure it correctly sets and retrieves the read-only status."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOperation_getChangedElementsTest.java", "testclass_name": "ChangedOperation_getChangedElementsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOperation_getChangedElementsTest", "description": "Test for the getChangedElements method in the ChangedOperation class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testGetChangedElements", "primary_tested": ["ChangedOperation.getChangedElements()"], "associated_methods": ["ChangedOperation.setSummary(ChangedMetadata)", "ChangedOperation.setDescription(ChangedMetadata)", "ChangedOperation.setOperationId(ChangedMetadata)", "ChangedOperation.setParameters(ChangedParameters)", "ChangedOperation.setRequestBody(ChangedRequestBody)", "ChangedOperation.setApiResponses(ChangedApiResponse)", "ChangedOperation.setSecurityRequirements(ChangedSecurityRequirements)", "ChangedOperation.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["ChangedOperation", "PathItem", "Operation", "ChangedMetadata", "ChangedParameters", "ChangedRequestBody", "ChangedApiResponse", "ChangedSecurityRequirements", "ChangedExtensions"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getChangedElements method of the ChangedOperation class to ensure it returns the correct number of changed elements."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityScheme_hashCodeTest.java", "testclass_name": "ChangedSecurityScheme_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityScheme_hashCodeTest", "description": "Unit tests for the hashCode method of the ChangedSecurityScheme class.", "class_members": {"variables": [{"name": "oldScheme", "type": "SecurityScheme"}, {"name": "newScheme", "type": "SecurityScheme"}, {"name": "context", "type": "DiffContext"}, {"name": "changedSecurityScheme", "type": "ChangedSecurityScheme"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedSecurityScheme.hashCode()"], "external_dependencies": {"modules": ["SecurityScheme", "DiffContext", "ChangedSecurityScheme", "Objects"], "class_members": [{"name": "oldScheme", "type": "variable"}, {"name": "newScheme", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "changedSecurityScheme", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedSecurityScheme class."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirements_addChangedTest.java", "testclass_name": "ChangedSecurityRequirements_addChangedTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.ArrayList;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirements_addChangedTest", "description": "Tests for the addChanged method in ChangedSecurityRequirements class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testAddChanged_InitialNullList", "primary_tested": ["ChangedSecurityRequirements.addChanged(ChangedSecurityRequirement)"], "associated_methods": ["ChangedSecurityRequirements.getChanged()"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "ChangedSecurityRequirement", "SecurityRequirement", "List", "ArrayList"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addChanged method when the initial list is null."}, {"name": "testAddChanged_ExistingList", "primary_tested": ["ChangedSecurityRequirements.addChanged(ChangedSecurityRequirement)"], "associated_methods": ["ChangedSecurityRequirements.getChanged()", "ChangedSecurityRequirements.setChanged(List)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "ChangedSecurityRequirement", "SecurityRequirement", "List", "ArrayList"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addChanged method when the existing list is not null."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedMetadata_equalsTest.java", "testclass_name": "ChangedMetadata_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.Test;"], "name": "ChangedMetadata_equalsTest", "description": "Unit tests for the equals method in the ChangedMetadata class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedMetadata.equals(Object)"], "external_dependencies": {"modules": ["ChangedMetadata"]}, "category": "unit", "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullOrDifferentClass", "primary_tested": ["ChangedMetadata.equals(Object)"], "external_dependencies": {"modules": ["ChangedMetadata"]}, "category": "unit", "description": "Tests the equals method with null and a different class instance."}, {"name": "testEquals_DifferentValues", "primary_tested": ["ChangedMetadata.equals(Object)"], "external_dependencies": {"modules": ["ChangedMetadata"]}, "category": "unit", "description": "Tests the equals method with different values."}, {"name": "testEquals_SameValues", "primary_tested": ["ChangedMetadata.equals(Object)"], "associated_methods": ["ChangedMetadata.hashCode()"], "external_dependencies": {"modules": ["ChangedMetadata"]}, "category": "unit", "description": "Tests the equals method with the same values and checks the hash code."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirement_addMissingTest.java", "testclass_name": "ChangedSecurityRequirement_addMissingTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirement_addMissingTest", "description": "Unit tests for the addMissing method in ChangedSecurityRequirement.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testAddMissing_InitialMissingIsNull", "primary_tested": ["ChangedSecurityRequirement.addMissing(String,List<String>)"], "associated_methods": ["ChangedSecurityRequirement.getMissing()"], "external_dependencies": {"modules": ["ChangedSecurityRequirement", "SecurityRequirement"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addMissing method when the initial missing is null."}, {"name": "testAddMissing_InitialMissingIsNotNull", "primary_tested": ["ChangedSecurityRequirement.addMissing(String,List<String>)"], "associated_methods": ["ChangedSecurityRequirement.getMissing()", "ChangedSecurityRequirement.setMissing(SecurityRequirement)"], "external_dependencies": {"modules": ["ChangedSecurityRequirement", "SecurityRequirement"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addMissing method when the initial missing is not null."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedParameter_hashCodeTest.java", "testclass_name": "ChangedParameter_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.parameters.Parameter;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedParameter_hashCodeTest", "description": "Unit test for the hashCode method of the ChangedParameter class.", "class_members": {"variables": [{"name": "context", "type": "DiffContext"}, {"name": "oldParameter", "type": "Parameter"}, {"name": "newParameter", "type": "Parameter"}, {"name": "changedParameter", "type": "ChangedParameter"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedParameter.hashCode()"], "associated_methods": ["ChangedParameter.setOldParameter(Parameter)", "ChangedParameter.setNewParameter(Parameter)"], "external_dependencies": {"modules": ["DiffContext", "Parameter", "ChangedParameter", "Objects"], "class_members": [{"name": "context", "type": "variable"}, {"name": "oldParameter", "type": "variable"}, {"name": "newParameter", "type": "variable"}, {"name": "changedParameter", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedParameter class by comparing the computed hash code with the expected hash code."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setEnumerationTest.java", "testclass_name": "ChangedSchema_setEnumerationTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedEnum;"], "name": "ChangedSchema_setEnumerationTest", "description": "Unit tests for the setEnumeration method in ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetEnumeration", "primary_tested": ["ChangedSchema.setEnumeration(ChangedEnum)"], "associated_methods": ["ChangedSchema.getEnumeration()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedEnum"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setEnumeration method of the ChangedSchema class to ensure it correctly sets and retrieves the enumeration."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/utils/EndpointUtils_convert2EndpointListTest.java", "testclass_name": "EndpointUtils_convert2EndpointListTest", "dependencies": ["package org.openapitools.openapidiff.core.utils;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import java.util.HashMap;", "import java.util.List;", "import java.util.Map;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.Endpoint;"], "name": "EndpointUtils_convert2EndpointListTest", "description": "Unit tests for the EndpointUtils.convert2EndpointList method.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testConvert2EndpointList_NullMap", "primary_tested": ["EndpointUtils.convert2EndpointList(Map<String,PathItem>)"], "external_dependencies": {"modules": ["EndpointUtils", "Map", "PathItem", "List", "Endpoint"]}, "category": "unit", "description": "Tests the conversion of a null map to an endpoint list, expecting an empty list."}, {"name": "testConvert2EndpointList_NonEmptyMap", "primary_tested": ["EndpointUtils.convert2EndpointList(Map<String,PathItem>)"], "associated_methods": ["PathItem.setGet(Operation)", "Operation.setSummary(String)", "Endpoint.getPathUrl()", "Endpoint.getMethod()", "Endpoint.getSummary()", "Endpoint.getPath()", "Endpoint.getOperation()"], "external_dependencies": {"modules": ["EndpointUtils", "Map", "PathItem", "Operation", "List", "Endpoint", "HashMap"]}, "category": "unit", "description": "Tests the conversion of a non-empty map to an endpoint list, verifying the endpoint details."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setChangeDeprecatedTest.java", "testclass_name": "ChangedSchema_setChangeDeprecatedTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setChangeDeprecatedTest", "description": "Unit test for the setChangeDeprecated method in the ChangedSchema class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testSetChangeDeprecated", "primary_tested": ["ChangedSchema.setChangeDeprecated(boolean)"], "associated_methods": ["ChangedSchema.isChangeDeprecated()"], "external_dependencies": {"modules": ["ChangedSchema"]}, "category": "unit", "description": "Tests the setChangeDeprecated method of the ChangedSchema class to ensure it correctly sets the deprecated status and returns the instance."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedRequestBody_toStringTest.java", "testclass_name": "ChangedRequestBody_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.parameters.RequestBody;", "import org.junit.jupiter.api.Test;"], "name": "ChangedRequestBody_toStringTest", "description": "Unit test for the toString method of the ChangedRequestBody class.", "class_members": {"variables": [{"name": "oldRequestBody", "type": "RequestBody"}, {"name": "newRequestBody", "type": "RequestBody"}, {"name": "context", "type": "DiffContext"}, {"name": "changedRequestBody", "type": "ChangedRequestBody"}]}, "test_cases": [{"name": "testToString", "primary_tested": ["ChangedRequestBody.toString()"], "associated_methods": ["ChangedRequestBody.isChangeRequired()", "ChangedRequestBody.getDescription()", "ChangedRequestBody.getContent()", "ChangedRequestBody.getExtensions()"], "external_dependencies": {"modules": ["RequestBody", "DiffContext", "ChangedRequestBody"], "class_members": [{"name": "oldRequestBody", "type": "variable"}, {"name": "newRequestBody", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "changedRequestBody", "type": "variable"}]}, "category": "unit", "description": "Tests the toString method of the ChangedRequestBody class to ensure it correctly represents the object's state."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlows_setAuthorizationCodeOAuthFlowTest.java", "testclass_name": "ChangedOAuthFlows_setAuthorizationCodeOAuthFlowTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.security.OAuthFlow;", "import io.swagger.v3.oas.models.security.OAuthFlows;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlows_setAuthorizationCodeOAuthFlowTest", "description": "Test for setting the authorization code OAuth flow in ChangedOAuthFlows.", "class_members": {"variables": [{"name": "oldOAuthFlows", "type": "OAuthFlows"}, {"name": "newOAuthFlows", "type": "OAuthFlows"}, {"name": "changedOAuthFlows", "type": "ChangedOAuthFlows"}, {"name": "authorizationCodeOAuthFlow", "type": "ChangedOAuthFlow"}]}, "test_cases": [{"name": "testSetAuthorizationCodeOAuthFlow", "primary_tested": ["ChangedOAuthFlows.setAuthorizationCodeOAuthFlow(ChangedOAuthFlow)"], "associated_methods": ["ChangedOAuthFlows.getAuthorizationCodeOAuthFlow()"], "external_dependencies": {"modules": ["OAuthFlows", "ChangedOAuthFlows", "ChangedOAuthFlow", "OAuthFlow"], "class_members": [{"name": "oldOAuthFlows", "type": "variable"}, {"name": "newOAuthFlows", "type": "variable"}, {"name": "changedOAuthFlows", "type": "variable"}, {"name": "authorizationCodeOAuthFlow", "type": "variable"}]}, "category": "unit", "description": "Tests the functionality of setting the authorization code OAuth flow in ChangedOAuthFlows and verifies the result."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedMetadata_isChangedTest.java", "testclass_name": "ChangedMetadata_isChangedTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "ChangedMetadata_isChangedTest", "description": "Unit tests for the isChanged method in the ChangedMetadata class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testIsChanged_NoChanges", "primary_tested": ["ChangedMetadata.isChanged()"], "external_dependencies": {"modules": ["ChangedMetadata", "DiffResult"]}, "category": "unit", "description": "Tests the isChanged method when there are no changes in metadata."}, {"name": "testIsChanged_Metadata", "primary_tested": ["ChangedMetadata.isChanged()"], "external_dependencies": {"modules": ["ChangedMetadata", "DiffResult"]}, "category": "unit", "description": "Tests the isChanged method when there are metadata changes."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setNumericRangeTest.java", "testclass_name": "ChangedSchema_setNumericRangeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import java.math.BigDecimal;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedNumericRange;"], "name": "ChangedSchema_setNumericRangeTest", "description": "Unit tests for the setNumericRange method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetNumericRange", "primary_tested": ["ChangedSchema.setNumericRange(ChangedNumericRange)"], "associated_methods": ["ChangedSchema.getNumericRange()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedNumericRange", "BigDecimal"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setNumericRange method of the ChangedSchema class, ensuring that the numeric range is correctly set and retrieved."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setExtensionsTest.java", "testclass_name": "ChangedSchema_setExtensionsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setExtensionsTest", "description": "Unit test for the setExtensions method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetExtensions", "primary_tested": ["ChangedSchema.setExtensions(ChangedExtensions)"], "associated_methods": ["ChangedSchema.getExtensions()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedExtensions"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setExtensions method of the ChangedSchema class to ensure it correctly sets and retrieves the extensions."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedRequestBody_hashCodeTest.java", "testclass_name": "ChangedRequestBody_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.parameters.RequestBody;", "import org.junit.jupiter.api.Test;"], "name": "ChangedRequestBody_hashCodeTest", "description": "Unit tests for the hashCode method of the ChangedRequestBody class.", "class_members": {"variables": [{"name": "oldRequestBody", "type": "RequestBody"}, {"name": "newRequestBody", "type": "RequestBody"}, {"name": "context", "type": "DiffContext"}, {"name": "description", "type": "ChangedMetadata"}, {"name": "content", "type": "ChangedContent"}, {"name": "extensions", "type": "ChangedExtensions"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedRequestBody.hashCode()"], "external_dependencies": {"modules": ["RequestBody", "DiffContext", "ChangedMetadata", "ChangedContent", "ChangedExtensions", "ChangedRequestBody"], "class_members": [{"name": "oldRequestBody", "type": "variable"}, {"name": "newRequestBody", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "description", "type": "variable"}, {"name": "content", "type": "variable"}, {"name": "extensions", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedRequestBody class to ensure it returns consistent results for the same input."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOpenApi_hashCodeTest.java", "testclass_name": "ChangedOpenApi_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.OpenAPI;", "import java.util.Collections;", "import java.util.List;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOpenApi_hashCodeTest", "description": "Unit test for the hashCode method in the ChangedOpenApi class.", "class_members": {"variables": [{"name": "oldSpec", "type": "OpenAPI"}, {"name": "newSpec", "type": "OpenAPI"}, {"name": "newEndpoints", "type": "List<Endpoint>"}, {"name": "missingEndpoints", "type": "List<Endpoint>"}, {"name": "changedOperations", "type": "List<ChangedOperation>"}, {"name": "changedExtensions", "type": "ChangedExtensions"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedOpenApi.hashCode()"], "external_dependencies": {"modules": ["OpenAPI", "Endpoint", "ChangedOperation", "ChangedExtensions", "Objects"], "class_members": [{"name": "oldSpec", "type": "variable"}, {"name": "newSpec", "type": "variable"}, {"name": "newEndpoints", "type": "variable"}, {"name": "missingEndpoints", "type": "variable"}, {"name": "changedOperations", "type": "variable"}, {"name": "changedExtensions", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedOpenApi class by comparing the expected hash code with the actual hash code generated by the method."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedHeader_hashCodeTest.java", "testclass_name": "ChangedHeader_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.headers.Header;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedHeader_hashCodeTest", "description": "Unit tests for the hashCode method of the ChangedHeader class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedHeader.hashCode()"], "external_dependencies": {"modules": ["Header", "DiffContext", "ChangedHeader", "Objects"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of the ChangedHeader class."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedContent_toStringTest.java", "testclass_name": "ChangedContent_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.media.Content;", "import io.swagger.v3.oas.models.media.MediaType;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedContent_toStringTest", "description": "Unit test for the toString method of the ChangedContent class.", "class_members": {"variables": [{"name": "oldContent", "type": "Content"}, {"name": "newContent", "type": "Content"}, {"name": "context", "type": "DiffContext"}, {"name": "increased", "type": "Map<String, MediaType>"}, {"name": "missing", "type": "Map<String, MediaType>"}, {"name": "changed", "type": "Map<String, ChangedMediaType>"}]}, "test_cases": [{"name": "testToString", "primary_tested": ["ChangedContent.toString()"], "external_dependencies": {"modules": ["Content", "DiffContext", "Map", "HashMap", "MediaType", "ChangedMediaType"], "class_members": [{"name": "oldContent", "type": "variable"}, {"name": "newContent", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "increased", "type": "variable"}, {"name": "missing", "type": "variable"}, {"name": "changed", "type": "variable"}]}, "category": "unit", "description": "Tests the toString method of the ChangedContent class to ensure it correctly represents the object's state."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setWriteOnlyTest.java", "testclass_name": "ChangedSchema_setWriteOnlyTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.schema.ChangedWriteOnly;"], "name": "ChangedSchema_setWriteOnlyTest", "description": "Unit tests for the setWriteOnly method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetWriteOnly", "primary_tested": ["ChangedSchema.setWriteOnly(ChangedWriteOnly)"], "associated_methods": ["ChangedSchema.getWriteOnly()"], "external_dependencies": {"modules": ["ChangedSchema", "ChangedWriteOnly"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setWriteOnly method of the ChangedSchema class to ensure it correctly sets and retrieves the write-only property."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirements_setNewSecurityRequirementsTest.java", "testclass_name": "ChangedSecurityRequirements_setNewSecurityRequirementsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirements_setNewSecurityRequirementsTest", "description": "Test for setting new security requirements in ChangedSecurityRequirements.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testSetNewSecurityRequirements", "primary_tested": ["ChangedSecurityRequirements.setNewSecurityRequirements(List<SecurityRequirement>)"], "associated_methods": ["ChangedSecurityRequirements.getNewSecurityRequirements()"], "external_dependencies": {"modules": ["SecurityRequirement", "DiffContext", "ChangedSecurityRequirements"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the functionality of setting new security requirements in ChangedSecurityRequirements and verifies the updated list."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedPath_hashCodeTest.java", "testclass_name": "ChangedPath_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.PathItem;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedPath_hashCodeTest", "description": "Unit test for the hashCode method in the ChangedPath class.", "class_members": {"variables": [{"name": "pathUrl", "type": "String"}, {"name": "oldPath", "type": "PathItem"}, {"name": "newPath", "type": "PathItem"}, {"name": "context", "type": "DiffContext"}, {"name": "changedPath", "type": "ChangedPath"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedPath.hashCode()"], "associated_methods": ["ChangedPath.setIncreased(LinkedHashMap)", "ChangedPath.setMissing(LinkedHashMap)", "ChangedPath.setChanged(ArrayList)", "ChangedPath.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["PathItem", "DiffContext", "ChangedPath", "ChangedExtensions", "LinkedHashMap", "ArrayList", "Objects"], "class_members": [{"name": "pathUrl", "type": "variable"}, {"name": "oldPath", "type": "variable"}, {"name": "newPath", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "changedPath", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedPath class to ensure it returns the expected hash code."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/utils/RefPointer_getRefNameTest.java", "testclass_name": "RefPointer_getRefNameTest", "dependencies": ["package org.openapitools.openapidiff.core.utils;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;"], "name": "RefPointer_getRefNameTest", "description": "Unit tests for the getRefName method of the RefPointer class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testGetRefName_NullRef", "primary_tested": ["RefPointer.getRefName(String)"], "external_dependencies": {"modules": ["RefPointer", "RefType"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getRefName method with a null reference."}, {"name": "testGetRefName_SecuritySchemes", "primary_tested": ["RefPointer.getRefName(String)"], "external_dependencies": {"modules": ["RefPointer", "RefType"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getRefName method with a reference to security schemes."}, {"name": "testGetRefName_ValidRef", "primary_tested": ["RefPointer.getRefName(String)"], "external_dependencies": {"modules": ["RefPointer", "RefType"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getRefName method with a valid reference."}, {"name": "testGetRefName_InvalidRef", "primary_tested": ["RefPointer.getRefName(String)"], "external_dependencies": {"modules": ["RefPointer", "RefType"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getRefName method with an invalid reference, expecting an IllegalArgumentException."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setChangedPropertiesTest.java", "testclass_name": "ChangedSchema_setChangedPropertiesTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setChangedPropertiesTest", "description": "Unit test for the setChangedProperties method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetChangedProperties", "primary_tested": ["ChangedSchema.setChangedProperties(Map<String,ChangedSchema>)"], "associated_methods": ["ChangedSchema.getChangedProperties()"], "external_dependencies": {"modules": ["ChangedSchema", "Map", "HashMap"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setChangedProperties method of the ChangedSchema class to ensure it correctly sets and retrieves the changed properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setMissingPropertiesTest.java", "testclass_name": "ChangedSchema_setMissingPropertiesTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.media.Schema;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setMissingPropertiesTest", "description": "Unit tests for the setMissingProperties method in the ChangedSchema class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testSetMissingProperties", "primary_tested": ["ChangedSchema.setMissingProperties(Map<String,Schema<?>>)"], "associated_methods": ["ChangedSchema.getMissingProperties()"], "external_dependencies": {"modules": ["ChangedSchema", "Schema", "Map", "HashMap"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the setMissingProperties method of the ChangedSchema class to ensure it correctly sets and retrieves missing properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirements_addMissingTest.java", "testclass_name": "ChangedSecurityRequirements_addMissingTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.ArrayList;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirements_addMissingTest", "description": "Unit tests for the addMissing method in ChangedSecurityRequirements class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testAddMissing_InitialNull", "primary_tested": ["ChangedSecurityRequirements.addMissing(SecurityRequirement)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addMissing method when the initial missing list is null."}, {"name": "testAddMissing_InitialNotNull", "primary_tested": ["ChangedSecurityRequirements.addMissing(SecurityRequirement)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement", "ArrayList"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addMissing method when the initial missing list is not null."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirement_hashCodeTest.java", "testclass_name": "ChangedSecurityRequirement_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirement_hashCodeTest", "description": "Unit tests for the hashCode method of the ChangedSecurityRequirement class.", "class_members": {"variables": [{"name": "oldSecurityRequirement", "type": "SecurityRequirement"}, {"name": "newSecurityRequirement", "type": "SecurityRequirement"}, {"name": "missing", "type": "SecurityRequirement"}, {"name": "increased", "type": "SecurityRequirement"}, {"name": "changedSecurityScheme", "type": "ChangedSecurityScheme"}, {"name": "changedSecurityRequirement", "type": "ChangedSecurityRequirement"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedSecurityRequirement.hashCode()"], "associated_methods": ["ChangedSecurityRequirement.setMissing(SecurityRequirement)", "ChangedSecurityRequirement.setIncreased(SecurityRequirement)", "ChangedSecurityRequirement.addChanged(ChangedSecurityScheme)", "ChangedSecurityRequirement.getChanged()"], "external_dependencies": {"modules": ["SecurityRequirement", "ChangedSecurityScheme", "ChangedSecurityRequirement", "Objects"], "class_members": [{"name": "oldSecurityRequirement", "type": "variable"}, {"name": "newSecurityRequirement", "type": "variable"}, {"name": "missing", "type": "variable"}, {"name": "increased", "type": "variable"}, {"name": "changedSecurityScheme", "type": "variable"}, {"name": "changedSecurityRequirement", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedSecurityRequirement class."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/Change_equalsTest.java", "testclass_name": "Change_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import org.junit.jupiter.api.Test;"], "name": "Change_equalsTest", "description": "Unit tests for the equals method in the Change class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["Change.equals(Object)"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["Change.equals(Object)"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["Change.equals(Object)"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentValues", "primary_tested": ["Change.equals(Object)"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the equals method with different values."}, {"name": "testEquals_SameValues", "primary_tested": ["Change.equals(Object)"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the equals method with the same values."}, {"name": "testEquals_DifferentTypes", "primary_tested": ["Change.equals(Object)"], "external_dependencies": {"modules": ["Change"]}, "category": "unit", "description": "Tests the equals method with different types."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOperation_equalsTest.java", "testclass_name": "ChangedOperation_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOperation_equalsTest", "description": "Unit tests for the equals method in the ChangedOperation class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedOperation.equals(Object)"], "external_dependencies": {"modules": ["ChangedOperation", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedOperation.equals(Object)"], "external_dependencies": {"modules": ["ChangedOperation", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedOperation.equals(Object)"], "external_dependencies": {"modules": ["ChangedOperation", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedOperation.equals(Object)"], "external_dependencies": {"modules": ["ChangedOperation", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with different fields."}, {"name": "testEquals_SameFields", "primary_tested": ["ChangedOperation.equals(Object)"], "external_dependencies": {"modules": ["ChangedOperation", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with the same fields."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/schema/ChangedNumericRange_toStringTest.java", "testclass_name": "ChangedNumericRange_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model.schema;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import java.math.BigDecimal;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.DiffContext;"], "name": "ChangedNumericRange_toStringTest", "description": "Unit test for the toString method of ChangedNumericRange.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testToString", "primary_tested": ["ChangedNumericRange.toString()"], "external_dependencies": {"modules": ["DiffContext", "ChangedNumericRange", "BigDecimal"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the toString method of ChangedNumericRange to ensure it correctly formats the string representation of the object."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedHeader_equalsTest.java", "testclass_name": "ChangedHeader_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.headers.Header;", "import org.junit.jupiter.api.Test;"], "name": "ChangedHeader_equalsTest", "description": "Unit tests for the equals method in the ChangedHeader class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedHeader.equals(Object)"], "external_dependencies": {"modules": ["Header", "DiffContext", "ChangedHeader"]}, "category": "unit", "description": "Tests the equals method when comparing the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedHeader.equals(Object)"], "external_dependencies": {"modules": ["Header", "DiffContext", "ChangedHeader"]}, "category": "unit", "description": "Tests the equals method when comparing with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedHeader.equals(Object)"], "external_dependencies": {"modules": ["Header", "DiffContext", "ChangedHeader"]}, "category": "unit", "description": "Tests the equals method when comparing with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedHeader.equals(Object)"], "external_dependencies": {"modules": ["Header", "DiffContext", "ChangedHeader"]}, "category": "unit", "description": "Tests the equals method when comparing objects with different fields."}, {"name": "testEquals_SameFields", "primary_tested": ["ChangedHeader.equals(Object)"], "external_dependencies": {"modules": ["Header", "DiffContext", "ChangedHeader"]}, "category": "unit", "description": "Tests the equals method when comparing objects with the same fields."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirement_setOldSecurityRequirementTest.java", "testclass_name": "ChangedSecurityRequirement_setOldSecurityRequirementTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirement_setOldSecurityRequirementTest", "description": "Unit test for setting the old security requirement in ChangedSecurityRequirement.", "class_members": {"variables": [{"name": "oldSecurityRequirement", "type": "SecurityRequirement"}, {"name": "changedSecurityRequirement", "type": "ChangedSecurityRequirement"}]}, "fixtures": [], "test_cases": [{"name": "testSetOldSecurityRequirement", "primary_tested": ["ChangedSecurityRequirement.setOldSecurityRequirement(SecurityRequirement)"], "associated_methods": ["ChangedSecurityRequirement.getOldSecurityRequirement()"], "external_dependencies": {"modules": ["SecurityRequirement", "ChangedSecurityRequirement"], "class_members": [{"name": "oldSecurityRequirement", "type": "variable"}, {"name": "changedSecurityRequirement", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the functionality of setting the old security requirement in ChangedSecurityRequirement and verifies it using the getter method."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirements_equalsTest.java", "testclass_name": "ChangedSecurityRequirements_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirements_equalsTest", "description": "Unit tests for the equals method of the ChangedSecurityRequirements class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ChangedSecurityRequirements.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with the same object."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedSecurityRequirements.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedSecurityRequirements.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedSecurityRequirements.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement", "Arrays"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with objects having different fields."}, {"name": "testEquals_SameFields", "primary_tested": ["ChangedSecurityRequirements.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement", "Arrays"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with objects having the same fields."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlow_hashCodeTest.java", "testclass_name": "ChangedOAuthFlow_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.OAuthFlow;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlow_hashCodeTest", "description": "Unit tests for the hashCode method of the ChangedOAuthFlow class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedOAuthFlow.hashCode()"], "associated_methods": ["ChangedOAuthFlow.setAuthorizationUrl(boolean)", "ChangedOAuthFlow.setTokenUrl(boolean)", "ChangedOAuthFlow.setRefreshUrl(boolean)", "ChangedOAuthFlow.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["OAuthFlow", "ChangedExtensions", "ChangedOAuthFlow", "Objects"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of the ChangedOAuthFlow class, ensuring it correctly computes the hash code based on the provided OAuthFlow objects and boolean flags."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedApiResponse_hashCodeTest.java", "testclass_name": "ChangedApiResponse_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.responses.ApiResponse;", "import io.swagger.v3.oas.models.responses.ApiResponses;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedApiResponse_hashCodeTest", "description": "Unit test for the hashCode method in ChangedApiResponse.", "class_members": {"variables": [{"name": "oldApiResponses", "type": "ApiResponses"}, {"name": "newApiResponses", "type": "ApiResponses"}, {"name": "context", "type": "DiffContext"}, {"name": "increased", "type": "Map<String, ApiResponse>"}, {"name": "missing", "type": "Map<String, ApiResponse>"}, {"name": "changed", "type": "Map<String, ChangedResponse>"}, {"name": "extensions", "type": "ChangedExtensions"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedApiResponse.hashCode()"], "associated_methods": ["ChangedApiResponse.setIncreased(Map<String, ApiResponse>)", "ChangedApiResponse.setMissing(Map<String, ApiResponse>)", "ChangedApiResponse.setChanged(Map<String, ChangedResponse>)", "ChangedApiResponse.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["ApiResponses", "DiffContext", "ApiResponse", "ChangedResponse", "ChangedExtensions", "Objects"], "class_members": [{"name": "oldApiResponses", "type": "variable"}, {"name": "newApiResponses", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "increased", "type": "variable"}, {"name": "missing", "type": "variable"}, {"name": "changed", "type": "variable"}, {"name": "extensions", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of ChangedApiResponse to ensure it correctly hashes the object's properties."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOneOfSchema_equalsTest.java", "testclass_name": "ChangedOneOfSchema_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotEquals;", "import io.swagger.v3.oas.models.media.Schema;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOneOfSchema_equalsTest", "description": "Unit tests for the equals method of the ChangedOneOfSchema class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ChangedOneOfSchema.equals(Object)"], "external_dependencies": {"modules": ["ChangedOneOfSchema", "HashMap", "DiffContext"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with the same object."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedOneOfSchema.equals(Object)"], "external_dependencies": {"modules": ["ChangedOneOfSchema", "HashMap", "DiffContext"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedOneOfSchema.equals(Object)"], "external_dependencies": {"modules": ["ChangedOneOfSchema", "HashMap", "DiffContext"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedOneOfSchema.equals(Object)"], "associated_methods": ["ChangedOneOfSchema.setIncreased(Map)", "ChangedOneOfSchema.setMissing(Map)", "ChangedOneOfSchema.setChanged(Map)"], "external_dependencies": {"modules": ["ChangedOneOfSchema", "HashMap", "DiffContext", "Schema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with objects having different fields."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedParameters_equalsTest.java", "testclass_name": "ChangedParameters_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.parameters.Parameter;", "import java.util.Arrays;", "import java.util.Collections;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedParameters_equalsTest", "description": "Unit tests for the equals method in the ChangedParameters class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedParameters.equals(Object)"], "external_dependencies": {"modules": ["ChangedParameters", "DiffContext"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedParameters.equals(Object)"], "external_dependencies": {"modules": ["ChangedParameters", "DiffContext"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedParameters.equals(Object)"], "external_dependencies": {"modules": ["ChangedParameters", "DiffContext"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedParameters.equals(Object)"], "external_dependencies": {"modules": ["ChangedParameters", "DiffContext", "Parameter"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with different fields."}, {"name": "testEquals_SameFields", "primary_tested": ["ChangedParameters.equals(Object)"], "external_dependencies": {"modules": ["ChangedParameters", "DiffContext", "Parameter"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with the same fields."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/schema/ChangedNumericRange_hashCodeTest.java", "testclass_name": "ChangedNumericRange_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model.schema;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotEquals;", "import java.math.BigDecimal;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.DiffContext;"], "name": "ChangedNumericRange_hashCodeTest", "description": "Unit tests for the hashCode method of the ChangedNumericRange class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedNumericRange.hashCode()"], "external_dependencies": {"modules": ["DiffContext", "ChangedNumericRange", "BigDecimal"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the hashCode method of the ChangedNumericRange class to ensure it returns the same hash code for equal objects and different hash codes for unequal objects."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedExtensions_equalsTest.java", "testclass_name": "ChangedExtensions_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedExtensions_equalsTest", "description": "Unit tests for the equals method in the ChangedExtensions class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ChangedExtensions.equals(Object)"], "external_dependencies": {"modules": ["ChangedExtensions", "HashMap", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with the same object reference."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedExtensions.equals(Object)"], "external_dependencies": {"modules": ["ChangedExtensions", "HashMap", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedExtensions.equals(Object)"], "external_dependencies": {"modules": ["ChangedExtensions", "HashMap", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentState", "primary_tested": ["ChangedExtensions.equals(Object)"], "associated_methods": ["ChangedExtensions.getOldExtensions()"], "external_dependencies": {"modules": ["ChangedExtensions", "HashMap", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with objects having different states."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/DeferredLogger_logValueTest.java", "testclass_name": "DeferredLogger_logValueTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;"], "name": "DeferredLogger_logValueTest", "description": "Unit test for the logValue method in DeferredLogger.", "class_members": {"variables": [{"name": "value", "type": "Object"}, {"name": "loggedValue", "type": "Object"}]}, "test_cases": [{"name": "testLogValue", "primary_tested": ["DeferredLogger.logValue(Object)"], "external_dependencies": {"modules": ["DeferredLogger"], "class_members": [{"name": "value", "type": "variable"}, {"name": "loggedValue", "type": "variable"}]}, "category": "unit", "description": "Tests the logValue method of DeferredLogger to ensure it logs the correct value."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlows_setClientCredentialOAuthFlowTest.java", "testclass_name": "ChangedOAuthFlows_setClientCredentialOAuthFlowTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.security.OAuthFlows;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlows_setClientCredentialOAuthFlowTest", "description": "Unit test for the setClientCredentialOAuthFlow method in ChangedOAuthFlows class.", "class_members": {"variables": [{"name": "oldOAuthFlows", "type": "OAuthFlows"}, {"name": "newOAuthFlows", "type": "OAuthFlows"}, {"name": "changedOAuthFlows", "type": "ChangedOAuthFlows"}, {"name": "clientCredentialOAuthFlow", "type": "ChangedOAuthFlow"}]}, "test_cases": [{"name": "testSetClientCredentialOAuthFlow", "primary_tested": ["ChangedOAuthFlows.setClientCredentialOAuthFlow(ChangedOAuthFlow)"], "associated_methods": ["ChangedOAuthFlows.getClientCredentialOAuthFlow()"], "external_dependencies": {"modules": ["OAuthFlows", "ChangedOAuthFlows", "ChangedOAuthFlow"], "class_members": [{"name": "oldOAuthFlows", "type": "variable"}, {"name": "newOAuthFlows", "type": "variable"}, {"name": "changedOAuthFlows", "type": "variable"}, {"name": "clientCredentialOAuthFlow", "type": "variable"}]}, "category": "unit", "description": "Tests the setClientCredentialOAuthFlow method in ChangedOAuthFlows to ensure it correctly sets and retrieves the client credential OAuth flow."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/SecurityRequirementDiff_getCopyTest.java", "testclass_name": "SecurityRequirementDiff_getCopyTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.LinkedHashMap;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "SecurityRequirementDiff_getCopyTest", "description": "Unit test for the getCopy method in SecurityRequirementDiff.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testGetCopy", "primary_tested": ["SecurityRequirementDiff.getCopy(LinkedHashMap<String,List<String>>)"], "external_dependencies": {"modules": ["SecurityRequirement", "LinkedHashMap", "List"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getCopy method of SecurityRequirementDiff to ensure it correctly copies the input map to a SecurityRequirement object."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_setChangeDefaultTest.java", "testclass_name": "ChangedSchema_setChangeDefaultTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_setChangeDefaultTest", "description": "Unit tests for the setChangeDefault method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetChangeDefault", "primary_tested": ["ChangedSchema.setChangeDefault(boolean)"], "associated_methods": ["ChangedSchema.isChangeDefault()"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests setting the change default flag to true and verifies the change default status."}, {"name": "testSetChangeDefaultToFalse", "primary_tested": ["ChangedSchema.setChangeDefault(boolean)"], "associated_methods": ["ChangedSchema.isChangeDefault()"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests setting the change default flag to false and verifies the change default status."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/PendingChanged_toStringTest.java", "testclass_name": "PendingChanged_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import java.util.Optional;", "import org.junit.jupiter.api.Test;"], "name": "PendingChanged_toStringTest", "description": "Unit tests for the toString method of the PendingChanged class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testToStringWithValueSet", "primary_tested": ["PendingChanged.toString()"], "associated_methods": ["PendingChanged.setValue(Optional<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the toString method of PendingChanged when a value is set."}, {"name": "testToStringWithNoValueSet", "primary_tested": ["PendingChanged.toString()"], "external_dependencies": {"modules": ["PendingChanged"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the toString method of PendingChanged when no value is set."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSchema_equalsTest.java", "testclass_name": "ChangedSchema_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.media.Schema;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSchema_equalsTest", "description": "Unit tests for the equals method in the ChangedSchema class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedSchema.equals(Object)"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedSchema.equals(Object)"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedSchema.equals(Object)"], "external_dependencies": {"modules": ["ChangedSchema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentSchemas", "primary_tested": ["ChangedSchema.equals(Object)"], "associated_methods": ["ChangedSchema.setOldSchema(Schema)", "ChangedSchema.setNewSchema(Schema)"], "external_dependencies": {"modules": ["ChangedSchema", "Schema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with different schemas that are equal."}, {"name": "testEquals_DifferentSchemas_NotEqual", "primary_tested": ["ChangedSchema.equals(Object)"], "associated_methods": ["ChangedSchema.setOldSchema(Schema)", "ChangedSchema.setNewSchema(Schema)"], "external_dependencies": {"modules": ["ChangedSchema", "Schema"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method with different schemas that are not equal."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlow_equalsTest.java", "testclass_name": "ChangedOAuthFlow_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.OAuthFlow;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlow_equalsTest", "description": "Unit tests for the equals method in the ChangedOAuthFlow class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedOAuthFlow.equals(Object)"], "external_dependencies": {"modules": ["ChangedOAuthFlow", "OAuthFlow"]}, "category": "unit", "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedOAuthFlow.equals(Object)"], "external_dependencies": {"modules": ["ChangedOAuthFlow", "OAuthFlow"]}, "category": "unit", "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedOAuthFlow.equals(Object)"], "external_dependencies": {"modules": ["ChangedOAuthFlow", "OAuthFlow"]}, "category": "unit", "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedOAuthFlow.equals(Object)"], "associated_methods": ["ChangedOAuthFlow.setAuthorizationUrl(boolean)", "ChangedOAuthFlow.setTokenUrl(boolean)", "ChangedOAuthFlow.setRefreshUrl(boolean)", "ChangedOAuthFlow.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["ChangedOAuthFlow", "OAuthFlow", "ChangedExtensions"]}, "category": "unit", "description": "Tests the equals method with different field values."}, {"name": "testEquals_SameFields", "primary_tested": ["ChangedOAuthFlow.equals(Object)"], "associated_methods": ["ChangedOAuthFlow.setAuthorizationUrl(boolean)", "ChangedOAuthFlow.setTokenUrl(boolean)", "ChangedOAuthFlow.setRefreshUrl(boolean)", "ChangedOAuthFlow.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["ChangedOAuthFlow", "OAuthFlow", "ChangedExtensions"]}, "category": "unit", "description": "Tests the equals method with the same field values."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedHeaders_equalsTest.java", "testclass_name": "ChangedHeaders_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.headers.Header;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedHeaders_equalsTest", "description": "Unit tests for the equals method in the ChangedHeaders class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ChangedHeaders.equals(Object)"], "external_dependencies": {"modules": ["ChangedHeaders", "DiffContext", "HashMap"]}, "category": "unit", "description": "Tests the equals method when comparing the same object."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedHeaders.equals(Object)"], "external_dependencies": {"modules": ["ChangedHeaders", "DiffContext", "HashMap"]}, "category": "unit", "description": "Tests the equals method when comparing with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedHeaders.equals(Object)"], "external_dependencies": {"modules": ["ChangedHeaders", "DiffContext", "HashMap"]}, "category": "unit", "description": "Tests the equals method when comparing with an object of a different class."}, {"name": "testEquals_DifferentState", "primary_tested": ["ChangedHeaders.equals(Object)"], "associated_methods": ["ChangedHeaders.setIncreased(Map<String,Header>)", "ChangedHeaders.setMissing(Map<String,Header>)", "ChangedHeaders.setChanged(Map<String,Header>)"], "external_dependencies": {"modules": ["ChangedHeaders", "DiffContext", "HashMap", "Header"]}, "category": "unit", "description": "Tests the equals method when comparing objects with different states."}, {"name": "testHashCode_Consistency", "primary_tested": ["ChangedHeaders.hashCode()"], "associated_methods": ["ChangedHeaders.setIncreased(Map<String,Header>)", "ChangedHeaders.setMissing(Map<String,Header>)", "ChangedHeaders.setChanged(Map<String,Header>)"], "external_dependencies": {"modules": ["ChangedHeaders", "DiffContext", "HashMap", "Header"]}, "category": "unit", "description": "Tests the consistency of the hashCode method."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlows_hashCodeTest.java", "testclass_name": "ChangedOAuthFlows_hashCodeTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.OAuthFlows;", "import java.util.Objects;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlows_hashCodeTest", "description": "Unit test for the hashCode method of the ChangedOAuthFlows class.", "class_members": {"variables": [{"name": "oldOAuthFlows", "type": "OAuthFlows"}, {"name": "newOAuthFlows", "type": "OAuthFlows"}, {"name": "changedOAuthFlows", "type": "ChangedOAuthFlows"}, {"name": "implicitOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "passwordOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "clientCredentialOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "authorizationCodeOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "extensions", "type": "ChangedExtensions"}]}, "test_cases": [{"name": "testHashCode", "primary_tested": ["ChangedOAuthFlows.hashCode()"], "associated_methods": ["ChangedOAuthFlows.setImplicitOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setPasswordOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setClientCredentialOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setAuthorizationCodeOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["OAuthFlows", "ChangedOAuthFlows", "ChangedOAuthFlow", "ChangedExtensions", "Objects"], "class_members": [{"name": "oldOAuthFlows", "type": "variable"}, {"name": "newOAuthFlows", "type": "variable"}, {"name": "changedOAuthFlows", "type": "variable"}, {"name": "implicitOAuthFlow", "type": "variable"}, {"name": "passwordOAuthFlow", "type": "variable"}, {"name": "clientCredentialOAuthFlow", "type": "variable"}, {"name": "authorizationCodeOAuthFlow", "type": "variable"}, {"name": "extensions", "type": "variable"}]}, "category": "unit", "description": "Tests the hashCode method of the ChangedOAuthFlows class by setting various OAuth flows and extensions and comparing the generated hash code with the expected hash code."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/SecurityDiffInfo_getSecurityRequirementTest.java", "testclass_name": "SecurityDiffInfo_getSecurityRequirementTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "SecurityDiffInfo_getSecurityRequirementTest", "description": "Unit tests for the getSecurityRequirement method in SecurityDiffInfo.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testGetSecurityRequirement", "primary_tested": ["SecurityDiffInfo.getSecurityRequirement(List<SecurityDiffInfo>)"], "external_dependencies": {"modules": ["SecurityScheme", "SecurityDiffInfo", "SecurityRequirement"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the getSecurityRequirement method of SecurityDiffInfo to ensure it correctly processes a list of SecurityDiffInfo objects and returns the expected SecurityRequirement."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlows_getChangedElementsTest.java", "testclass_name": "ChangedOAuthFlows_getChangedElementsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.OAuthFlows;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlows_getChangedElementsTest", "description": "Unit test for the getChangedElements method in the ChangedOAuthFlows class.", "class_members": {"variables": [{"name": "oldOAuthFlows", "type": "OAuthFlows"}, {"name": "newOAuthFlows", "type": "OAuthFlows"}, {"name": "changedOAuthFlows", "type": "ChangedOAuthFlows"}, {"name": "implicitOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "passwordOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "clientCredentialOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "authorizationCodeOAuthFlow", "type": "ChangedOAuthFlow"}, {"name": "extensions", "type": "ChangedExtensions"}]}, "test_cases": [{"name": "testGetChangedElements", "primary_tested": ["ChangedOAuthFlows.getChangedElements()"], "associated_methods": ["ChangedOAuthFlows.setImplicitOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setPasswordOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setClientCredentialOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setAuthorizationCodeOAuthFlow(ChangedOAuthFlow)", "ChangedOAuthFlows.setExtensions(ChangedExtensions)"], "external_dependencies": {"modules": ["OAuthFlows", "ChangedOAuthFlows", "ChangedOAuthFlow", "ChangedExtensions"], "class_members": [{"name": "oldOAuthFlows", "type": "variable"}, {"name": "newOAuthFlows", "type": "variable"}, {"name": "changedOAuthFlows", "type": "variable"}, {"name": "implicitOAuthFlow", "type": "variable"}, {"name": "passwordOAuthFlow", "type": "variable"}, {"name": "clientCredentialOAuthFlow", "type": "variable"}, {"name": "authorizationCodeOAuthFlow", "type": "variable"}, {"name": "extensions", "type": "variable"}]}, "category": "unit", "description": "Tests the getChangedElements method of the ChangedOAuthFlows class to ensure it returns the correct list of changed elements."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/PathsDiff_valOrEmptyTest.java", "testclass_name": "PathsDiff_valOrEmptyTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.Paths;", "import org.junit.jupiter.api.Test;"], "name": "PathsDiff_valOrEmptyTest", "description": "Unit tests for the PathsDiff.valOrEmpty method.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testValOrEmpty_WithNullPath", "primary_tested": ["PathsDiff.valOrEmpty(Paths)"], "external_dependencies": {"modules": ["PathsDiff", "Paths"]}, "category": "unit", "description": "Tests the PathsDiff.valOrEmpty method with a null Paths object."}, {"name": "testValOrEmpty_WithNonNullPath", "primary_tested": ["PathsDiff.valOrEmpty(Paths)"], "external_dependencies": {"modules": ["PathsDiff", "Paths"]}, "category": "unit", "description": "Tests the PathsDiff.valOrEmpty method with a non-null Paths object."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedOAuthFlow_toStringTest.java", "testclass_name": "ChangedOAuthFlow_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.OAuthFlow;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "ChangedOAuthFlow_toStringTest", "description": "Unit tests for the toString method of ChangedOAuthFlow.", "class_members": {"variables": [{"name": "oldOAuthFlow", "type": "OAuthFlow"}, {"name": "newOAuthFlow", "type": "OAuthFlow"}, {"name": "oldExtensions", "type": "Map<String, Object>"}, {"name": "newExtensions", "type": "Map<String, Object>"}, {"name": "changedExtensions", "type": "ChangedExtensions"}, {"name": "changedOAuthFlow", "type": "ChangedOAuthFlow"}]}, "test_cases": [{"name": "testToString", "primary_tested": ["ChangedOAuthFlow.toString()"], "associated_methods": ["ChangedOAuthFlow.setAuthorizationUrl(boolean)", "ChangedOAuthFlow.setTokenUrl(boolean)", "ChangedOAuthFlow.setRefreshUrl(boolean)", "ChangedOAuthFlow.setExtensions(ChangedExtensions)", "ChangedOAuthFlow.getExtensions()"], "external_dependencies": {"modules": ["OAuthFlow", "Map", "ChangedExtensions", "ChangedOAuthFlow"], "class_members": [{"name": "oldOAuthFlow", "type": "variable"}, {"name": "newOAuthFlow", "type": "variable"}, {"name": "oldExtensions", "type": "variable"}, {"name": "newExtensions", "type": "variable"}, {"name": "changedExtensions", "type": "variable"}, {"name": "changedOAuthFlow", "type": "variable"}]}, "category": "unit", "description": "Tests the toString method of ChangedOAuthFlow to ensure it correctly represents the object's state."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirement_addIncreasedTest.java", "testclass_name": "ChangedSecurityRequirement_addIncreasedTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirement_addIncreasedTest", "description": "Unit tests for the addIncreased method in ChangedSecurityRequirement.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testAddIncreased_IncreasedIsNull", "primary_tested": ["ChangedSecurityRequirement.addIncreased(String,List<String>)"], "associated_methods": ["ChangedSecurityRequirement.getIncreased()"], "external_dependencies": {"modules": ["ChangedSecurityRequirement", "SecurityRequirement"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addIncreased method when the increased security requirement is initially null."}, {"name": "testAddIncreased_IncreasedIsNotNull", "primary_tested": ["ChangedSecurityRequirement.addIncreased(String,List<String>)"], "associated_methods": ["ChangedSecurityRequirement.getIncreased()", "ChangedSecurityRequirement.setIncreased(SecurityRequirement)"], "external_dependencies": {"modules": ["ChangedSecurityRequirement", "SecurityRequirement"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the addIncreased method when the increased security requirement is not null."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/ParametersDiff_containsTest.java", "testclass_name": "ParametersDiff_containsTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.Components;", "import io.swagger.v3.oas.models.parameters.Parameter;", "import java.util.Arrays;", "import java.util.List;", "import java.util.Optional;", "import org.junit.jupiter.api.Test;"], "name": "ParametersDiff_containsTest", "description": "Unit tests for the ParametersDiff.contains method.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testContains_ParameterFound", "primary_tested": ["ParametersDiff.contains(Components,List<Parameter>,Parameter)"], "external_dependencies": {"modules": ["Components", "Parameter", "ParametersDiff", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the ParametersDiff.contains method correctly identifies a parameter that is present in the list."}, {"name": "testContains_ParameterNotFound", "primary_tested": ["ParametersDiff.contains(Components,List<Parameter>,Parameter)"], "external_dependencies": {"modules": ["Components", "Parameter", "ParametersDiff", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests that the ParametersDiff.contains method correctly identifies a parameter that is not present in the list."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/SecurityDiffInfo_toStringTest.java", "testclass_name": "SecurityDiffInfo_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "SecurityDiffInfo_toStringTest", "description": "Unit test for the toString method of SecurityDiffInfo.", "class_members": {"variables": [{"name": "ref", "type": "String"}, {"name": "securityScheme", "type": "SecurityScheme"}, {"name": "scopes", "type": "List<String>"}]}, "test_cases": [{"name": "testToString", "primary_tested": ["SecurityDiffInfo.toString()"], "external_dependencies": {"modules": ["SecurityScheme", "SecurityDiffInfo"], "class_members": [{"name": "ref", "type": "variable"}, {"name": "securityScheme", "type": "variable"}, {"name": "scopes", "type": "variable"}]}, "category": "unit", "description": "Tests the toString method of SecurityDiffInfo to ensure it correctly formats the output string."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/SecurityDiffInfo_sameListTest.java", "testclass_name": "SecurityDiffInfo_sameListTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "SecurityDiffInfo_sameListTest", "description": "Tests for the SecurityDiffInfo.sameList method to check if two lists of SecurityDiffInfo are the same.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSameList_Unchanged", "primary_tested": ["SecurityDiffInfo.sameList(List<SecurityDiffInfo>,List<SecurityDiffInfo>)"], "external_dependencies": {"modules": ["SecurityScheme", "SecurityDiffInfo", "Arrays", "List"]}, "category": "unit", "description": "Tests the sameList method with two identical lists of SecurityDiffInfo."}, {"name": "testSameList_Changed", "primary_tested": ["SecurityDiffInfo.sameList(List<SecurityDiffInfo>,List<SecurityDiffInfo>)"], "external_dependencies": {"modules": ["SecurityScheme", "SecurityDiffInfo", "Arrays", "List"]}, "category": "unit", "description": "Tests the sameList method with two different lists of SecurityDiffInfo."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityScheme_equalsTest.java", "testclass_name": "ChangedSecurityScheme_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityScheme_equalsTest", "description": "Unit tests for the equals method in the ChangedSecurityScheme class.", "class_members": {}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedSecurityScheme.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityScheme", "SecurityScheme"]}, "category": "unit", "description": "Tests the equals method when comparing the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedSecurityScheme.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityScheme", "SecurityScheme"]}, "category": "unit", "description": "Tests the equals method when comparing with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedSecurityScheme.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityScheme", "SecurityScheme"]}, "category": "unit", "description": "Tests the equals method when comparing with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["ChangedSecurityScheme.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityScheme", "SecurityScheme"]}, "category": "unit", "description": "Tests the equals method when comparing instances with different fields."}, {"name": "testEquals_DifferentSecuritySchemes", "primary_tested": ["ChangedSecurityScheme.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityScheme", "SecurityScheme"]}, "category": "unit", "description": "Tests the equals method when comparing instances with different security schemes."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/Endpoint_equalsTest.java", "testclass_name": "Endpoint_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.*;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import org.junit.jupiter.api.Test;"], "name": "Endpoint_equalsTest", "description": "Unit tests for the equals and hashCode methods of the Endpoint class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["Endpoint.equals(Object)"], "external_dependencies": {"modules": ["Endpoint"]}, "category": "unit", "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["Endpoint.equals(Object)"], "external_dependencies": {"modules": ["Endpoint"]}, "category": "unit", "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["Endpoint.equals(Object)"], "external_dependencies": {"modules": ["Endpoint"]}, "category": "unit", "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentFields", "primary_tested": ["Endpoint.equals(Object)"], "associated_methods": ["Endpoint.setPathUrl(String)", "Endpoint.setMethod(PathItem.HttpMethod)", "Endpoint.setSummary(String)", "Endpoint.setPath(PathItem)", "Endpoint.setOperation(Operation)"], "external_dependencies": {"modules": ["Endpoint", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with different field values."}, {"name": "testEquals_SameFields", "primary_tested": ["Endpoint.equals(Object)"], "associated_methods": ["Endpoint.setPathUrl(String)", "Endpoint.setMethod(PathItem.HttpMethod)", "Endpoint.setSummary(String)", "Endpoint.setPath(PathItem)", "Endpoint.setOperation(Operation)"], "external_dependencies": {"modules": ["Endpoint", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the equals method with the same field values."}, {"name": "testHashCode_Consistency", "primary_tested": ["Endpoint.hashCode()"], "associated_methods": ["Endpoint.setPathUrl(String)", "Endpoint.setMethod(PathItem.HttpMethod)", "Endpoint.setSummary(String)", "Endpoint.setPath(PathItem)", "Endpoint.setOperation(Operation)"], "external_dependencies": {"modules": ["Endpoint", "PathItem", "Operation"]}, "category": "unit", "description": "Tests the consistency of the hashCode method."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/OperationDiff_removePathParameterTest.java", "testclass_name": "OperationDiff_removePathParameterTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import io.swagger.v3.oas.models.parameters.Parameter;", "import java.util.ArrayList;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "OperationDiff_removePathParameterTest", "description": "Tests for the removePathParameter method in the OperationDiff class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testRemovePathParameter_ParameterExists", "primary_tested": ["OperationDiff.removePathParameter(String,List<Parameter>)"], "external_dependencies": {"modules": ["OperationDiff", "Parameter", "List"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the removal of an existing path parameter from the list."}, {"name": "testRemovePathParameter_ParameterDoesNotExist", "primary_tested": ["OperationDiff.removePathParameter(String,List<Parameter>)"], "external_dependencies": {"modules": ["OperationDiff", "Parameter", "List"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the removal of a non-existing path parameter from the list."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/deferred/PendingChanged_ifPresentTest.java", "testclass_name": "PendingChanged_ifPresentTest", "dependencies": ["package org.openapitools.openapidiff.core.model.deferred;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.Optional;", "import java.util.function.Consumer;", "import org.junit.jupiter.api.Test;"], "name": "PendingChanged_ifPresentTest", "description": "Unit tests for the ifPresent method in the PendingChanged class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testIfPresent_ValueSetAndPresent", "primary_tested": ["PendingChanged.ifPresent(Consumer<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ifPresent method when the value is set and present."}, {"name": "testIfPresent_ValueNotSet", "primary_tested": ["PendingChanged.ifPresent(Consumer<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Consumer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ifPresent method when the value is not set."}, {"name": "testIfPresent_ValueSetButNotPresent", "primary_tested": ["PendingChanged.ifPresent(Consumer<String>)"], "external_dependencies": {"modules": ["PendingChanged", "Optional", "Consumer"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the ifPresent method when the value is set but not present."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/SecurityDiffInfo_containsListTest.java", "testclass_name": "SecurityDiffInfo_containsListTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import java.util.Arrays;", "import java.util.Collections;", "import java.util.List;", "import java.util.Optional;", "import org.junit.jupiter.api.Test;"], "name": "SecurityDiffInfo_containsListTest", "description": "Tests for the containsList method in SecurityDiffInfo class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testContainsList_Found", "primary_tested": ["SecurityDiffInfo.containsList(List<List<SecurityDiffInfo>>,List<SecurityDiffInfo>)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme", "Arrays", "Collections", "List", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the containsList method correctly identifies a list within a list of lists."}, {"name": "testContainsList_NotFound", "primary_tested": ["SecurityDiffInfo.containsList(List<List<SecurityDiffInfo>>,List<SecurityDiffInfo>)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme", "Arrays", "Collections", "List", "Optional"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the containsList method correctly identifies the absence of a list within a list of lists."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/CacheKey_toStringTest.java", "testclass_name": "CacheKey_toStringTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.DiffContext;"], "name": "CacheKey_toStringTest", "description": "Unit test for the toString method of the CacheKey class.", "class_members": {"variables": [{"name": "left", "type": "String"}, {"name": "right", "type": "String"}, {"name": "context", "type": "DiffContext"}, {"name": "cacheKey", "type": "CacheKey"}, {"name": "expected", "type": "String"}]}, "fixtures": [], "test_cases": [{"name": "testToString", "primary_tested": ["CacheKey.toString()"], "external_dependencies": {"modules": ["DiffContext", "CacheKey"], "class_members": [{"name": "left", "type": "variable"}, {"name": "right", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "cacheKey", "type": "variable"}, {"name": "expected", "type": "variable"}]}, "category": "unit", "fixtures_used": [], "description": "Tests the toString method of the CacheKey class to ensure it returns the expected string representation."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/schema/ChangedMaxLength_equalsTest.java", "testclass_name": "ChangedMaxLength_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model.schema;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.model.DiffContext;"], "name": "ChangedMaxLength_equalsTest", "description": "Unit tests for the equals method of the ChangedMaxLength class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameInstance", "primary_tested": ["ChangedMaxLength.equals(Object)"], "external_dependencies": {"modules": ["ChangedMaxLength", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with the same instance."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedMaxLength.equals(Object)"], "external_dependencies": {"modules": ["ChangedMaxLength", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedMaxLength.equals(Object)"], "external_dependencies": {"modules": ["ChangedMaxLength", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with an object of a different class."}, {"name": "testEquals_DifferentValues", "primary_tested": ["ChangedMaxLength.equals(Object)"], "external_dependencies": {"modules": ["ChangedMaxLength", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with different values."}, {"name": "testEquals_SameValues", "primary_tested": ["ChangedMaxLength.equals(Object)"], "external_dependencies": {"modules": ["ChangedMaxLength", "DiffContext"]}, "category": "unit", "description": "Tests the equals method with the same values."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedSecurityRequirements_setOldSecurityRequirementsTest.java", "testclass_name": "ChangedSecurityRequirements_setOldSecurityRequirementsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.SecurityRequirement;", "import java.util.Arrays;", "import java.util.List;", "import org.junit.jupiter.api.Test;"], "name": "ChangedSecurityRequirements_setOldSecurityRequirementsTest", "description": "Unit tests for the setOldSecurityRequirements method in the ChangedSecurityRequirements class.", "class_members": {"variables": []}, "fixtures": [], "test_cases": [{"name": "testSetOldSecurityRequirements", "primary_tested": ["ChangedSecurityRequirements.setOldSecurityRequirements(List<SecurityRequirement>)"], "associated_methods": ["ChangedSecurityRequirements.getOldSecurityRequirements()"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement"]}, "category": "unit", "description": "Tests setting old security requirements and verifying they are correctly set."}, {"name": "testSetOldSecurityRequirementsWithStateDependency", "primary_tested": ["ChangedSecurityRequirements.setOldSecurityRequirements(List<SecurityRequirement>)"], "associated_methods": ["ChangedSecurityRequirements.setNewSecurityRequirements(List<SecurityRequirement>)", "ChangedSecurityRequirements.getOldSecurityRequirements()", "ChangedSecurityRequirements.getNewSecurityRequirements()"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement"]}, "category": "unit", "description": "Tests setting old and new security requirements and verifying they are correctly set."}, {"name": "testSetOldSecurityRequirementsWithMissingRequirements", "primary_tested": ["ChangedSecurityRequirements.setOldSecurityRequirements(List<SecurityRequirement>)"], "associated_methods": ["ChangedSecurityRequirements.setMissing(List<SecurityRequirement>)", "ChangedSecurityRequirements.getOldSecurityRequirements()", "ChangedSecurityRequirements.getMissing()"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement"]}, "category": "unit", "description": "Tests setting old security requirements and missing requirements and verifying they are correctly set."}, {"name": "testSetOldSecurityRequirementsWithCoreChanged", "primary_tested": ["ChangedSecurityRequirements.setOldSecurityRequirements(List<SecurityRequirement>)"], "associated_methods": ["ChangedSecurityRequirements.getOldSecurityRequirements()", "ChangedSecurityRequirements.isCoreChanged()"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement", "DiffResult"]}, "category": "unit", "description": "Tests setting old security requirements and verifying the core change status."}, {"name": "testSetOldSecurityRequirementsWithEquals", "primary_tested": ["ChangedSecurityRequirements.setOldSecurityRequirements(List<SecurityRequirement>)"], "associated_methods": ["ChangedSecurityRequirements.getOldSecurityRequirements()", "ChangedSecurityRequirements.equals(Object)"], "external_dependencies": {"modules": ["ChangedSecurityRequirements", "SecurityRequirement"]}, "category": "unit", "description": "Tests setting old security requirements and verifying equality with another instance."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/MapKeyDiff_diffTest.java", "testclass_name": "MapKeyDiff_diffTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.HashMap;", "import java.util.Map;", "import org.junit.jupiter.api.Test;"], "name": "MapKeyDiff_diffTest", "description": "Unit tests for the MapKeyDiff.diff method, which compares two maps and identifies differences in keys.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testDiff_BothMapsNull", "primary_tested": ["MapKeyDiff.diff(Map<String,String>,Map<String,String>)"], "external_dependencies": {"modules": ["MapKeyDiff", "java.util.Map"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the diff method when both input maps are null."}, {"name": "testDiff_LeftMapNull", "primary_tested": ["MapKeyDiff.diff(Map<String,String>,Map<String,String>)"], "external_dependencies": {"modules": ["MapKeyDiff", "java.util.Map", "java.util.HashMap"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the diff method when the left map is null and the right map is not null."}, {"name": "testDiff_RightMapNull", "primary_tested": ["MapKeyDiff.diff(Map<String,String>,Map<String,String>)"], "external_dependencies": {"modules": ["MapKeyDiff", "java.util.Map", "java.util.HashMap"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the diff method when the right map is null and the left map is not null."}, {"name": "testDiff_BothMapsNotNull", "primary_tested": ["MapKeyDiff.diff(Map<String,String>,Map<String,String>)"], "external_dependencies": {"modules": ["MapKeyDiff", "java.util.Map", "java.util.HashMap"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the diff method when both input maps are not null and contain different keys."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/SecurityDiffInfo_equalsTest.java", "testclass_name": "SecurityDiffInfo_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.compare;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.security.SecurityScheme;", "import java.util.Arrays;", "import org.junit.jupiter.api.Test;"], "name": "SecurityDiffInfo_equalsTest", "description": "Unit tests for the equals method in the SecurityDiffInfo class.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["SecurityDiffInfo.equals(Object)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method when comparing the same object."}, {"name": "testEquals_NullObject", "primary_tested": ["SecurityDiffInfo.equals(Object)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method when comparing with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["SecurityDiffInfo.equals(Object)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method when comparing with an object of a different class."}, {"name": "testEquals_DifferentSecurityScheme", "primary_tested": ["SecurityDiffInfo.equals(Object)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method when comparing objects with different SecurityScheme attributes."}, {"name": "testEquals_DifferentScopes", "primary_tested": ["SecurityDiffInfo.equals(Object)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method when comparing objects with different scopes."}, {"name": "testEquals_SameAttributes", "primary_tested": ["SecurityDiffInfo.equals(Object)"], "external_dependencies": {"modules": ["SecurityDiffInfo", "SecurityScheme"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the equals method when comparing objects with the same attributes."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/compare/schemadiffresult/ComposedSchemaDiffResult_diffTest.java", "testclass_name": "ComposedSchemaDiffResult_diffTest", "dependencies": ["package org.openapitools.openapidiff.core.compare.schemadiffresult;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import static org.mockito.Mockito.mock;", "import static org.mockito.Mockito.when;", "import io.swagger.v3.oas.models.Components;", "import io.swagger.v3.oas.models.media.ComposedSchema;", "import io.swagger.v3.oas.models.media.Discriminator;", "import io.swagger.v3.oas.models.media.Schema;", "import org.junit.jupiter.api.Test;", "import org.openapitools.openapidiff.core.compare.OpenApiDiff;", "import org.openapitools.openapidiff.core.model.ChangedSchema;", "import org.openapitools.openapidiff.core.model.DiffContext;", "import org.openapitools.openapidiff.core.model.deferred.DeferredChanged;", "import org.openapitools.openapidiff.core.model.deferred.RecursiveSchemaSet;"], "name": "ComposedSchemaDiffResult_diffTest", "description": "Unit tests for the ComposedSchemaDiffResult class, focusing on the diff method and its handling of discriminator properties.", "class_members": {"variables": [{"name": "composedSchemaDiffResult", "type": "ComposedSchemaDiffResult"}, {"name": "refSet", "type": "RecursiveSchemaSet"}, {"name": "leftComponents", "type": "Components"}, {"name": "rightComponents", "type": "Components"}, {"name": "left", "type": "ComposedSchema"}, {"name": "right", "type": "ComposedSchema"}, {"name": "context", "type": "DiffContext"}, {"name": "leftDis", "type": "Discriminator"}, {"name": "rightDis", "type": "Discriminator"}]}, "fixtures": [], "test_cases": [{"name": "testDiff_DiscriminatorPropertyChanged", "primary_tested": ["ComposedSchemaDiffResult.diff(RecursiveSchemaSet,Components,Components,ComposedSchema,ComposedSchema,DiffContext)"], "associated_methods": ["Discriminator.getPropertyName()"], "external_dependencies": {"modules": ["ComposedSchemaDiffResult", "RecursiveSchemaSet", "Components", "ComposedSchema", "DiffContext", "Discriminator"], "class_members": [{"name": "composedSchemaDiffResult", "type": "variable"}, {"name": "refSet", "type": "variable"}, {"name": "leftComponents", "type": "variable"}, {"name": "rightComponents", "type": "variable"}, {"name": "left", "type": "variable"}, {"name": "right", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "leftDis", "type": "variable"}, {"name": "rightDis", "type": "variable"}]}, "category": "unit", "description": "Tests the diff method when the discriminator property name changes between the left and right schemas."}, {"name": "testDiff_NoDiscriminatorChange", "primary_tested": ["ComposedSchemaDiffResult.diff(RecursiveSchemaSet,Components,Components,ComposedSchema,ComposedSchema,DiffContext)"], "associated_methods": ["Discriminator.getPropertyName()"], "external_dependencies": {"modules": ["ComposedSchemaDiffResult", "RecursiveSchemaSet", "Components", "ComposedSchema", "DiffContext", "Discriminator"], "class_members": [{"name": "composedSchemaDiffResult", "type": "variable"}, {"name": "refSet", "type": "variable"}, {"name": "leftComponents", "type": "variable"}, {"name": "rightComponents", "type": "variable"}, {"name": "left", "type": "variable"}, {"name": "right", "type": "variable"}, {"name": "context", "type": "variable"}, {"name": "leftDis", "type": "variable"}, {"name": "rightDis", "type": "variable"}]}, "category": "unit", "description": "Tests the diff method when there is no change in the discriminator property name between the left and right schemas."}, {"name": "testDiff_NotComposedSchema", "primary_tested": ["ComposedSchemaDiffResult.diff(RecursiveSchemaSet,Components,Components,Schema,Schema,DiffContext)"], "external_dependencies": {"modules": ["ComposedSchemaDiffResult", "RecursiveSchemaSet", "Components", "Schema", "DiffContext"], "class_members": [{"name": "composedSchemaDiffResult", "type": "variable"}, {"name": "refSet", "type": "variable"}, {"name": "leftComponents", "type": "variable"}, {"name": "rightComponents", "type": "variable"}, {"name": "left", "type": "variable"}, {"name": "right", "type": "variable"}, {"name": "context", "type": "variable"}]}, "category": "unit", "description": "Tests the diff method when the input schemas are not of type ComposedSchema."}]}, {"file_path": "src/test/java/org/openapitools/openapidiff/core/model/ChangedPath_equalsTest.java", "testclass_name": "ChangedPath_equalsTest", "dependencies": ["package org.openapitools.openapidiff.core.model;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import io.swagger.v3.oas.models.Operation;", "import io.swagger.v3.oas.models.PathItem;", "import java.util.HashMap;", "import java.util.List;", "import java.util.Map;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "ChangedPath_equalsTest", "description": "Unit tests for the equals method of the ChangedPath class.", "class_members": {"variables": [{"name": "changedPath1", "type": "ChangedPath"}, {"name": "changedPath2", "type": "ChangedPath"}, {"name": "context", "type": "DiffContext"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEquals_SameObject", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath"], "class_members": [{"name": "changedPath1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing the same object."}, {"name": "testEquals_NullObject", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath"], "class_members": [{"name": "changedPath1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing with a null object."}, {"name": "testEquals_DifferentClass", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath"], "class_members": [{"name": "changedPath1", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing with an object of a different class."}, {"name": "testEquals_DifferentPathUrl", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different path URLs."}, {"name": "testEquals_DifferentOldPath", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "PathItem"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different old paths."}, {"name": "testEquals_DifferentNewPath", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "PathItem"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different new paths."}, {"name": "testEquals_DifferentContext", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "DiffContext"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}, {"name": "context", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different contexts."}, {"name": "testEquals_DifferentIncreased", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "PathItem", "Operation", "HashMap"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different increased operations."}, {"name": "testEquals_DifferentMissing", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "PathItem", "Operation", "HashMap"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different missing operations."}, {"name": "testEquals_DifferentChanged", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "PathItem", "Operation", "ChangedOperation", "List"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different changed operations."}, {"name": "testEquals_DifferentExtensions", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath", "ChangedExtensions"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when comparing objects with different extensions."}, {"name": "testEquals_AllFieldsEqual", "primary_tested": ["ChangedPath.equals(Object)"], "external_dependencies": {"modules": ["ChangedPath"], "class_members": [{"name": "changedPath1", "type": "variable"}, {"name": "changedPath2", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the equals method when all fields of the objects are equal."}]}]