[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport io.swagger.v3.oas.models.parameters.Parameter;\nimport org.apache.commons.lang3.StringUtils;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.model.ChangedParameters;\nimport org.openapitools.openapidiff.core.model.DiffContext;\n\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class ParametersDiff_pathUnchangedParametersChangedTest {\n\n    @Test\n    public void testPathUnchangedParametersChanged_SamePathDifferentParameter() {\n        // Given\n        Parameter oldParam = new Parameter().name(\"param1\");\n        Parameter newParam = new Parameter().name(\"param2\");\n\n        List<Parameter> missingParams = Arrays.asList(oldParam);\n        List<Parameter> increasedParams = Arrays.asList(newParam);\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Arrays.asList(oldParam), Arrays.asList(newParam), new DiffContext(null));\n        changedParameters.setMissing(missingParams);\n        changedParameters.setIncreased(increasedParams);\n\n        Map<String, String> parametersMap = new HashMap<>();\n        parametersMap.put(\"param1\", \"param2\");\n\n        DiffContext context = new DiffContext(null);\n        context.setParameters(parametersMap);\n\n        // When\n        boolean result = new ParametersDiff(null).pathUnchangedParametersChanged(changedParameters, context);\n\n        // Then\n        assertTrue(result);\n    }\n\n    @Test\n    public void testPathUnchangedParametersChanged_SamePathSameParameter() {\n        // Given\n        Parameter oldParam = new Parameter().name(\"param1\");\n        Parameter newParam = new Parameter().name(\"param1\");\n\n        List<Parameter> missingParams = Arrays.asList(oldParam);\n        List<Parameter> increasedParams = Arrays.asList(newParam);\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Arrays.asList(oldParam), Arrays.asList(newParam), new DiffContext(null));\n        changedParameters.setMissing(missingParams);\n        changedParameters.setIncreased(increasedParams);\n\n        Map<String, String> parametersMap = new HashMap<>();\n        parametersMap.put(\"param1\", \"param1\");\n\n        DiffContext context = new DiffContext(null);\n        context.setParameters(parametersMap);\n\n        // When\n        boolean result = new ParametersDiff(null).pathUnchangedParametersChanged(changedParameters, context);\n\n        // Then\n        assertFalse(result);\n    }\n\n    @Test\n    public void testPathUnchangedParametersChanged_DifferentParameterCount() {\n        // Given\n        Parameter oldParam = new Parameter().name(\"param1\");\n        Parameter newParam = new Parameter().name(\"param2\");\n\n        List<Parameter> missingParams = Arrays.asList(oldParam);\n        List<Parameter> increasedParams = Arrays.asList(newParam, new Parameter().name(\"param3\"));\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Arrays.asList(oldParam), Arrays.asList(newParam), new DiffContext(null));\n        changedParameters.setMissing(missingParams);\n        changedParameters.setIncreased(increasedParams);\n\n        Map<String, String> parametersMap = new HashMap<>();\n        parametersMap.put(\"param1\", \"param2\");\n\n        DiffContext context = new DiffContext(null);\n        context.setParameters(parametersMap);\n\n        // When\n        boolean result = new ParametersDiff(null).pathUnchangedParametersChanged(changedParameters, context);\n\n        // Then\n        assertFalse(result);\n    }\n\n    @Test\n    public void testPathUnchangedParametersChanged_NewParameterNameBlank() {\n        // Given\n        Parameter oldParam = new Parameter().name(\"param1\");\n        Parameter newParam = new Parameter().name(\"param2\");\n\n        List<Parameter> missingParams = Arrays.asList(oldParam);\n        List<Parameter> increasedParams = Arrays.asList(newParam);\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Arrays.asList(oldParam), Arrays.asList(newParam), new DiffContext(null));\n        changedParameters.setMissing(missingParams);\n        changedParameters.setIncreased(increasedParams);\n\n        Map<String, String> parametersMap = new HashMap<>();\n        parametersMap.put(\"param1\", \"\");\n\n        DiffContext context = new DiffContext(null);\n        context.setParameters(parametersMap);\n\n        // When\n        boolean result = new ParametersDiff(null).pathUnchangedParametersChanged(changedParameters, context);\n\n        // Then\n        assertFalse(result);\n    }\n}\n"}]