[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.parameters.Parameter;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ChangedParameter_toStringTest {\n\n    @Test\n    public void testToString() {\n        // Given\n        DiffContext context = new DiffContext(new OpenApiDiffOptions());\n        Parameter oldParameter = new Parameter().name(\"oldParam\").required(true);\n        Parameter newParameter = new Parameter().name(\"newParam\").required(false);\n        ChangedParameter changedParameter = new ChangedParameter(\"paramName\", \"query\", context)\n                .setOldParameter(oldParameter)\n                .setNewParameter(newParameter)\n                .setChangeRequired(true)\n                .setDeprecated(false)\n                .setChangeStyle(false)\n                .setChangeExplode(false)\n                .setChangeAllowEmptyValue(false)\n                .setDescription(new ChangedMetadata())\n                .setSchema(new ChangedSchema())\n                .setContent(new ChangedContent(null, null, context))\n                .setExtensions(new ChangedExtensions(null, null, context));\n\n        // When\n        String result = changedParameter.toString();\n\n        // Then\n        String expected = \"ChangedParameter(context=\" + context\n                + \", oldParameter=\" + oldParameter\n                + \", newParameter=\" + newParameter\n                + \", name=paramName, in=query\"\n                + \", changeRequired=true, deprecated=false, changeStyle=false, changeExplode=false, changeAllowEmptyValue=false\"\n                + \", description=\" + new ChangedMetadata()\n                + \", schema=\" + new ChangedSchema()\n                + \", content=\" + new ChangedContent(null, null, context)\n                + \", extensions=\" + new ChangedExtensions(null, null, context)\n                + \")\";\n        assertEquals(expected, result);\n    }\n}\n"}]