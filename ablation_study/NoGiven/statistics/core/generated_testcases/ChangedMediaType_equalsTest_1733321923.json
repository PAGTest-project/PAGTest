[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.media.Schema;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ChangedMediaType_equalsTest {\n\n    @Test\n    void testEquals_SameInstance() {\n        ChangedMediaType mediaType = new ChangedMediaType(new Schema<>(), new Schema<>(), new DiffContext(null));\n        assertTrue(mediaType.equals(mediaType));\n    }\n\n    @Test\n    void testEquals_NullObject() {\n        ChangedMediaType mediaType = new ChangedMediaType(new Schema<>(), new Schema<>(), new DiffContext(null));\n        assertFalse(mediaType.equals(null));\n    }\n\n    @Test\n    void testEquals_DifferentClass() {\n        ChangedMediaType mediaType = new ChangedMediaType(new Schema<>(), new Schema<>(), new DiffContext(null));\n        Object differentClassObject = new Object();\n        assertFalse(mediaType.equals(differentClassObject));\n    }\n\n    @Test\n    void testEquals_DifferentFields() {\n        Schema oldSchema1 = new Schema<>();\n        Schema newSchema1 = new Schema<>();\n        DiffContext context1 = new DiffContext(null);\n        ChangedMediaType mediaType1 = new ChangedMediaType(oldSchema1, newSchema1, context1);\n\n        Schema oldSchema2 = new Schema<>();\n        Schema newSchema2 = new Schema<>();\n        DiffContext context2 = new DiffContext(null);\n        ChangedMediaType mediaType2 = new ChangedMediaType(oldSchema2, newSchema2, context2);\n\n        assertFalse(mediaType1.equals(mediaType2));\n    }\n\n    @Test\n    void testEquals_SameFields() {\n        Schema oldSchema = new Schema<>();\n        Schema newSchema = new Schema<>();\n        DiffContext context = new DiffContext(null);\n        ChangedMediaType mediaType1 = new ChangedMediaType(oldSchema, newSchema, context);\n        ChangedMediaType mediaType2 = new ChangedMediaType(oldSchema, newSchema, context);\n\n        assertTrue(mediaType1.equals(mediaType2));\n    }\n}\n"}]