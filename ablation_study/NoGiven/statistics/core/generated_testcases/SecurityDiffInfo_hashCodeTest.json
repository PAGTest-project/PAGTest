[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport io.swagger.v3.oas.models.security.SecurityScheme;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class SecurityDiffInfo_hashCodeTest {\n\n    @Test\n    public void testHashCodeWithAllNullFields() {\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(null, null, null);\n        assertEquals(0, securityDiffInfo.hashCode());\n    }\n\n    @Test\n    public void testHashCodeWithNonNullSecurityScheme() {\n        SecurityScheme securityScheme = new SecurityScheme();\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(null, securityScheme, null);\n        assertEquals(31 * securityScheme.hashCode(), securityDiffInfo.hashCode());\n    }\n\n    @Test\n    public void testHashCodeWithNonNullScopes() {\n        List<String> scopes = Arrays.asList(\"read\", \"write\");\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(null, null, scopes);\n        int expectedHashCode = 31 * scopes.hashCode();\n        assertEquals(expectedHashCode, securityDiffInfo.hashCode());\n    }\n\n    @Test\n    public void testHashCodeWithBothNonNullFields() {\n        SecurityScheme securityScheme = new SecurityScheme();\n        List<String> scopes = Arrays.asList(\"read\", \"write\");\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(null, securityScheme, scopes);\n        int expectedHashCode = 31 * securityScheme.hashCode() + scopes.hashCode();\n        assertEquals(expectedHashCode, securityDiffInfo.hashCode());\n    }\n}\n"}]