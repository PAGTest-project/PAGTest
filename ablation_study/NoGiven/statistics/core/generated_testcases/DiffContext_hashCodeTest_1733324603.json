[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.PathItem;\nimport org.apache.commons.lang3.builder.HashCodeBuilder;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class DiffContext_hashCodeTest {\n\n    @Test\n    public void testHashCode() {\n        // Given\n        OpenApiDiffOptions options = new OpenApiDiffOptions();\n        DiffContext context = new DiffContext(options);\n        context.setUrl(\"http://example.com\");\n        Map<String, String> parameters = new HashMap<>();\n        parameters.put(\"param1\", \"value1\");\n        context.setParameters(parameters);\n        context.setMethod(PathItem.HttpMethod.GET);\n        context.setRequired(true);\n        context.setLeftAndRightUrls(\"http://left.com\", \"http://right.com\");\n\n        // When\n        int hashCode = context.hashCode();\n\n        // Then\n        int expectedHashCode = new HashCodeBuilder(17, 37)\n                .append(\"http://example.com\")\n                .append(parameters)\n                .append(PathItem.HttpMethod.GET)\n                .append(false) // response\n                .append(true)  // request\n                .append(true)  // required\n                .append(\"http://left.com\")\n                .append(\"http://right.com\")\n                .toHashCode();\n\n        assertEquals(expectedHashCode, hashCode);\n    }\n}\n"}]