[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport io.swagger.v3.oas.models.security.SecurityScheme;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class SecurityDiffInfo_equalsTest {\n\n    @Test\n    public void testEquals_SameObject() {\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(\"ref\", new SecurityScheme(), Arrays.asList(\"scope1\", \"scope2\"));\n        assertTrue(securityDiffInfo.equals(securityDiffInfo));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(\"ref\", new SecurityScheme(), Arrays.asList(\"scope1\", \"scope2\"));\n        assertFalse(securityDiffInfo.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        SecurityDiffInfo securityDiffInfo = new SecurityDiffInfo(\"ref\", new SecurityScheme(), Arrays.asList(\"scope1\", \"scope2\"));\n        assertFalse(securityDiffInfo.equals(new Object()));\n    }\n\n    @Test\n    public void testEquals_DifferentSecurityScheme() {\n        SecurityScheme scheme1 = new SecurityScheme();\n        scheme1.setName(\"scheme1\");\n        SecurityScheme scheme2 = new SecurityScheme();\n        scheme2.setName(\"scheme2\");\n\n        SecurityDiffInfo securityDiffInfo1 = new SecurityDiffInfo(\"ref\", scheme1, Arrays.asList(\"scope1\", \"scope2\"));\n        SecurityDiffInfo securityDiffInfo2 = new SecurityDiffInfo(\"ref\", scheme2, Arrays.asList(\"scope1\", \"scope2\"));\n\n        assertFalse(securityDiffInfo1.equals(securityDiffInfo2));\n    }\n\n    @Test\n    public void testEquals_DifferentScopes() {\n        SecurityScheme scheme = new SecurityScheme();\n        scheme.setName(\"scheme\");\n\n        SecurityDiffInfo securityDiffInfo1 = new SecurityDiffInfo(\"ref\", scheme, Arrays.asList(\"scope1\", \"scope2\"));\n        SecurityDiffInfo securityDiffInfo2 = new SecurityDiffInfo(\"ref\", scheme, Arrays.asList(\"scope1\", \"scope3\"));\n\n        assertFalse(securityDiffInfo1.equals(securityDiffInfo2));\n    }\n\n    @Test\n    public void testEquals_SameAttributes() {\n        SecurityScheme scheme = new SecurityScheme();\n        scheme.setName(\"scheme\");\n\n        SecurityDiffInfo securityDiffInfo1 = new SecurityDiffInfo(\"ref\", scheme, Arrays.asList(\"scope1\", \"scope2\"));\n        SecurityDiffInfo securityDiffInfo2 = new SecurityDiffInfo(\"ref\", scheme, Arrays.asList(\"scope1\", \"scope2\"));\n\n        assertTrue(securityDiffInfo1.equals(securityDiffInfo2));\n    }\n}\n"}]