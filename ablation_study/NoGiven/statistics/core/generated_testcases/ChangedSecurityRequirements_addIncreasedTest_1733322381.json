[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.security.SecurityRequirement;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\nimport org.openapitools.openapidiff.core.model.ChangedSecurityRequirements;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class ChangedSecurityRequirements_addIncreasedTest {\n\n    private ChangedSecurityRequirements changedSecurityRequirements;\n    private DiffContext context;\n\n    @BeforeEach\n    public void setUp() {\n        List<SecurityRequirement> oldSecurityRequirements = new ArrayList<>();\n        List<SecurityRequirement> newSecurityRequirements = new ArrayList<>();\n        context = new DiffContext(new OpenApiDiffOptions());\n        changedSecurityRequirements = new ChangedSecurityRequirements(oldSecurityRequirements, newSecurityRequirements, context);\n    }\n\n    @Test\n    public void testAddIncreased_InitialAdd() {\n        SecurityRequirement securityRequirement = new SecurityRequirement();\n        changedSecurityRequirements.addIncreased(securityRequirement);\n\n        List<SecurityRequirement> increased = changedSecurityRequirements.getIncreased();\n        assertNotNull(increased);\n        assertEquals(1, increased.size());\n        assertEquals(securityRequirement, increased.get(0));\n    }\n\n    @Test\n    public void testAddIncreased_MultipleAdds() {\n        SecurityRequirement securityRequirement1 = new SecurityRequirement();\n        SecurityRequirement securityRequirement2 = new SecurityRequirement();\n\n        changedSecurityRequirements.addIncreased(securityRequirement1);\n        changedSecurityRequirements.addIncreased(securityRequirement2);\n\n        List<SecurityRequirement> increased = changedSecurityRequirements.getIncreased();\n        assertNotNull(increased);\n        assertEquals(2, increased.size());\n        assertEquals(securityRequirement1, increased.get(0));\n        assertEquals(securityRequirement2, increased.get(1));\n    }\n\n    @Test\n    public void testAddIncreased_NullIncreased() {\n        SecurityRequirement securityRequirement = new SecurityRequirement();\n        changedSecurityRequirements.setIncreased(null);\n        changedSecurityRequirements.addIncreased(securityRequirement);\n\n        List<SecurityRequirement> increased = changedSecurityRequirements.getIncreased();\n        assertNotNull(increased);\n        assertEquals(1, increased.size());\n        assertEquals(securityRequirement, increased.get(0));\n    }\n}\n"}]