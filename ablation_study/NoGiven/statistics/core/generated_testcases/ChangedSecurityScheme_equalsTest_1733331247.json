[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport io.swagger.v3.oas.models.security.SecurityScheme;\nimport org.junit.jupiter.api.Test;\n\npublic class ChangedSecurityScheme_equalsTest {\n\n    @Test\n    public void testEquals_SameInstance() {\n        ChangedSecurityScheme scheme = new ChangedSecurityScheme(new SecurityScheme(), new SecurityScheme(), null);\n        assertTrue(scheme.equals(scheme));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        ChangedSecurityScheme scheme = new ChangedSecurityScheme(new SecurityScheme(), new SecurityScheme(), null);\n        assertFalse(scheme.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        ChangedSecurityScheme scheme = new ChangedSecurityScheme(new SecurityScheme(), new SecurityScheme(), null);\n        assertFalse(scheme.equals(new Object()));\n    }\n\n    @Test\n    public void testEquals_DifferentFields() {\n        SecurityScheme oldScheme = new SecurityScheme();\n        SecurityScheme newScheme = new SecurityScheme();\n        newScheme.setType(\"apiKey\");\n\n        ChangedSecurityScheme scheme1 = new ChangedSecurityScheme(oldScheme, newScheme, null);\n        ChangedSecurityScheme scheme2 = new ChangedSecurityScheme(oldScheme, newScheme, null);\n\n        assertTrue(scheme1.equals(scheme2));\n    }\n\n    @Test\n    public void testEquals_DifferentSecuritySchemes() {\n        SecurityScheme oldScheme1 = new SecurityScheme();\n        SecurityScheme newScheme1 = new SecurityScheme();\n        newScheme1.setType(\"apiKey\");\n\n        SecurityScheme oldScheme2 = new SecurityScheme();\n        SecurityScheme newScheme2 = new SecurityScheme();\n        newScheme2.setType(\"http\");\n\n        ChangedSecurityScheme scheme1 = new ChangedSecurityScheme(oldScheme1, newScheme1, null);\n        ChangedSecurityScheme scheme2 = new ChangedSecurityScheme(oldScheme2, newScheme2, null);\n\n        assertFalse(scheme1.equals(scheme2));\n    }\n}\n"}]