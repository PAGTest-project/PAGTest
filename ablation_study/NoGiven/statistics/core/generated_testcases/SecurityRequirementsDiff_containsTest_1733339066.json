[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport io.swagger.v3.oas.models.Components;\nimport io.swagger.v3.oas.models.security.SecurityRequirement;\nimport io.swagger.v3.oas.models.security.SecurityScheme;\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Optional;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\npublic class SecurityRequirementsDiff_containsTest {\n\n    @Test\n    public void testContains_Present() {\n        SecurityRequirementsDiff diff = new SecurityRequirementsDiff(new OpenApiDiff());\n\n        SecurityRequirement req1 = new SecurityRequirement();\n        req1.addList(\"scheme1\", Arrays.asList(\"scope1\", \"scope2\"));\n\n        SecurityRequirement req2 = new SecurityRequirement();\n        req2.addList(\"scheme1\", Arrays.asList(\"scope1\", \"scope2\"));\n\n        List<SecurityRequirement> securityRequirements = Arrays.asList(req2);\n\n        Optional<SecurityRequirement> result = diff.contains(securityRequirements, req1);\n\n        assertTrue(result.isPresent());\n    }\n\n    @Test\n    public void testContains_NotPresent() {\n        SecurityRequirementsDiff diff = new SecurityRequirementsDiff(new OpenApiDiff());\n\n        SecurityRequirement req1 = new SecurityRequirement();\n        req1.addList(\"scheme1\", Arrays.asList(\"scope1\", \"scope2\"));\n\n        SecurityRequirement req2 = new SecurityRequirement();\n        req2.addList(\"scheme2\", Arrays.asList(\"scope1\", \"scope2\"));\n\n        List<SecurityRequirement> securityRequirements = Arrays.asList(req2);\n\n        Optional<SecurityRequirement> result = diff.contains(securityRequirements, req1);\n\n        assertFalse(result.isPresent());\n    }\n}\n"}]