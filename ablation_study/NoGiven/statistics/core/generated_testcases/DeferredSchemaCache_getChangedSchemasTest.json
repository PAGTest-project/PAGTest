[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.CacheKey;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiff;\nimport org.openapitools.openapidiff.core.model.ChangedSchema;\nimport io.swagger.v3.oas.models.media.Schema;\nimport org.mockito.Mockito;\n\npublic class DeferredSchemaCache_getChangedSchemasTest {\n\n  private DeferredSchemaCache deferredSchemaCache;\n  private OpenApiDiff openApiDiff;\n  private CacheKey cacheKey;\n  private Schema leftSchema;\n  private Schema rightSchema;\n\n  @BeforeEach\n  public void setUp() {\n    openApiDiff = Mockito.mock(OpenApiDiff.class);\n    deferredSchemaCache = new DeferredSchemaCache(openApiDiff);\n    cacheKey = Mockito.mock(CacheKey.class);\n    leftSchema = Mockito.mock(Schema.class);\n    rightSchema = Mockito.mock(Schema.class);\n  }\n\n  @Test\n  public void testGetChangedSchemas() {\n    // Given\n    SchemaDiffOperation operation = deferredSchemaCache.addSchema(\n        new RecursiveSchemaSet(), cacheKey, leftSchema, rightSchema);\n    operation.processed = true;\n    operation.diffResult = Optional.of(new ChangedSchema());\n\n    // When\n    List<ChangedSchema> changedSchemas = deferredSchemaCache.getChangedSchemas();\n\n    // Then\n    assertEquals(1, changedSchemas.size());\n  }\n}\n"}]