[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.utils;\n\nimport io.swagger.v3.oas.models.Components;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass RefPointer_getRefNameTest {\n\n    @Test\n    void testGetRefName_NullRef() {\n        RefPointer<Object> refPointer = new RefPointer<>(RefType.SCHEMAS);\n        assertNull(refPointer.getRefName(null));\n    }\n\n    @Test\n    void testGetRefName_SecuritySchemes() {\n        RefPointer<Object> refPointer = new RefPointer<>(RefType.SECURITY_SCHEMES);\n        assertEquals(\"securityRef\", refPointer.getRefName(\"securityRef\"));\n    }\n\n    @Test\n    void testGetRefName_ValidRef() {\n        RefPointer<Object> refPointer = new RefPointer<>(RefType.SCHEMAS);\n        assertEquals(\"schemaRef\", refPointer.getRefName(\"#/components/schemas/schemaRef\"));\n    }\n\n    @Test\n    void testGetRefName_InvalidRef() {\n        RefPointer<Object> refPointer = new RefPointer<>(RefType.SCHEMAS);\n        assertThrows(IllegalArgumentException.class, () -> refPointer.getRefName(\"invalidRef\"));\n    }\n}\n"}]