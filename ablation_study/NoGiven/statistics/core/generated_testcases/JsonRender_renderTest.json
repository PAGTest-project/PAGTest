[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.output;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.exception.RendererException;\nimport org.openapitools.openapidiff.core.model.ChangedOpenApi;\nimport org.mockito.Mockito;\n\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.Mockito.*;\n\npublic class JsonRender_renderTest {\n\n    @Test\n    public void testRenderSuccess() throws IOException {\n        JsonRender jsonRender = new JsonRender();\n        ChangedOpenApi diff = Mockito.mock(ChangedOpenApi.class);\n        OutputStreamWriter outputStreamWriter = Mockito.mock(OutputStreamWriter.class);\n\n        jsonRender.render(diff, outputStreamWriter);\n\n        verify(outputStreamWriter).close();\n    }\n\n    @Test\n    public void testRenderJsonProcessingException() throws IOException {\n        JsonRender jsonRender = new JsonRender();\n        ChangedOpenApi diff = Mockito.mock(ChangedOpenApi.class);\n        OutputStreamWriter outputStreamWriter = Mockito.mock(OutputStreamWriter.class);\n        ObjectMapper mockObjectMapper = Mockito.mock(ObjectMapper.class);\n        jsonRender.objectMapper = mockObjectMapper;\n        doThrow(JsonProcessingException.class).when(mockObjectMapper).writeValue(outputStreamWriter, diff);\n\n        assertThrows(RendererException.class, () -> jsonRender.render(diff, outputStreamWriter));\n    }\n\n    @Test\n    public void testRenderIOException() throws IOException {\n        JsonRender jsonRender = new JsonRender();\n        ChangedOpenApi diff = Mockito.mock(ChangedOpenApi.class);\n        OutputStreamWriter outputStreamWriter = Mockito.mock(OutputStreamWriter.class);\n        ObjectMapper mockObjectMapper = Mockito.mock(ObjectMapper.class);\n        jsonRender.objectMapper = mockObjectMapper;\n        doThrow(IOException.class).when(mockObjectMapper).writeValue(outputStreamWriter, diff);\n\n        assertThrows(RendererException.class, () -> jsonRender.render(diff, outputStreamWriter));\n    }\n}\n"}]