[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.security.OAuthFlows;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport java.util.Objects;\n\npublic class ChangedOAuthFlows_hashCodeTest {\n\n    @Test\n    public void testHashCode() {\n        OAuthFlows oldOAuthFlows = new OAuthFlows();\n        OAuthFlows newOAuthFlows = new OAuthFlows();\n        ChangedOAuthFlows changedOAuthFlows = new ChangedOAuthFlows(oldOAuthFlows, newOAuthFlows);\n\n        ChangedOAuthFlow implicitOAuthFlow = new ChangedOAuthFlow(null, null, null);\n        ChangedOAuthFlow passwordOAuthFlow = new ChangedOAuthFlow(null, null, null);\n        ChangedOAuthFlow clientCredentialOAuthFlow = new ChangedOAuthFlow(null, null, null);\n        ChangedOAuthFlow authorizationCodeOAuthFlow = new ChangedOAuthFlow(null, null, null);\n        ChangedExtensions extensions = new ChangedExtensions(null, null, null);\n\n        changedOAuthFlows.setImplicitOAuthFlow(implicitOAuthFlow);\n        changedOAuthFlows.setPasswordOAuthFlow(passwordOAuthFlow);\n        changedOAuthFlows.setClientCredentialOAuthFlow(clientCredentialOAuthFlow);\n        changedOAuthFlows.setAuthorizationCodeOAuthFlow(authorizationCodeOAuthFlow);\n        changedOAuthFlows.setExtensions(extensions);\n\n        int expectedHashCode = Objects.hash(\n            oldOAuthFlows,\n            newOAuthFlows,\n            implicitOAuthFlow,\n            passwordOAuthFlow,\n            clientCredentialOAuthFlow,\n            authorizationCodeOAuthFlow,\n            extensions\n        );\n\n        assertEquals(expectedHashCode, changedOAuthFlows.hashCode());\n    }\n}\n"}]