[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport io.swagger.v3.oas.models.parameters.Parameter;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\npublic class ChangedParameters_isCoreChangedTest {\n\n    private ChangedParameters changedParameters;\n    private DiffContext context;\n    private Parameter requiredParameter;\n    private Parameter optionalParameter;\n\n    @BeforeEach\n    public void setUp() {\n        context = mock(DiffContext.class);\n        requiredParameter = new Parameter();\n        requiredParameter.setRequired(true);\n        optionalParameter = new Parameter();\n        optionalParameter.setRequired(false);\n        changedParameters = new ChangedParameters(Collections.emptyList(), Collections.emptyList(), context);\n    }\n\n    @Test\n    public void testIsCoreChanged_NoChanges() {\n        changedParameters.setIncreased(Collections.emptyList());\n        changedParameters.setMissing(Collections.emptyList());\n        assertEquals(DiffResult.NO_CHANGES, changedParameters.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChanged_Incompatible_MissingParams() {\n        when(REQUEST_PARAMS_DECREASED.enabled(context)).thenReturn(true);\n        changedParameters.setIncreased(Collections.emptyList());\n        changedParameters.setMissing(Arrays.asList(optionalParameter));\n        assertEquals(DiffResult.INCOMPATIBLE, changedParameters.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChanged_Incompatible_RequiredParamsIncreased() {\n        when(REQUEST_PARAMS_REQUIRED_INCREASED.enabled(context)).thenReturn(true);\n        changedParameters.setIncreased(Arrays.asList(requiredParameter));\n        changedParameters.setMissing(Collections.emptyList());\n        assertEquals(DiffResult.INCOMPATIBLE, changedParameters.isCoreChanged());\n    }\n\n    @Test\n    public void testIsCoreChanged_Compatible() {\n        when(REQUEST_PARAMS_DECREASED.enabled(context)).thenReturn(false);\n        when(REQUEST_PARAMS_REQUIRED_INCREASED.enabled(context)).thenReturn(false);\n        changedParameters.setIncreased(Arrays.asList(optionalParameter));\n        changedParameters.setMissing(Collections.emptyList());\n        assertEquals(DiffResult.COMPATIBLE, changedParameters.isCoreChanged());\n    }\n}\n"}]