[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.security.SecurityRequirement;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class ChangedSecurityRequirements_setOldSecurityRequirementsTest {\n\n    @Test\n    public void testSetOldSecurityRequirements() {\n        // Given\n        List<SecurityRequirement> oldSecurityRequirements = Arrays.asList(new SecurityRequirement());\n        ChangedSecurityRequirements changedSecurityRequirements = new ChangedSecurityRequirements(null, null, null);\n\n        // When\n        changedSecurityRequirements.setOldSecurityRequirements(oldSecurityRequirements);\n\n        // Then\n        assertEquals(oldSecurityRequirements, changedSecurityRequirements.getOldSecurityRequirements());\n    }\n\n    @Test\n    public void testSetOldSecurityRequirementsWithStateDependency() {\n        // Given\n        List<SecurityRequirement> oldSecurityRequirements = Arrays.asList(new SecurityRequirement());\n        List<SecurityRequirement> newSecurityRequirements = Arrays.asList(new SecurityRequirement());\n        ChangedSecurityRequirements changedSecurityRequirements = new ChangedSecurityRequirements(null, null, null);\n\n        // When\n        changedSecurityRequirements.setNewSecurityRequirements(newSecurityRequirements);\n        changedSecurityRequirements.setOldSecurityRequirements(oldSecurityRequirements);\n\n        // Then\n        assertEquals(oldSecurityRequirements, changedSecurityRequirements.getOldSecurityRequirements());\n        assertEquals(newSecurityRequirements, changedSecurityRequirements.getNewSecurityRequirements());\n    }\n\n    @Test\n    public void testSetOldSecurityRequirementsWithMissingRequirements() {\n        // Given\n        List<SecurityRequirement> oldSecurityRequirements = Arrays.asList(new SecurityRequirement());\n        List<SecurityRequirement> missingRequirements = Arrays.asList(new SecurityRequirement());\n        ChangedSecurityRequirements changedSecurityRequirements = new ChangedSecurityRequirements(null, null, null);\n\n        // When\n        changedSecurityRequirements.setOldSecurityRequirements(oldSecurityRequirements);\n        changedSecurityRequirements.setMissing(missingRequirements);\n\n        // Then\n        assertEquals(oldSecurityRequirements, changedSecurityRequirements.getOldSecurityRequirements());\n        assertEquals(missingRequirements, changedSecurityRequirements.getMissing());\n    }\n\n    @Test\n    public void testSetOldSecurityRequirementsWithCoreChanged() {\n        // Given\n        List<SecurityRequirement> oldSecurityRequirements = Arrays.asList(new SecurityRequirement());\n        ChangedSecurityRequirements changedSecurityRequirements = new ChangedSecurityRequirements(null, null, null);\n\n        // When\n        changedSecurityRequirements.setOldSecurityRequirements(oldSecurityRequirements);\n\n        // Then\n        assertEquals(oldSecurityRequirements, changedSecurityRequirements.getOldSecurityRequirements());\n        assertTrue(changedSecurityRequirements.isCoreChanged() == DiffResult.NO_CHANGES);\n    }\n\n    @Test\n    public void testSetOldSecurityRequirementsWithEquals() {\n        // Given\n        List<SecurityRequirement> oldSecurityRequirements = Arrays.asList(new SecurityRequirement());\n        ChangedSecurityRequirements changedSecurityRequirements = new ChangedSecurityRequirements(null, null, null);\n        ChangedSecurityRequirements changedSecurityRequirements2 = new ChangedSecurityRequirements(null, null, null);\n\n        // When\n        changedSecurityRequirements.setOldSecurityRequirements(oldSecurityRequirements);\n        changedSecurityRequirements2.setOldSecurityRequirements(oldSecurityRequirements);\n\n        // Then\n        assertEquals(oldSecurityRequirements, changedSecurityRequirements.getOldSecurityRequirements());\n        assertTrue(changedSecurityRequirements.equals(changedSecurityRequirements2));\n    }\n}\n"}]