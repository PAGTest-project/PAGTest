[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport io.swagger.v3.oas.models.security.SecurityScheme;\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Optional;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\npublic class SecurityDiffInfo_containsListTest {\n\n    @Test\n    public void testContainsList_Found() {\n        SecurityDiffInfo info1 = new SecurityDiffInfo(\"ref1\", new SecurityScheme(), Arrays.asList(\"scope1\"));\n        SecurityDiffInfo info2 = new SecurityDiffInfo(\"ref2\", new SecurityScheme(), Arrays.asList(\"scope2\"));\n        List<SecurityDiffInfo> leftSecurities = Arrays.asList(info1, info2);\n        List<List<SecurityDiffInfo>> securityRequirements = Arrays.asList(leftSecurities, Collections.singletonList(info1));\n\n        Optional<List<SecurityDiffInfo>> result = SecurityDiffInfo.containsList(securityRequirements, leftSecurities);\n\n        assertTrue(result.isPresent());\n    }\n\n    @Test\n    public void testContainsList_NotFound() {\n        SecurityDiffInfo info1 = new SecurityDiffInfo(\"ref1\", new SecurityScheme(), Arrays.asList(\"scope1\"));\n        SecurityDiffInfo info2 = new SecurityDiffInfo(\"ref2\", new SecurityScheme(), Arrays.asList(\"scope2\"));\n        List<SecurityDiffInfo> leftSecurities = Arrays.asList(info1, info2);\n        List<List<SecurityDiffInfo>> securityRequirements = Collections.singletonList(Collections.singletonList(info1));\n\n        Optional<List<SecurityDiffInfo>> result = SecurityDiffInfo.containsList(securityRequirements, leftSecurities);\n\n        assertFalse(result.isPresent());\n    }\n}\n"}]