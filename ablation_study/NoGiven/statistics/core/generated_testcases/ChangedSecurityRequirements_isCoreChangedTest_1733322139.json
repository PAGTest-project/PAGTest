[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport io.swagger.v3.oas.models.security.SecurityRequirement;\nimport java.util.Collections;\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\npublic class ChangedSecurityRequirements_isCoreChangedTest {\n\n    private ChangedSecurityRequirements changedSecurityRequirements;\n    private DiffContext context;\n\n    @BeforeEach\n    public void setUp() {\n        context = mock(DiffContext.class);\n        changedSecurityRequirements = new ChangedSecurityRequirements(\n            Collections.emptyList(), Collections.emptyList(), context);\n    }\n\n    @Test\n    public void testIsCoreChanged_NoChanges() {\n        // Given\n        changedSecurityRequirements.setMissing(Collections.emptyList());\n        changedSecurityRequirements.setIncreased(Collections.emptyList());\n\n        // When\n        DiffResult result = changedSecurityRequirements.isCoreChanged();\n\n        // Then\n        assertEquals(DiffResult.NO_CHANGES, result);\n    }\n\n    @Test\n    public void testIsCoreChanged_Incompatible() {\n        // Given\n        SecurityRequirement missingRequirement = new SecurityRequirement();\n        changedSecurityRequirements.addMissing(missingRequirement);\n        when(SECURITY_REQUIREMENTS_DECREASED.enabled(context)).thenReturn(true);\n\n        // When\n        DiffResult result = changedSecurityRequirements.isCoreChanged();\n\n        // Then\n        assertEquals(DiffResult.INCOMPATIBLE, result);\n    }\n\n    @Test\n    public void testIsCoreChanged_Compatible() {\n        // Given\n        SecurityRequirement increasedRequirement = new SecurityRequirement();\n        changedSecurityRequirements.addIncreased(increasedRequirement);\n        when(SECURITY_REQUIREMENTS_DECREASED.enabled(context)).thenReturn(false);\n\n        // When\n        DiffResult result = changedSecurityRequirements.isCoreChanged();\n\n        // Then\n        assertEquals(DiffResult.COMPATIBLE, result);\n    }\n}\n"}]