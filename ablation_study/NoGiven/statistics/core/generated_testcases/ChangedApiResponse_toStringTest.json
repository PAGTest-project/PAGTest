[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.responses.ApiResponse;\nimport io.swagger.v3.oas.models.responses.ApiResponses;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ChangedApiResponse_toStringTest {\n\n    @Test\n    public void testToString() {\n        ApiResponses oldApiResponses = new ApiResponses();\n        ApiResponses newApiResponses = new ApiResponses();\n        DiffContext context = new DiffContext(null);\n\n        Map<String, ApiResponse> increased = new HashMap<>();\n        increased.put(\"200\", new ApiResponse().description(\"OK\"));\n\n        Map<String, ApiResponse> missing = new HashMap<>();\n        missing.put(\"404\", new ApiResponse().description(\"Not Found\"));\n\n        Map<String, ChangedResponse> changed = new HashMap<>();\n        changed.put(\"500\", new ChangedResponse(new ApiResponse(), new ApiResponse(), context));\n\n        ChangedExtensions extensions = new ChangedExtensions(new HashMap<>(), new HashMap<>(), context);\n\n        ChangedApiResponse changedApiResponse = new ChangedApiResponse(oldApiResponses, newApiResponses, context)\n                .setIncreased(increased)\n                .setMissing(missing)\n                .setChanged(changed)\n                .setExtensions(extensions);\n\n        String expected = \"ChangedApiResponse(oldApiResponses=class ApiResponses {\\n\" +\n                \"{}\" +\n                \"extensions: null\\n\" +\n                \"}, newApiResponses=class ApiResponses {\\n\" +\n                \"{}\" +\n                \"extensions: null\\n\" +\n                \"}, context=\" + context + \", increased={200=class ApiResponse {\\n\" +\n                \"description: OK\\n\" +\n                \"headers: null\\n\" +\n                \"content: null\\n\" +\n                \"links: null\\n\" +\n                \"extensions: null\\n\" +\n                \"$ref: null\\n\" +\n                \"}}, missing={404=class ApiResponse {\\n\" +\n                \"description: Not Found\\n\" +\n                \"headers: null\\n\" +\n                \"content: null\\n\" +\n                \"links: null\\n\" +\n                \"extensions: null\\n\" +\n                \"$ref: null\\n\" +\n                \"}}, changed={500=ChangedResponse(oldApiResponse=class ApiResponse {\\n\" +\n                \"description: null\\n\" +\n                \"headers: null\\n\" +\n                \"content: null\\n\" +\n                \"links: null\\n\" +\n                \"extensions: null\\n\" +\n                \"$ref: null\\n\" +\n                \"}, newApiResponse=class ApiResponse {\\n\" +\n                \"description: null\\n\" +\n                \"headers: null\\n\" +\n                \"content: null\\n\" +\n                \"links: null\\n\" +\n                \"extensions: null\\n\" +\n                \"$ref: null\\n\" +\n                \"}, context=\" + context + \", description=null, headers=null, content=null, extensions=null)}, extensions=ChangedExtensions(oldExtensions={}, newExtensions={}, context=\" + context + \", increased={}, missing={}, changed={}))\";\n        assertEquals(expected, changedApiResponse.toString());\n    }\n}\n"}]