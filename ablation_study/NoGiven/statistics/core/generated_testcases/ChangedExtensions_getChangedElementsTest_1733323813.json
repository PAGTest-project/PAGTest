[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class ChangedExtensions_getChangedElementsTest {\n\n    @Test\n    public void testGetChangedElements() {\n        // Given\n        Map<String, Object> oldExtensions = new HashMap<>();\n        Map<String, Object> newExtensions = new HashMap<>();\n        DiffContext context = new DiffContext(new OpenApiDiffOptions());\n        ChangedExtensions changedExtensions = new ChangedExtensions(oldExtensions, newExtensions, context);\n\n        Map<String, Changed> increased = new HashMap<>();\n        increased.put(\"key1\", new ChangedImpl());\n        increased.put(\"key2\", new ChangedImpl());\n\n        Map<String, Changed> missing = new HashMap<>();\n        missing.put(\"key3\", new ChangedImpl());\n\n        Map<String, Changed> changed = new HashMap<>();\n        changed.put(\"key4\", new ChangedImpl());\n\n        changedExtensions.setIncreased(increased);\n        changedExtensions.setMissing(missing);\n        changedExtensions.setChanged(changed);\n\n        // When\n        List<Changed> result = changedExtensions.getChangedElements();\n\n        // Then\n        assertEquals(4, result.size());\n    }\n\n    private static class ChangedImpl implements Changed {\n        @Override\n        public DiffResult isChanged() {\n            return DiffResult.NO_CHANGES;\n        }\n    }\n}\n"}]