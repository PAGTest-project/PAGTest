[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.model.Changed;\nimport org.openapitools.openapidiff.core.model.ComposedChanged;\nimport org.openapitools.openapidiff.core.model.deferred.DeferredChanged;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Optional;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class DeferredLogger_valueToStringTest {\n\n    @Test\n    public void testValueToString_Null() {\n        assertEquals(\"null\", DeferredLogger.valueToString(null));\n    }\n\n    @Test\n    public void testValueToString_Changed() {\n        Changed changed = new ComposedChanged() {\n            @Override\n            public boolean isChanged() {\n                return true;\n            }\n        };\n        assertEquals(\"Changed: \" + ComposedChanged.class + \" (composed) \", DeferredLogger.valueToString(changed));\n    }\n\n    @Test\n    public void testValueToString_Optional() {\n        Optional<String> optional = Optional.of(\"test\");\n        assertEquals(\"Optional[test]\", DeferredLogger.valueToString(optional));\n    }\n\n    @Test\n    public void testValueToString_DeferredChanged() {\n        DeferredChanged<String> deferredChanged = new DeferredChanged<String>() {\n            @Override\n            public boolean isValueSet() {\n                return true;\n            }\n\n            @Override\n            public boolean isPresent() {\n                return true;\n            }\n\n            @Override\n            public String get() {\n                return \"deferred\";\n            }\n\n            @Override\n            public String toString() {\n                return \"DeferredChanged\";\n            }\n        };\n        assertEquals(\"deferred\", DeferredLogger.valueToString(deferredChanged));\n    }\n\n    @Test\n    public void testValueToString_Array() {\n        Object[] array = {\"a\", \"b\", \"c\"};\n        assertEquals(\"[a, b, c]\", DeferredLogger.valueToString(array));\n    }\n\n    @Test\n    public void testValueToString_Collection() {\n        Collection<String> collection = Arrays.asList(\"x\", \"y\", \"z\");\n        assertEquals(\"[x, y, z]\", DeferredLogger.valueToString(collection));\n    }\n\n    @Test\n    public void testValueToString_Other() {\n        assertEquals(\"other\", DeferredLogger.valueToString(\"other\"));\n    }\n}\n"}]