[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport io.swagger.v3.oas.models.security.OAuthFlows;\nimport java.util.Optional;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.model.ChangedOAuthFlows;\nimport org.openapitools.openapidiff.core.model.DiffContext;\n\npublic class OAuthFlowsDiff_diffTest {\n\n    private OAuthFlowsDiff oAuthFlowsDiff;\n    private OpenApiDiff openApiDiff;\n    private DiffContext context;\n\n    @BeforeEach\n    public void setUp() {\n        openApiDiff = mock(OpenApiDiff.class);\n        oAuthFlowsDiff = new OAuthFlowsDiff(openApiDiff);\n        context = mock(DiffContext.class);\n    }\n\n    @Test\n    public void testDiffWithNonNullOAuthFlows() {\n        OAuthFlows left = new OAuthFlows();\n        OAuthFlows right = new OAuthFlows();\n\n        when(openApiDiff.getOAuthFlowDiff().diff(left.getImplicit(), right.getImplicit(), context))\n            .thenReturn(Optional.empty());\n        when(openApiDiff.getOAuthFlowDiff().diff(left.getPassword(), right.getPassword(), context))\n            .thenReturn(Optional.empty());\n        when(openApiDiff.getOAuthFlowDiff().diff(left.getClientCredentials(), right.getClientCredentials(), context))\n            .thenReturn(Optional.empty());\n        when(openApiDiff.getOAuthFlowDiff().diff(left.getAuthorizationCode(), right.getAuthorizationCode(), context))\n            .thenReturn(Optional.empty());\n        when(openApiDiff.getExtensionsDiff().diff(OAuthFlowsDiff.getExtensions(left), OAuthFlowsDiff.getExtensions(right)))\n            .thenReturn(Optional.empty());\n\n        Optional<ChangedOAuthFlows> result = oAuthFlowsDiff.diff(left, right, context);\n\n        assertTrue(result.isPresent());\n    }\n\n    @Test\n    public void testDiffWithNullOAuthFlows() {\n        OAuthFlows left = null;\n        OAuthFlows right = null;\n\n        when(openApiDiff.getExtensionsDiff().diff(OAuthFlowsDiff.getExtensions(left), OAuthFlowsDiff.getExtensions(right)))\n            .thenReturn(Optional.empty());\n\n        Optional<ChangedOAuthFlows> result = oAuthFlowsDiff.diff(left, right, context);\n\n        assertTrue(result.isPresent());\n    }\n}\n"}]