[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.model.ChangedParameters;\nimport org.openapitools.openapidiff.core.model.DiffContext;\nimport io.swagger.v3.oas.models.parameters.Parameter;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class ParametersDiff_pathUnchangedTest {\n\n    @Test\n    public void testPathUnchanged_PathParamsMatchAndNoChanges() {\n        ParametersDiff parametersDiff = new ParametersDiff(null);\n        DiffContext context = new DiffContext(null);\n        context.setLeftAndRightUrls(\"/api/v1/users/{id}\", \"/api/v1/users/{id}\");\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Collections.emptyList(), Collections.emptyList(), context);\n\n        assertTrue(parametersDiff.pathUnchanged(changedParameters, context));\n    }\n\n    @Test\n    public void testPathUnchanged_PathParamsCountMismatch() {\n        ParametersDiff parametersDiff = new ParametersDiff(null);\n        DiffContext context = new DiffContext(null);\n        context.setLeftAndRightUrls(\"/api/v1/users/{id}\", \"/api/v1/users/{id}/{name}\");\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Collections.emptyList(), Collections.emptyList(), context);\n\n        assertFalse(parametersDiff.pathUnchanged(changedParameters, context));\n    }\n\n    @Test\n    public void testPathUnchanged_ParamLessPathMismatch() {\n        ParametersDiff parametersDiff = new ParametersDiff(null);\n        DiffContext context = new DiffContext(null);\n        context.setLeftAndRightUrls(\"/api/v1/users/{id}\", \"/api/v1/items/{id}\");\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                Collections.emptyList(), Collections.emptyList(), context);\n\n        assertFalse(parametersDiff.pathUnchanged(changedParameters, context));\n    }\n\n    @Test\n    public void testPathUnchanged_ChangedParametersNotEmpty() {\n        ParametersDiff parametersDiff = new ParametersDiff(null);\n        DiffContext context = new DiffContext(null);\n        context.setLeftAndRightUrls(\"/api/v1/users/{id}\", \"/api/v1/users/{id}\");\n\n        List<Parameter> oldParams = new ArrayList<>();\n        List<Parameter> newParams = new ArrayList<>();\n        Parameter param = new Parameter();\n        param.setName(\"id\");\n        oldParams.add(param);\n        newParams.add(param);\n\n        ChangedParameters changedParameters = new ChangedParameters(\n                oldParams, newParams, context);\n        changedParameters.getChanged().add(new ChangedParameter(param, param, context));\n\n        assertFalse(parametersDiff.pathUnchanged(changedParameters, context));\n    }\n}\n"}]