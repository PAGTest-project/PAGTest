[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.OpenAPI;\nimport org.apache.commons.configuration2.CompositeConfiguration;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class ChangedOpenApi_equalsTest {\n\n    private ChangedOpenApi changedOpenApi1;\n    private ChangedOpenApi changedOpenApi2;\n    private OpenAPI oldSpecOpenApi;\n    private OpenAPI newSpecOpenApi;\n    private List<Endpoint> newEndpoints;\n    private List<Endpoint> missingEndpoints;\n    private List<ChangedOperation> changedOperations;\n    private ChangedExtensions changedExtensions;\n\n    @BeforeEach\n    public void setUp() {\n        CompositeConfiguration config = new CompositeConfiguration();\n        OpenApiDiffOptions options = new OpenApiDiffOptions(config);\n        changedOpenApi1 = new ChangedOpenApi(options);\n        changedOpenApi2 = new ChangedOpenApi(options);\n\n        oldSpecOpenApi = new OpenAPI();\n        newSpecOpenApi = new OpenAPI();\n        newEndpoints = Collections.emptyList();\n        missingEndpoints = Collections.emptyList();\n        changedOperations = Collections.emptyList();\n        changedExtensions = new ChangedExtensions(Collections.emptyMap(), Collections.emptyMap(), null);\n\n        changedOpenApi1.setOldSpecOpenApi(oldSpecOpenApi)\n                .setNewSpecOpenApi(newSpecOpenApi)\n                .setNewEndpoints(newEndpoints)\n                .setMissingEndpoints(missingEndpoints)\n                .setChangedOperations(changedOperations)\n                .setChangedExtensions(changedExtensions);\n\n        changedOpenApi2.setOldSpecOpenApi(oldSpecOpenApi)\n                .setNewSpecOpenApi(newSpecOpenApi)\n                .setNewEndpoints(newEndpoints)\n                .setMissingEndpoints(missingEndpoints)\n                .setChangedOperations(changedOperations)\n                .setChangedExtensions(changedExtensions);\n    }\n\n    @Test\n    public void testEquals_SameInstance() {\n        assertTrue(changedOpenApi1.equals(changedOpenApi1));\n    }\n\n    @Test\n    public void testEquals_EqualObjects() {\n        assertTrue(changedOpenApi1.equals(changedOpenApi2));\n    }\n\n    @Test\n    public void testEquals_DifferentOldSpecOpenApi() {\n        changedOpenApi2.setOldSpecOpenApi(new OpenAPI());\n        assertEquals(false, changedOpenApi1.equals(changedOpenApi2));\n    }\n\n    @Test\n    public void testEquals_DifferentNewSpecOpenApi() {\n        changedOpenApi2.setNewSpecOpenApi(new OpenAPI());\n        assertEquals(false, changedOpenApi1.equals(changedOpenApi2));\n    }\n\n    @Test\n    public void testEquals_DifferentNewEndpoints() {\n        changedOpenApi2.setNewEndpoints(Collections.singletonList(new Endpoint()));\n        assertEquals(false, changedOpenApi1.equals(changedOpenApi2));\n    }\n\n    @Test\n    public void testEquals_DifferentMissingEndpoints() {\n        changedOpenApi2.setMissingEndpoints(Collections.singletonList(new Endpoint()));\n        assertEquals(false, changedOpenApi1.equals(changedOpenApi2));\n    }\n\n    @Test\n    public void testEquals_DifferentChangedOperations() {\n        changedOpenApi2.setChangedOperations(Collections.singletonList(new ChangedOperation(\"path\", io.swagger.v3.oas.models.PathItem.HttpMethod.GET, new io.swagger.v3.oas.models.Operation(), new io.swagger.v3.oas.models.Operation())));\n        assertEquals(false, changedOpenApi1.equals(changedOpenApi2));\n    }\n\n    @Test\n    public void testEquals_DifferentChangedExtensions() {\n        changedOpenApi2.setChangedExtensions(new ChangedExtensions(Collections.emptyMap(), Collections.emptyMap(), null));\n        assertEquals(false, changedOpenApi1.equals(changedOpenApi2));\n    }\n}\n"}]