[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.security.SecurityRequirement;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass ChangedSecurityRequirement_equalsTest {\n\n    @Test\n    void testEquals_SameObject() {\n        ChangedSecurityRequirement req = new ChangedSecurityRequirement(null, null, null);\n        assertTrue(req.equals(req));\n    }\n\n    @Test\n    void testEquals_NullObject() {\n        ChangedSecurityRequirement req = new ChangedSecurityRequirement(null, null, null);\n        assertFalse(req.equals(null));\n    }\n\n    @Test\n    void testEquals_DifferentClass() {\n        ChangedSecurityRequirement req = new ChangedSecurityRequirement(null, null, null);\n        assertFalse(req.equals(new Object()));\n    }\n\n    @Test\n    void testEquals_DifferentFields() {\n        SecurityRequirement oldReq = new SecurityRequirement();\n        SecurityRequirement newReq = new SecurityRequirement();\n        SecurityRequirement missingReq = new SecurityRequirement();\n        SecurityRequirement increasedReq = new SecurityRequirement();\n        ChangedSecurityRequirement req1 = new ChangedSecurityRequirement(oldReq, newReq, null)\n                .setMissing(missingReq)\n                .setIncreased(increasedReq);\n        ChangedSecurityRequirement req2 = new ChangedSecurityRequirement(oldReq, newReq, null)\n                .setMissing(missingReq)\n                .setIncreased(increasedReq);\n        assertTrue(req1.equals(req2));\n\n        req2.setIncreased(new SecurityRequirement());\n        assertFalse(req1.equals(req2));\n    }\n}\n"}]