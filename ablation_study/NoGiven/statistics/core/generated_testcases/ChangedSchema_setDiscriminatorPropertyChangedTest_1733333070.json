[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport io.swagger.v3.oas.models.media.Schema;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiffOptions;\n\npublic class ChangedSchema_setDiscriminatorPropertyChangedTest {\n\n    @Test\n    public void testSetDiscriminatorPropertyChanged() {\n        // Given\n        ChangedSchema changedSchema = new ChangedSchema();\n        changedSchema.setContext(new DiffContext(new OpenApiDiffOptions()));\n        changedSchema.setOldSchema(new Schema<>());\n        changedSchema.setNewSchema(new Schema<>());\n\n        // When\n        ChangedSchema result = changedSchema.setDiscriminatorPropertyChanged(true);\n\n        // Then\n        assertTrue(result.isDiscriminatorPropertyChanged());\n    }\n\n    @Test\n    public void testSetDiscriminatorPropertyChangedToFalse() {\n        // Given\n        ChangedSchema changedSchema = new ChangedSchema();\n        changedSchema.setContext(new DiffContext(new OpenApiDiffOptions()));\n        changedSchema.setOldSchema(new Schema<>());\n        changedSchema.setNewSchema(new Schema<>());\n\n        // When\n        ChangedSchema result = changedSchema.setDiscriminatorPropertyChanged(false);\n\n        // Then\n        assertFalse(result.isDiscriminatorPropertyChanged());\n    }\n}\n"}]