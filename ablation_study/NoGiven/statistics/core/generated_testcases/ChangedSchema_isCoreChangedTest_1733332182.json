[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.Test;\nimport org.openapitools.openapidiff.core.model.DiffResult;\nimport org.openapitools.openapidiff.core.model.DiffContext;\nimport io.swagger.v3.oas.models.media.Schema;\n\npublic class ChangedSchema_isCoreChangedTest {\n\n    @Test\n    public void testIsCoreChanged_CoreChangedIsNull() {\n        // Given\n        ChangedSchema changedSchema = new ChangedSchema();\n        changedSchema.setContext(new DiffContext());\n        changedSchema.setOldSchema(new Schema<>());\n        changedSchema.setNewSchema(new Schema<>());\n\n        // When\n        DiffResult result = changedSchema.isCoreChanged();\n\n        // Then\n        assertEquals(DiffResult.NO_CHANGES, result);\n    }\n\n    @Test\n    public void testIsCoreChanged_CoreChangedIsNotNull() {\n        // Given\n        ChangedSchema changedSchema = new ChangedSchema();\n        changedSchema.setContext(new DiffContext());\n        changedSchema.setOldSchema(new Schema<>());\n        changedSchema.setNewSchema(new Schema<>());\n        changedSchema.coreChanged = DiffResult.INCOMPATIBLE;\n\n        // When\n        DiffResult result = changedSchema.isCoreChanged();\n\n        // Then\n        assertEquals(DiffResult.INCOMPATIBLE, result);\n    }\n}\n"}]