[{"strategy": "retry", "code": "\npackage org.openapitools.openapidiff.core.model.deferred;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\nimport io.swagger.v3.oas.models.media.Schema;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.openapitools.openapidiff.core.compare.CacheKey;\nimport org.openapitools.openapidiff.core.compare.OpenApiDiff;\nimport org.openapitools.openapidiff.core.model.ChangedSchema;\n\nimport java.util.List;\n\n@ExtendWith(MockitoExtension.class)\npublic class DeferredSchemaCache_processTest {\n\n    @Mock\n    private OpenApiDiff openApiDiff;\n\n    @Mock\n    private Schema leftSchema;\n\n    @Mock\n    private Schema rightSchema;\n\n    @Mock\n    private CacheKey cacheKey;\n\n    @Mock\n    private RecursiveSchemaSet refSet;\n\n    private DeferredSchemaCache deferredSchemaCache;\n\n    @BeforeEach\n    public void setUp() {\n        deferredSchemaCache = new DeferredSchemaCache(openApiDiff);\n    }\n\n    @Test\n    public void testProcess() {\n        // Given\n        deferredSchemaCache.addSchema(refSet, cacheKey, leftSchema, rightSchema);\n\n        // When\n        deferredSchemaCache.process();\n\n        // Then\n        List<ChangedSchema> changedSchemas = deferredSchemaCache.getChangedSchemas();\n        assertTrue(changedSchemas.isEmpty());\n    }\n}\n"}]