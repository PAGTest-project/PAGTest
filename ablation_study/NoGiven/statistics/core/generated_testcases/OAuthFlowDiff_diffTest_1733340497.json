[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.compare;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport io.swagger.v3.oas.models.security.OAuthFlow;\nimport java.util.Optional;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.openapitools.openapidiff.core.model.ChangedOAuthFlow;\nimport org.openapitools.openapidiff.core.model.DiffContext;\n\n@ExtendWith(MockitoExtension.class)\npublic class OAuthFlowDiff_diffTest {\n\n    @Mock\n    private OpenApiDiff openApiDiff;\n\n    @Mock\n    private ExtensionsDiff extensionsDiff;\n\n    private OAuthFlowDiff oAuthFlowDiff;\n\n    @BeforeEach\n    public void setUp() {\n        oAuthFlowDiff = new OAuthFlowDiff(openApiDiff);\n    }\n\n    @Test\n    public void testDiff_BothNonNull() {\n        OAuthFlow left = new OAuthFlow();\n        OAuthFlow right = new OAuthFlow();\n        DiffContext context = new DiffContext(null);\n\n        left.setAuthorizationUrl(\"http://left.com\");\n        right.setAuthorizationUrl(\"http://right.com\");\n\n        when(openApiDiff.getExtensionsDiff()).thenReturn(extensionsDiff);\n        when(extensionsDiff.diff(OAuthFlowDiff.getExtensions(left), OAuthFlowDiff.getExtensions(right)))\n            .thenReturn(Optional.empty());\n\n        Optional<ChangedOAuthFlow> result = oAuthFlowDiff.diff(left, right, context);\n\n        assertTrue(result.isPresent());\n        assertTrue(result.get().isAuthorizationUrl());\n    }\n\n    @Test\n    public void testDiff_OneNull() {\n        OAuthFlow left = new OAuthFlow();\n        OAuthFlow right = null;\n        DiffContext context = new DiffContext(null);\n\n        when(openApiDiff.getExtensionsDiff()).thenReturn(extensionsDiff);\n        when(extensionsDiff.diff(OAuthFlowDiff.getExtensions(left), OAuthFlowDiff.getExtensions(right)))\n            .thenReturn(Optional.empty());\n\n        Optional<ChangedOAuthFlow> result = oAuthFlowDiff.diff(left, right, context);\n\n        assertTrue(result.isPresent());\n    }\n}\n"}]