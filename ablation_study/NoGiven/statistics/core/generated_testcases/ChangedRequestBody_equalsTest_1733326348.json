[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport io.swagger.v3.oas.models.parameters.RequestBody;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class ChangedRequestBody_equalsTest {\n\n    @Test\n    public void testEquals_SameInstance() {\n        ChangedRequestBody body = new ChangedRequestBody(null, null, null);\n        assertTrue(body.equals(body));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        ChangedRequestBody body = new ChangedRequestBody(null, null, null);\n        assertFalse(body.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        ChangedRequestBody body = new ChangedRequestBody(null, null, null);\n        assertFalse(body.equals(new Object()));\n    }\n\n    @Test\n    public void testEquals_DifferentFields() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context = new DiffContext(null);\n        ChangedMetadata description = new ChangedMetadata();\n        ChangedContent content = new ChangedContent(null, null, null);\n        ChangedExtensions extensions = new ChangedExtensions(null, null, null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody, context)\n                .setChangeRequired(true)\n                .setDescription(description)\n                .setContent(content)\n                .setExtensions(extensions);\n\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody, context)\n                .setChangeRequired(true)\n                .setDescription(description)\n                .setContent(content)\n                .setExtensions(extensions);\n\n        assertTrue(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentOldRequestBody() {\n        RequestBody oldBody1 = new RequestBody();\n        RequestBody oldBody2 = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context = new DiffContext(null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody1, newBody, context);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody2, newBody, context);\n\n        assertFalse(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentNewRequestBody() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody1 = new RequestBody();\n        RequestBody newBody2 = new RequestBody();\n        DiffContext context = new DiffContext(null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody1, context);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody2, context);\n\n        assertFalse(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentContext() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context1 = new DiffContext(null);\n        DiffContext context2 = new DiffContext(null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody, context1);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody, context2);\n\n        assertFalse(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentChangeRequired() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context = new DiffContext(null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody, context).setChangeRequired(true);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody, context).setChangeRequired(false);\n\n        assertFalse(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentDescription() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context = new DiffContext(null);\n        ChangedMetadata description1 = new ChangedMetadata();\n        ChangedMetadata description2 = new ChangedMetadata();\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody, context).setDescription(description1);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody, context).setDescription(description2);\n\n        assertFalse(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentContent() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context = new DiffContext(null);\n        ChangedContent content1 = new ChangedContent(null, null, null);\n        ChangedContent content2 = new ChangedContent(null, null, null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody, context).setContent(content1);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody, context).setContent(content2);\n\n        assertFalse(body1.equals(body2));\n    }\n\n    @Test\n    public void testEquals_DifferentExtensions() {\n        RequestBody oldBody = new RequestBody();\n        RequestBody newBody = new RequestBody();\n        DiffContext context = new DiffContext(null);\n        ChangedExtensions extensions1 = new ChangedExtensions(null, null, null);\n        ChangedExtensions extensions2 = new ChangedExtensions(null, null, null);\n\n        ChangedRequestBody body1 = new ChangedRequestBody(oldBody, newBody, context).setExtensions(extensions1);\n        ChangedRequestBody body2 = new ChangedRequestBody(oldBody, newBody, context).setExtensions(extensions2);\n\n        assertFalse(body1.equals(body2));\n    }\n}\n"}]