[{"strategy": "generate", "code": "\npackage org.openapitools.openapidiff.core.model;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport org.junit.jupiter.api.Test;\nimport io.swagger.v3.oas.models.media.Schema;\n\npublic class ChangedSchema_equalsTest {\n\n    @Test\n    public void testEquals_SameInstance() {\n        ChangedSchema schema = new ChangedSchema();\n        assertTrue(schema.equals(schema));\n    }\n\n    @Test\n    public void testEquals_NullObject() {\n        ChangedSchema schema = new ChangedSchema();\n        assertFalse(schema.equals(null));\n    }\n\n    @Test\n    public void testEquals_DifferentClass() {\n        ChangedSchema schema = new ChangedSchema();\n        Object differentClassObject = new Object();\n        assertFalse(schema.equals(differentClassObject));\n    }\n\n    @Test\n    public void testEquals_DifferentSchemas() {\n        ChangedSchema schema1 = new ChangedSchema();\n        schema1.setOldSchema(new Schema<>().description(\"old\"));\n        schema1.setNewSchema(new Schema<>().description(\"new\"));\n\n        ChangedSchema schema2 = new ChangedSchema();\n        schema2.setOldSchema(new Schema<>().description(\"old\"));\n        schema2.setNewSchema(new Schema<>().description(\"new\"));\n\n        assertTrue(schema1.equals(schema2));\n    }\n\n    @Test\n    public void testEquals_DifferentSchemas_NotEqual() {\n        ChangedSchema schema1 = new ChangedSchema();\n        schema1.setOldSchema(new Schema<>().description(\"old1\"));\n        schema1.setNewSchema(new Schema<>().description(\"new1\"));\n\n        ChangedSchema schema2 = new ChangedSchema();\n        schema2.setOldSchema(new Schema<>().description(\"old2\"));\n        schema2.setNewSchema(new Schema<>().description(\"new2\"));\n\n        assertFalse(schema1.equals(schema2));\n    }\n}\n"}]