{"file_path": "src/test/java/unit/spot/market/TestExchangeInfo.java", "testclass_name": "TestExchangeInfo", "dependencies": ["package unit.spot.market;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertThrows;", "import java.util.ArrayList;", "import java.util.LinkedHashMap;", "import java.util.Map;", "import org.junit.Before;", "import org.junit.Test;", "import com.binance.connector.client.SpotClient;", "import com.binance.connector.client.enums.HttpMethod;", "import com.binance.connector.client.exceptions.BinanceConnectorException;", "import com.binance.connector.client.impl.SpotClientImpl;", "import com.binance.connector.client.utils.UrlBuilder;", "import okhttp3.mockwebserver.Dispatcher;", "import okhttp3.mockwebserver.MockWebServer;", "import unit.MockData;", "import unit.MockWebServerDispatcher;"], "name": "TestExchangeInfo", "description": "Unit tests for the exchange information functionality of the SpotClient.", "class_members": {"variables": [{"name": "mockWebServer", "type": "MockWebServer"}, {"name": "baseUrl", "type": "String"}]}, "fixtures": ["init"], "test_cases": [{"name": "testExchangeInfo", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client without any parameters."}, {"name": "testExchangeInfoWithOneSymbol", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with one symbol parameter."}, {"name": "testExchangeInfoWithMultipleSymbol", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with multiple symbol parameters."}, {"name": "testExchangeInfoWithOnePermission", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with one permission parameter."}, {"name": "testExchangeInfoWithMultiplePermissions", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with multiple permission parameters."}, {"name": "testExchangeInfoWithInvalidType", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with invalid type for symbols parameter, expecting an exception."}, {"name": "testExchangeInfoPermissionsWithInvalidType", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with invalid type for permissions parameter, expecting an exception."}, {"name": "testExchangeInfoWithDoubleParameter", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with both symbols and symbol parameters, expecting an exception."}, {"name": "testExchangeInfoWithSymbolAndPermissionsParameters", "primary_tested": ["Market.exchangeInfo(Map<String,Object>)"], "external_dependencies": {"modules": ["SpotClient", "SpotClientImpl", "MockWebServer", "MockWebServerDispatcher", "UrlBuilder", "MockData", "HttpMethod", "BinanceConnectorException"], "class_members": [{"name": "mockWebServer", "type": "variable"}, {"name": "baseUrl", "type": "variable"}], "project_specific_resources": ["MockWebServerDispatcher.getDispatcher(String,String,String,HttpMethod,int)", "UrlBuilder.urlEncode(String)"]}, "category": "unit", "fixtures_used": ["init"], "description": "Tests the exchangeInfo functionality of the Market client with both symbol and permissions parameters, expecting an exception."}]}