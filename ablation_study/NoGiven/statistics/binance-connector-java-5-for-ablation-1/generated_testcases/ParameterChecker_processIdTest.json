[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\nimport java.util.UUID;\n\npublic class ParameterChecker_processIdTest {\n\n    @Test\n    public void testProcessIdWithInteger() {\n        Integer id = 123;\n        assertEquals(id, ParameterChecker.processId(id, \"id\"));\n    }\n\n    @Test\n    public void testProcessIdWithString() {\n        String id = \"abc\";\n        assertEquals(id, ParameterChecker.processId(id, \"id\"));\n    }\n\n    @Test\n    public void testProcessIdWithNull() {\n        Object id = null;\n        String result = (String) ParameterChecker.processId(id, \"id\");\n        assertNotNull(result);\n        try {\n            UUID.fromString(result);\n        } catch (IllegalArgumentException e) {\n            fail(\"Returned value is not a valid UUID\");\n        }\n    }\n\n    @Test\n    public void testProcessIdWithEmptyString() {\n        String id = \"\";\n        String result = (String) ParameterChecker.processId(id, \"id\");\n        assertNotNull(result);\n        try {\n            UUID.fromString(result);\n        } catch (IllegalArgumentException e) {\n            fail(\"Returned value is not a valid UUID\");\n        }\n    }\n\n    @Test\n    public void testProcessIdWithInvalidType() {\n        Object id = new Object();\n        assertThrows(BinanceConnectorException.class, () -> ParameterChecker.processId(id, \"id\"));\n    }\n}\n"}]