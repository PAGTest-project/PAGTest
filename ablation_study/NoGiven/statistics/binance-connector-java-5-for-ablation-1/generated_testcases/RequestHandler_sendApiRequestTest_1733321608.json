[{"strategy": "retry", "code": "\npackage com.binance.connector.client.utils;\n\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\nimport com.binance.connector.client.utils.signaturegenerator.SignatureGenerator;\nimport org.junit.Test;\nimport org.junit.Before;\nimport static org.junit.Assert.*;\nimport static org.mockito.Mockito.*;\nimport java.util.Map;\nimport java.util.HashMap;\n\npublic class RequestHandler_sendApiRequestTest {\n\n    private RequestHandler requestHandler;\n    private ProxyAuth proxy;\n\n    @Before\n    public void setUp() {\n        proxy = mock(ProxyAuth.class);\n        requestHandler = new RequestHandler(\"validApiKey\", null, proxy);\n    }\n\n    @Test\n    public void testSendApiRequest_ValidApiKey() {\n        String baseUrl = \"https://api.binance.com\";\n        String urlPath = \"/api/v3/order\";\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"symbol\", \"BTCUSDT\");\n        HttpMethod httpMethod = HttpMethod.GET;\n        boolean showLimitUsage = true;\n\n        String result = requestHandler.sendApiRequest(baseUrl, urlPath, parameters, httpMethod, showLimitUsage);\n\n        assertNotNull(result);\n    }\n\n    @Test(expected = BinanceConnectorException.class)\n    public void testSendApiRequest_NullApiKey() {\n        requestHandler = new RequestHandler(null, null, proxy);\n\n        String baseUrl = \"https://api.binance.com\";\n        String urlPath = \"/api/v3/order\";\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"symbol\", \"BTCUSDT\");\n        HttpMethod httpMethod = HttpMethod.GET;\n        boolean showLimitUsage = true;\n\n        requestHandler.sendApiRequest(baseUrl, urlPath, parameters, httpMethod, showLimitUsage);\n    }\n\n    @Test(expected = BinanceConnectorException.class)\n    public void testSendApiRequest_EmptyApiKey() {\n        requestHandler = new RequestHandler(\"\", null, proxy);\n\n        String baseUrl = \"https://api.binance.com\";\n        String urlPath = \"/api/v3/order\";\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"symbol\", \"BTCUSDT\");\n        HttpMethod httpMethod = HttpMethod.GET;\n        boolean showLimitUsage = true;\n\n        requestHandler.sendApiRequest(baseUrl, urlPath, parameters, httpMethod, showLimitUsage);\n    }\n}\n"}]