[{"strategy": "generate", "code": "\npackage com.binance.connector.client.impl.spot;\n\nimport static org.junit.Assert.assertEquals;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport org.junit.Before;\nimport org.junit.Test;\nimport com.binance.connector.client.SpotClient;\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\nimport com.binance.connector.client.impl.SpotClientImpl;\nimport okhttp3.mockwebserver.Dispatcher;\nimport okhttp3.mockwebserver.MockWebServer;\nimport unit.MockData;\nimport unit.MockWebServerDispatcher;\n\npublic class Wallet_busdConvertHistoryTest {\n    private MockWebServer mockWebServer;\n    private String baseUrl;\n\n    @Before\n    public void init() {\n        this.mockWebServer = new MockWebServer();\n        this.baseUrl = mockWebServer.url(MockData.PREFIX).toString();\n    }\n\n    @Test\n    public void testBusdConvertHistory() {\n        String path = \"/sapi/v1/asset/convert-transfer/queryByPage\";\n        Map<String, Object> parameters = new LinkedHashMap<>();\n        parameters.put(\"startTime\", 1620000000000L);\n        parameters.put(\"endTime\", 1620100000000L);\n\n        Dispatcher dispatcher = MockWebServerDispatcher.getDispatcher(MockData.PREFIX, path, MockData.MOCK_RESPONSE, HttpMethod.GET, MockData.HTTP_STATUS_OK);\n        mockWebServer.setDispatcher(dispatcher);\n\n        SpotClient client = new SpotClientImpl(MockData.API_KEY, MockData.SECRET_KEY, baseUrl);\n        String result = client.createWallet().busdConvertHistory(parameters);\n        assertEquals(MockData.MOCK_RESPONSE, result);\n    }\n\n    @Test(expected = BinanceConnectorException.class)\n    public void testBusdConvertHistoryMissingStartTime() {\n        Map<String, Object> parameters = new LinkedHashMap<>();\n        parameters.put(\"endTime\", 1620100000000L);\n\n        SpotClient client = new SpotClientImpl(MockData.API_KEY, MockData.SECRET_KEY, baseUrl);\n        client.createWallet().busdConvertHistory(parameters);\n    }\n\n    @Test(expected = BinanceConnectorException.class)\n    public void testBusdConvertHistoryMissingEndTime() {\n        Map<String, Object> parameters = new LinkedHashMap<>();\n        parameters.put(\"startTime\", 1620000000000L);\n\n        SpotClient client = new SpotClientImpl(MockData.API_KEY, MockData.SECRET_KEY, baseUrl);\n        client.createWallet().busdConvertHistory(parameters);\n    }\n}\n"}]