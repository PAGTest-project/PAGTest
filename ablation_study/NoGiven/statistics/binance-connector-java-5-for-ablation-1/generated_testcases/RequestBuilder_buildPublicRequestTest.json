[{"strategy": "retry", "code": "\npackage com.binance.connector.client.utils;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertThrows;\nimport static org.junit.Assert.assertTrue;\nimport org.junit.Test;\nimport com.binance.connector.client.enums.HttpMethod;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\nimport okhttp3.Request;\n\npublic class RequestBuilder_buildPublicRequestTest {\n\n    private static final String VALID_URL = \"https://api.binance.com/api/v3/ticker/price\";\n    private static final String INVALID_URL = \"invalid-url\";\n\n    @Test\n    public void testBuildPublicRequestPost() {\n        Request request = RequestBuilder.buildPublicRequest(VALID_URL, HttpMethod.POST);\n        assertEquals(HttpMethod.POST.name(), request.method());\n        assertEquals(VALID_URL, request.url().toString());\n        assertTrue(request.headers().names().contains(\"User-Agent\"));\n        assertTrue(request.headers().names().contains(\"Content-Type\"));\n    }\n\n    @Test\n    public void testBuildPublicRequestGet() {\n        Request request = RequestBuilder.buildPublicRequest(VALID_URL, HttpMethod.GET);\n        assertEquals(HttpMethod.GET.name(), request.method());\n        assertEquals(VALID_URL, request.url().toString());\n        assertTrue(request.headers().names().contains(\"User-Agent\"));\n        assertTrue(request.headers().names().contains(\"Content-Type\"));\n    }\n\n    @Test\n    public void testBuildPublicRequestPut() {\n        Request request = RequestBuilder.buildPublicRequest(VALID_URL, HttpMethod.PUT);\n        assertEquals(HttpMethod.PUT.name(), request.method());\n        assertEquals(VALID_URL, request.url().toString());\n        assertTrue(request.headers().names().contains(\"User-Agent\"));\n        assertTrue(request.headers().names().contains(\"Content-Type\"));\n    }\n\n    @Test\n    public void testBuildPublicRequestDelete() {\n        Request request = RequestBuilder.buildPublicRequest(VALID_URL, HttpMethod.DELETE);\n        assertEquals(HttpMethod.DELETE.name(), request.method());\n        assertEquals(VALID_URL, request.url().toString());\n        assertTrue(request.headers().names().contains(\"User-Agent\"));\n        assertTrue(request.headers().names().contains(\"Content-Type\"));\n    }\n\n    @Test\n    public void testBuildPublicRequestInvalidMethod() {\n        assertThrows(BinanceConnectorException.class, () -> {\n            RequestBuilder.buildPublicRequest(VALID_URL, null);\n        });\n    }\n\n    @Test\n    public void testBuildPublicRequestInvalidUrl() {\n        assertThrows(BinanceConnectorException.class, () -> {\n            RequestBuilder.buildPublicRequest(INVALID_URL, HttpMethod.GET);\n        });\n    }\n}\n"}]