[{"strategy": "generate", "code": "\npackage com.binance.connector.client.utils;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class UrlBuilder_joinQueryParametersTest {\n\n    @Test\n    public void testJoinQueryParametersWithNullParams() {\n        StringBuilder sb = new StringBuilder();\n        StringBuilder result = UrlBuilder.joinQueryParameters(sb, null);\n        assertEquals(sb.toString(), result.toString());\n    }\n\n    @Test\n    public void testJoinQueryParametersWithEmptyParams() {\n        StringBuilder sb = new StringBuilder();\n        Map<String, Object> params = new HashMap<>();\n        StringBuilder result = UrlBuilder.joinQueryParameters(sb, params);\n        assertEquals(sb.toString(), result.toString());\n    }\n\n    @Test\n    public void testJoinQueryParametersWithStringParams() {\n        StringBuilder sb = new StringBuilder();\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"key1\", \"value1\");\n        params.put(\"key2\", \"value2\");\n        StringBuilder result = UrlBuilder.joinQueryParameters(sb, params);\n        assertEquals(\"key1=value1&key2=value2\", result.toString());\n    }\n\n    @Test\n    public void testJoinQueryParametersWithDoubleParams() {\n        StringBuilder sb = new StringBuilder();\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"key1\", 123.456);\n        params.put(\"key2\", 789.012);\n        StringBuilder result = UrlBuilder.joinQueryParameters(sb, params);\n        assertEquals(\"key1=123.456&key2=789.012\", result.toString());\n    }\n\n    @Test\n    public void testJoinQueryParametersWithMixedParams() {\n        StringBuilder sb = new StringBuilder();\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"key1\", \"value1\");\n        params.put(\"key2\", 123.456);\n        StringBuilder result = UrlBuilder.joinQueryParameters(sb, params);\n        assertEquals(\"key1=value1&key2=123.456\", result.toString());\n    }\n}\n"}]