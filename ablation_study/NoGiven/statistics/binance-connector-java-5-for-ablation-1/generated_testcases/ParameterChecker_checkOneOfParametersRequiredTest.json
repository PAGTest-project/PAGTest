[{"strategy": "retry", "code": "\npackage com.binance.connector.client.utils;\n\nimport static org.junit.Assert.assertThrows;\nimport org.json.JSONObject;\nimport org.junit.Test;\nimport com.binance.connector.client.exceptions.BinanceConnectorException;\n\npublic class ParameterChecker_checkOneOfParametersRequiredTest {\n\n    @Test\n    public void testCheckOneOfParametersRequired_AllParametersMissing() {\n        JSONObject params = new JSONObject();\n        String[] parameters = {\"param1\", \"param2\", \"param3\"};\n        assertThrows(BinanceConnectorException.class, () -> ParameterChecker.checkOneOfParametersRequired(params, parameters));\n    }\n\n    @Test\n    public void testCheckOneOfParametersRequired_OneParameterPresent() {\n        JSONObject params = new JSONObject();\n        params.put(\"param2\", \"value\");\n        String[] parameters = {\"param1\", \"param2\", \"param3\"};\n        ParameterChecker.checkOneOfParametersRequired(params, parameters);\n    }\n\n    @Test\n    public void testCheckOneOfParametersRequired_NullParams() {\n        String[] parameters = {\"param1\", \"param2\", \"param3\"};\n        assertThrows(BinanceConnectorException.class, () -> ParameterChecker.checkOneOfParametersRequired(null, parameters));\n    }\n\n    @Test\n    public void testCheckOneOfParametersRequired_EmptyParametersArray() {\n        JSONObject params = new JSONObject();\n        String[] parameters = {};\n        // No exception should be thrown if the parameters array is empty\n        ParameterChecker.checkOneOfParametersRequired(params, parameters);\n    }\n}\n"}]