[{"strategy": "generate", "code": "\npackage org.ice4j;\n\nimport org.ice4j.message.Message;\nimport org.ice4j.stack.StunStack;\nimport org.ice4j.stack.TransactionID;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\npublic class BaseStunMessageEvent_getTransactionIDTest {\n\n    private BaseStunMessageEvent event;\n    private StunStack mockStunStack;\n    private Message mockMessage;\n    private TransactionID mockTransactionID;\n\n    @BeforeEach\n    public void setUp() {\n        mockStunStack = mock(StunStack.class);\n        mockMessage = mock(Message.class);\n        mockTransactionID = mock(TransactionID.class);\n        event = new BaseStunMessageEvent(mockStunStack, null, mockMessage);\n    }\n\n    @Test\n    public void testGetTransactionID_InitialNull() {\n        // Given\n        when(mockMessage.getTransactionID()).thenReturn(mockTransactionID);\n        when(TransactionID.createTransactionID(mockStunStack, mockTransactionID)).thenReturn(mockTransactionID);\n\n        // When\n        TransactionID result = event.getTransactionID();\n\n        // Then\n        assertNotNull(result);\n        assertEquals(mockTransactionID, result);\n    }\n\n    @Test\n    public void testGetTransactionID_AlreadySet() {\n        // Given\n        event.setTransactionID(mockTransactionID);\n\n        // When\n        TransactionID result = event.getTransactionID();\n\n        // Then\n        assertNotNull(result);\n        assertEquals(mockTransactionID, result);\n    }\n}\n"}]