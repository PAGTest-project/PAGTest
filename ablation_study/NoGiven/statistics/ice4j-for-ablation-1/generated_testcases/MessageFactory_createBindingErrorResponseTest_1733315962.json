[{"strategy": "generate", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.attribute.*;\nimport org.junit.jupiter.api.*;\n\npublic class MessageFactory_createBindingErrorResponseTest {\n\n    @Test\n    public void testCreateBindingErrorResponseWithErrorCodeAndReasonPhrase() {\n        char errorCode = 400;\n        String reasonPhrase = \"Bad Request\";\n\n        Response expectedReturn = new Response();\n        expectedReturn.setMessageType(Message.BINDING_ERROR_RESPONSE);\n\n        Attribute errorCodeAtt = AttributeFactory.createErrorCodeAttribute(errorCode, reasonPhrase);\n        expectedReturn.putAttribute(errorCodeAtt);\n\n        Response actualReturn = MessageFactory.createBindingErrorResponse(errorCode, reasonPhrase);\n        assertEquals(expectedReturn, actualReturn);\n    }\n\n    @Test\n    public void testCreateBindingErrorResponseWithErrorCodeOnly() {\n        char errorCode = 404;\n        String reasonPhrase = null;\n\n        Response expectedReturn = new Response();\n        expectedReturn.setMessageType(Message.BINDING_ERROR_RESPONSE);\n\n        Attribute errorCodeAtt = AttributeFactory.createErrorCodeAttribute(errorCode, \"\");\n        expectedReturn.putAttribute(errorCodeAtt);\n\n        Response actualReturn = MessageFactory.createBindingErrorResponse(errorCode, reasonPhrase);\n        assertEquals(expectedReturn, actualReturn);\n    }\n\n    @Test\n    public void testCreateBindingErrorResponseWithReasonPhraseOnly() {\n        char errorCode = 0;\n        String reasonPhrase = \"Not Found\";\n\n        Response expectedReturn = new Response();\n        expectedReturn.setMessageType(Message.BINDING_ERROR_RESPONSE);\n\n        Attribute errorCodeAtt = AttributeFactory.createErrorCodeAttribute(errorCode, reasonPhrase);\n        expectedReturn.putAttribute(errorCodeAtt);\n\n        Response actualReturn = MessageFactory.createBindingErrorResponse(errorCode, reasonPhrase);\n        assertEquals(expectedReturn, actualReturn);\n    }\n\n    @Test\n    public void testCreateBindingErrorResponseWithNoErrorCodeAndNoReasonPhrase() {\n        char errorCode = 0;\n        String reasonPhrase = null;\n\n        Response expectedReturn = new Response();\n        expectedReturn.setMessageType(Message.BINDING_ERROR_RESPONSE);\n\n        Attribute errorCodeAtt = AttributeFactory.createErrorCodeAttribute(errorCode, \"\");\n        expectedReturn.putAttribute(errorCodeAtt);\n\n        Response actualReturn = MessageFactory.createBindingErrorResponse(errorCode, reasonPhrase);\n        assertEquals(expectedReturn, actualReturn);\n    }\n}\n"}]