[{"strategy": "retry", "code": "\npackage org.ice4j.message;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.junit.jupiter.api.Test;\n\nclass Response_setMessageTypeTest {\n\n    @Test\n    void testSetMessageType_ValidResponseType() {\n        Response response = new Response();\n        char validResponseType = 0x0101; // Assuming 0x0101 is a valid response type\n\n        response.setMessageType(validResponseType);\n\n        assertTrue(response.isSuccessResponse());\n    }\n\n    @Test\n    void testSetMessageType_InvalidResponseType() {\n        Response response = new Response();\n        char invalidResponseType = 'Z'; // Assuming 'Z' is an invalid response type\n\n        Exception exception = assertThrows(IllegalArgumentException.class, () -> {\n            response.setMessageType(invalidResponseType);\n        });\n\n        String expectedMessage = Integer.toString(invalidResponseType) + \" is not a valid response type.\";\n        String actualMessage = exception.getMessage();\n\n        assertTrue(actualMessage.contains(expectedMessage));\n    }\n}\n"}]