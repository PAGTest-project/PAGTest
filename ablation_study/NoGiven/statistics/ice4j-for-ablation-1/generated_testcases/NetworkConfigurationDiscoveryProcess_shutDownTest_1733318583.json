[{"strategy": "generate", "code": "\npackage org.ice4j.stunclient;\n\nimport static org.junit.jupiter.api.Assertions.*;\nimport org.ice4j.*;\nimport org.ice4j.message.*;\nimport org.ice4j.stack.*;\nimport org.junit.jupiter.api.*;\n\npublic class NetworkConfigurationDiscoveryProcess_shutDownTest {\n    private NetworkConfigurationDiscoveryProcess stunAddressDiscoverer;\n    private ResponseSequenceServer responseServer;\n    private TransportAddress discovererAddress;\n    private TransportAddress responseServerAddress;\n\n    @BeforeEach\n    public void setUp() throws Exception {\n        StunStack stunStack = new StunStack();\n        discovererAddress = new TransportAddress(\"127.0.0.1\", 5678, Transport.UDP);\n        responseServerAddress = new TransportAddress(\"127.0.0.1\", 3479, Transport.UDP);\n\n        responseServer = new ResponseSequenceServer(stunStack, responseServerAddress);\n        stunAddressDiscoverer = new NetworkConfigurationDiscoveryProcess(stunStack, discovererAddress, responseServerAddress);\n\n        stunAddressDiscoverer.start();\n        responseServer.start();\n\n        System.setProperty(StackProperties.MAX_CTRAN_RETRANS_TIMER, \"100\");\n        System.setProperty(StackProperties.MAX_CTRAN_RETRANSMISSIONS, \"2\");\n    }\n\n    @Test\n    public void testShutDown() throws Exception {\n        // Ensure the discoverer is started before shutting down\n        assertTrue(stunAddressDiscoverer.started);\n\n        // Call the shutDown method\n        stunAddressDiscoverer.shutDown();\n\n        // Assert that the resources have been cleaned up\n        assertNull(stunAddressDiscoverer.localAddress);\n        assertNull(stunAddressDiscoverer.requestSender);\n        assertNull(stunAddressDiscoverer.sock);\n        assertFalse(stunAddressDiscoverer.started);\n    }\n}\n"}]