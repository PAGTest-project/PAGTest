{"file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "dependencies": ["package net.datafaker.idnumbers;", "import net.datafaker.Faker;", "import net.datafaker.idnumbers.PolishIdNumber.Gender;", "import net.datafaker.providers.base.BaseFaker;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.EnumSource;", "import org.junit.jupiter.params.provider.ValueSource;", "import java.time.LocalDate;", "import java.util.Locale;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.assertj.core.api.Assertions.assertThatThrownBy;", "import static org.assertj.core.api.Assertions.fail;"], "name": "PolishIdNumberTest", "description": "Test suite for validating the generation and properties of Polish ID numbers (PESEL).", "class_members": {"variables": [{"name": "PESEL_EXPECTED_LENGTH", "type": "static final int"}, {"name": "faker", "type": "static final Faker"}, {"name": "peselNumber", "type": "static final PolishIdNumber"}], "methods": [{"name": "assertBasics", "signature": "void assertBasics(String gotPesel)"}, {"name": "assertBirthDate", "signature": "void assertBirthDate(LocalDate givenBirthDate, String gotPesel)"}, {"name": "assertGender", "signature": "void assertGender(Gender givenGender, String gotPesel)"}, {"name": "assertControlDigit", "signature": "void assertControlDigit(String gotPesel)"}, {"name": "toNumber", "signature": "int toNumber(char digit2, char digit1)"}]}, "test_cases": [{"name": "testGenderedPesel", "primary_tested": ["PolishIdNumber.get(Faker,LocalDate,Gender)"], "associated_methods": ["PolishIdNumberTest.assertBasics(String)", "PolishIdNumberTest.assertBirthDate(LocalDate,String)", "PolishIdNumberTest.assertGender(Gender,String)", "PolishIdNumberTest.assertControlDigit(String)"], "external_dependencies": {"modules": ["Faker", "PolishIdNumber", "Gender", "LocalDate", "BaseFaker"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "peselNumber", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of PESEL numbers with specific genders."}, {"name": "testCenturiesPesel", "primary_tested": ["PolishIdNumber.get(Faker,LocalDate,Gender)"], "associated_methods": ["PolishIdNumberTest.assertBasics(String)", "PolishIdNumberTest.assertBirthDate(LocalDate,String)", "PolishIdNumberTest.assertControlDigit(String)"], "external_dependencies": {"modules": ["Faker", "PolishIdNumber", "Gender", "LocalDate"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "peselNumber", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of PESEL numbers across different centuries."}, {"name": "testInvalidCenturiesPesel", "primary_tested": ["PolishIdNumber.get(Faker,LocalDate,Gender)"], "external_dependencies": {"modules": ["Faker", "PolishIdNumber", "Gender", "LocalDate"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "peselNumber", "type": "variable"}]}, "category": "unit", "description": "Tests the handling of invalid birth years for PESEL generation."}, {"name": "testNullGender", "primary_tested": ["PolishIdNumber.get(Faker,LocalDate,Gender)"], "associated_methods": ["PolishIdNumberTest.assertBasics(String)", "PolishIdNumberTest.assertBirthDate(LocalDate,String)", "PolishIdNumberTest.assertControlDigit(String)"], "external_dependencies": {"modules": ["Faker", "PolishIdNumber", "Gender", "LocalDate"], "class_members": [{"name": "faker", "type": "variable"}, {"name": "peselNumber", "type": "variable"}]}, "category": "unit", "description": "Tests the generation of PESEL numbers with a null gender."}]}