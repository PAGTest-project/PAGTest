{"file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "dependencies": ["package net.datafaker.formats;", "import net.datafaker.providers.base.BaseFaker;", "import net.datafaker.providers.base.Name;", "import net.datafaker.sequence.FakeStream;", "import net.datafaker.transformations.Field;", "import net.datafaker.transformations.Schema;", "import net.datafaker.transformations.SimpleField;", "import net.datafaker.transformations.XmlTransformer;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.Arguments;", "import org.junit.jupiter.params.provider.MethodSource;", "import java.util.Collections;", "import java.util.List;", "import java.util.stream.Collectors;", "import java.util.stream.Stream;", "import static net.datafaker.transformations.Field.compositeField;", "import static net.datafaker.transformations.Field.field;", "import static org.assertj.core.api.Assertions.assertThat;", "import static org.junit.jupiter.params.provider.Arguments.of;"], "name": "XmlTest", "description": "Test suite for the XmlTransformer class, focusing on generating XML from various schemas and fake data sequences.", "class_members": {"variables": [], "methods": [{"name": "getNumberOfLines", "signature": "private static int getNumberOfLines(String xml)"}], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "xmlSchemaTest", "primary_tested": ["XmlTransformer.generate(Schema<String, String>,int)"], "associated_methods": [], "external_dependencies": {"modules": ["XmlTransformer", "Schema", "Field"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of XML from various schemas."}, {"name": "xmlPrettySchemaTest", "primary_tested": ["XmlTransformer.generate(Schema<String, String>,int)"], "associated_methods": [], "external_dependencies": {"modules": ["XmlTransformer", "Schema", "Field"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of pretty XML from various schemas."}, {"name": "generateFromFakeSequence", "primary_tested": ["XmlTransformer.generate(Iterable<Name>,Schema<Name, List<SimpleField<Name, String>>>,int)"], "associated_methods": [], "external_dependencies": {"modules": ["BaseFaker", "Name", "Schema", "SimpleField", "XmlTransformer"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of XML from a fake sequence of names."}, {"name": "generateXMLWithThreeNestedLevels", "primary_tested": ["XmlTransformer.generate(Schema<Object, ?>,int)"], "associated_methods": [], "external_dependencies": {"modules": ["BaseFaker", "FakeStream", "Schema", "SimpleField", "XmlTransformer"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of XML with three nested levels of fake data."}, {"name": "generateXMLWithThreeNestedLevelsAndAttributes", "primary_tested": ["XmlTransformer.generate(Schema<Object, ?>,int)"], "associated_methods": [], "external_dependencies": {"modules": ["BaseFaker", "FakeStream", "Schema", "SimpleField", "XmlTransformer"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the generation of XML with three nested levels of fake data and attributes."}]}