{"fakeSomeData(Faker)": [{"class_name": "Issue759Test", "file_path": "src/test/java/net/datafaker/Issue759Test.java", "testclass_name": "Issue759Test", "testcase_name": "issue759Test"}], "compile(String)": [{"class_name": "Pattern", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "testPassword1000"}, {"class_name": "Pattern", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordSpecial"}, {"class_name": "Pattern", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordMix"}, {"class_name": "Pattern", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}], "find()": [{"class_name": "Matcher", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "testPassword1000"}, {"class_name": "Matcher", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordSpecial"}, {"class_name": "Matcher", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordMix"}], "valid()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testFakerSsn"}], "valid(boolean)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "invalid()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testFakerSsn"}], "invalid(boolean)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "formattedCPF"}, {"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "get()": [{"class_name": "TestSpec", "file_path": "src/test/java/net/datafaker/providers/base/BaseFakerTest.java", "testclass_name": "BaseFakerTest", "testcase_name": "testProviderList"}], "fakeValuesService()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithIllegalArgumentExceptionThrown"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithInvocationTargetExceptionThrown"}], "parse(String,String)": [{"class_name": "PhoneNumberValidityFinderTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllPhoneNumbers"}], "setSeed(long)": [{"class_name": "Random", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNumerifyRandomnessCanBeControlled"}, {"class_name": "Random", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testLetterifyRandomnessCanBeControlled"}, {"class_name": "Random", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNameRandomnessCanBeControlled"}, {"class_name": "Random", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testEmailRandomnessCanBeControlled"}], "findAllSupportedLocales(File)": [{"class_name": "LocalityTest", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "allSupportedLocales"}], "valid(boolean,boolean)": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "isCNPJValid(String)": [{"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}, {"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "invalid(boolean,boolean)": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "replace(String,String)": [{"class_name": "String", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}], "toLowerCase(Locale)": [{"class_name": "String", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}], "getBaseList(String)": [{"class_name": "Disease", "file_path": "src/test/java/net/datafaker/providers/healthcare/DiseaseTest.java", "testclass_name": "DiseaseTest", "testcase_name": "testAnyDisease"}], "buildReport(Faker)": [{"class_name": "FakerRepeatabilityIntegrationTest", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateRepeatableValues"}, {"class_name": "FakerRepeatabilityIntegrationTest", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateUniqueValues"}], "split(String)": [{"class_name": "String", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testNameWithMiddleDoesNotHaveRepeatedName"}], "nextInt(int,int)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldReturnValuesInRandomOrderUsingRandomService"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithRandomLengthUppercase"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithRandomLengthLowercase"}], "collection()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequence"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequenceWithCollection"}], "getFile()": [{"class_name": "File", "file_path": "src/test/java/net/datafaker/service/files/EnFileTest.java", "testclass_name": "EnFileTest", "testcase_name": "fileNameConvention"}], "getClass()": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}, {"class_name": "AbstractProvider", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}], "getFaker()": [{"class_name": "AbstractProvider", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}], "isBarcodeValid(long)": [{"class_name": "BarcodeTest", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin12CheckSum"}, {"class_name": "BarcodeTest", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin14CheckSum"}, {"class_name": "BarcodeTest", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan8CheckSum"}], "assertCardLuhnDigit(String)": [{"class_name": "FinanceTest", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCard"}, {"class_name": "FinanceTest", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCardWithType"}], "nextInsectName()": [{"class_name": "Insect", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTest"}, {"class_name": "Insect", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestExpression"}, {"class_name": "Insect", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestWithoutExtraFaker"}, {"class_name": "Insect", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "testMultipleFakerContextsPerOneClassName"}], "ant()": [{"class_name": "InsectFromFile", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectAntTestExpressionFromFile"}], "bee()": [{"class_name": "InsectFromFile", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFile"}, {"class_name": "InsectFromFile", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFileWithoutExtraFaker"}], "idNumber()": [{"class_name": "PersonIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "valid"}], "birthDate()": [{"class_name": "PersonIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "valid"}], "get(String)": [{"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesOneFakeValue"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesMultipleFakeValues"}, {"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putTest.java", "testclass_name": "CopyOnWriteMap_putTest", "testcase_name": "testPut"}], "add(FakeValues)": [{"class_name": "FakeValuesGrouping", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesMultipleFakeValues"}], "getYear() / 100": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_20th_century"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_21th_century"}], "getInstance(boolean)": [{"class_name": "ISBNValidator", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn10DefaultIsNoSeparator"}, {"class_name": "ISBNValidator", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn13DefaultIsNoSeparator"}, {"class_name": "ISBNValidator", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn10"}, {"class_name": "ISBNValidator", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn13"}], "assertIsValidISBN10(String, ISBNValidator)": [{"class_name": "CodeTest", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn10DefaultIsNoSeparator"}, {"class_name": "CodeTest", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn10"}], "assertIsValidISBN13(String, ISBNValidator)": [{"class_name": "CodeTest", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn13DefaultIsNoSeparator"}, {"class_name": "CodeTest", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn13"}], "isValid(String)": [{"class_name": "LuhnCheckDigit", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "imei"}, {"class_name": "EAN13CheckDigit", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "ean13"}, {"class_name": "EAN13CheckDigit", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "gtin13"}], "assertBasics(String)": [{"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}], "assertBirthDate(LocalDate,String)": [{"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}], "assertGender(Gender,String)": [{"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}], "assertControlDigit(String)": [{"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"class_name": "PolishIdNumberTest", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}], "suppliers(Supplier)": [{"class_name": "FakeCollection", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}], "len(int)": [{"class_name": "FakeCollection", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}], "generate()": [{"class_name": "FakeCollection", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}], "getBirthDate()": [{"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}], "getLastName()": [{"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}], "getFirstName()": [{"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}], "getRegistrationDate()": [{"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"class_name": "Person", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}], "firstName()": [{"class_name": "Client", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithInfiniteSequence"}], "lastName()": [{"class_name": "Client", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}], "phoneNumber()": [{"class_name": "Client", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}], "registrationDate()": [{"class_name": "Client", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}], "equals(Object)": [{"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "checkEquals"}], "canadianLocales()": [{"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_CA"}], "locales()": [{"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberNational"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberInternational"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobile"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobileInternational"}], "noSpaces(String)": [{"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_estonia"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberNational_estonia"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_estonia"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_moldova"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumber_moldova"}, {"class_name": "PhoneNumberTest", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_moldova"}], "streetAddress()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}], "expression(String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestWithQuotesNew"}], "randomDigit()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunction"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunctionStream"}], "bool()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}], "password(int,int)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunction"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunctionStream"}], "digits(int)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithInfiniteSequence"}], "name()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsv"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsvNew"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollection"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollectionNew"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsv"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsvWithLimit"}], "nextInt(int)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getPrivateIpV4AddressTest.java", "testclass_name": "Internet_getPrivateIpV4AddressTest", "testcase_name": "testGetPrivateIpV4Address"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinLessThanMax"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinGreaterThanMax"}], "getAddress()": [{"class_name": "InetAddress", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getPrivateIpV4AddressTest.java", "testclass_name": "Internet_getPrivateIpV4AddressTest", "testcase_name": "testGetPrivateIpV4Address"}], "hex(int,boolean)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getIpV6AddressTest.java", "testclass_name": "Internet_getIpV6AddressTest", "testcase_name": "testGetIpV6Address"}], "getHostAddress()": [{"class_name": "InetAddress", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getIpV6AddressTest.java", "testclass_name": "Internet_getIpV6AddressTest", "testcase_name": "testGetIpV6Address"}], "toMillis(int)": [{"class_name": "TimeUnit", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_pastTest.java", "testclass_name": "DateAndTime_pastTest", "testcase_name": "testPast"}], "generateValid(Faker)": [{"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumber_generateInvalidTest.java", "testclass_name": "AlbanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}], "get(int)": [{"class_name": "List", "file_path": "src/test/java/net/datafaker/providers/base/Vehicle_standardSpecsTest.java", "testclass_name": "Vehicle_standardSpecsTest", "testcase_name": "testStandardSpecsMinMax"}], "checksum(String)": [{"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumber_generateInvalidTest.java", "testclass_name": "RomanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}], "hex(int)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithHashSign"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithoutHashSign"}], "getSingletonLocale()": [{"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_hashCodeTest.java", "testclass_name": "FakerContext_hashCodeTest", "testcase_name": "testHashCodeWithNonNulls"}, {"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_hashCodeTest.java", "testclass_name": "FakerContext_hashCodeTest", "testcase_name": "testHashCodeWithNulls"}], "hashCode()": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/FakerContext_hashCodeTest.java", "testclass_name": "FakerContext_hashCodeTest", "testcase_name": "testHashCodeWithNonNulls"}], "hasSize(int)": [{"class_name": "List", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_paragraphsTest.java", "testclass_name": "Lorem_paragraphsTest", "testcase_name": "testParagraphs"}], "isNotBlank()": [{"class_name": "String", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_paragraphsTest.java", "testclass_name": "Lorem_paragraphsTest", "testcase_name": "testParagraphs"}], "contains(String)": [{"class_name": "String", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_paragraphsTest.java", "testclass_name": "Lorem_paragraphsTest", "testcase_name": "testParagraphs"}], "isEmpty()": [{"class_name": "List", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_paragraphsTest.java", "testclass_name": "Lorem_paragraphsTest", "testcase_name": "testParagraphsEmpty"}], "getLocale()": [{"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_setCurrentLocaleTest.java", "testclass_name": "FakerContext_setCurrentLocaleTest", "testcase_name": "testSetCurrentLocale_NewLocale"}, {"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_setCurrentLocaleTest.java", "testclass_name": "FakerContext_setCurrentLocaleTest", "testcase_name": "testSetCurrentLocale_ExistingLocale"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_doWithTest.java", "testclass_name": "BaseFaker_doWithTest", "testcase_name": "testDoWithLocaleChange"}], "getLocaleChain()": [{"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_setCurrentLocaleTest.java", "testclass_name": "FakerContext_setCurrentLocaleTest", "testcase_name": "testSetCurrentLocale_NewLocale"}, {"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_setCurrentLocaleTest.java", "testclass_name": "FakerContext_setCurrentLocaleTest", "testcase_name": "testSetCurrentLocale_ExistingLocale"}], "allSupportedLocales()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_localeStringWithRandomTest.java", "testclass_name": "Locality_localeStringWithRandomTest", "testcase_name": "localeStringWithRandom"}], "put(String,String)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_removeTest.java", "testclass_name": "CopyOnWriteMap_removeTest", "testcase_name": "testRemove"}], "containsKey(String)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_removeTest.java", "testclass_name": "CopyOnWriteMap_removeTest", "testcase_name": "testRemove"}, {"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putAllTest.java", "testclass_name": "CopyOnWriteMap_putAllTest", "testcase_name": "testPutAll"}], "size()": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_removeTest.java", "testclass_name": "CopyOnWriteMap_removeTest", "testcase_name": "testRemove"}, {"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putTest.java", "testclass_name": "CopyOnWriteMap_putTest", "testcase_name": "testPut"}, {"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putAllTest.java", "testclass_name": "CopyOnWriteMap_putAllTest", "testcase_name": "testPutAll"}], "getName()": [{"class_name": "Field", "file_path": "src/test/java/net/datafaker/transformations/YamlTransformer_applyTest.java", "testclass_name": "YamlTransformer_applyTest", "testcase_name": "testApplyWithNonEmptyFields"}], "transform(Object)": [{"class_name": "Field", "file_path": "src/test/java/net/datafaker/transformations/YamlTransformer_applyTest.java", "testclass_name": "YamlTransformer_applyTest", "testcase_name": "testApplyWithNonEmptyFields"}], "localeString()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_displayNameTest.java", "testclass_name": "Locality_displayNameTest", "testcase_name": "testDisplayNameWithLocaleString"}], "localeStringWithoutReplacement()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_displayNameTest.java", "testclass_name": "Locality_displayNameTest", "testcase_name": "testDisplayNameWithLocaleStringWithoutReplacement"}], "putAll(Map)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putTest.java", "testclass_name": "CopyOnWriteMap_putTest", "testcase_name": "testPut"}], "max(int,int)": [{"class_name": "Math", "file_path": "src/test/java/net/datafaker/providers/base/Number_digitsTest.java", "testclass_name": "Number_digitsTest", "testcase_name": "testDigitsWithNegativeCount"}], "airport()": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateContextualDependency"}], "flight()": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateFunctionalSimilarity"}], "airline()": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateContextualSimilarity"}], "birthday(int,int)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenWithBirthdayDates"}], "future(int,TimeUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenWithFutureDates"}], "past(int,TimeUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenWithPastDates"}]}