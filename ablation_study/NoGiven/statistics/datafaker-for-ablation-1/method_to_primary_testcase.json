{"talent()": [{"class_name": "Hololive", "file_path": "src/test/java/net/datafaker/providers/base/HololiveTest.java", "testclass_name": "HololiveTest", "testcase_name": "talent_jaLocale"}], "lastWords()": [{"class_name": "FamousLastWords", "file_path": "src/test/java/net/datafaker/providers/base/FamousLastWordsTest.java", "testclass_name": "FamousLastWordsTest", "testcase_name": "testLastWords"}], "bool()": [{"class_name": "Bool", "file_path": "src/test/java/net/datafaker/providers/base/BoolTest.java", "testclass_name": "BoolTest", "testcase_name": "testBool"}], "nextLong()": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/FakerConcurrencyModificationExceptionTest.java", "testclass_name": "FakerConcurrencyModificationExceptionTest", "testcase_name": "test1"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/FakerConcurrencyModificationExceptionTest.java", "testclass_name": "FakerConcurrencyModificationExceptionTest", "testcase_name": "test2"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}], "run()": [{"class_name": "WorkerThread", "file_path": "src/test/java/net/datafaker/Issue759Test.java", "testclass_name": "Issue759Test", "testcase_name": "issue759Test"}], "name()": [{"class_name": "Superhero", "file_path": "src/test/java/net/datafaker/providers/base/SuperheroTest.java", "testclass_name": "SuperheroTest", "testcase_name": "testName"}, {"class_name": "GreekPhilosopher", "file_path": "src/test/java/net/datafaker/providers/base/GreekPhilosopherTest.java", "testclass_name": "GreekPhilosopherTest", "testcase_name": "testName"}, {"class_name": "Restaurant", "file_path": "src/test/java/net/datafaker/providers/base/RestaurantTest.java", "testclass_name": "RestaurantTest", "testcase_name": "name"}, {"class_name": "Team", "file_path": "src/test/java/net/datafaker/providers/base/TeamTest.java", "testclass_name": "TeamTest", "testcase_name": "testName"}, {"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testName"}, {"class_name": "Mbti", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "name"}, {"class_name": "University", "file_path": "src/test/java/net/datafaker/providers/base/UniversityTest.java", "testclass_name": "UniversityTest", "testcase_name": "testName"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNameRandomnessCanBeControlled"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testName"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "test"}], "quote()": [{"class_name": "GreekPhilosopher", "file_path": "src/test/java/net/datafaker/providers/base/GreekPhilosopherTest.java", "testclass_name": "GreekPhilosopherTest", "testcase_name": "testQuote"}, {"class_name": "OscarMovie", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "quote"}], "iso639()": [{"class_name": "LanguageCode", "file_path": "src/test/java/net/datafaker/providers/base/LanguageCodeTest.java", "testclass_name": "LanguageCodeTest", "testcase_name": "languageCodeISO639ShouldBe2LettersInLength"}], "operatingSystem()": [{"class_name": "Computer", "file_path": "src/test/java/net/datafaker/providers/base/ComputerTest.java", "testclass_name": "ComputerTest", "testcase_name": "testOperatingSystem"}], "code(boolean)": [{"class_name": "Tire", "file_path": "src/test/java/net/datafaker/providers/base/TireTest.java", "testclass_name": "TireTest", "testcase_name": "testDefaultPrefixedCode"}], "code(String)": [{"class_name": "Tire", "file_path": "src/test/java/net/datafaker/providers/base/TireTest.java", "testclass_name": "TireTest", "testcase_name": "testMiscPrefixedCode"}], "key()": [{"class_name": "Music", "file_path": "src/test/java/net/datafaker/providers/base/MusicTest.java", "testclass_name": "MusicTest", "testcase_name": "key"}], "chord()": [{"class_name": "Music", "file_path": "src/test/java/net/datafaker/providers/base/MusicTest.java", "testclass_name": "MusicTest", "testcase_name": "chord"}], "genre()": [{"class_name": "Music", "file_path": "src/test/java/net/datafaker/providers/base/MusicTest.java", "testclass_name": "MusicTest", "testcase_name": "genre"}], "hex()": [{"class_name": "Color", "file_path": "src/test/java/net/datafaker/providers/base/ColorTest.java", "testclass_name": "ColorTest", "testcase_name": "testHex"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testDefaultHex"}], "hex(boolean)": [{"class_name": "Color", "file_path": "src/test/java/net/datafaker/providers/base/ColorTest.java", "testclass_name": "ColorTest", "testcase_name": "testHexNoHashSign"}, {"class_name": "Color", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithHashSign"}, {"class_name": "Color", "file_path": "src/test/java/net/datafaker/providers/base/Color_hexTest.java", "testclass_name": "Color_hexTest", "testcase_name": "testHexWithoutHashSign"}], "Category)": [{"class_name": "FinancialTerms", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "category"}, {"class_name": "FinancialTerms", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "category"}, {"class_name": "FinancialTerms", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "category"}], "noun()": [{"class_name": "FinancialTerms", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "defaults"}], "verb()": [{"class_name": "FinancialTerms", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "defaults"}], "adjective()": [{"class_name": "FinancialTerms", "file_path": "src/test/java/net/datafaker/providers/base/FinancialTermsTest.java", "testclass_name": "FinancialTermsTest", "testcase_name": "defaults"}], "creditCardNumber()": [{"class_name": "Business", "file_path": "src/test/java/net/datafaker/providers/base/BusinessTest.java", "testclass_name": "BusinessTest", "testcase_name": "creditCardNumber"}], "creditCardExpiry()": [{"class_name": "Business", "file_path": "src/test/java/net/datafaker/providers/base/BusinessTest.java", "testclass_name": "BusinessTest", "testcase_name": "creditCardExpiry"}], "securityCode()": [{"class_name": "Business", "file_path": "src/test/java/net/datafaker/providers/base/BusinessTest.java", "testclass_name": "BusinessTest", "testcase_name": "securityCode"}], "scientificName()": [{"class_name": "Animal", "file_path": "src/test/java/net/datafaker/providers/base/AnimalTest.java", "testclass_name": "AnimalTest", "testcase_name": "scientificName"}], "genus()": [{"class_name": "Animal", "file_path": "src/test/java/net/datafaker/providers/base/AnimalTest.java", "testclass_name": "AnimalTest", "testcase_name": "genus"}], "species()": [{"class_name": "Animal", "file_path": "src/test/java/net/datafaker/providers/base/AnimalTest.java", "testclass_name": "AnimalTest", "testcase_name": "species"}], "getMethodByName(Object,String)": [{"class_name": "ObjectMethods", "file_path": "src/test/java/net/datafaker/providers/base/ObjectMethodsTest.java", "testclass_name": "ObjectMethodsTest", "testcase_name": "methodByName"}], "executeMethodByReturnType(Object,String)": [{"class_name": "ObjectMethods", "file_path": "src/test/java/net/datafaker/providers/base/ObjectMethodsTest.java", "testclass_name": "ObjectMethodsTest", "testcase_name": "methodByReturnType"}], "flag()": [{"class_name": "Country", "file_path": "src/test/java/net/datafaker/providers/base/CountryTest.java", "testclass_name": "CountryTest", "testcase_name": "testFlag"}, {"class_name": "Nation", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "flag"}], "currency()": [{"class_name": "Country", "file_path": "src/test/java/net/datafaker/providers/base/CountryTest.java", "testclass_name": "CountryTest", "testcase_name": "testCurrency"}, {"class_name": "Money", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testCurrency"}], "currencyCode()": [{"class_name": "Country", "file_path": "src/test/java/net/datafaker/providers/base/CountryTest.java", "testclass_name": "CountryTest", "testcase_name": "testCurrencyCode"}, {"class_name": "Money", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testCurrencyCode"}], "password(int,int,boolean,boolean,boolean)": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "testPassword1000"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordSpecial"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/InternetPasswordTest.java", "testclass_name": "InternetPasswordTest", "testcase_name": "passwordMix"}], "currencyNumericCode()": [{"class_name": "Money", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testNumericCode"}], "currencySymbol()": [{"class_name": "Money", "file_path": "src/test/java/net/datafaker/providers/base/MoneyTest.java", "testclass_name": "MoneyTest", "testcase_name": "testCurrencySymbol"}], "university()": [{"class_name": "Educator", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testUniversity"}], "course()": [{"class_name": "Educator", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testCourse"}], "subjectWithNumber()": [{"class_name": "Educator", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testSubjectWithNumber"}], "secondarySchool()": [{"class_name": "Educator", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testSecondarySchool"}], "campus()": [{"class_name": "Educator", "file_path": "src/test/java/net/datafaker/providers/base/EducatorTest.java", "testclass_name": "EducatorTest", "testcase_name": "testCampus"}], "isCPFValid(String)": [{"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "isValidCPF"}, {"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CPFTest.java", "testclass_name": "CPFTest", "testcase_name": "isInvalidCPF"}], "expression(String)": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionEnglishFails"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionFails"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionUsFails"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionAUWorks"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWorks"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWithMiddleWorks"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWithCity"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/Issue1178Test.java", "testclass_name": "Issue1178Test", "testcase_name": "testExpressionNLWithFullAddress"}, {"class_name": "MyCustomFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestExpression"}], "base()": [{"class_name": "Verb", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testBase"}], "past()": [{"class_name": "Verb", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testPast"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDate"}], "pastParticiple()": [{"class_name": "Verb", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testPastParticiple"}], "simplePresent()": [{"class_name": "Verb", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testSimplePresent"}], "ingForm()": [{"class_name": "Verb", "file_path": "src/test/java/net/datafaker/providers/base/VerbTest.java", "testclass_name": "VerbTest", "testcase_name": "testIngForm"}], "fetchObject(String,Context)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFakerTest.java", "testclass_name": "BaseFakerTest", "testcase_name": "testProviderList"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFakerTest.java", "testclass_name": "BaseFakerTest", "testcase_name": "testNoDuplications"}], "any()": [{"class_name": "Relationship", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyTest"}], "resolve(String,Object,Object)": [{"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithIllegalArgumentExceptionThrown"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/providers/base/RelationshipTest.java", "testclass_name": "RelationshipTest", "testcase_name": "anyWithInvocationTargetExceptionThrown"}], "word()": [{"class_name": "Compass", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionWordWithCompassPoint"}, {"class_name": "Compass", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionWordWithoutCompassPoint"}], "abbreviation()": [{"class_name": "Compass", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionAbbreviationWithCompassPoint"}, {"class_name": "Compass", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassDirectionAbbreviationWithoutCompassPoint"}], "azimuth()": [{"class_name": "Compass", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassAzimuthWithCompassPoint"}, {"class_name": "Compass", "file_path": "src/test/java/net/datafaker/providers/base/CompassTest.java", "testclass_name": "CompassTest", "testcase_name": "compassAzimuthWithoutCompassPoint"}], "namePrefix()": [{"class_name": "Restaurant", "file_path": "src/test/java/net/datafaker/providers/base/RestaurantTest.java", "testclass_name": "RestaurantTest", "testcase_name": "namePrefix"}], "nationality()": [{"class_name": "Nation", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "nationality"}], "language()": [{"class_name": "Nation", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "language"}], "capitalCity()": [{"class_name": "Nation", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "capitalCity"}], "isoLanguage()": [{"class_name": "Nation", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "isoLanguage"}], "isoCountry()": [{"class_name": "Nation", "file_path": "src/test/java/net/datafaker/providers/base/NationTest.java", "testclass_name": "NationTest", "testcase_name": "isoCountry"}], "state()": [{"class_name": "Team", "file_path": "src/test/java/net/datafaker/providers/base/TeamTest.java", "testclass_name": "TeamTest", "testcase_name": "testState"}, {"class_name": "Team", "file_path": "src/test/java/net/datafaker/providers/base/TeamTest.java", "testclass_name": "TeamTest", "testcase_name": "testStateWithZaLocale"}], "author()": [{"class_name": "Book", "file_path": "src/test/java/net/datafaker/providers/base/BookTest.java", "testclass_name": "BookTest", "testcase_name": "testAuthor"}, {"class_name": "App", "file_path": "src/test/java/net/datafaker/providers/base/AppTest.java", "testclass_name": "AppTest", "testcase_name": "testAuthor"}], "drivingLicense(String)": [{"class_name": "DrivingLicense", "file_path": "src/test/java/net/datafaker/providers/base/DrivingLicenseTest.java", "testclass_name": "DrivingLicenseTest", "testcase_name": "drivingLicense"}], "element()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "element"}], "elementSymbol()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "elementSymbol"}], "scientist()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "scientist"}], "tool()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "tool"}], "quark()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "quark"}], "leptons()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "leptons"}], "bosons()": [{"class_name": "Science", "file_path": "src/test/java/net/datafaker/providers/base/ScienceTest.java", "testclass_name": "ScienceTest", "testcase_name": "bosons"}], "buzzword()": [{"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testBuzzword"}], "catchPhrase()": [{"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testCatchPhrase"}], "bs()": [{"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testBs"}], "logo()": [{"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testLogo"}], "url()": [{"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/CompanyTest.java", "testclass_name": "CompanyTest", "testcase_name": "testUrl"}, {"class_name": "Company", "file_path": "src/test/java/net/datafaker/providers/base/Company_urlTest.java", "testclass_name": "Company_urlTest", "testcase_name": "testUrl"}], "type()": [{"class_name": "Mbti", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "type"}, {"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "type"}], "characteristic()": [{"class_name": "Mbti", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "characteristic"}], "personage()": [{"class_name": "Mbti", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "personage"}], "merit()": [{"class_name": "Mbti", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "merit"}], "weakness()": [{"class_name": "Mbti", "file_path": "src/test/java/net/datafaker/providers/base/MbtiTest.java", "testclass_name": "MbtiTest", "testcase_name": "weakness"}], "distanceMeasurement()": [{"class_name": "Space", "file_path": "src/test/java/net/datafaker/providers/base/SpaceTest.java", "testclass_name": "SpaceTest", "testcase_name": "distanceMeasurement"}], "parse(String,String)": [{"class_name": "PhoneNumberUtil", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllCellPhoneForLocale"}, {"class_name": "PhoneNumberUtil", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testValidNumber"}, {"class_name": "PhoneNumberUtil", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllPhoneNumbers"}], "PhoneNumber)": [{"class_name": "PhoneNumberUtil", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllCellPhoneForLocale"}, {"class_name": "PhoneNumberUtil", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testValidNumber"}, {"class_name": "PhoneNumberUtil", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberValidityFinderTest.java", "testclass_name": "PhoneNumberValidityFinderTest", "testcase_name": "testAllPhoneNumbers"}], "department()": [{"class_name": "Commerce", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testDepartment"}], "productName()": [{"class_name": "Commerce", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testProductName"}], "price()": [{"class_name": "Commerce", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPrice"}], "price(int,int)": [{"class_name": "Commerce", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPriceMinMax"}], "promotionCode()": [{"class_name": "Commerce", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPromotionCode"}], "promotionCode(int)": [{"class_name": "Commerce", "file_path": "src/test/java/net/datafaker/providers/base/CommerceTest.java", "testclass_name": "CommerceTest", "testcase_name": "testPromotionCodeDigits"}], "atMostSeconds(long)": [{"class_name": "Duration", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationSeconds"}], "atMostMinutes(long)": [{"class_name": "Duration", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationMinutes"}], "atMostHours(long)": [{"class_name": "Duration", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationHours"}], "atMostDays(long)": [{"class_name": "Duration", "file_path": "src/test/java/net/datafaker/providers/base/DurationTest.java", "testclass_name": "DurationTest", "testcase_name": "testDurationDays"}], "numerify(String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testNumerifyRandomnessCanBeControlled"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "letterify(String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testLetterifyRandomnessCanBeControlled"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "emailAddress()": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/RandomFakerTest.java", "testclass_name": "RandomFakerTest", "testcase_name": "testEmailRandomnessCanBeControlled"}], "firstLevelDomain(String)": [{"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFirstLevelDomainNotNull"}, {"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFirstLevelDomain"}], "secondLevelDomain(String)": [{"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testSecondLevelDomainNotNull"}, {"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testSecondLevelDomain"}], "fullDomain(String)": [{"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFullDomainNotNull"}, {"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testFullDomain"}], "validDomain(String)": [{"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testValidDomainNotNull"}, {"class_name": "Domain", "file_path": "src/test/java/net/datafaker/providers/base/DomainTest.java", "testclass_name": "DomainTest", "testcase_name": "testValidDomain"}], "allSupportedLocales()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "allSupportedLocales"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_localeStringWithRandomTest.java", "testclass_name": "Locality_localeStringWithRandomTest", "testcase_name": "allSupportedLocales"}], "displayName()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "displayName"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_displayNameTest.java", "testclass_name": "Locality_displayNameTest", "testcase_name": "testDisplayNameWithLocaleString"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_displayNameTest.java", "testclass_name": "Locality_displayNameTest", "testcase_name": "testDisplayNameWithLocaleStringWithoutReplacement"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_displayNameTest.java", "testclass_name": "Locality_displayNameTest", "testcase_name": "testDisplayNameRandomness"}], "localeStringWithRandom(Random)": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeStringRandom"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeStringWithRandom"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_localeStringWithRandomTest.java", "testclass_name": "Locality_localeStringWithRandomTest", "testcase_name": "localeStringWithRandom"}], "localeStringWithoutReplacement(Random)": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeStringWithoutReplacement"}], "localeString()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeString"}], "localeStringWithoutReplacement()": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/LocalityTest.java", "testclass_name": "LocalityTest", "testcase_name": "localeWithoutReplacement"}], "variety()": [{"class_name": "Tea", "file_path": "src/test/java/net/datafaker/providers/foods/TeaTest.java", "testclass_name": "TeaTest", "testcase_name": "testVariety"}], "measurement()": [{"class_name": "Food", "file_path": "src/test/java/net/datafaker/providers/foods/FoodTest.java", "testclass_name": "FoodTest", "testcase_name": "measurement"}, {"class_name": "Food", "file_path": "src/test/java/net/datafaker/providers/foods/HebrewFoodTest.java", "testclass_name": "HebrewFoodTest", "testcase_name": "measurement"}], "temperatureCelsius()": [{"class_name": "Weather", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureCelsius"}], "temperatureFahrenheit()": [{"class_name": "Weather", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureFahrenheit"}], "temperatureCelsius(int,int)": [{"class_name": "Weather", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureCelsiusInRange"}], "temperatureFahrenheit(int,int)": [{"class_name": "Weather", "file_path": "src/test/java/net/datafaker/providers/base/WeatherTest.java", "testclass_name": "WeatherTest", "testcase_name": "temperatureFahrenheitInRange"}], "isCNPJValid(String)": [{"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "isValidCNPJ"}, {"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "isInvalidCNPJ"}, {"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "bug"}], "valid(boolean,boolean)": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "valid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "invalid(boolean,boolean)": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "invalid_multiBranchIsTrue_shouldGenerateCNPJWithBranchNumberGreaterThan0001"}], "valid()": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PortugueseIdNumberTest.java", "testclass_name": "PortugueseIdNumberTest", "testcase_name": "testValid"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testDefaultLocale"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidDutch"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidChinese"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidUnitedStates"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidAustralia"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidCanada"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidUnitedKingdom"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidJapan"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidSpain"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidBulgaria"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/PassportTest.java", "testclass_name": "PassportTest", "testcase_name": "testValidFinland"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/idnumbers/ChineseIdNumberTest.java", "testclass_name": "ChineseIdNumberTest", "testcase_name": "testValidChineseIdNumber"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testSsnFormat"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "valid"}], "valid(boolean)": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}], "invalid()": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PortugueseIdNumberTest.java", "testclass_name": "PortugueseIdNumberTest", "testcase_name": "testInvalid"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testSsnFormat"}, {"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "invalid"}], "invalid(boolean)": [{"class_name": "CNPJ", "file_path": "src/test/java/net/datafaker/providers/base/CNPJTest.java", "testclass_name": "CNPJTest", "testcase_name": "formattedCNPJ"}], "version()": [{"class_name": "App", "file_path": "src/test/java/net/datafaker/providers/base/AppTest.java", "testclass_name": "AppTest", "testcase_name": "testVersion"}], "tileItemName()": [{"class_name": "Minecraft", "file_path": "src/test/java/net/datafaker/providers/videogame/MinecraftTest.java", "testclass_name": "MinecraftTest", "testcase_name": "testTileItemName"}], "notes()": [{"class_name": "Coffee", "file_path": "src/test/java/net/datafaker/providers/foods/CoffeeTest.java", "testclass_name": "CoffeeTest", "testcase_name": "notes"}], "blendName()": [{"class_name": "Coffee", "file_path": "src/test/java/net/datafaker/providers/foods/CoffeeTest.java", "testclass_name": "CoffeeTest", "testcase_name": "blendName"}], "icd10()": [{"class_name": "MedicalProcedure", "file_path": "src/test/java/net/datafaker/providers/healthcare/MedicalProcedureTest.java", "testclass_name": "MedicalProcedureTest", "testcase_name": "testProcedureCodes"}, {"class_name": "Disease", "file_path": "src/test/java/net/datafaker/providers/healthcare/DiseaseTest.java", "testclass_name": "DiseaseTest", "testcase_name": "testDiseaseCodes"}], "accountId()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAccountId"}], "acmARN()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAcmARN"}], "albARN()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAlbARN"}], "albTargetGroupARN()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testAlbTargetGroupARN"}], "route53ZoneId()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testRoute53ZoneId"}], "securityGroupId()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testSecurityGroupId"}], "subnetId()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testSubnetId"}], "vpcId()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testVpcId"}], "region()": [{"class_name": "Aws", "file_path": "src/test/java/net/datafaker/providers/base/AwsTest.java", "testclass_name": "AwsTest", "testcase_name": "testRegion"}, {"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testRegion"}], "image()": [{"class_name": "Avatar", "file_path": "src/test/java/net/datafaker/providers/entertainment/AvatarTest.java", "testclass_name": "AvatarTest", "testcase_name": "testAvatar"}], "hero()": [{"class_name": "Dota2", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}], "heroQuote(String)": [{"class_name": "Dota2", "file_path": "src/test/java/net/datafaker/providers/videogame/Dota2Test.java", "testclass_name": "Dota2Test", "testcase_name": "dota2HeroQuote"}], "TextRuleConfig)": [{"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "textShouldContain3RULowerCaseAnd5CustomSpecialSymbols"}, {"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "exceptionIfLengthIsShorterThanNumberOfRequiredSymbols"}, {"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "everyTextShouldContainLowerCaseUpperCaseAndDigit"}], "character()": [{"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testCharacter"}, {"class_name": "OscarMovie", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "character"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharacter"}], "uppercaseCharacter()": [{"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testUppercaseCharacter"}], "lowercaseCharacter()": [{"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testLowercaseCharacter"}], "text(int)": [{"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testFixedLengthText"}], "text()": [{"class_name": "Text", "file_path": "src/test/java/net/datafaker/providers/base/TextTest.java", "testclass_name": "TextTest", "testcase_name": "testDefaultLengthText"}], "people()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "people"}], "nature()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "nature"}], "foodAndDrink()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "food_and_drink"}], "celebration()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "celebration"}], "activity()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "activity"}], "travelAndPlaces()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "travel_and_places"}], "objectsAndSymbols()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "objects_and_symbols"}], "custom()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "custom"}], "emoji()": [{"class_name": "SlackEmoji", "file_path": "src/test/java/net/datafaker/providers/base/SlackEmojiTest.java", "testclass_name": "SlackEmojiTest", "testcase_name": "emoji"}], "flight(String)": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "flight_ICAO"}, {"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "flight_IATA"}], "flight()": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "flight_default"}], "aircraft()": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "aircraft"}], "gate()": [{"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/AviationTest.java", "testclass_name": "AviationTest", "testcase_name": "gate"}, {"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGatePureNumeric"}, {"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateAlphanumeric"}, {"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateContextualDependency"}, {"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateFunctionalSimilarity"}, {"class_name": "Aviation", "file_path": "src/test/java/net/datafaker/providers/base/Aviation_gateTest.java", "testclass_name": "Aviation_gateTest", "testcase_name": "testGateContextualSimilarity"}], "diagnosisCode()": [{"class_name": "Medical", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testDiagnosisCodeUS"}, {"class_name": "Medical", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testDiagnosisCodeAU"}, {"class_name": "Medical", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testDiagnosisCodeNotAustraliaNorUS"}], "procedureCode()": [{"class_name": "Medical", "file_path": "src/test/java/net/datafaker/providers/base/MedicalTest.java", "testclass_name": "MedicalTest", "testcase_name": "testProcedureCodes"}], "md2()": [{"class_name": "Hashing", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testMd2"}], "md5()": [{"class_name": "Hashing", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testMd5"}], "sha1()": [{"class_name": "Hashing", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha1"}], "sha256()": [{"class_name": "Hashing", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha256"}], "sha384()": [{"class_name": "Hashing", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha384"}], "sha512()": [{"class_name": "Hashing", "file_path": "src/test/java/net/datafaker/providers/base/HashingTest.java", "testclass_name": "HashingTest", "testcase_name": "testSha512"}], "extension()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testExtension"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testExtension"}], "mimeType()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testMimeTypeFormat"}], "fileName()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileName"}], "fileName(String,String,String,String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifyExtension"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifyDir"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifySeparator"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/FileTest.java", "testclass_name": "FileTest", "testcase_name": "testFileNameSpecifyName"}], "streetName()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/UkLocalDirectivesTest.java", "testclass_name": "UkLocalDirectivesTest", "testcase_name": "resolvesDirectivesOnlyInYmlFile"}], "hamletQuote()": [{"class_name": "Shakespeare", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testHamletQuote"}], "asYouLikeItQuote()": [{"class_name": "Shakespeare", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testAsYouLikeItQuote"}], "kingRichardIIIQuote()": [{"class_name": "Shakespeare", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testKingRichardIIIQuote"}], "romeoAndJulietQuote()": [{"class_name": "Shakespeare", "file_path": "src/test/java/net/datafaker/providers/base/ShakespeareTest.java", "testclass_name": "ShakespeareTest", "testcase_name": "testRomeoAndJulietQuote"}], "battlegroundsScore()": [{"class_name": "Hearthstone", "file_path": "src/test/java/net/datafaker/providers/videogame/HearthstoneTest.java", "testclass_name": "HearthstoneTest", "testcase_name": "battlegroundsScoreTest"}], "standardRank()": [{"class_name": "Hearthstone", "file_path": "src/test/java/net/datafaker/providers/videogame/HearthstoneTest.java", "testclass_name": "HearthstoneTest", "testcase_name": "standardRankTest"}], "wildRank()": [{"class_name": "Hearthstone", "file_path": "src/test/java/net/datafaker/providers/videogame/HearthstoneTest.java", "testclass_name": "HearthstoneTest", "testcase_name": "wildRankTest"}], "callSign()": [{"class_name": "StarWars", "file_path": "src/test/java/net/datafaker/providers/entertainment/StarWarsTest.java", "testclass_name": "StarWarsTest", "testcase_name": "callSign"}], "alternateCharacterSpelling()": [{"class_name": "StarWars", "file_path": "src/test/java/net/datafaker/providers/entertainment/StarWarsTest.java", "testclass_name": "StarWarsTest", "testcase_name": "alternativeSpelling"}], "createdTime(boolean,Date,Date)": [{"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testCreatedDateForward"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testCreatedDateBackward"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/Twitter_createdTimeTest.java", "testclass_name": "Twitter_createdTimeTest", "testcase_name": "testCreatedTimeForward"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/Twitter_createdTimeTest.java", "testclass_name": "Twitter_createdTimeTest", "testcase_name": "testCreatedTimeBackward"}], "twitterId(int)": [{"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testShortTwitterIdLength"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testLongTwitterIdLength"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTwitterIdLength"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTwitterIdUnique"}], "text(String[],int,int)": [{"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTextLength"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "testTextKeyWords"}], "userName()": [{"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "username"}], "userId()": [{"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "userId"}], "getLink(String,int)": [{"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "linkTestRules"}, {"class_name": "Twitter", "file_path": "src/test/java/net/datafaker/providers/base/TwitterTest.java", "testclass_name": "TwitterTest", "testcase_name": "linkTestKeyWords"}], "fetchObject(String,FakerContext)": [{"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/integration/MostSpecificLocaleTest.java", "testclass_name": "MostSpecificLocaleTest", "testcase_name": "resolvesTheMostSpecificLocale"}], "zipCode()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/Issue194SlashFormatRegexTest.java", "testclass_name": "Issue194SlashFormatRegexTest", "testcase_name": "enGBZipCodeReturnsProperRegexifiedValue"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/Issue194SlashFormatRegexTest.java", "testclass_name": "Issue194SlashFormatRegexTest", "testcase_name": "enCAZipCodeReturnsProperRegexifiedValue"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/Issue194SlashFormatRegexTest.java", "testclass_name": "Issue194SlashFormatRegexTest", "testcase_name": "viZipCodeReturnsProperRegexifiedValue"}], "checksum(String)": [{"class_name": "BulgarianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/BulgarianIdNumberTest.java", "testclass_name": "BulgarianIdNumberTest", "testcase_name": "checksum"}, {"class_name": "MacedonianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MacedonianIdNumberTest.java", "testclass_name": "MacedonianIdNumberTest", "testcase_name": "checksum"}, {"class_name": "MoldovanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MoldovanIdNumberTest.java", "testclass_name": "MoldovanIdNumberTest", "testcase_name": "checksum"}, {"class_name": "EstonianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "checksum"}, {"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "checksum"}, {"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "checksum"}], "anyDisease()": [{"class_name": "Disease", "file_path": "src/test/java/net/datafaker/providers/healthcare/DiseaseTest.java", "testclass_name": "DiseaseTest", "testcase_name": "testAnyDisease"}], "option(String[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithArray"}], ")": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargsString"}, {"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_csvTest.java", "testclass_name": "FakeValuesService_csvTest", "testcase_name": "testCsv_evenColumns"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_csvTest.java", "testclass_name": "FakeValuesService_csvTest", "testcase_name": "testCsv_oddColumns"}], "option(Long[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(Short[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(Byte[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(Double[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(Float[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(BigInteger[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(BigDecimal[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "option(Boolean[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithVarargs"}], "subset(int,Integer[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubset"}], "subset(int,Long[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubset"}], "subset(int,String[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubset"}, {"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubsetWithDuplicate"}, {"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testEmptySubset"}], "subset(int,Object[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testSubsetWithDuplicate"}, {"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testEmptySubset"}], "option(Class<Day>)": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testOptionWithEnum"}], "nextElement(Integer[])": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testNextArrayElement"}], "nextElement(List<Integer>)": [{"class_name": "Options", "file_path": "src/test/java/net/datafaker/providers/base/OptionsTest.java", "testclass_name": "OptionsTest", "testcase_name": "testNextListElement"}], "future(int,ChronoUnit)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testFutureTime"}], "future(int,int,ChronoUnit)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testFutureTimeWithMinimum"}], "past(int,int,ChronoUnit)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testPastTimeWithMinimum"}], "past(int,ChronoUnit)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testPastTime"}], "between(LocalTime,LocalTime)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetween"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetweenWithSameLocalTime"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetweenThenLargerThanNow"}], "between(LocalTime,LocalTime,String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "testBetweenWithMask"}], "future(int,ChronoUnit,String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "futureWithMask"}], "future(int,int,ChronoUnit,String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "futureWithMask"}], "past(int,ChronoUnit,String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "pastWithMask"}], "past(int,int,ChronoUnit,String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/TimeTest.java", "testclass_name": "TimeTest", "testcase_name": "pastWithMask"}], "Faker(Random)": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateRepeatableValues"}], "toString()": [{"class_name": "AbstractProvider", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateRepeatableValues"}, {"class_name": "AbstractProvider", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateUniqueValues"}, {"class_name": "AbstractProvider", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testAllFakerMethodsThatReturnStrings"}], "Faker()": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/integration/FakerRepeatabilityIntegrationTest.java", "testclass_name": "FakerRepeatabilityIntegrationTest", "testcase_name": "shouldCreateUniqueValues"}], "nameWithMiddle()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testNameWithMiddle"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testNameWithMiddleDoesNotHaveRepeatedName"}], "fullName()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFullName"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFullNameArabic"}], "firstName()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFirstName"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollection"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateNullCollection"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "illegalNullRate"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionPassingSuppliersAsList"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithRepeatableFaker"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithDifferentObjects"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "checkWrongArguments"}], "femaleFirstName()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testFemaleFirstName"}], "malefirstName()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testMaleFirstName"}], "lastName()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testLastName"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollection"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateNullCollection"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "illegalNullRate"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionPassingSuppliersAsList"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithRepeatableFaker"}], "prefix()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testPrefix"}], "suffix()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testSuffix"}], "title()": [{"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/NameTest.java", "testclass_name": "NameTest", "testcase_name": "testTitle"}, {"class_name": "Name", "file_path": "src/test/java/net/datafaker/providers/base/Name_titleTest.java", "testclass_name": "Name_titleTest", "testcase_name": "testTitle"}], "fetchFromYaml(String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldReturnValuesInRandomOrderUsingRandomService"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenAllPossibleValuesHaveBeenReturned"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldReturnValuesBasedOnKeyAndLocale"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenNoValuesFoundForKey"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenNonListValueFoundForKey"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldThrowExceptionWhenListOfListsFoundForKey"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldNotInterfereWithValuesReturnedFromOtherFakers"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldConvertIntegersToStrings"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldConvertDecimalsToStrings"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/UniqueTest.java", "testclass_name": "UniqueTest", "testcase_name": "fetchFromYaml_shouldConvertBooleansToStrings"}], "digit(char)": [{"class_name": "Utils", "file_path": "src/test/java/net/datafaker/idnumbers/UtilsTest.java", "testclass_name": "UtilsTest", "testcase_name": "digit_parsesGivenCharToNumber"}], "digitAt(String,int)": [{"class_name": "Utils", "file_path": "src/test/java/net/datafaker/idnumbers/UtilsTest.java", "testclass_name": "UtilsTest", "testcase_name": "digitAt_parsesGivenCharToNumber"}], "multiply(String,int[])": [{"class_name": "Utils", "file_path": "src/test/java/net/datafaker/idnumbers/UtilsTest.java", "testclass_name": "UtilsTest", "testcase_name": "multiply_digits"}], "generateValid(Faker)": [{"class_name": "MoldovanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MoldovanIdNumberTest.java", "testclass_name": "MoldovanIdNumberTest", "testcase_name": "valid"}, {"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "valid"}, {"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "sample"}], "digit()": [{"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateSequence"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateSequenceOfDefaultSize"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateEmptySequence"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "isInfiniteTest"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateSequence5"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "testIterator"}], "nextInt(int)": [{"class_name": "Number", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "generateCollectionWithDifferentObjects"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}], "generate(Iterable,Schema)": [{"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "toCsv"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "toJson"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "toNestedJson"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toCsv"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toCsvFromInfiniteSequence"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toJson"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toJsonFromInfiniteSequence"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "toNestedJson"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "jsonWithDifferentFieldFormatsInOneObjectTest"}], "new()": [{"class_name": "BloodPressure", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "singletonTest"}, {"class_name": "Glucose", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "singletonTest"}, {"class_name": "Temperature", "file_path": "src/test/java/net/datafaker/sequence/FakeCollectionTest.java", "testclass_name": "FakeCollectionTest", "testcase_name": "singletonTest"}], "isValidSwedishSsn(String)": [{"class_name": "SwedenIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SwedishIdNumberTest.java", "testclass_name": "SwedishIdNumberTest", "testcase_name": "validSwedishSsn"}, {"class_name": "SwedenIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SwedishIdNumberTest.java", "testclass_name": "SwedishIdNumberTest", "testcase_name": "invalidSwedishSsn"}, {"class_name": "SwedenIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testIsValidSwedishSsn_ValidSsn"}, {"class_name": "SwedenIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testIsValidSwedishSsn_InvalidLength"}, {"class_name": "SwedenIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testIsValidSwedishSsn_InvalidDate"}, {"class_name": "SwedenIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SwedenIdNumber_isValidSwedishSsnTest.java", "testclass_name": "SwedenIdNumber_isValidSwedishSsnTest", "testcase_name": "testIsValidSwedishSsn_InvalidChecksum"}], "base64BMP()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "bmp"}], "base64GIF()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "gif"}], "base64PNG()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "png"}], "base64JPG()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "jpg"}], "base64JPEG()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "jpeg"}], "base64SVG()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "svg"}], "base64TIFF()": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "tiff"}], "base64(Base64ImageRuleConfig)": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "base64"}], "base64(ImageBuilder)": [{"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "defaultBuilder"}, {"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "customBase64builder"}, {"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "tinyBase64builder"}, {"class_name": "Image", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "largeBase64builder"}], "build()": [{"class_name": "ImageBuilder", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnIllegalType"}, {"class_name": "ImageBuilder", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnNegativeWidth"}, {"class_name": "ImageBuilder", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnZeroWidth"}, {"class_name": "ImageBuilder", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnNegativeHeight"}, {"class_name": "ImageBuilder", "file_path": "src/test/java/net/datafaker/providers/base/ImageTest.java", "testclass_name": "ImageTest", "testcase_name": "shouldErrorOnZeroHeight"}], "generate(Schema<String,String>,int)": [{"class_name": "YamlTransformer", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "simpleYamlTest"}, {"class_name": "XmlTransformer", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "xmlSchemaTest"}, {"class_name": "XmlTransformer", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "xmlPrettySchemaTest"}], "generate(Iterable<Name>,Schema<Name,String>)": [{"class_name": "YamlTransformer", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequence"}], "generate(Iterable<Name>,Schema<Name,List<String>>)": [{"class_name": "YamlTransformer", "file_path": "src/test/java/net/datafaker/formats/YamlTest.java", "testclass_name": "YamlTest", "testcase_name": "generateFromFakeSequenceWithCollection"}], "actor()": [{"class_name": "OscarMovie", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "actor"}], "movieName()": [{"class_name": "OscarMovie", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "movieName"}], "releaseDate()": [{"class_name": "OscarMovie", "file_path": "src/test/java/net/datafaker/providers/entertainment/OscarMovieTest.java", "testclass_name": "OscarMovieTest", "testcase_name": "releaseDate"}], "getFiles()": [{"class_name": "EnFile", "file_path": "src/test/java/net/datafaker/service/files/EnFileTest.java", "testclass_name": "EnFileTest", "testcase_name": "fileNameConvention"}], "bothify(String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "paragraph(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentencesWithCount"}], "paragraphs(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_paragraphsTest.java", "testclass_name": "Lorem_paragraphsTest", "testcase_name": "testParagraphs"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/Lorem_paragraphsTest.java", "testclass_name": "Lorem_paragraphsTest", "testcase_name": "testParagraphsEmpty"}], "sentence(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentenceWithWordCount"}], "sentences(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "streetAddress()": [{"class_name": "Address", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "words()": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testWords"}], "words(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/integration/FakerIntegrationTest.java", "testclass_name": "FakerIntegrationTest", "testcase_name": "testExceptionsNotCoveredInAboveTest"}], "idNumber(char[])": [{"class_name": "ChineseIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/ChineseIdNumberTest.java", "testclass_name": "ChineseIdNumberTest", "testcase_name": "testChecksumOfChineseIdNumber"}], "generateValid(BaseFaker)": [{"class_name": "ChineseIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/ChineseIdNumberTest.java", "testclass_name": "ChineseIdNumberTest", "testcase_name": "testValidZhCnIdNumber"}], "capitalize(String)": [{"class_name": "WordUtils", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtilsTest.java", "testclass_name": "WordUtilsTest", "testcase_name": "capitalizeWord"}, {"class_name": "WordUtils", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtilsTest.java", "testclass_name": "WordUtilsTest", "testcase_name": "capitalizeNull"}, {"class_name": "WordUtils", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_nullInput"}, {"class_name": "WordUtils", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_emptyInput"}, {"class_name": "WordUtils", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_alreadyCapitalized"}, {"class_name": "WordUtils", "file_path": "src/test/java/net/datafaker/internal/helper/WordUtils_capitalizeTest.java", "testclass_name": "WordUtils_capitalizeTest", "testcase_name": "testCapitalize_needsCapitalization"}], "ean13()": [{"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan13"}, {"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan13CheckSum"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "ean13"}], "gtin13()": [{"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin13"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "gtin13"}], "ean8()": [{"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan8"}, {"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testEan8CheckSum"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "ean8"}], "gtin8()": [{"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin8"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "gtin8"}], "gtin14()": [{"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin14Length"}, {"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin14CheckSum"}], "gtin12()": [{"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin12Length"}, {"class_name": "Barcode", "file_path": "src/test/java/net/datafaker/providers/base/BarcodeTest.java", "testclass_name": "BarcodeTest", "testcase_name": "testGtin12CheckSum"}], "isValidEnZASsn(String)": [{"class_name": "SouthAfricanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testExistSsn"}, {"class_name": "SouthAfricanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "testFakerSsn"}], "sequentialNumber(BaseFaker,Gender)": [{"class_name": "SouthAfricanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "sequentialNumber_forMales"}, {"class_name": "SouthAfricanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SouthAfricanIdNumberTest.java", "testclass_name": "SouthAfricanIdNumberTest", "testcase_name": "sequentialNumber_forFemales"}], "toASCII(String)": [{"class_name": "FakerIDN", "file_path": "src/test/java/net/datafaker/internal/helper/FakerIDNTest.java", "testclass_name": "FakerIDNTest", "testcase_name": "toASCIINoError"}, {"class_name": "FakerIDN", "file_path": "src/test/java/net/datafaker/internal/helper/FakerIDNTest.java", "testclass_name": "FakerIDNTest", "testcase_name": "toASCIIResultIsEmptyException"}], "creditCard()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCard"}], "nasdaqTicker()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "nasdaqTicker"}], "nyseTicker()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "nyseTicker"}], "bic()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "bic"}], "iban()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "iban"}], "iban(String)": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "ibanWithCountryCode"}, {"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "ibanWithAllCountryCodes"}, {"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "costaRicaIbanMustBeValid"}], "ibanSupportedCountries()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "ibanCountryCodes"}], "creditCard(CreditCardType)": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "creditCardWithType"}, {"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "visaCard"}, {"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "discoverCard"}], "usRoutingNumber()": [{"class_name": "Finance", "file_path": "src/test/java/net/datafaker/providers/base/FinanceTest.java", "testclass_name": "FinanceTest", "testcase_name": "usRoutingNumber"}], "validEsMXSsn()": [{"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "validEsMXSsn"}], "invalidEsMXSsn()": [{"class_name": "IdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java", "testclass_name": "MexicanIdNumberTest", "testcase_name": "invalidEsMXSsn"}], "stream(Supplier[])": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateFiniteStream"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateInfiniteStream"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamOfNames"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamOfDigits"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateNullStream"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "illegalNullRate"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamWithRepeatableFaker"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamWithDifferentObjects"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "checkWrongArguments"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "singletonTest"}], "stream(List)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "generateStreamPassingSuppliersAsList"}], "isInfinite()": [{"class_name": "FakeSequence", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "isInfiniteTest"}], "iterator()": [{"class_name": "FakeSequence", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "testIterator"}, {"class_name": "FakeSequence", "file_path": "src/test/java/net/datafaker/sequence/FakeStreamTest.java", "testclass_name": "FakeStreamTest", "testcase_name": "testIteratorInfinite"}], "firstDigit(int,Gender)": [{"class_name": "EstonianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_18xx"}, {"class_name": "EstonianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_19xx"}, {"class_name": "EstonianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_20xx"}, {"class_name": "EstonianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/EstonianIdNumberTest.java", "testclass_name": "EstonianIdNumberTest", "testcase_name": "firstDigit_21xx"}], "addPath(Locale,Path)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "addNullExistingPath"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "addNonExistingPath"}], "insect()": [{"class_name": "MyCustomFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTest"}], "insectFromFile()": [{"class_name": "MyCustomFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectAntTestExpressionFromFile"}, {"class_name": "MyCustomFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFile"}], "getProvider(Class,Function,BaseFaker)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectBeeTestExpressionFromFileWithoutExtraFaker"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "insectTestWithoutExtraFaker"}], "getProvider(String)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CustomFakerTest.java", "testclass_name": "CustomFakerTest", "testcase_name": "testMultipleFakerContextsPerOneClassName"}], "generate(Iterable<Name>,Schema<Name,List<SimpleField<Name,String>>>,int)": [{"class_name": "XmlTransformer", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "generateFromFakeSequence"}], "generate(Schema<Object,?>,int)": [{"class_name": "XmlTransformer", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "generateXMLWithThreeNestedLevels"}, {"class_name": "XmlTransformer", "file_path": "src/test/java/net/datafaker/formats/XmlTest.java", "testclass_name": "XmlTest", "testcase_name": "generateXMLWithThreeNestedLevelsAndAttributes"}], "IdNumberRequest)": [{"class_name": "UkrainianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "valid"}], "generateInvalid(BaseFaker)": [{"class_name": "UkrainianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/UkrainianIdNumberTest.java", "testclass_name": "UkrainianIdNumberTest", "testcase_name": "invalid"}], "get(String)": [{"class_name": "FakeValuesGrouping", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesOneFakeValue"}, {"class_name": "FakeValuesGrouping", "file_path": "src/test/java/net/datafaker/service/FakeValuesGroupingTest.java", "testclass_name": "FakeValuesGroupingTest", "testcase_name": "handlesMultipleFakeValues"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueReturnsAValue"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueDoesNotReturnAValue"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueWithANonEnglishFile"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueForHebrewLocale"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "getAValueFromALocaleThatCantBeLoaded"}], "weight()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "weight"}], "maxAscentSpeed()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxAscentSpeed"}], "maxDescentSpeed()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxDescentSpeed"}], "flightTime()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "flightTime"}], "maxAltitude()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxAltitude"}], "maxFlightDistance()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxFlightDistance"}], "maxSpeed()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxSpeed"}], "maxWindResistance()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxWindResistance"}], "maxAngularVelocity()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxAngularVelocity"}], "maxTiltAngle()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxTiltAngle"}], "operatingTemperature()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "operatingTemperature"}], "batteryCapacity()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "batteryCapacity"}], "batteryVoltage()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "batteryVoltage"}], "batteryWeight()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "batteryWeight"}], "chargingTemperature()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "chargingTemperature"}], "maxChargingPower()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxChargingPower"}], "maxResolution()": [{"class_name": "Drone", "file_path": "src/test/java/net/datafaker/providers/base/DroneTest.java", "testclass_name": "DroneTest", "testcase_name": "maxResolution"}], "centuryPrefixCitizen(LocalDate)": [{"class_name": "SingaporeIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "centuryPrefix_forCitizens"}], "centuryPrefixForeigner(LocalDate)": [{"class_name": "SingaporeIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "centuryPrefix_forForeigner"}], "Type)": [{"class_name": "SingaporeIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_20th_century"}, {"class_name": "SingaporeIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/SingaporeIdNumberTest.java", "testclass_name": "SingaporeIdNumberTest", "testcase_name": "randomBirthDate_21th_century"}], "isbn10()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn10DefaultIsNoSeparator"}], "isbn13()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbn13DefaultIsNoSeparator"}], "isbn10(boolean)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn10"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testOverrides"}], "isbn13(boolean)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testIsbn13"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "testOverrides"}], "asin()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "asin"}], "imei()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "imei"}], "isbnGs1()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbnGs1"}], "isbnGroup()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbnGroup"}], "isbnRegistrant()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/CodeTest.java", "testclass_name": "CodeTest", "testcase_name": "isbnRegistrant"}], "vin()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testVin"}], "manufacturer()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testManufacturer"}], "make()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testMake"}], "model()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testModel"}], "model(String)": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testModelWithParams"}], "makeAndModel()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testMakeAndModel"}], "style()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testStyle"}], "color()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testColor"}], "upholsteryColor()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testUpholsteryColor"}], "upholsteryFabric()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testUpholsteryFabric"}], "upholstery()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testUpholstery"}], "transmission()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testTransmission"}], "driveType()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testDriveType"}], "fuelType()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testFuelType"}], "carType()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testCarType"}], "engine()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testEngine"}], "carOptions()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testCarOptions"}], "carOptions(int,int)": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testCarOptionsMinMax"}, {"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/Vehicle_carOptionsTest.java", "testclass_name": "Vehicle_carOptionsTest", "testcase_name": "testCarOptionsWithMinMax"}, {"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/Vehicle_carOptionsTest.java", "testclass_name": "Vehicle_carOptionsTest", "testcase_name": "testCarOptionsWithMinEqualToMax"}, {"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/Vehicle_carOptionsTest.java", "testclass_name": "Vehicle_carOptionsTest", "testcase_name": "testCarOptionsWithMinGreaterThanMax"}], "standardSpecs(int,int)": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testStandardSpecsMinMax"}, {"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/Vehicle_standardSpecsTest.java", "testclass_name": "Vehicle_standardSpecsTest", "testcase_name": "testStandardSpecsMinMax"}], "standardSpecs()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testStandardSpecs"}], "doors()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testDoor"}], "licensePlate()": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testLicensePlate"}], "licensePlate(String)": [{"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testLicensePlateWithParam"}, {"class_name": "Vehicle", "file_path": "src/test/java/net/datafaker/providers/base/VehicleTest.java", "testclass_name": "VehicleTest", "testcase_name": "testLicensePlateWithParam_Canada"}], "future(int,TimeUnit,Timestamp)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testFutureDate"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_futureTest.java", "testclass_name": "DateAndTime_futureTest", "testcase_name": "testFutureWithDays"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_futureTest.java", "testclass_name": "DateAndTime_futureTest", "testcase_name": "testFutureWithHours"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_futureTest.java", "testclass_name": "DateAndTime_futureTest", "testcase_name": "testFutureWithMinutes"}], "future(int,int,TimeUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testFutureDateWithMinimum"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testFutureDateWithMinimum"}], "past(int,int,TimeUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testPastDateWithMinimum"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDateWithMinimum"}], "past(int,TimeUnit,Date)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testPastDateWithReferenceDate"}], "past(int,TimeUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testPastDate"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDateWithBounds"}], "between(Timestamp,Timestamp)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetween"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetweenThenLargerThanNow"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenValidRange"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenEqualDates"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenInvalidRange"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenWithBirthdayDates"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenWithFutureDates"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_betweenTest.java", "testclass_name": "DateAndTime_betweenTest", "testcase_name": "testBetweenWithPastDates"}], "between(Timestamp,Timestamp,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetweenWithMaskReturningString"}], "between(Date,Date)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBetweenDateAsArgument"}], "birthday()": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBirthday"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBirthday"}], "birthday(int,int)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "testBirthdayWithAges"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBirthdayWithAges"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayTest.java", "testclass_name": "DateAndTime_birthdayTest", "testcase_name": "testBirthdayWithEqualAges"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayTest.java", "testclass_name": "DateAndTime_birthdayTest", "testcase_name": "testBirthdayWithDifferentAges"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayTest.java", "testclass_name": "DateAndTime_birthdayTest", "testcase_name": "testBirthdayWithNegativeAges"}], "birthday(int,int,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "birthdayWithMask"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "birthdayWithMask"}], "future(int,TimeUnit,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "futureWithMask"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "futureWithMask"}], "future(int,int,TimeUnit,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "futureWithMask"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "futureWithMask"}], "future(int,TimeUnit,Date,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "futureWithMask"}], "past(int,TimeUnit,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "pastWithMask"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "pastWithMask"}], "past(int,int,TimeUnit,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "pastWithMask"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "pastWithMask"}], "past(int,TimeUnit,Date,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "pastWithMask"}], "period(Period,Period)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "periodTest"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "maxLessThanMinPeriod"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "periodTest"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "maxLessThanMinPeriod"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_periodTest.java", "testclass_name": "DateAndTime_periodTest", "testcase_name": "testPeriodValidRange"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_periodTest.java", "testclass_name": "DateAndTime_periodTest", "testcase_name": "testPeriodInvalidRange"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_periodTest.java", "testclass_name": "DateAndTime_periodTest", "testcase_name": "testPeriodEqualBounds"}], "duration(long,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "invalidDuration"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}], "duration(long,long,ChronoUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "durationTest"}], "duration(long,ChronoUnit)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "durationTest"}], "duration(long,long,String)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTimeTest.java", "testclass_name": "DateAndTimeTest", "testcase_name": "durationTest"}], "get(Faker,LocalDate,Gender)": [{"class_name": "PolishIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testGenderedPesel"}, {"class_name": "PolishIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testCenturiesPesel"}, {"class_name": "PolishIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testInvalidCenturiesPesel"}, {"class_name": "PolishIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PolishIdNumberTest.java", "testclass_name": "PolishIdNumberTest", "testcase_name": "testNullGender"}], "generateInvalid(Faker)": [{"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "invalid"}, {"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumber_generateInvalidTest.java", "testclass_name": "AlbanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}, {"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumber_generateInvalidTest.java", "testclass_name": "RomanianIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}], "yy(int)": [{"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "yy"}], "mm(int,Gender)": [{"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "mm"}], "dd(int)": [{"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "dd"}], "checksumOfFirstChar(char)": [{"class_name": "AlbanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AlbanianIdNumberTest.java", "testclass_name": "AlbanianIdNumberTest", "testcase_name": "checksumOfFirstChar"}], "method()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "method_returnUpperCaseWithMinimum3Chars"}], "contentType()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars"}], "messagingPort()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "messagingPort_return4DigitIntBetween1000And9999"}], "rtpPort()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "rtpPort_returnPositiveEvenInt"}], "provisionalResponseCode()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "provisionalResponseCode_return3DigitIntBetween100And199"}], "successResponseCode()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "successResponse_Codereturn3DigitIntBetween200And299"}], "redirectResponseCode()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "redirectResponseCode_Codereturn3DigitIntBetween300And399"}], "clientErrorResponseCode()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "clientErrorResponseCode_Codereturn3DigitIntBetween400And499"}], "serverErrorResponseCode()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "serverErrorResponseCode_Codereturn3DigitIntBetween500And599"}], "globalErrorResponseCode()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "globalErrorResponseCode_Codereturn3DigitIntBetween600And699"}], "provisionalResponsePhrase()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "provisionalResponsePhrase_returnAnyNonDigitString"}], "successResponsePhrase()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "successResponsePhrase_returnAnyNonDigitString"}], "redirectResponsePhrase()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "redirectResponsePhrase_returnAnyNonDigitString"}], "clientErrorResponsePhrase()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "clientErrorResponsePhrase_returnAnyNonDigitString"}], "serverErrorResponsePhrase()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "serverErrorResponsePhrase_returnAnyNonDigitString"}], "globalErrorResponsePhrase()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "globalErrorResponsePhrase_returnAnyNonDigitString"}], "bodyString()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "bodyString_returnAValidSdpBodyString"}], "bodyBytes()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "bodyBytes_isNotNull"}], "nameAddress()": [{"class_name": "Sip", "file_path": "src/test/java/net/datafaker/providers/base/SipTest.java", "testclass_name": "SipTest", "testcase_name": "nameAddress_returnValidNameAddressString"}], "values()": [{"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldHaveNinePlanets"}], "lengthOfDay(PlanetName)": [{"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}], "meanDistanceFromTheSun(PlanetName)": [{"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}], "equatorialGravity(PlanetName)": [{"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}], "mass(PlanetName)": [{"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}], "equatorialRadius(PlanetName)": [{"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectJupiterMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMarsMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectVenusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectUranusMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectMercuryMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectNeptuneMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectEarthMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectSaturnMetadata"}, {"class_name": "Planet", "file_path": "src/test/java/net/datafaker/providers/base/PlanetTest.java", "testclass_name": "PlanetTest", "testcase_name": "shouldReturnCorrectPlutoMetadata"}], "generateStream(Schema,int)": [{"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testJsonStream"}, {"class_name": "JavaObjectTransformer", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaStreamingTest"}, {"class_name": "JavaObjectTransformer", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaEmptyStreamTest"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleStreamTestForSqlTransformerSparkSql"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testSqlBatch"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/transformations/sql/SqlTransformer_generateStreamTest.java", "testclass_name": "SqlTransformer_generateStreamTest", "testcase_name": "testGenerateStreamWithEmptySchema"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/transformations/sql/SqlTransformer_generateStreamTest.java", "testclass_name": "SqlTransformer_generateStreamTest", "testcase_name": "testGenerateStreamWithoutBatchMode"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/transformations/sql/SqlTransformer_generateStreamTest.java", "testclass_name": "SqlTransformer_generateStreamTest", "testcase_name": "testGenerateStreamWithBatchMode"}], "generate(Schema,int)": [{"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromSchemaWithLimit"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "simpleJsonTestForJsonTransformer"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "outputArrayJsonTestForJsonTransformer"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "outputWithoutCommaForJsonTransformer"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "jsonObjectCollectionTest"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "jsonCollectionOfCollectionsTest"}, {"class_name": "JavaObjectTransformer", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaCollectionTest"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestNew"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "csvTestWithQuotesNew"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithCommaNew"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjects"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "supplierShouldBeDefinedInCaseOfNullInput"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testGenerateFromSchemaWithLimitSeparatedStatements"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testGenerateFromSchemaWithLimitBatchModeStatements"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "testForceQuotedWithSqlIdentifiers"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformer"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerOracle"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerPostgres"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerMSSQL"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerMySQL"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSqlTestForSqlTransformerPostgres"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "sqlKeywordCaseCheck"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "sqlKeywordCapitalCaseCheck"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSqlTestForSqlTransformerOracle"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSizeSqlTestForSqlTransformerOracle"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchSizeSqlTestForSqlTransformerPostgres"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "arrayAndMultisetSqlTestForSqlTransformerCalcite"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "batchTestForSqlTransformerSparkSql"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "simpleSqlTestForSqlTransformerSparkSql"}], "generate(FakeSequence,Schema)": [{"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromFakeSequenceCollectionWithoutComma"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromFakeSequenceCollection"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromFakeSequenceStream"}, {"class_name": "JsonTransformer", "file_path": "src/test/java/net/datafaker/formats/JsonTest.java", "testclass_name": "JsonTest", "testcase_name": "testGenerateFromInfiniteFakeSequence"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunction"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithDifferentObjectsFunctionStream"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testCsvWithInfiniteSequence"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsv"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCsvNew"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollection"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testLimitForCollectionNew"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsv"}, {"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/formats/CsvTest.java", "testclass_name": "CsvTest", "testcase_name": "testInfiniteCsvWithLimit"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromFakeSequenceSeparated"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromFakeSequenceBatch"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromEmptySchema"}, {"class_name": "SqlTransformer", "file_path": "src/test/java/net/datafaker/formats/SqlTest.java", "testclass_name": "SqlTest", "testcase_name": "generateFromInfiniteFakeSequenceBatch"}], "nextLong(long)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testPositiveBoundariesOnly"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testLongWithinBoundary"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testLongMaxBoundary"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithPositiveBound"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithBoundOne"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithNegativeBound"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testNextLongWithZeroBound"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_nextLongTest.java", "testclass_name": "RandomService_nextLongTest", "testcase_name": "testLongWithinBoundary"}], "nextInt(int,int)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testIntInRange"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "nextInt_returnsValueWithinGivenRange"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}], "nextInt()": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}], "nextFloat()": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}], "nextLong(long,long)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testLongInRange"}], "nextBoolean()": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "predictableRandomRange"}], "nextDouble(double,double)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testDoubleInRange"}], "hex(int)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomServiceTest.java", "testclass_name": "RandomServiceTest", "testcase_name": "testHex"}], "future()": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testFutureDate"}], "future(int,TimeUnit,Instant)": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testFutureDateWithBounds"}], "past(int,TimeUnit,Instant)": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testPastDateWithReferenceDate"}], "between(Instant,Instant)": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBetween"}, {"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBetweenThenLargerThanNow"}], "between(Instant,Instant,String)": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "testBetweenWithMaskReturningString"}], "future(int,TimeUnit,Instant,String)": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "futureWithMask"}], "past(int,TimeUnit,Instant,String)": [{"class_name": "TimeAndDate", "file_path": "src/test/java/net/datafaker/providers/base/TimeAndDateTest.java", "testclass_name": "TimeAndDateTest", "testcase_name": "pastWithMask"}], "firstCharacter(LocalDate,Gender)": [{"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "firstDigit_18xx"}, {"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "firstDigit_19xx"}, {"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "firstDigit_20xx"}], "dateOfBirth(LocalDate)": [{"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "dateOfBirth"}], "countyCode(Faker)": [{"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "countyCode"}], "sequenceNumber(Faker)": [{"class_name": "RomanianIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/RomanianIdNumberTest.java", "testclass_name": "RomanianIdNumberTest", "testcase_name": "sequenceNumber"}], "populate(Class)": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchema"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithDefaultSchema"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithDefaultSchemaAndInDefaultSchemaInCurrentClass"}], "populate(Class,Schema)": [{"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithCustomSchema"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithCustomSchema"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithCustomSchemaWhenClassTemplateWithoutAnnotation"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithCustomSchemaWhenClassTemplateWithoutAnnotation"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityFromJavaRecordWithComplexSchemaWhenClassTemplateWithoutAnnotation"}, {"class_name": "Faker", "file_path": "src/test/java/net/datafaker/annotations/FakeAnnotationTest.java", "testclass_name": "FakeAnnotationTest", "testcase_name": "shouldGenerateEntityWithDefaultSchemaAndInDefaultSchemaInCurrentClass2"}], "apply(Class,Schema)": [{"class_name": "JavaObjectTransformer", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaObjectTest"}, {"class_name": "JavaObjectTransformer", "file_path": "src/test/java/net/datafaker/transformations/JavaObjectTransformerTest.java", "testclass_name": "JavaObjectTransformerTest", "testcase_name": "javaRecordTest"}], "getPaths()": [{"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "correctPathForHebrewLanguage"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "incorrectPathForHebrewLanguage"}], "getLocale()": [{"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValuesTest.java", "testclass_name": "FakeValuesTest", "testcase_name": "correctLocale"}], "cellPhone()": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testCellPhone_enUS"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_esMx"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_CA"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobile"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testCellPhone"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_estonia"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "cellPhone_moldova"}], "phoneNumber()": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhone_esMx"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberNational"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testPhoneNumber"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumber_moldova"}], "phoneNumberInternational()": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberInternational"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_estonia"}, {"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberInternational_moldova"}], "cellPhoneInternational()": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testAllPhoneNumberMobileInternational"}], "subscriberNumber()": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testSubscriberNumber"}], "subscriberNumber(int)": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "testSubscriberNumberWithLength"}], "phoneNumberNational()": [{"class_name": "PhoneNumber", "file_path": "src/test/java/net/datafaker/providers/base/PhoneNumberTest.java", "testclass_name": "PhoneNumberTest", "testcase_name": "phoneNumberNational_estonia"}], "toJavaNames(String,boolean)": [{"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "singleWord"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "emptyString"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "nullString"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "wordWithDigit"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "wordStartingWithDigit"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "singleCharacter"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "singleCharacterUnderscore"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "onlyUnderscores"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "multipleWordsSeparatedByUnderscores"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "multipleUnderscoresInRow"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "upperFirstCharacterWithoutUnderscores"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "upperFirstCharacterWithUnderscores"}, {"class_name": "JavaNames", "file_path": "src/test/java/net/datafaker/internal/helper/JavaNamesTest.java", "testclass_name": "JavaNamesTest", "testcase_name": "endingWithUnderscore"}], "fixedString(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "shouldCreateFixedLengthString"}], "character(boolean)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharacterIncludeUpperCase"}], "characters(int,int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersShouldIncludeMinAndMaxLenght"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLength"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthEquals"}], "characters()": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharacters"}], "characters(boolean)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersIncludeUpperCase"}], "characters(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersWithLength"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testFixedNumberOfCharactersEmpty"}], "characters(int,boolean)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersWithLengthIncludeUppercase"}], "characters(int,int,boolean,boolean)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthEqualsIncludingUppercaseAndIncludingDigit"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit"}], "characters(int,boolean,boolean)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersFixedLengthIncludingUppercaseAndIncludingDigit"}], "characters(int,int,boolean)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testCharactersMinimumMaximumLengthIncludeUppercase"}], "sentence()": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentence"}], "sentence(int,int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentenceWithWordCountAndRandomWordsToAdd"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentenceFixedNumberOfWords"}], "maxLengthSentence(int)": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testMaxLengthSentence"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testMaxLengthWithEmptySentence"}, {"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testMaxLengthWithNegativeLengthSentence"}], "paragraph()": [{"class_name": "Lorem", "file_path": "src/test/java/net/datafaker/providers/base/LoremTest.java", "testclass_name": "LoremTest", "testcase_name": "testSentences"}], "subscriptionId()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testAccountId"}, {"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/Azure_subscriptionIdTest.java", "testclass_name": "Azure_subscriptionIdTest", "testcase_name": "testSubscriptionId"}], "tenantId()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testTenantId"}, {"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/Azure_subscriptionIdTest.java", "testclass_name": "Azure_subscriptionIdTest", "testcase_name": "testTenantId"}], "resourceGroup()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testResourceGroup"}], "managementGroup()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testManagementGroup"}], "applicationGateway()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testApplicationGateway"}], "bastionHost()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testBastionHost"}], "firewall()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testFirewall"}], "loadBalancer()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testLoadBalancer"}], "networkSecurityGroup()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testNetworkSecurityGroup"}], "virtualNetwork()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testVirtualNetwork"}], "virtualWan()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testVirtualWan"}], "appServiceEnvironment()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testAppServiceEnvironment"}], "appServicePlan()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testAppServicePlan"}], "loadTesting()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testLoadTesting"}], "staticWebApp()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testStaticWebApp"}], "virtualMachine()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testVirtualMachine"}], "storageAccount()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testStorageAccount"}], "containerRegistry()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerRegistry"}], "containerApps()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerApps"}], "containerAppsEnvironment()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerAppsEnvironment"}], "containerInstance()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testContainerInstance"}], "cosmosDBDatabase()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testCosmosDBDatabase"}], "sqlDatabase()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testSqlDatabase"}], "mysqlDatabase()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testMysqlDatabase"}], "postgreSQLDatabase()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testPostgreSQLDatabase"}], "serviceBus()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testServiceBus"}], "serviceBusQueue()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testServiceBusQueue"}], "serviceBusTopic()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testServiceBusTopic"}], "keyVault()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testKeyVault"}], "logAnalytics()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testLogAnalytics"}], "springApps()": [{"class_name": "Azure", "file_path": "src/test/java/net/datafaker/providers/base/AzureTest.java", "testclass_name": "AzureTest", "testcase_name": "testSpringApps"}], "cpf(String)": [{"class_name": "DocumentFormatterUtil", "file_path": "src/test/java/net/datafaker/idnumbers/pt/br/DocumentFormatterUtil_cpfTest.java", "testclass_name": "DocumentFormatterUtil_cpfTest", "testcase_name": "testCpfFormatting"}], "unmask(String)": [{"class_name": "DocumentFormatterUtil", "file_path": "src/test/java/net/datafaker/idnumbers/pt/br/DocumentFormatterUtil_unmaskTest.java", "testclass_name": "DocumentFormatterUtil_unmaskTest", "testcase_name": "testUnmask"}], "cnpj(String)": [{"class_name": "DocumentFormatterUtil", "file_path": "src/test/java/net/datafaker/idnumbers/pt/br/DocumentFormatterUtil_cnpjTest.java", "testclass_name": "DocumentFormatterUtil_cnpjTest", "testcase_name": "testCnpjFormatting"}], "getFaker()": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_getFakerTest.java", "testclass_name": "BaseFaker_getFakerTest", "testcase_name": "testGetFaker"}], "getPrivateIpV4Address()": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getPrivateIpV4AddressTest.java", "testclass_name": "Internet_getPrivateIpV4AddressTest", "testcase_name": "testGetPrivateIpV4Address"}], "generateInvalid(BaseProviders)": [{"class_name": "PortugueseIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/PortugueseIdNumber_generateInvalidTest.java", "testclass_name": "PortugueseIdNumber_generateInvalidTest", "testcase_name": "testGenerateInvalid"}], "getPublicIpV4Address()": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getPublicIpV4AddressTest.java", "testclass_name": "Internet_getPublicIpV4AddressTest", "testcase_name": "testGetPublicIpV4Address"}], "getIpV6Address()": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_getIpV6AddressTest.java", "testclass_name": "Internet_getIpV6AddressTest", "testcase_name": "testGetIpV6Address"}], "getProvider(Class<TestProvider>,Function<ProviderRegistration,TestProvider>)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_getProviderTest.java", "testclass_name": "BaseFaker_getProviderTest", "testcase_name": "testGetProvider"}], "generateValid(BaseProviders)": [{"class_name": "AmericanIdNumber", "file_path": "src/test/java/net/datafaker/idnumbers/AmericanIdNumber_generateValidTest.java", "testclass_name": "AmericanIdNumber_generateValidTest", "testcase_name": "testGenerateValid"}], "past(int,TimeUnit,Timestamp)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_pastTest.java", "testclass_name": "DateAndTime_pastTest", "testcase_name": "testPast"}], "allSupportedLocales(Set<String>)": [{"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_allSupportedLocalesTest.java", "testclass_name": "Locality_allSupportedLocalesTest", "testcase_name": "testAllSupportedLocalesWithFileMasks"}, {"class_name": "Locality", "file_path": "src/test/java/net/datafaker/providers/base/Locality_allSupportedLocalesTest.java", "testclass_name": "Locality_allSupportedLocalesTest", "testcase_name": "testAllSupportedLocalesWithoutFileMasks"}], "randomDouble(int,int,int)": [{"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_randomDoubleTest.java", "testclass_name": "Number_randomDoubleTest", "testcase_name": "testRandomDouble"}], "primitiveToWrapper(Class)": [{"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_primitiveToWrapperTest.java", "testclass_name": "FakeValuesService_primitiveToWrapperTest", "testcase_name": "testPrimitiveToWrapper_Primitive"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_primitiveToWrapperTest.java", "testclass_name": "FakeValuesService_primitiveToWrapperTest", "testcase_name": "testPrimitiveToWrapper_NonPrimitive"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_primitiveToWrapperTest.java", "testclass_name": "FakeValuesService_primitiveToWrapperTest", "testcase_name": "testPrimitiveToWrapper_Null"}], "digit(int)": [{"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/idnumbers/pt/br/IdNumberGeneratorPtBrUtil_digitTest.java", "testclass_name": "IdNumberGeneratorPtBrUtil_digitTest", "testcase_name": "testDigitRemainderZero"}, {"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/idnumbers/pt/br/IdNumberGeneratorPtBrUtil_digitTest.java", "testclass_name": "IdNumberGeneratorPtBrUtil_digitTest", "testcase_name": "testDigitRemainderOne"}, {"class_name": "IdNumberGeneratorPtBrUtil", "file_path": "src/test/java/net/datafaker/idnumbers/pt/br/IdNumberGeneratorPtBrUtil_digitTest.java", "testclass_name": "IdNumberGeneratorPtBrUtil_digitTest", "testcase_name": "testDigitRemainderGreaterThanOne"}], "hashCode()": [{"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_hashCodeTest.java", "testclass_name": "FakerContext_hashCodeTest", "testcase_name": "testHashCodeWithNonNulls"}, {"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_hashCodeTest.java", "testclass_name": "FakerContext_hashCodeTest", "testcase_name": "testHashCodeWithNulls"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hashCodeTest.java", "testclass_name": "RandomService_hashCodeTest", "testcase_name": "testHashCodeWithSharedRandom"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hashCodeTest.java", "testclass_name": "RandomService_hashCodeTest", "testcase_name": "testHashCodeWithCustomRandom"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hashCodeTest.java", "testclass_name": "RandomService_hashCodeTest", "testcase_name": "testHashCodeWithNullRandom"}, {"class_name": "CompositeField", "file_path": "src/test/java/net/datafaker/transformations/CompositeField_hashCodeTest.java", "testclass_name": "CompositeField_hashCodeTest", "testcase_name": "testHashCodeWithNonNullName"}, {"class_name": "CompositeField", "file_path": "src/test/java/net/datafaker/transformations/CompositeField_hashCodeTest.java", "testclass_name": "CompositeField_hashCodeTest", "testcase_name": "testHashCodeWithNullName"}], "equals(Object)": [{"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_SameInstance"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_DifferentInstanceSameContext"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_DifferentContext"}, {"class_name": "FakeValues", "file_path": "src/test/java/net/datafaker/service/FakeValues_equalsTest.java", "testclass_name": "FakeValues_equalsTest", "testcase_name": "testEquals_DifferentType"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_SameInstance"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_DifferentClass"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_Null"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_DifferentLocale"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_DifferentFilename"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_DifferentPath"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_DifferentUrl"}, {"class_name": "FakeValuesContext", "file_path": "src/test/java/net/datafaker/service/FakeValuesContext_equalsTest.java", "testclass_name": "FakeValuesContext_equalsTest", "testcase_name": "testEquals_AllFieldsEqual"}], "updateNestedValue(String,Supplier<Map<String,Integer>>,String,Integer)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_updateNestedValueTest.java", "testclass_name": "CopyOnWriteMap_updateNestedValueTest", "testcase_name": "testUpdateNestedValue_KeyExists"}, {"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_updateNestedValueTest.java", "testclass_name": "CopyOnWriteMap_updateNestedValueTest", "testcase_name": "testUpdateNestedValue_KeyDoesNotExist"}], "setCurrentLocale(Locale)": [{"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_setCurrentLocaleTest.java", "testclass_name": "FakerContext_setCurrentLocaleTest", "testcase_name": "testSetCurrentLocale_NewLocale"}, {"class_name": "FakerContext", "file_path": "src/test/java/net/datafaker/service/FakerContext_setCurrentLocaleTest.java", "testclass_name": "FakerContext_setCurrentLocaleTest", "testcase_name": "testSetCurrentLocale_ExistingLocale"}], "macAddress(String)": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_macAddressTest.java", "testclass_name": "Internet_macAddressTest", "testcase_name": "testMacAddressWithNullPrefix"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_macAddressTest.java", "testclass_name": "Internet_macAddressTest", "testcase_name": "testMacAddressWithEmptyPrefix"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_macAddressTest.java", "testclass_name": "Internet_macAddressTest", "testcase_name": "testMacAddressWithValidPrefix"}], "getStartStream(Object)": [{"class_name": "CsvTransformer", "file_path": "src/test/java/net/datafaker/transformations/CsvTransformer_getStartStreamTest.java", "testclass_name": "CsvTransformer_getStartStreamTest", "testcase_name": "testGetStartStream"}], "get()": [{"class_name": "LazyEvaluated", "file_path": "src/test/java/net/datafaker/internal/helper/LazyEvaluated_getTest.java", "testclass_name": "LazyEvaluated_getTest", "testcase_name": "testGet_ValueNotInitialized"}, {"class_name": "LazyEvaluated", "file_path": "src/test/java/net/datafaker/internal/helper/LazyEvaluated_getTest.java", "testclass_name": "LazyEvaluated_getTest", "testcase_name": "testGet_ValueAlreadyInitialized"}], "numberBetween(int,int)": [{"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinEqualsMax"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinLessThanMax"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_numberBetweenTest.java", "testclass_name": "Number_numberBetweenTest", "testcase_name": "testNumberBetween_MinGreaterThanMax"}], "remove(String)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_removeTest.java", "testclass_name": "CopyOnWriteMap_removeTest", "testcase_name": "testRemove"}], "birthdayLocalDate(int,int)": [{"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayLocalDateTest.java", "testclass_name": "DateAndTime_birthdayLocalDateTest", "testcase_name": "testBirthdayLocalDateMinAgeEqualsMaxAge"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayLocalDateTest.java", "testclass_name": "DateAndTime_birthdayLocalDateTest", "testcase_name": "testBirthdayLocalDateMinAgeLessThanMaxAge"}, {"class_name": "DateAndTime", "file_path": "src/test/java/net/datafaker/providers/base/DateAndTime_birthdayLocalDateTest.java", "testclass_name": "DateAndTime_birthdayLocalDateTest", "testcase_name": "testBirthdayLocalDateNegativeAges"}], "apply(Object,Schema)": [{"class_name": "YamlTransformer", "file_path": "src/test/java/net/datafaker/transformations/YamlTransformer_applyTest.java", "testclass_name": "YamlTransformer_applyTest", "testcase_name": "testApplyWithEmptyFields"}, {"class_name": "YamlTransformer", "file_path": "src/test/java/net/datafaker/transformations/YamlTransformer_applyTest.java", "testclass_name": "YamlTransformer_applyTest", "testcase_name": "testApplyWithNonEmptyFields"}], "transform(String)": [{"class_name": "SimpleField", "file_path": "src/test/java/net/datafaker/transformations/SimpleField_transformTest.java", "testclass_name": "SimpleField_transformTest", "testcase_name": "testTransformWithTransformFunction"}, {"class_name": "SimpleField", "file_path": "src/test/java/net/datafaker/transformations/SimpleField_transformTest.java", "testclass_name": "SimpleField_transformTest", "testcase_name": "testTransformWithSupplier"}, {"class_name": "SimpleField", "file_path": "src/test/java/net/datafaker/transformations/SimpleField_transformTest.java", "testclass_name": "SimpleField_transformTest", "testcase_name": "testTransformWithNullInputAndNoSupplier"}], "slug(List<String>,String)": [{"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_slugTest.java", "testclass_name": "Internet_slugTest", "testcase_name": "testSlugWithNonNullWordsAndGlue"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_slugTest.java", "testclass_name": "Internet_slugTest", "testcase_name": "testSlugWithNullWordsAndNonNullGlue"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_slugTest.java", "testclass_name": "Internet_slugTest", "testcase_name": "testSlugWithNonNullWordsAndNullGlue"}, {"class_name": "Internet", "file_path": "src/test/java/net/datafaker/providers/base/Internet_slugTest.java", "testclass_name": "Internet_slugTest", "testcase_name": "testSlugWithNullWordsAndNullGlue"}], "put(String,String)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putTest.java", "testclass_name": "CopyOnWriteMap_putTest", "testcase_name": "testPut"}], "randomNumber(int,boolean)": [{"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_randomNumberTest.java", "testclass_name": "Number_randomNumberTest", "testcase_name": "testRandomNumber_numberOfDigitsLessThanOrEqualToZero"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_randomNumberTest.java", "testclass_name": "Number_randomNumberTest", "testcase_name": "testRandomNumber_strictTrue"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_randomNumberTest.java", "testclass_name": "Number_randomNumberTest", "testcase_name": "testRandomNumber_strictFalse"}], "doWith(Callable<String>,Locale)": [{"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_doWithTest.java", "testclass_name": "BaseFaker_doWithTest", "testcase_name": "testDoWithLocaleChange"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_doWithTest.java", "testclass_name": "BaseFaker_doWithTest", "testcase_name": "testDoWithRuntimeException"}, {"class_name": "BaseFaker", "file_path": "src/test/java/net/datafaker/providers/base/BaseFaker_doWithTest.java", "testclass_name": "BaseFaker_doWithTest", "testcase_name": "testDoWithCheckedException"}], "putAll(Map<String,Integer>)": [{"class_name": "CopyOnWriteMap", "file_path": "src/test/java/net/datafaker/internal/helper/CopyOnWriteMap_putAllTest.java", "testclass_name": "CopyOnWriteMap_putAllTest", "testcase_name": "testPutAll"}], "hex(int,boolean)": [{"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithLengthZero"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithPositiveLengthUppercase"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithPositiveLengthLowercase"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithRandomLengthUppercase"}, {"class_name": "RandomService", "file_path": "src/test/java/net/datafaker/service/RandomService_hexTest.java", "testclass_name": "RandomService_hexTest", "testcase_name": "testHexWithRandomLengthLowercase"}], "digits(int)": [{"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_digitsTest.java", "testclass_name": "Number_digitsTest", "testcase_name": "testDigitsWithPositiveCount"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_digitsTest.java", "testclass_name": "Number_digitsTest", "testcase_name": "testDigitsWithZeroCount"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_digitsTest.java", "testclass_name": "Number_digitsTest", "testcase_name": "testDigitsWithNegativeCount"}, {"class_name": "Number", "file_path": "src/test/java/net/datafaker/providers/base/Number_digitsTest.java", "testclass_name": "Number_digitsTest", "testcase_name": "testDigitsWithSingleDigit"}], "safeFetch(String,FakerContext,String)": [{"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_safeFetchTest.java", "testclass_name": "FakeValuesService_safeFetchTest", "testcase_name": "testSafeFetchWithNullObject"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_safeFetchTest.java", "testclass_name": "FakeValuesService_safeFetchTest", "testcase_name": "testSafeFetchWithSingleString"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_safeFetchTest.java", "testclass_name": "FakeValuesService_safeFetchTest", "testcase_name": "testSafeFetchWithListOfStrings"}, {"class_name": "FakeValuesService", "file_path": "src/test/java/net/datafaker/service/FakeValuesService_safeFetchTest.java", "testclass_name": "FakeValuesService_safeFetchTest", "testcase_name": "testSafeFetchWithSlashDelimitedRegex"}]}