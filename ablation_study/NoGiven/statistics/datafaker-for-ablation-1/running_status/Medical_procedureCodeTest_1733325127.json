{"name": "Medical_procedureCodeTest", "status": "compile error", "error": "[INFO] Scanning for projects...\n[INFO] Inspecting build with total of 1 modules...\n[INFO] Installing Nexus Staging features:\n[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin\n[INFO] \n[INFO] ----------------------< net.datafaker:datafaker >-----------------------\n[INFO] Building Datafaker 2.4.1-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- enforcer:3.5.0:enforce (enforce-maven) @ datafaker ---\n[INFO] Rule 0: org.apache.maven.enforcer.rules.version.RequireJavaVersion passed\n[INFO] Rule 1: org.apache.maven.enforcer.rules.version.RequireMavenVersion passed\n[INFO] \n[INFO] --- spotless:2.43.0:check (spotless-check) @ datafaker ---\n[INFO] Index file does not exist. Fallback to an empty index\n[INFO] Spotless.Java is keeping 644 files clean - 0 needs changes to be clean, 644 were already clean, 0 were skipped because caching determined they were already clean\n[INFO] Spotless.Yaml is keeping 254 files clean - 0 needs changes to be clean, 254 were already clean, 0 were skipped because caching determined they were already clean\n[INFO] \n[INFO] --- jacoco:0.8.12:prepare-agent (default) @ datafaker ---\n[INFO] argLine set to -javaagent:/home/zhangzhe/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/target/jacoco.exec\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ datafaker ---\n[INFO] Copying 340 resources from src/main/resources to target/classes\n[INFO] \n[INFO] --- kotlin:2.0.20:compile (compile) @ datafaker ---\n[INFO] No sources to compile\n[INFO] \n[INFO] --- compiler:3.13.0:compile (compile) @ datafaker ---\n[INFO] Recompiling the module because of changed source code.\n[INFO] Compiling 323 source files with javac [debug target 17] to target/classes\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[148,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[149,28] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[149,44] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[152,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[153,28] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[153,47] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[324,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[325,28] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/BaseProviders.java:[325,43] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/IdNumber.java: /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/IdNumber.java\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/providers/base/IdNumber.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/service/FakeValuesService.java: \u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/main/java/net/datafaker/service/FakeValuesService.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:unchecked \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ datafaker ---\n[INFO] Copying 5 resources from src/test/resources to target/test-classes\n[INFO] \n[INFO] --- kotlin:2.0.20:test-compile (test-compile) @ datafaker ---\n[WARNING] Source root doesn't exist: /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/target/generated-test-sources/test-annotations\n[INFO] \n[INFO] --- compiler:3.13.0:testCompile (testCompile) @ datafaker ---\n[INFO] Recompiling the module because of changed dependency.\n[INFO] Compiling 321 source files with javac [debug target 17] to target/test-classes\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/CurrencyTest.java:[10,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Currency \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/CurrencyTest.java:[11,36] net.datafaker.providers.base.Currency \u4e2d\u7684 name() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/CurrencyTest.java:[12,25] net.datafaker.providers.base.Currency \u4e2d\u7684 code() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[34,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[45,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[56,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[69,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[88,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[124,15] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[136,15] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[163,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[173,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[224,46] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[225,46] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/DateAndTimeTest.java:[236,46] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.DateAndTime \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/FinanceTest.java:[31,27] net.datafaker.providers.base.Finance \u4e2d\u7684 nasdaqTicker() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/FinanceTest.java:[36,27] net.datafaker.providers.base.Finance \u4e2d\u7684 nyseTicker() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/FinanceTest.java:[41,36] net.datafaker.providers.base.Finance \u4e2d\u7684 stockMarket() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[16,9] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[17,36] net.datafaker.providers.base.Medical \u4e2d\u7684 medicineName() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[18,29] net.datafaker.providers.base.Medical \u4e2d\u7684 diseaseName() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[19,29] net.datafaker.providers.base.Medical \u4e2d\u7684 hospitalName() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[20,29] net.datafaker.providers.base.Medical \u4e2d\u7684 symptoms() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[21,29] net.datafaker.providers.base.Medical \u4e2d\u7684 medicalProfession() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[30,44] net.datafaker.providers.base.Medical \u4e2d\u7684 diagnosisCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[40,40] net.datafaker.providers.base.Medical \u4e2d\u7684 diagnosisCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[49,40] net.datafaker.providers.base.Medical \u4e2d\u7684 diagnosisCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/MedicalTest.java:[56,47] net.datafaker.providers.base.Medical \u4e2d\u7684 procedureCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[13,13] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[18,23] net.datafaker.providers.base \u4e2d\u7684 net.datafaker.providers.base.Medical \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[23,32] net.datafaker.providers.base.Medical \u4e2d\u7684 procedureCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/Medical_procedureCodeTest.java:[29,32] net.datafaker.providers.base.Medical \u4e2d\u7684 procedureCode() \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/TwitterTest.java:[18,33] net.datafaker.providers.base.Twitter \u4e2d\u7684 createdTime(boolean,java.util.Date,java.util.Date) \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/TwitterTest.java:[27,33] net.datafaker.providers.base.Twitter \u4e2d\u7684 createdTime(boolean,java.util.Date,java.util.Date) \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/Twitter_createdTimeTest.java:[33,30] net.datafaker.providers.base.Twitter \u4e2d\u7684 createdTime(boolean,java.util.Date,java.util.Date) \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[WARNING] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/providers/base/Twitter_createdTimeTest.java:[44,30] net.datafaker.providers.base.Twitter \u4e2d\u7684 createdTime(boolean,java.util.Date,java.util.Date) \u5df2\u8fc7\u65f6, \u4e14\u6807\u8bb0\u4e3a\u5f85\u5220\u9664\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java: \u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/idnumbers/MexicanIdNumberTest.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/FakerTest.java: \u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002\n[INFO] /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/src/test/java/net/datafaker/FakerTest.java: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:unchecked \u91cd\u65b0\u7f16\u8bd1\u3002\n[INFO] \n[INFO] --- surefire:3.5.0:test (default-test) @ datafaker ---\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running net.datafaker.providers.base.Medical_procedureCodeTest\n[ERROR] Tests run: 101, Failures: 100, Errors: 0, Skipped: 0, Time elapsed: 0.654 s <<< FAILURE! -- in net.datafaker.providers.base.Medical_procedureCodeTest\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.490 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Hjp216u\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.452 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"hhxZeXK\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.477 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KJNUWPU\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.443 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Xy6t956\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.448 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"GtQAW5k\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.462 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"9yJRgzn\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.452 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"e1zmqEP\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.472 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"4Z6Alv7\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.480 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"gGz9HSq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.451 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"eQycftd\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.455 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"eldPh3a\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.442 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"HgduCZW\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.500 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"leGrxXE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.488 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"UzvQBeX\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.494 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"74XxwgD\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.448 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"3QmwjYQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.485 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"fgSkBMN\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.450 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"pcxAXEj\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.437 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"AgmMzlz\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.456 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"2mMFd0w\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.448 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"eTCwvQe\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.450 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Fc0Vn7E\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.461 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"QG77cP1\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.467 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"J1t7x6M\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.462 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KZGeslq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.465 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"pG77AyT\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.455 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"TjKARhY\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.473 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"XQRKKCw\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.493 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"JX3mW1Q\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.499 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Y4tPEHk\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.478 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"XHBGpvE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.484 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"P4L0P8t\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.498 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ug7ma2k\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.487 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"FegM78A\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.461 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"CJPlbku\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.518 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"3kLEXL0\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.479 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"mWYvnYS\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.491 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Tv8KUKg\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.491 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"E3Cax4B\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.465 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"nQa9YGW\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.487 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Bbt7ElU\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.520 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"8kLvb3X\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.442 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"CUyy6kL\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.489 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"XrT1gJz\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.499 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"jF0G352\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.489 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"VPZ8Mfn\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.469 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"uuT3NBt\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.516 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"1HV6feq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.498 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"SK3Gwhx\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.521 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"erljbV5\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.512 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"fAFJvgd\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.481 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"cCFT2SC\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.469 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"WtfAMRQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.520 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"fxDNyAa\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.525 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"YcRB3x6\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.478 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"JGA6xAW\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.512 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"CG5mn2R\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.469 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"WB27HcK\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.493 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"WYxBxMT\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.494 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ssr4Yc4\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.477 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"sFt3lKG\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.499 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"eJhGDAQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.505 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"nxzm8MV\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.016 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"tZD7wvE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.033 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Lr1kfBX\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.034 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KCSeBRM\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.033 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"T8yR10C\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.034 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"wYk1pzG\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.033 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"rVsg84U\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.056 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"a3pH7Ay\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:1883)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:440)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:670)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.035 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"G20SRxE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.035 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"zRfN0Gu\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.035 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"mdjgUHa\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.035 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"16dhAkA\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"4KHt8en\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"x4dyXHh\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"Rrrep4j\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"DsBaSNC\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.036 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"KaasZRA\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.037 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"yq0R7BQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.037 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"0ndu5Ls\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.037 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"C4evYuZ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.038 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"e5rmkTC\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"aa6MBXT\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"6V3TgBS\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"JjknhKq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.040 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"uT60zap\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.040 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"XaaT2RJ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.040 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"4THZhXB\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.041 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"QTKXfAQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"gUS4YUe\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"PU5TtWH\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"uAGNkT0\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.040 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"PBSZ77V\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"SGu1FmG\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.040 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"tWYDHlZ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.039 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"ALaNe0b\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.043 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"puav2gp\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.046 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"MW2zRGQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU -- Time elapsed: 0.046 s <<< FAILURE!\njava.lang.AssertionError: \n\nExpecting actual:\n  \"NsQfTlN\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n\tat net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU(Medical_procedureCodeTest.java:24)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)\n\n[INFO] \n[INFO] Results:\n[INFO] \n[ERROR] Failures: \n[ERROR] net.datafaker.providers.base.Medical_procedureCodeTest.testProcedureCodeAU\n[ERROR]   Run 1: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Hjp216u\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 2: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"hhxZeXK\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 3: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KJNUWPU\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 4: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Xy6t956\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 5: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"GtQAW5k\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 6: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"9yJRgzn\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 7: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"e1zmqEP\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 8: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"4Z6Alv7\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 9: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"gGz9HSq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 10: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"eQycftd\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 11: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"eldPh3a\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 12: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"HgduCZW\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 13: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"leGrxXE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 14: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"UzvQBeX\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 15: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"74XxwgD\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 16: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"3QmwjYQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 17: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"fgSkBMN\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 18: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"pcxAXEj\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 19: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"AgmMzlz\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 20: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"2mMFd0w\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 21: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"eTCwvQe\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 22: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Fc0Vn7E\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 23: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"QG77cP1\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 24: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"J1t7x6M\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 25: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KZGeslq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 26: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"pG77AyT\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 27: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"TjKARhY\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 28: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"XQRKKCw\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 29: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"JX3mW1Q\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 30: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Y4tPEHk\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 31: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"XHBGpvE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 32: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"P4L0P8t\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 33: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ug7ma2k\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 34: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"FegM78A\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 35: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"CJPlbku\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 36: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"3kLEXL0\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 37: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"mWYvnYS\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 38: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Tv8KUKg\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 39: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"E3Cax4B\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 40: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"nQa9YGW\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 41: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Bbt7ElU\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 42: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"8kLvb3X\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 43: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"CUyy6kL\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 44: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"XrT1gJz\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 45: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"jF0G352\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 46: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"VPZ8Mfn\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 47: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"uuT3NBt\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 48: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"1HV6feq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 49: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"SK3Gwhx\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 50: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"erljbV5\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 51: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"fAFJvgd\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 52: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"cCFT2SC\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 53: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"WtfAMRQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 54: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"fxDNyAa\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 55: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"YcRB3x6\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 56: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"JGA6xAW\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 57: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"CG5mn2R\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 58: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"WB27HcK\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 59: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"WYxBxMT\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 60: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ssr4Yc4\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 61: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"sFt3lKG\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 62: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"eJhGDAQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 63: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"nxzm8MV\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 64: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"tZD7wvE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 65: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Lr1kfBX\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 66: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KCSeBRM\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 67: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"T8yR10C\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 68: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"wYk1pzG\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 69: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"rVsg84U\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 70: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"a3pH7Ay\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 71: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"G20SRxE\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 72: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"zRfN0Gu\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 73: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"mdjgUHa\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 74: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"16dhAkA\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 75: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"4KHt8en\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 76: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"x4dyXHh\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 77: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"Rrrep4j\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 78: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"DsBaSNC\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 79: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"KaasZRA\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 80: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"yq0R7BQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 81: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"0ndu5Ls\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 82: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"C4evYuZ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 83: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"e5rmkTC\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 84: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"aa6MBXT\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 85: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"6V3TgBS\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 86: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"JjknhKq\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 87: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"uT60zap\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 88: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"XaaT2RJ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 89: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"4THZhXB\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 90: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"QTKXfAQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 91: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"gUS4YUe\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 92: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"PU5TtWH\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 93: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"uAGNkT0\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 94: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"PBSZ77V\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 95: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"SGu1FmG\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 96: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"tWYDHlZ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 97: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"ALaNe0b\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 98: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"puav2gp\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 99: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"MW2zRGQ\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[ERROR]   Run 100: Medical_procedureCodeTest.testProcedureCodeAU:24 \nExpecting actual:\n  \"NsQfTlN\"\nto match pattern:\n  \"[A-Z][0-9]{2}\\.[0-9]{1,2}\"\n[INFO] \n[INFO] \n[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0\n[INFO] \n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  20.023 s\n[INFO] Finished at: 2024-12-04T23:12:07+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.5.0:test (default-test) on project datafaker: There are test failures.\n[ERROR] \n[ERROR] Please refer to /home/zhangzhe/fuzzing-repo/targets/datafaker-for-ablation-1/target/surefire-reports for the individual test results.\n[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"}