[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class FakeValuesGrouping_getTest {\n\n    @Test\n    public void testGetWithSingleFakeValue() {\n        // Given\n        FakeValuesInterface fakeValue = mock(FakeValuesInterface.class);\n        Map<String, Object> fakeMap = new HashMap<>();\n        fakeMap.put(\"key1\", \"value1\");\n        when(fakeValue.get(\"testKey\")).thenReturn(fakeMap);\n\n        FakeValuesGrouping fakeValuesGrouping = new FakeValuesGrouping();\n        fakeValuesGrouping.add(fakeValue);\n\n        // When\n        Map result = fakeValuesGrouping.get(\"testKey\");\n\n        // Then\n        assertEquals(fakeMap, result);\n    }\n\n    @Test\n    public void testGetWithMultipleFakeValues() {\n        // Given\n        FakeValuesInterface fakeValue1 = mock(FakeValuesInterface.class);\n        FakeValuesInterface fakeValue2 = mock(FakeValuesInterface.class);\n\n        Map<String, Object> fakeMap1 = new HashMap<>();\n        fakeMap1.put(\"key1\", \"value1\");\n        Map<String, Object> fakeMap2 = new HashMap<>();\n        fakeMap2.put(\"key2\", \"value2\");\n\n        when(fakeValue1.get(\"testKey\")).thenReturn(fakeMap1);\n        when(fakeValue2.get(\"testKey\")).thenReturn(fakeMap2);\n\n        FakeValuesGrouping fakeValuesGrouping = new FakeValuesGrouping();\n        fakeValuesGrouping.add(fakeValue1);\n        fakeValuesGrouping.add(fakeValue2);\n\n        // When\n        Map result = fakeValuesGrouping.get(\"testKey\");\n\n        // Then\n        Map<String, Object> expectedMap = new HashMap<>();\n        expectedMap.putAll(fakeMap1);\n        expectedMap.putAll(fakeMap2);\n        assertEquals(expectedMap, result);\n    }\n\n    @Test\n    public void testGetWithNoFakeValues() {\n        // Given\n        FakeValuesGrouping fakeValuesGrouping = new FakeValuesGrouping();\n\n        // When\n        Map result = fakeValuesGrouping.get(\"testKey\");\n\n        // Then\n        assertEquals(null, result);\n    }\n}\n"}]