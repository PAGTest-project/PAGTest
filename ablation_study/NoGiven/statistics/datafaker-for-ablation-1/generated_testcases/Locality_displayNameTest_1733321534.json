[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.Faker;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.RepeatedTest;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Locale;\nimport java.util.Random;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\n\npublic class Locality_displayNameTest {\n    private Locality locality;\n    private Faker faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = new Faker();\n        locality = new Locality(faker);\n    }\n\n    @Test\n    void testDisplayNameWithLocaleString() {\n        String localeString = locality.localeString();\n        Locale locale = Locale.forLanguageTag(localeString);\n        String expectedDisplayLanguage = locale.getDisplayLanguage(Locale.ROOT);\n        String expectedDisplayCountry = locale.getDisplayCountry(Locale.ROOT);\n        String expectedDisplayName = expectedDisplayLanguage;\n        if (!expectedDisplayCountry.isEmpty()) {\n            expectedDisplayName += \" (\" + expectedDisplayCountry + \")\";\n        }\n\n        String actualDisplayName = locality.displayName();\n        assertNotNull(actualDisplayName);\n        assertFalse(actualDisplayName.isEmpty());\n    }\n\n    @Test\n    void testDisplayNameWithLocaleStringWithoutReplacement() {\n        String localeString = locality.localeStringWithoutReplacement();\n        Locale locale = Locale.forLanguageTag(localeString);\n        String expectedDisplayLanguage = locale.getDisplayLanguage(Locale.ROOT);\n        String expectedDisplayCountry = locale.getDisplayCountry(Locale.ROOT);\n        String expectedDisplayName = expectedDisplayLanguage;\n        if (!expectedDisplayCountry.isEmpty()) {\n            expectedDisplayName += \" (\" + expectedDisplayCountry + \")\";\n        }\n\n        String actualDisplayName = locality.displayName();\n        assertNotNull(actualDisplayName);\n        assertFalse(actualDisplayName.isEmpty());\n    }\n\n    @RepeatedTest(10)\n    void testDisplayNameRandomness() {\n        String displayName1 = locality.displayName();\n        String displayName2 = locality.displayName();\n        assertNotNull(displayName1);\n        assertNotNull(displayName2);\n        assertFalse(displayName1.isEmpty());\n        assertFalse(displayName2.isEmpty());\n    }\n}\n"}]