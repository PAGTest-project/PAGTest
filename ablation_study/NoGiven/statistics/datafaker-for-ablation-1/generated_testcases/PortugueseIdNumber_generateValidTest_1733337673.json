[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class PortugueseIdNumber_generateValidTest {\n\n    @Test\n    public void testGenerateValid() {\n        BaseProviders faker = Mockito.mock(BaseProviders.class);\n        when(faker.random().nextBoolean()).thenReturn(true);\n        when(faker.options().option(PortugueseIdNumber.VALID_FIRST_DIGITS)).thenReturn('1');\n        when(faker.number().digits(7)).thenReturn(\"1234567\");\n\n        PortugueseIdNumber idNumberGenerator = new PortugueseIdNumber();\n        String result = idNumberGenerator.generateValid(faker);\n\n        assertEquals(\"112345678\", result);\n    }\n}\n"}]