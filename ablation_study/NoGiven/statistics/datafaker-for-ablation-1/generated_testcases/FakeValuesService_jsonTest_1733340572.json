[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class FakeValuesService_jsonTest {\n    private FakeValuesService fakeValuesService;\n\n    @BeforeEach\n    public void setUp() {\n        fakeValuesService = new FakeValuesService();\n    }\n\n    @Test\n    public void testJsonWithEvenFields() {\n        String[] fieldExpressions = {\"name\", \"John\", \"age\", \"30\"};\n        String result = fakeValuesService.json(fieldExpressions);\n        assertNotNull(result);\n        assertTrue(result.contains(\"name\"));\n        assertTrue(result.contains(\"age\"));\n    }\n\n    @Test\n    public void testJsonWithOddFields() {\n        String[] fieldExpressions = {\"name\", \"John\", \"age\"};\n        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {\n            fakeValuesService.json(fieldExpressions);\n        });\n        assertTrue(exception.getMessage().contains(\"Total number of field names and field values should be even\"));\n    }\n\n    @Test\n    public void testJsonWithEmptyFields() {\n        String[] fieldExpressions = {};\n        String result = fakeValuesService.json(fieldExpressions);\n        assertNotNull(result);\n        assertTrue(result.isEmpty());\n    }\n}\n"}]