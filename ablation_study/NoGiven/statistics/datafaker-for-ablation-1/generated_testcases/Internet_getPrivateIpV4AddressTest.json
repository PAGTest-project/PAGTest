[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.service.RandomService;\nimport org.junit.jupiter.api.Test;\nimport java.net.InetAddress;\nimport java.net.UnknownHostException;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class Internet_getPrivateIpV4AddressTest {\n\n    @Test\n    public void testGetPrivateIpV4Address() throws UnknownHostException {\n        // Given\n        Internet internet = new Internet(mock(BaseProviders.class));\n        RandomService randomService = mock(RandomService.class);\n        when(internet.faker.random()).thenReturn(randomService);\n\n        // When\n        when(randomService.nextInt(256)).thenReturn(1); // Ensure second, third, fourth octets are 1\n        when(randomService.nextInt(16)).thenReturn(0); // Ensure second octet for 172.x.x.x is 16\n\n        InetAddress result = internet.getPrivateIpV4Address();\n\n        // Then\n        byte[] address = result.getAddress();\n        assertTrue(address[0] == 10 || address[0] == 127 || address[0] == (byte) 169 || address[0] == (byte) 192 || address[0] == (byte) 172);\n        if (address[0] == (byte) 172) {\n            assertEquals(16, address[1]);\n        } else if (address[0] == (byte) 192) {\n            assertEquals(168, address[1]);\n        } else if (address[0] == (byte) 169) {\n            assertEquals(254, address[1]);\n        }\n        assertEquals(1, address[2]);\n        assertEquals(1, address[3]);\n    }\n}\n"}]