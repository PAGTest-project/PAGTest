[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\nimport net.datafaker.service.FakerContext;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class Commerce_promotionCodeTest {\n\n    private Commerce commerce;\n    private BaseProviders faker;\n\n    @BeforeEach\n    public void setupEnvironment() {\n        faker = Mockito.mock(BaseProviders.class);\n        when(faker.getContext()).thenReturn(Mockito.mock(FakerContext.class));\n        commerce = new Commerce(faker);\n    }\n\n    @Test\n    public void testPromotionCode() {\n        // Given\n        when(faker.resolve(\"commerce.promotion_code.adjective\")).thenReturn(\"Super\");\n        when(faker.resolve(\"commerce.promotion_code.noun\")).thenReturn(\"Sale\");\n        when(faker.number().digits(6)).thenReturn(\"123456\");\n\n        // When\n        String promotionCode = commerce.promotionCode(6);\n\n        // Then\n        assertEquals(\"SuperSale123456\", promotionCode);\n    }\n}\n"}]