[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.Number;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class PortugueseIdNumber_generateInvalidTest {\n\n    @Test\n    public void testGenerateInvalid() {\n        // Given\n        BaseProviders faker = Mockito.mock(BaseProviders.class);\n        Number numberMock = Mockito.mock(Number.class);\n        when(faker.number()).thenReturn(numberMock);\n        when(numberMock.digits(8)).thenReturn(\"12345678\");\n        PortugueseIdNumber portugueseIdNumber = new PortugueseIdNumber();\n\n        // When\n        String result = portugueseIdNumber.generateInvalid(faker);\n\n        // Then\n        assertEquals(\"1234567829\", result);\n    }\n}\n"}]