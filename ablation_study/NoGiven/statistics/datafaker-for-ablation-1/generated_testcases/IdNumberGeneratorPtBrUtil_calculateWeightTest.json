[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers.pt.br;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class IdNumberGeneratorPtBrUtil_calculateWeightTest {\n\n    @Test\n    public void testCalculateWeightSimple() {\n        String num = \"123456789012\";\n        int weight = 9;\n        int start = 4;\n        int end = 12;\n        int expected = 242; // Corrected manually for \"56789012\" with weight 9\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    public void testCalculateWeightWithZeroWeight() {\n        String num = \"123456789012\";\n        int weight = 0;\n        int start = 4;\n        int end = 12;\n        int expected = 0; // Any number multiplied by zero is zero\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    public void testCalculateWeightWithSingleDigit() {\n        String num = \"1\";\n        int weight = 10;\n        int start = 0;\n        int end = 1;\n        int expected = 10; // Only one digit '1' with weight 10\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    public void testCalculateWeightWithFullRange() {\n        String num = \"123456789012\";\n        int weight = 10;\n        int start = 0;\n        int end = 12;\n        int expected = 208; // Corrected manually for \"123456789012\" with weight 10\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n\n    @Test\n    public void testCalculateWeightWithNegativeWeight() {\n        String num = \"123456789012\";\n        int weight = -1;\n        int start = 4;\n        int end = 12;\n        int expected = -138; // Corrected manually for \"56789012\" with weight -1\n        assertEquals(expected, IdNumberGeneratorPtBrUtil.calculateWeight(num, weight, start, end));\n    }\n}\n"}]