[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.service.RandomService;\nimport org.junit.jupiter.api.Test;\nimport java.net.InetAddress;\nimport java.util.Arrays;\n\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class Internet_getPublicIpV4AddressTest {\n\n    @Test\n    public void testGetPublicIpV4Address() {\n        // Given\n        Internet internet = new Internet(mock(BaseProviders.class));\n        RandomService randomService = mock(RandomService.class);\n        when(internet.faker.random()).thenReturn(randomService);\n\n        // When\n        when(randomService.nextInt(256)).thenReturn(1, 2, 3, 4); // First call returns 1, second returns 2, etc.\n        when(randomService.nextInt(256)).thenReturn(5, 6, 7, 8); // Second iteration returns 5, 6, 7, 8\n\n        InetAddress result = internet.getPublicIpV4Address();\n\n        // Then\n        assertNotNull(result);\n        assertTrue(Arrays.binarySearch(new byte[]{10, 127, (byte) 169, (byte) 192, (byte) 172}, 5) < 0); // Ensure first octet is not private\n    }\n}\n"}]