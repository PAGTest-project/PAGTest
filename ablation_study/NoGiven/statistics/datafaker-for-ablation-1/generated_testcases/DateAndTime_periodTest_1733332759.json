[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.time.Period;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class DateAndTime_periodTest {\n    private DateAndTime dateAndTime;\n\n    @BeforeEach\n    public void setUp() {\n        dateAndTime = new DateAndTime(new BaseProviders());\n    }\n\n    @Test\n    public void testPeriodValidRange() {\n        Period min = Period.of(1, 2, 3);\n        Period max = Period.of(5, 6, 7);\n        Period result = dateAndTime.period(min, max);\n        assertTrue(result.getYears() >= min.getYears() && result.getYears() <= max.getYears());\n        assertTrue(result.getMonths() >= min.getMonths() && result.getMonths() <= max.getMonths());\n        assertTrue(result.getDays() >= min.getDays() && result.getDays() <= max.getDays());\n    }\n\n    @Test\n    public void testPeriodInvalidRange() {\n        Period min = Period.of(5, 6, 7);\n        Period max = Period.of(1, 2, 3);\n        assertThrows(IllegalArgumentException.class, () -> dateAndTime.period(min, max));\n    }\n\n    @Test\n    public void testPeriodEqualBounds() {\n        Period min = Period.of(3, 4, 5);\n        Period max = Period.of(3, 4, 5);\n        Period result = dateAndTime.period(min, max);\n        assertEquals(min, result);\n    }\n}\n"}]