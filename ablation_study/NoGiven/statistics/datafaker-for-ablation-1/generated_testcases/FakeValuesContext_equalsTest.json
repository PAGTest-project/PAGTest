[{"strategy": "generate", "code": "\npackage net.datafaker.service;\n\nimport org.junit.jupiter.api.Test;\n\nimport java.net.URL;\nimport java.util.Locale;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nclass FakeValuesContext_equalsTest {\n\n    @Test\n    void testEquals_SameInstance() {\n        FakeValuesContext context = FakeValuesContext.of(Locale.US);\n        assertTrue(context.equals(context));\n    }\n\n    @Test\n    void testEquals_DifferentClass() {\n        FakeValuesContext context = FakeValuesContext.of(Locale.US);\n        assertFalse(context.equals(new Object()));\n    }\n\n    @Test\n    void testEquals_Null() {\n        FakeValuesContext context = FakeValuesContext.of(Locale.US);\n        assertFalse(context.equals(null));\n    }\n\n    @Test\n    void testEquals_DifferentLocale() {\n        FakeValuesContext context1 = FakeValuesContext.of(Locale.US);\n        FakeValuesContext context2 = FakeValuesContext.of(Locale.UK);\n        assertFalse(context1.equals(context2));\n    }\n\n    @Test\n    void testEquals_DifferentFilename() {\n        FakeValuesContext context1 = FakeValuesContext.of(Locale.US, \"file1\", \"path1\");\n        FakeValuesContext context2 = FakeValuesContext.of(Locale.US, \"file2\", \"path1\");\n        assertFalse(context1.equals(context2));\n    }\n\n    @Test\n    void testEquals_DifferentPath() {\n        FakeValuesContext context1 = FakeValuesContext.of(Locale.US, \"file1\", \"path1\");\n        FakeValuesContext context2 = FakeValuesContext.of(Locale.US, \"file1\", \"path2\");\n        assertFalse(context1.equals(context2));\n    }\n\n    @Test\n    void testEquals_DifferentUrl() throws Exception {\n        URL url1 = new URL(\"http://example.com/1\");\n        URL url2 = new URL(\"http://example.com/2\");\n        FakeValuesContext context1 = FakeValuesContext.of(Locale.US, \"file1\", \"path1\", url1);\n        FakeValuesContext context2 = FakeValuesContext.of(Locale.US, \"file1\", \"path1\", url2);\n        assertFalse(context1.equals(context2));\n    }\n\n    @Test\n    void testEquals_AllFieldsEqual() throws Exception {\n        URL url = new URL(\"http://example.com\");\n        FakeValuesContext context1 = FakeValuesContext.of(Locale.US, \"file1\", \"path1\", url);\n        FakeValuesContext context2 = FakeValuesContext.of(Locale.US, \"file1\", \"path1\", url);\n        assertTrue(context1.equals(context2));\n    }\n}\n"}]