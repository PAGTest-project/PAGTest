[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.function.Function;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\nclass BaseFaker_getProviderTest {\n\n    @Test\n    void testGetProvider() {\n        // Given\n        BaseFaker baseFaker = new BaseFaker();\n        Class<TestProvider> clazz = TestProvider.class;\n        Function<ProviderRegistration, TestProvider> valueSupplier = mock(Function.class);\n        TestProvider expectedProvider = new TestProvider(baseFaker);\n        when(valueSupplier.apply(any())).thenReturn(expectedProvider);\n\n        // When\n        TestProvider actualProvider = baseFaker.getProvider(clazz, valueSupplier);\n\n        // Then\n        assertEquals(expectedProvider, actualProvider);\n        verify(valueSupplier).apply(baseFaker);\n    }\n\n    static class TestProvider extends AbstractProvider<ProviderRegistration> {\n        protected TestProvider(ProviderRegistration faker) {\n            super(faker);\n        }\n    }\n}\n"}]