[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport net.datafaker.Faker;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.RepeatedTest;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.List;\nimport java.util.Random;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class Locality_localeStringWithoutReplacementTest {\n    private Locality locality;\n    private Faker faker;\n\n    @BeforeEach\n    public void setUp() {\n        faker = new Faker();\n        locality = new Locality(faker.base());\n    }\n\n    @RepeatedTest(100)\n    void localeStringWithoutReplacement() {\n        Random random = new Random();\n        List<String> allLocales = locality.allSupportedLocales();\n        String firstLocale = locality.localeStringWithoutReplacement(random);\n        assertThat(allLocales).contains(firstLocale);\n\n        for (int i = 1; i < allLocales.size(); i++) {\n            String nextLocale = locality.localeStringWithoutReplacement(random);\n            assertThat(allLocales).contains(nextLocale);\n            assertThat(nextLocale).isNotEqualTo(firstLocale);\n            firstLocale = nextLocale;\n        }\n\n        // After all locales have been used, the list should reset and start again\n        String resetLocale = locality.localeStringWithoutReplacement(random);\n        assertThat(allLocales).contains(resetLocale);\n    }\n\n    @Test\n    void localeStringWithoutReplacement_reset() {\n        Random random = new Random();\n        List<String> allLocales = locality.allSupportedLocales();\n        for (int i = 0; i < allLocales.size(); i++) {\n            locality.localeStringWithoutReplacement(random);\n        }\n\n        // After all locales have been used, the list should reset and start again\n        String resetLocale = locality.localeStringWithoutReplacement(random);\n        assertThat(allLocales).contains(resetLocale);\n    }\n}\n"}]