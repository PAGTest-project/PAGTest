[{"strategy": "generate", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport java.util.regex.Pattern;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.when;\n\npublic class AmericanIdNumber_generateValidTest {\n\n    @Test\n    public void testGenerateValid() {\n        // Given\n        BaseProviders f = Mockito.mock(BaseProviders.class);\n        AmericanIdNumber americanIdNumber = new AmericanIdNumber();\n\n        // When\n        when(f.regexify(\"[0-8]\\\\d{2}-\\\\d{2}-\\\\d{4}\")).thenReturn(\"123-45-6789\");\n\n        // Then\n        String result = americanIdNumber.generateValid(f);\n        assertTrue(Pattern.compile(\"[0-8]\\\\d{2}-\\\\d{2}-\\\\d{4}\").matcher(result).matches());\n    }\n}\n"}]