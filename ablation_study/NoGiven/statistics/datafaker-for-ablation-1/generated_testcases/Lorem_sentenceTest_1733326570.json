[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Lorem_sentenceTest {\n    private Lorem lorem;\n\n    @BeforeEach\n    public void setUp() {\n        BaseProviders faker = new BaseProviders();\n        lorem = new Lorem(faker);\n    }\n\n    @Test\n    public void testSentenceWithFixedWordCount() {\n        String sentence = lorem.sentence(3, 0);\n        int wordCount = sentence.split(\"\\\\s+\").length;\n        assertEquals(4, wordCount);\n    }\n\n    @Test\n    public void testSentenceWithRandomWordsAdded() {\n        String sentence = lorem.sentence(3, 3);\n        int wordCount = sentence.split(\"\\\\s+\").length;\n        assertTrue(wordCount >= 4 && wordCount <= 6);\n    }\n\n    @Test\n    public void testSentenceWithZeroWordCount() {\n        String sentence = lorem.sentence(0, 0);\n        assertEquals(\".\", sentence);\n    }\n\n    @Test\n    public void testSentenceWithNegativeWordCount() {\n        String sentence = lorem.sentence(-1, 0);\n        assertEquals(\".\", sentence);\n    }\n\n    @Test\n    public void testSentenceWithRandomWordsAddedAndNegativeBase() {\n        String sentence = lorem.sentence(-1, 3);\n        int wordCount = sentence.split(\"\\\\s+\").length;\n        assertTrue(wordCount >= 0 && wordCount <= 3);\n    }\n}\n"}]