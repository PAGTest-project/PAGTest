[{"strategy": "retry", "code": "\npackage net.datafaker.idnumbers;\n\nimport net.datafaker.providers.base.BaseProviders;\nimport net.datafaker.providers.base.IdNumber;\nimport net.datafaker.providers.base.PersonIdNumber;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\npublic class GeorgianIdNumber_generateValidTest {\n\n    @Test\n    public void testGenerateValid() {\n        BaseProviders faker = Mockito.mock(BaseProviders.class);\n        IdNumber.IdNumberRequest request = Mockito.mock(IdNumber.IdNumberRequest.class);\n\n        when(faker.numerify(\"###########\")).thenReturn(\"12345678901\");\n        when(Utils.birthday(faker, request)).thenReturn(\"1990-01-01\");\n        when(Utils.gender(faker, request)).thenReturn(\"Male\");\n\n        GeorgianIdNumber georgianIdNumber = new GeorgianIdNumber();\n        PersonIdNumber result = georgianIdNumber.generateValid(faker, request);\n\n        assertEquals(\"12345678901\", result.getIdNumber());\n        assertEquals(\"1990-01-01\", result.getBirthday());\n        assertEquals(\"Male\", result.getGender());\n    }\n}\n"}]