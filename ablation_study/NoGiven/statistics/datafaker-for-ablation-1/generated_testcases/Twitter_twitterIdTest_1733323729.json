[{"strategy": "generate", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.regex.Pattern;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class Twitter_twitterIdTest {\n    private Twitter twitter;\n\n    @BeforeEach\n    public void setUp() {\n        twitter = new Twitter(new BaseProviders());\n    }\n\n    @Test\n    void testTwitterIdValidLength() {\n        int expectedLength = 10;\n        String twitterId = twitter.twitterId(expectedLength);\n        assertThat(twitterId).hasSize(expectedLength);\n    }\n\n    @Test\n    void testTwitterIdInvalidLength() {\n        int expectedLength = 5;\n        String twitterId = twitter.twitterId(expectedLength);\n        assertThat(twitterId).isNotNull();\n    }\n\n    @Test\n    void testTwitterIdFormat() {\n        int expectedLength = 15;\n        String twitterId = twitter.twitterId(expectedLength);\n        Pattern pattern = Pattern.compile(\"\\\\d{\" + expectedLength + \"}\");\n        assertThat(twitterId).matches(pattern);\n    }\n\n    @Test\n    void testTwitterIdUniqueness() {\n        int expectedLength = 20;\n        String twitterId1 = twitter.twitterId(expectedLength);\n        String twitterId2 = twitter.twitterId(expectedLength);\n        assertThat(twitterId1).isNotEqualTo(twitterId2);\n    }\n}\n"}]