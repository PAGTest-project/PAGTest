[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.time.LocalTime;\nimport java.time.temporal.ChronoUnit;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Time_pastTest {\n\n    private Time time;\n\n    @BeforeEach\n    public void setup() {\n        BaseProviders faker = new BaseProviders() {\n            @Override\n            public Number number() {\n                return new Number() {\n                    @Override\n                    public long numberBetween(long min, long max) {\n                        return (long) (Math.random() * (max - min) + min);\n                    }\n                };\n            }\n        };\n        time = new Time(faker);\n    }\n\n    @Test\n    public void testPast() {\n        int atLeast = 1;\n        ChronoUnit unit = ChronoUnit.HOURS;\n\n        long result = time.past(atLeast, unit);\n\n        LocalTime now = LocalTime.now();\n        long atLeastTime = now.minus(atLeast, unit).toNanoOfDay();\n        long timeNano = now.toNanoOfDay();\n\n        assertTrue(result >= atLeastTime && result < timeNano);\n    }\n}\n"}]