[{"strategy": "retry", "code": "\npackage net.datafaker.providers.base;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class Twitter_getLinkTest {\n    private Twitter twitter;\n\n    @BeforeEach\n    public void setUp() {\n        twitter = new Twitter(new BaseProviders() {\n            @Override\n            public void addUrl(java.util.Locale locale, java.net.URL url) {\n                // Implementation not needed for testing\n            }\n        });\n    }\n\n    @Test\n    public void testGetLinkWithValidExtraLength() {\n        String username = twitter.userName();\n        int extraLength = 5;\n        String link = twitter.getLink(username, extraLength);\n        assertTrue(link.startsWith(\"https://twitter.com/\" + username + \"/\"));\n        assertEquals(link.length(), \"https://twitter.com/\".length() + username.length() + extraLength + 1);\n    }\n\n    @Test\n    public void testGetLinkWithExtraLengthLessThanFour() {\n        String username = twitter.userName();\n        int extraLength = 3;\n        String link = twitter.getLink(username, extraLength);\n        assertTrue(link.startsWith(\"https://twitter.com/\" + username + \"/\"));\n        assertEquals(link.length(), \"https://twitter.com/\".length() + username.length() + extraLength + 1);\n    }\n}\n"}]