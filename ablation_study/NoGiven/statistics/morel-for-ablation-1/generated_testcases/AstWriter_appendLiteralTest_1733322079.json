[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.ast;\n\nimport org.junit.jupiter.api.Test;\nimport java.math.BigDecimal;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nclass AstWriter_appendLiteralTest {\n\n    @Test\n    void testAppendLiteralString() {\n        AstWriter writer = new AstWriter();\n        writer.appendLiteral(\"test\\\\\\\"string\");\n        assertEquals(\"\\\"test\\\\\\\\\\\\\\\"string\\\"\", writer.toString());\n    }\n\n    @Test\n    void testAppendLiteralCharacter() {\n        AstWriter writer = new AstWriter();\n        writer.appendLiteral('\\\\');\n        assertEquals(\"#\\\"\\\\\\\\\\\"\", writer.toString());\n    }\n\n    @Test\n    void testAppendLiteralBigDecimal() {\n        AstWriter writer = new AstWriter();\n        writer.appendLiteral(new BigDecimal(\"-123.45\"));\n        assertEquals(\"~123.45\", writer.toString());\n    }\n\n    @Test\n    void testAppendLiteralBuiltIn() {\n        AstWriter writer = new AstWriter();\n        BuiltIn builtIn = new BuiltIn();\n        builtIn.mlName = \"find\";\n        builtIn.structure = \"List\";\n        writer.appendLiteral(builtIn);\n        assertEquals(\"#find List\", writer.toString());\n    }\n\n    @Test\n    void testAppendLiteralOther() {\n        AstWriter writer = new AstWriter();\n        writer.appendLiteral(123);\n        assertEquals(\"123\", writer.toString());\n    }\n}\n"}]