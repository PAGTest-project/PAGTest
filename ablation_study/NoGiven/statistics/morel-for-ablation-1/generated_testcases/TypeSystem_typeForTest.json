[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.type;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass TypeSystem_typeForTest {\n\n    private TypeSystem typeSystem;\n    private Map<Type.Key, Type> typeByKey;\n\n    @BeforeEach\n    void setUp() {\n        typeSystem = new TypeSystem();\n        typeByKey = new HashMap<>();\n        typeSystem.typeByKey.putAll(typeByKey);\n    }\n\n    @Test\n    void testTypeFor_ExistingKey() {\n        Type.Key key = new Type.Key() {\n            @Override\n            public Type toType(TypeSystem ts) {\n                return new Type() {};\n            }\n        };\n        Type expectedType = new Type() {};\n        typeByKey.put(key, expectedType);\n\n        Type result = typeSystem.typeFor(key);\n        assertEquals(expectedType, result);\n    }\n\n    @Test\n    void testTypeFor_NewKey() {\n        Type.Key key = new Type.Key() {\n            @Override\n            public Type toType(TypeSystem ts) {\n                return new Type() {};\n            }\n        };\n        Type expectedType = key.toType(typeSystem);\n\n        Type result = typeSystem.typeFor(key);\n        assertEquals(expectedType, result);\n        assertTrue(typeSystem.typeByKey.containsKey(key));\n        assertEquals(expectedType, typeSystem.typeByKey.get(key));\n    }\n}\n"}]