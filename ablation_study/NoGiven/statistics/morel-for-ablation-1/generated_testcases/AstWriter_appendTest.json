[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.ast;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.Test;\n\nclass AstWriter_appendTest {\n\n    @Test\n    void testAppendWithParentheses() {\n        AstWriter writer = new AstWriter();\n        AstNode mockNode = new MockAstNode(Op.PLUS);\n\n        writer.append(mockNode, 1, 0);\n\n        assertEquals(\"(mock)\", writer.toString());\n    }\n\n    @Test\n    void testAppendWithoutParentheses() {\n        AstWriter writer = new AstWriter();\n        AstNode mockNode = new MockAstNode(Op.PLUS);\n\n        writer.append(mockNode, 0, 0);\n\n        assertEquals(\"mock\", writer.toString());\n    }\n\n    private static class MockAstNode extends AstNode {\n        private final Op op;\n\n        MockAstNode(Op op) {\n            this.op = op;\n        }\n\n        @Override\n        public void unparse(AstWriter writer, int left, int right) {\n            writer.append(\"mock\");\n        }\n\n        @Override\n        public Op getOp() {\n            return op;\n        }\n    }\n}\n"}]