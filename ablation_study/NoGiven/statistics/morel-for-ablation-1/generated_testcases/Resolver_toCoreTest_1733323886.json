[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.compile;\n\nimport net.hydromatic.morel.ast.Ast;\nimport net.hydromatic.morel.ast.Core;\nimport net.hydromatic.morel.ast.Op;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Resolver_toCoreTest {\n\n    @Test\n    void testToCoreValDecl() {\n        Resolver resolver = new Resolver(null, null, null, null, null);\n        Ast.Decl valDecl = new Ast.ValDecl();\n        valDecl.op = Op.VAL_DECL;\n\n        Core.Decl result = resolver.toCore(valDecl);\n\n        assertNotNull(result);\n        assertTrue(result instanceof Core.ValDecl);\n    }\n\n    @Test\n    void testToCoreDatatypeDecl() {\n        Resolver resolver = new Resolver(null, null, null, null, null);\n        Ast.Decl datatypeDecl = new Ast.DatatypeDecl();\n        datatypeDecl.op = Op.DATATYPE_DECL;\n\n        Core.Decl result = resolver.toCore(datatypeDecl);\n\n        assertNotNull(result);\n        assertTrue(result instanceof Core.DatatypeDecl);\n    }\n\n    @Test\n    void testToCoreUnknownDecl() {\n        Resolver resolver = new Resolver(null, null, null, null, null);\n        Ast.Decl unknownDecl = new Ast.Decl() {\n            @Override\n            public Op getOp() {\n                return Op.UNKNOWN;\n            }\n        };\n\n        assertThrows(AssertionError.class, () -> resolver.toCore(unknownDecl));\n    }\n}\n"}]