[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.AbstractMap;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Pair_equalsTest {\n\n    @Test\n    void testEquals_SameInstance() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 42);\n        assertTrue(pair.equals(pair));\n    }\n\n    @Test\n    void testEquals_DifferentType() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 42);\n        assertFalse(pair.equals(\"not a pair\"));\n    }\n\n    @Test\n    void testEquals_SameContent() {\n        Pair<String, Integer> pair1 = new Pair<>(\"key\", 42);\n        Pair<String, Integer> pair2 = new Pair<>(\"key\", 42);\n        assertTrue(pair1.equals(pair2));\n    }\n\n    @Test\n    void testEquals_DifferentContent() {\n        Pair<String, Integer> pair1 = new Pair<>(\"key\", 42);\n        Pair<String, Integer> pair2 = new Pair<>(\"key\", 43);\n        assertFalse(pair1.equals(pair2));\n    }\n\n    @Test\n    void testEquals_MapEntrySameContent() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 42);\n        Map.Entry<String, Integer> entry = new AbstractMap.SimpleEntry<>(\"key\", 42);\n        assertTrue(pair.equals(entry));\n    }\n\n    @Test\n    void testEquals_MapEntryDifferentContent() {\n        Pair<String, Integer> pair = new Pair<>(\"key\", 42);\n        Map.Entry<String, Integer> entry = new AbstractMap.SimpleEntry<>(\"key\", 43);\n        assertFalse(pair.equals(entry));\n    }\n}\n"}]