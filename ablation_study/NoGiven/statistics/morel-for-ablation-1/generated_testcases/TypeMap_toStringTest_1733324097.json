[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.compile;\n\nimport net.hydromatic.morel.ast.AstNode;\nimport net.hydromatic.morel.util.Unifier;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class TypeMap_toStringTest {\n\n    @Test\n    public void testToString() {\n        // Given\n        TypeSystem typeSystem = new TypeSystem();\n        Map<AstNode, Unifier.Term> nodeTypeTerms = new HashMap<>();\n        Unifier.Substitution substitution = new Unifier.Substitution();\n        TypeMap typeMap = new TypeMap(typeSystem, nodeTypeTerms, substitution);\n\n        AstNode node1 = new AstNode(null, null);\n        Unifier.Term term1 = new Unifier.Variable(\"var1\");\n        nodeTypeTerms.put(node1, term1);\n\n        AstNode node2 = new AstNode(null, null);\n        Unifier.Term term2 = new Unifier.Variable(\"var2\");\n        nodeTypeTerms.put(node2, term2);\n\n        // When\n        String result = typeMap.toString();\n\n        // Then\n        String expected = \"terms:\\n\" +\n                \"var1: AstNode{null, null}\\n\" +\n                \"var2: AstNode{null, null}\\n\" +\n                \"substitution:\\n\";\n        assertEquals(expected, result);\n    }\n}\n"}]