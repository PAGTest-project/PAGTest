[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.type;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.function.UnaryOperator;\nimport static org.junit.jupiter.api.Assertions.assertSame;\nimport static org.junit.jupiter.api.Assertions.assertNotSame;\nimport static org.mockito.Mockito.*;\n\nclass ListType_copyTest {\n\n    @Test\n    void testCopySameElementType() {\n        TypeSystem typeSystem = mock(TypeSystem.class);\n        Type elementType = mock(Type.class);\n        ListType listType = new ListType(elementType);\n\n        when(elementType.copy(eq(typeSystem), any())).thenReturn(elementType);\n\n        ListType result = listType.copy(typeSystem, mock(UnaryOperator.class));\n\n        assertSame(listType, result);\n    }\n\n    @Test\n    void testCopyDifferentElementType() {\n        TypeSystem typeSystem = mock(TypeSystem.class);\n        Type elementType = mock(Type.class);\n        Type newElementType = mock(Type.class);\n        ListType listType = new ListType(elementType);\n\n        when(elementType.copy(eq(typeSystem), any())).thenReturn(newElementType);\n        when(typeSystem.listType(eq(newElementType))).thenReturn(new ListType(newElementType));\n\n        ListType result = listType.copy(typeSystem, mock(UnaryOperator.class));\n\n        assertNotSame(listType, result);\n        assertSame(newElementType, result.elementType);\n    }\n}\n"}]