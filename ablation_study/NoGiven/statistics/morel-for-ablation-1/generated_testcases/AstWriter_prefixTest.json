[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.ast;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass AstWriter_prefixTest {\n\n    @Test\n    void testPrefixWithParenthesize() {\n        StringBuilder sb = new StringBuilder();\n        AstWriter writer = new AstWriter(sb, true);\n        Op op = new Op();\n        AstNode node = new AstNode();\n\n        writer.prefix(0, op, node, 0);\n\n        assertEquals(\"(op padded)\", sb.toString());\n    }\n\n    @Test\n    void testPrefixWithoutParenthesize() {\n        StringBuilder sb = new StringBuilder();\n        AstWriter writer = new AstWriter(sb, false);\n        Op op = new Op();\n        AstNode node = new AstNode();\n\n        writer.prefix(0, op, node, 0);\n\n        assertEquals(\"op padded\", sb.toString());\n    }\n\n    private static class Op {\n        String padded = \"op padded\";\n        int left = 0;\n        int right = 0;\n    }\n\n    private static class AstNode {\n        Op op = new Op();\n\n        void unparse(AstWriter writer, int left, int right) {\n            writer.append(op.padded);\n        }\n    }\n}\n"}]