[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.compile;\n\nimport net.hydromatic.morel.ast.Core;\nimport net.hydromatic.morel.foreign.Calcite;\nimport org.apache.calcite.rel.RelNode;\nimport org.apache.calcite.tools.RelBuilder;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.Mockito;\n\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nclass CalciteCompiler_toRelTest {\n\n    @Test\n    void testToRelWithNonNullRelNode() {\n        // Given\n        Calcite calcite = mock(Calcite.class);\n        RelBuilder relBuilder = mock(RelBuilder.class);\n        when(calcite.relBuilder()).thenReturn(relBuilder);\n        when(relBuilder.build()).thenReturn(mock(RelNode.class));\n\n        CalciteCompiler compiler = new CalciteCompiler(null, calcite);\n        Environment env = mock(Environment.class);\n        Core.Exp expression = mock(Core.Exp.class);\n\n        // When\n        RelNode result = compiler.toRel(env, expression);\n\n        // Then\n        assertNotNull(result);\n    }\n\n    @Test\n    void testToRelWithNullRelNode() {\n        // Given\n        Calcite calcite = mock(Calcite.class);\n        RelBuilder relBuilder = mock(RelBuilder.class);\n        when(calcite.relBuilder()).thenReturn(relBuilder);\n        when(relBuilder.build()).thenReturn(null);\n\n        CalciteCompiler compiler = new CalciteCompiler(null, calcite);\n        Environment env = mock(Environment.class);\n        Core.Exp expression = mock(Core.Exp.class);\n\n        // When\n        RelNode result = compiler.toRel(env, expression);\n\n        // Then\n        assertNull(result);\n    }\n}\n"}]