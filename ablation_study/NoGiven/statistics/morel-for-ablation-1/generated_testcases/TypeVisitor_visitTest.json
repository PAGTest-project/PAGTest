[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.type;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic class TypeVisitor_visitTest {\n\n    @Test\n    public void testVisitTupleType() {\n        // Given\n        TypeVisitor<String> visitor = new TypeVisitor<String>() {\n            @Override\n            public String visit(TypeVar typeVar) {\n                return \"TypeVar\";\n            }\n\n            @Override\n            public String visit(TupleType tupleType) {\n                StringBuilder sb = new StringBuilder();\n                for (Type argType : tupleType.argTypes) {\n                    sb.append(argType.accept(this));\n                }\n                return sb.toString();\n            }\n        };\n\n        Type typeVar1 = mock(TypeVar.class);\n        Type typeVar2 = mock(TypeVar.class);\n        when(typeVar1.accept(visitor)).thenReturn(\"TypeVar1\");\n        when(typeVar2.accept(visitor)).thenReturn(\"TypeVar2\");\n\n        TupleType tupleType = new TupleType(Arrays.asList(typeVar1, typeVar2));\n\n        // When\n        String result = visitor.visit(tupleType);\n\n        // Then\n        assertEquals(\"TypeVar1TypeVar2\", result);\n    }\n}\n"}]