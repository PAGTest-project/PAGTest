[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.ast;\n\nimport net.hydromatic.morel.compile.Environments;\nimport net.hydromatic.morel.type.Binding;\nimport net.hydromatic.morel.type.TypeSystem;\nimport com.google.common.collect.ImmutableRangeSet;\nimport com.google.common.collect.Range;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static net.hydromatic.morel.ast.CoreBuilder.core;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class FromBuilder_scanTest {\n    private TypeSystem typeSystem;\n    private FromBuilder fromBuilder;\n\n    @BeforeEach\n    public void setUp() {\n        typeSystem = new TypeSystem();\n        fromBuilder = new FromBuilder(typeSystem, Environments.empty());\n    }\n\n    @Test\n    public void testScanWithValidPat() {\n        Core.Pat pat = core.idPat(typeSystem.getType(\"INT\"), \"x\");\n        FromBuilder result = fromBuilder.scan(pat);\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testScanWithInvalidPat() {\n        Core.Pat pat = core.idPat(typeSystem.getType(\"INT\"), \"invalid\");\n        FromBuilder result = fromBuilder.scan(pat);\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testScanWithEmptyRange() {\n        Core.Pat pat = core.idPat(typeSystem.getType(\"INT\"), \"x\");\n        FromBuilder result = fromBuilder.scan(pat);\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testScanWithNonEmptyRange() {\n        Core.Pat pat = core.idPat(typeSystem.getType(\"INT\"), \"x\");\n        FromBuilder result = fromBuilder.scan(pat);\n        assertEquals(fromBuilder, result);\n    }\n\n    @Test\n    public void testScanWithComplexPat() {\n        Core.Pat pat = core.recordPat(typeSystem.getType(\"RECORD\"), \"record\", core.idPat(typeSystem.getType(\"INT\"), \"x\"), core.idPat(typeSystem.getType(\"INT\"), \"y\"));\n        FromBuilder result = fromBuilder.scan(pat);\n        assertEquals(fromBuilder, result);\n    }\n}\n"}]