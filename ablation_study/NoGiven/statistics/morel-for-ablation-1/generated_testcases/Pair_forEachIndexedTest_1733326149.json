[{"strategy": "generate", "code": "\npackage net.hydromatic.morel.util;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\nclass Pair_forEachIndexedTest {\n\n    @Test\n    void testForEachIndexed() {\n        List<String> ks = Arrays.asList(\"a\", \"b\", \"c\");\n        List<Integer> vs = Arrays.asList(1, 2, 3);\n        StringBuilder result = new StringBuilder();\n\n        Pair.forEachIndexed(ks, vs, (index, k, v) -> result.append(index).append(k).append(v));\n\n        assertEquals(\"0a11b22c3\", result.toString());\n    }\n\n    @Test\n    void testForEachIndexedWithDifferentLengths() {\n        List<String> ks = Arrays.asList(\"a\", \"b\");\n        List<Integer> vs = Arrays.asList(1, 2, 3);\n        StringBuilder result = new StringBuilder();\n\n        Pair.forEachIndexed(ks, vs, (index, k, v) -> result.append(index).append(k).append(v));\n\n        assertEquals(\"0a11b2\", result.toString());\n    }\n\n    @Test\n    void testForEachIndexedWithEmptyLists() {\n        List<String> ks = Collections.emptyList();\n        List<Integer> vs = Collections.emptyList();\n        StringBuilder result = new StringBuilder();\n\n        Pair.forEachIndexed(ks, vs, (index, k, v) -> result.append(index).append(k).append(v));\n\n        assertEquals(\"\", result.toString());\n    }\n}\n"}]