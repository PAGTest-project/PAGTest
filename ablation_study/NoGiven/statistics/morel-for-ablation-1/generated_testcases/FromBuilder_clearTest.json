[{"strategy": "retry", "code": "\npackage net.hydromatic.morel.ast;\n\nimport net.hydromatic.morel.compile.Environments;\nimport net.hydromatic.morel.type.Binding;\nimport net.hydromatic.morel.type.PrimitiveType;\nimport net.hydromatic.morel.type.TypeSystem;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class FromBuilder_clearTest {\n    private FromBuilder fromBuilder;\n    private TypeSystem typeSystem;\n    private List<Core.FromStep> steps;\n    private List<Binding> bindings;\n\n    @BeforeEach\n    public void setUp() {\n        typeSystem = new TypeSystem();\n        fromBuilder = new FromBuilder(typeSystem, Environments.empty());\n        steps = new ArrayList<>();\n        bindings = new ArrayList<>();\n    }\n\n    @Test\n    public void testClear() {\n        // Given\n        fromBuilder.addAll(steps);\n        fromBuilder.scan(new Core.IdPat(PrimitiveType.INT, \"i\", 0), new Core.ListExp(PrimitiveType.INT, new ArrayList<>()));\n        fromBuilder.yield_(new Core.Id(new Core.IdPat(PrimitiveType.INT, \"i\", 0)));\n\n        // When\n        fromBuilder.clear();\n\n        // Then\n        assertTrue(fromBuilder.bindings().isEmpty());\n    }\n}\n"}]