{"Environments": [{"method_name": "bind(IdPat,Object)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}, {"method_name": "bindAll(Iterable<Object>)", "file_path": "src/test/java/net/hydromatic/morel/compile/EnvironmentTest.java", "testclass_name": "EnvironmentTest", "testcase_name": "testOptimizeSubEnvironment"}], "Puffin": [{"method_name": "execute(Stream<Source>,PrintWriter)", "file_path": "src/test/java/net/hydromatic/morel/LintTest.java", "testclass_name": "LintTest", "testcase_name": "testLint"}], "Calcite": [{"method_name": "withDataSets(Map<String,DataSet>)", "file_path": "src/test/java/net/hydromatic/morel/CalciteTest.java", "testclass_name": "CalciteTest", "testcase_name": "testNestedSchema"}], "ScriptTest": [{"method_name": "checkRun(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "test"}, {"method_name": "checkRun(String)", "file_path": "src/test/java/net/hydromatic/morel/ScriptTest.java", "testclass_name": "ScriptTest", "testcase_name": "testScript"}], "Sat": [{"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testTrue"}, {"method_name": "solve(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testFalse"}, {"method_name": "variable(String)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": "not(Term)", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testBuild"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testTrue"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "testcase_name": "testFalse"}], "Ml": [{"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromPredicate"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromView"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testMapFilterToFrom"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFilterMapFilterMapToFrom"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromFrom"}, {"method_name": ")", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromEmptyFrom"}, {"method_name": "assertAnalyze(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testAnalyze"}, {"method_name": "assertPlan(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInline"}, {"method_name": "assertPlan(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFn"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFn"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFnUnit"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testLetAtomic"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineChained"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromPredicate"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromView"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testMapFilterToFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFilterMapFilterMapToFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testFromEmptyFrom"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase"}, {"method_name": "assertEval(Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase2"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineFnUnit"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testLetAtomic"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase"}, {"method_name": "assertCore(int,Matcher)", "file_path": "src/test/java/net/hydromatic/morel/InlineTest.java", "testclass_name": "InlineTest", "testcase_name": "testInlineCase2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScott"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScott2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottOrder"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottJoin"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottJoin2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testScottJoin2Dot"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testQueryList"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testNative"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testHybridCalciteToMorel"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testFullCalcite"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testFullCalcite2"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testFullCalcite3"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteFrom"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithVariable"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithVariableNoInlining"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithFunction"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCalciteWithHybridFunction"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testUnion"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testExcept"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testIntersect"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testElem"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testNotElem"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testExists"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testNotExists"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testExistsCorrelated"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCorrelatedListSubQuery"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testCorrelatedScalar"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testRecursive"}, {"method_name": "ml(String)", "file_path": "src/test/java/net/hydromatic/morel/AlgebraTest.java", "testclass_name": "AlgebraTest", "testcase_name": "testRecursive2"}], "PairList": [{"method_name": "add(T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testBuilder"}, {"method_name": "add(Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(int,Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "add(int,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "remove(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "clear()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "addAll(int,PairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "immutable()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "set(int,Pair<T,U>)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "set(int,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairList"}, {"method_name": "addAll(ImmutableList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "addAll(ImmutablePairList)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testAddAll"}, {"method_name": "of(Map)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOfMap"}, {"method_name": "toImmutableMap()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOfMap"}, {"method_name": "withCapacity(int)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListWithCapacity"}, {"method_name": "of()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOf"}, {"method_name": "copyOf(T,U,T,U)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testPairListOf"}, {"method_name": "transform(BiFunction)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "transform2(BiFunction)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "anyMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "allMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "noMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "firstMatch(BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testTransform"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/PairListTest.java", "testclass_name": "PairListTest", "testcase_name": "testBuilder"}], "TailList": [{"method_name": "clear()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "size()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "get(int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "set(int,E)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "add(int,E)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "addAll(Collection)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}, {"method_name": "isEmpty()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTailList"}], "FromBuilder": [{"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "build()", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testBasic"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testTrivialYield3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested3"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested4"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedSameName"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested0"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNested2"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testNestedFromTuple"}, {"method_name": "OrderItem>)", "file_path": "src/test/java/net/hydromatic/morel/FromBuilderTest.java", "testclass_name": "FromBuilderTest", "testcase_name": "testWhereOrder"}], "Ord": [{"method_name": "forEachIndexed(Iterable,BiConsumer)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testOrd"}], "MapList": [{"method_name": "of(int,IntFunction)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testMapList"}], "Folder": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}, {"method_name": "combineAll(List)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFolder"}], "Core": [{"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testEq"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testBetween"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}, {"method_name": "Exp)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testFlatten"}, {"method_name": "isConstant()", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testConstant"}, {"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testSubTrue"}], "Static": [{"method_name": "shorterThan(Iterable,int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testShorterThan"}, {"method_name": "find(List,Predicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFind"}, {"method_name": "nextPowerOfTwo(int)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPower"}, {"method_name": "transform(List,Function)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testTransform"}], "Pos": [{"method_name": "split(String,char,String)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPos"}, {"method_name": "toString()", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPos"}], "Codes": [{"method_name": "floatToString(float)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testToString"}, {"method_name": "isNegative(float)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testFloatBit"}], "Pair": [{"method_name": "anyMatch(Iterable,Iterable,BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "allMatch(Iterable,Iterable,BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}, {"method_name": "noneMatch(Iterable,Iterable,BiPredicate)", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testPairAllMatch"}], "RangeExtent": [{"method_name": "iterable", "file_path": "src/test/java/net/hydromatic/morel/UtilTest.java", "testclass_name": "UtilTest", "testcase_name": "testRangeExtent"}], "Extents": [{"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2c"}, {"method_name": "Exp>)", "file_path": "src/test/java/net/hydromatic/morel/compile/ExtentTest.java", "testclass_name": "ExtentTest", "testcase_name": "testAnalysis2d"}], "Shell": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testShell"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testShellNoBanner"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testOneLine"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testTwoLines"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testReal"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testEmptyLines"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testSingleLineComment"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testSingleLineCommentWithQuote"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testMultiLineLet"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUse"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testMatchWarning"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseEmpty"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseMissing"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testUseSelfReferential"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testStringDepth"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testPrintDepth"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testPrintLength"}, {"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testLineWidth"}], "Main": [{"method_name": "run()", "file_path": "src/test/java/net/hydromatic/morel/ShellTest.java", "testclass_name": "ShellTest", "testcase_name": "testRaw"}]}