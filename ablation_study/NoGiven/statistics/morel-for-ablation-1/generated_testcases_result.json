{"generated_testcases": [{"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]id(String,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_idTest.java"}, {"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]infix(int,AstNode,Op,AstNode,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_infixTest.java"}, {"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]prefix(int,Op,AstNode,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_prefixTest.java"}, {"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]binary(String,AstNode,String,AstNode,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_binaryTest.java"}, {"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]append(AstNode,int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_appendTest.java"}, {"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]appendAll(Iterable<? extends AstNode>,int,Op,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_appendAllTest.java"}, {"src/main/java/net/hydromatic/morel/ast/AstWriter.java.AstWriter[AstWriter]appendLiteral(Comparable)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/AstWriter_appendLiteralTest.java"}, {"src/main/java/net/hydromatic/morel/ast/FromBuilder.java.FromBuilder[FromBuilder]yield_(boolean,List<Binding>,Core.Exp)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/ast/FromBuilder_yield_Test.java"}, {"src/main/java/net/hydromatic/morel/eval/Closure.java.Closure[boolean]bindRecurse(Core.Pat,Object,BiConsumer<Core.NamedPat, Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/eval/Closure_bindRecurseTest.java"}, {"src/main/java/net/hydromatic/morel/eval/DescriberImpl.java.DescriberImpl[Describer]start(String,Consumer<Detail>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/eval/DescriberImpl_startTest.java"}, {"src/main/java/net/hydromatic/morel/eval/Session.java.Session[void]withShell(Shell,Consumer<String>,Consumer<Session>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/eval/Session_withShellTest.java"}, {"src/main/java/net/hydromatic/morel/eval/Session.java.Session[void]withoutHandlingExceptions(Consumer<Session>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/eval/Session_withoutHandlingExceptionsTest.java"}, {"src/main/java/net/hydromatic/morel/compile/CalciteCompiler.java.CalciteCompiler[RelNode]toRel(Environment,Core.Exp)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/CalciteCompiler_toRelTest.java"}, {"src/main/java/net/hydromatic/morel/compile/CalciteCompiler.java.CalciteCompiler[Code]compileArg(Context,Core.Exp)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/CalciteCompiler_compileArgTest.java"}, {"src/main/java/net/hydromatic/morel/compile/PatternCoverageChecker.java.PatternCoverageChecker[boolean]isCoveredBy(Core.Pat,List<Core.Pat>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/PatternCoverageChecker_isCoveredByTest.java"}, {"src/main/java/net/hydromatic/morel/compile/Compiler.java.Compiler[Code]compile(Context,Core.Exp)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/Compiler_compileTest.java"}, {"src/main/java/net/hydromatic/morel/compile/TypeResolver.java.TypeResolver[Resolved]deduceType(Environment,Ast.Decl,TypeSystem)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/TypeResolver_deduceTypeTest.java"}, {"src/main/java/net/hydromatic/morel/compile/CompileException.java.CompileException[StringBuilder]describeTo(StringBuilder)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/CompileException_describeToTest.java"}, {"src/main/java/net/hydromatic/morel/compile/Resolver.java.Resolver[Resolver]of(TypeMap,Environment,Session)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/Resolver_ofTest.java"}, {"src/main/java/net/hydromatic/morel/compile/Resolver.java.Resolver[Core.Decl]toCore(Ast.Decl)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/Resolver_toCoreTest.java"}, {"src/main/java/net/hydromatic/morel/compile/Analyzer.java.Analyzer[Analysis]analyze(TypeSystem,Environment,AstNode)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/Analyzer_analyzeTest.java"}, {"src/main/java/net/hydromatic/morel/compile/TypeMap.java.TypeMap[String]toString()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/TypeMap_toStringTest.java"}, {"src/main/java/net/hydromatic/morel/compile/TypeMap.java.TypeMap[boolean]typeIsVariable(AstNode)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/compile/TypeMap_typeIsVariableTest.java"}, {"src/main/java/net/hydromatic/morel/util/MartelliUnifier.java.MartelliUnifier[Result]unify(List<TermTerm>,Map<Variable, Action>,Tracer)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/MartelliUnifier_unifyTest.java"}, {"src/main/java/net/hydromatic/morel/util/ConsList.java.ConsList[List<E>]of(E,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/ConsList_ofTest.java"}, {"src/main/java/net/hydromatic/morel/util/ConsList.java.ConsList[E]get(int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/ConsList_getTest.java"}, {"src/main/java/net/hydromatic/morel/util/ConsList.java.ConsList[int]size()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/ConsList_sizeTest.java"}, {"src/main/java/net/hydromatic/morel/util/ConsList.java.ConsList[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/ConsList_equalsTest.java"}, {"src/main/java/net/hydromatic/morel/util/MapEntry.java.MapEntry[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/MapEntry_equalsTest.java"}, {"src/main/java/net/hydromatic/morel/util/MapEntry.java.MapEntry[int]hashCode()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/MapEntry_hashCodeTest.java"}, {"src/main/java/net/hydromatic/morel/util/RobinsonUnifier.java.RobinsonUnifier[Result]unify(List<TermTerm>,Map<Variable, Action>,Tracer)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/RobinsonUnifier_unifyTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[int]compareTo(Pair<T1, T2>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_compareToTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[Map<K, V>]toMap(Iterable<Pair<K, V>>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_toMapTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[List<Pair<K, V>>]zip(List<K>,List<V>,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_zipTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[boolean]allMatch(Iterable<K>,Iterable<V>,BiPredicate<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_allMatchTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[boolean]noneMatch(Iterable<K>,Iterable<V>,BiPredicate<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_noneMatchTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[boolean]anyMatch(Iterable<K>,Iterable<V>,BiPredicate<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_anyMatchTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[void]forEach(Iterable<K>,Iterable<V>,BiConsumer<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_forEachTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[void]forEachIndexed(Iterable<? extends K>,Iterable<? extends V>,PairWithOrdinalConsumer<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_forEachIndexedTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[List<Pair<K, V>>]zipMutable(List<K>,List<V>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_zipMutableTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[List<K>]left(List<? extends Map.Entry<K, V>>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_leftTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[List<V>]right(List<? extends Map.Entry<K, V>>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_rightTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[Iterable<Pair<T, T>>]adjacents(Iterable<T>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_adjacentsTest.java"}, {"src/main/java/net/hydromatic/morel/util/Pair.java.Pair[Iterable<Pair<T, T>>]firstAnd(Iterable<T>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Pair_firstAndTest.java"}, {"src/main/java/net/hydromatic/morel/util/JavaVersion.java.JavaVersion[JavaVersion]of()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/JavaVersion_ofTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[Collector<T, ImmutableList.Builder<T>, ImmutableList<T>>]toImmutableList()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_toImmutableListTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[boolean]shorterThan(Iterable<E>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_shorterThanTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[List<E>]minus(List<E>,E)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_minusTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[Map<K, V>]plus(Map<K, V>,K,V)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_plusTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[ImmutableList<T>]transformEager(Iterable<? extends E>,Function<E, T>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_transformEagerTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[int]find(List<? extends E>,Predicate<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_findTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[List<E>]intersect(List<E>,Iterable<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_intersectTest.java"}, {"src/main/java/net/hydromatic/morel/util/Static.java.Static[String]str(StringBuilder)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Static_strTest.java"}, {"src/main/java/net/hydromatic/morel/util/Sat.java.Sat[Map<Variable, Boolean>]solve(Term)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Sat_solveTest.java"}, {"src/main/java/net/hydromatic/morel/util/Sat.java.Sat[Variable]variable(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/Sat_variableTest.java"}, {"src/main/java/net/hydromatic/morel/util/ThreadLocals.java.ThreadLocals[void]let(ThreadLocal<T>,T,Runnable)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/util/ThreadLocals_letTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeVar.java.TypeVar[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeVar_equalsTest.java"}, {"src/main/java/net/hydromatic/morel/type/Binding.java.Binding[boolean]equals(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Binding_equalsTest.java"}, {"src/main/java/net/hydromatic/morel/type/Binding.java.Binding[String]toString()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Binding_toStringTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Binding]bindTyCon(DataType,String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_bindTyConTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]lookupInternal(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_lookupInternalTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]lookup(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_lookupTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]lookupOpt(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_lookupOptTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]typeFor(Key)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_typeForTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[SortedMap<String, Type>]typesFor(Map<String, ? extends Key>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_typesForTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]fnType(Type,Type,Type)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_fnTypeTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[List<Type>]dataTypes(List<Keys.DataTypeKey>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_dataTypesTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]dataTypeScheme(String,List<TypeVar>,SortedMap<String, Type.Key>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_dataTypeSchemeTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]recordOrScalarType(Collection<Map.Entry<String, Type>>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_recordOrScalarTypeTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[RecordLikeType]recordType(Collection<Map.Entry<String, Type>>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_recordTypeTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[boolean]areContiguousIntegers(Iterable<String>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_areContiguousIntegersTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[ProgressiveRecordType]progressiveRecordType(Collection<Map.Entry<String, Type>>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_progressiveRecordTypeTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]forallType(int,Function<ForallHelper, Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_forallTypeTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[List<TypeVar>]typeVariables(int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_typeVariablesTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]apply(Type,List<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_applyTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeSystem.java.TypeSystem[Type]ensureClosed(Type)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeSystem_ensureClosedTest.java"}, {"src/main/java/net/hydromatic/morel/type/TupleType.java.TupleType[SortedMap<String, Type>]argNameTypes()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TupleType_argNameTypesTest.java"}, {"src/main/java/net/hydromatic/morel/type/TupleType.java.TupleType[TupleType]copy(TypeSystem,UnaryOperator<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TupleType_copyTest.java"}, {"src/main/java/net/hydromatic/morel/type/TupleType.java.TupleType[List<String>]ordinalNames(int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TupleType_ordinalNamesTest.java"}, {"src/main/java/net/hydromatic/morel/type/DataType.java.DataType[DataType]copy(TypeSystem,UnaryOperator<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/DataType_copyTest.java"}, {"src/main/java/net/hydromatic/morel/type/DataType.java.DataType[StringBuilder]describe(StringBuilder)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/DataType_describeTest.java"}, {"src/main/java/net/hydromatic/morel/type/ForallType.java.ForallType[ForallType]copy(TypeSystem,UnaryOperator<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/ForallType_copyTest.java"}, {"src/main/java/net/hydromatic/morel/type/ForallType.java.ForallType[Type]substitute(TypeSystem,List<? extends Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/ForallType_substituteTest.java"}, {"src/main/java/net/hydromatic/morel/type/Keys.java.Keys[List<Type.Key>]ordinals(int)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Keys_ordinalsTest.java"}, {"src/main/java/net/hydromatic/morel/type/Keys.java.Keys[Type.Key]progressiveRecord(SortedMap<String, ? extends Type.Key>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Keys_progressiveRecordTest.java"}, {"src/main/java/net/hydromatic/morel/type/Keys.java.Keys[DataTypeKey]datatype(String,List<? extends Type.Key>,SortedMap<String, Type.Key>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Keys_datatypeTest.java"}, {"src/main/java/net/hydromatic/morel/type/Keys.java.Keys[SortedMap<String, Type.Key>]toKeys(SortedMap<String, ? extends Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Keys_toKeysTest.java"}, {"src/main/java/net/hydromatic/morel/type/Keys.java.Keys[Type.Key]toProgressive(Type.Key)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/Keys_toProgressiveTest.java"}, {"src/main/java/net/hydromatic/morel/type/ListType.java.ListType[ListType]copy(TypeSystem,UnaryOperator<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/ListType_copyTest.java"}, {"src/main/java/net/hydromatic/morel/type/TypeVisitor.java.TypeVisitor[R]visit(TupleType)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/TypeVisitor_visitTest.java"}, {"src/main/java/net/hydromatic/morel/type/FnType.java.FnType[FnType]copy(TypeSystem,UnaryOperator<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/FnType_copyTest.java"}, {"src/main/java/net/hydromatic/morel/type/RecordType.java.RecordType[RecordType]copy(TypeSystem,UnaryOperator<Type>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/RecordType_copyTest.java"}, {"src/main/java/net/hydromatic/morel/type/RecordType.java.RecordType[SortedMap<String, V>]map(String,V)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/RecordType_mapTest.java"}, {"src/main/java/net/hydromatic/morel/type/RecordType.java.RecordType[int]compareNames(String,String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/RecordType_compareNamesTest.java"}, {"src/main/java/net/hydromatic/morel/type/RangeExtent.java.RangeExtent[String]toString()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/type/RangeExtent_toStringTest.java"}, {"src/main/java/net/hydromatic/morel/foreign/Converters.java.Converters[Function<E, Object>]forType(RelDataType,Type)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/foreign/Converters_forTypeTest.java"}, {"src/main/java/net/hydromatic/morel/foreign/Converters.java.Converters[Function<Object, Object>]toCalcite(Type,RelDataTypeFactory)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/foreign/Converters_toCalciteTest.java"}, {"src/main/java/net/hydromatic/morel/foreign/Converters.java.Converters[Function<Object, Object>]toMorel(Type,RelDataTypeFactory)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/foreign/Converters_toMorelTest.java"}, {"src/main/java/net/hydromatic/morel/foreign/Calcite.java.Calcite[Code]code(Environment,RelNode,Type)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/foreign/Calcite_codeTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Parsers.java.Parsers[String]unquoteIdentifier(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Parsers_unquoteIdentifierTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Parsers.java.Parsers[String]unquoteString(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Parsers_unquoteStringTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Parsers.java.Parsers[char]unquoteCharLiteral(String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Parsers_unquoteCharLiteralTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Parsers.java.Parsers[StringBuilder]appendId(StringBuilder,String)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Parsers_appendIdTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Span.java.Span[Span]addAll(Iterable<? extends AstNode>)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Span_addAllTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Span.java.Span[Span]add(MorelParser)": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Span_addTest.java"}, {"src/main/java/net/hydromatic/morel/parse/Span.java.Span[Pos]pos()": "/home/zhangzhe/fuzzing-repo/targets/java/morel-for-ablation-1/src/test/java/net/hydromatic/morel/parse/Span_posTest.java"}]}