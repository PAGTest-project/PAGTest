{"file_path": "src/test/java/net/hydromatic/morel/SatTest.java", "testclass_name": "SatTest", "dependencies": ["package net.hydromatic.morel;", "import net.hydromatic.morel.util.Sat;", "import net.hydromatic.morel.util.Sat.Term;", "import net.hydromatic.morel.util.Sat.Variable;", "import com.google.common.collect.ImmutableMap;", "import org.junit.jupiter.api.Test;", "import java.util.Map;", "import static org.hamcrest.CoreMatchers.notNullValue;", "import static org.hamcrest.CoreMatchers.nullValue;", "import static org.hamcrest.MatcherAssert.assertThat;", "import static org.hamcrest.Matchers.hasToString;", "import static org.hamcrest.core.Is.is;"], "name": "SatTest", "description": "Unit tests for the Sat class, focusing on building and solving SAT formulas.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testBuild", "primary_tested": ["Sat.solve(Term)", "Sat.variable(String)", "Sat.not(Term)", "Sat.or(Term...)", "Sat.and(Term...)"], "associated_methods": [], "external_dependencies": {"modules": ["Sat", "Sat.Variable", "Sat.Term", "ImmutableMap"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests building a SAT formula with three clauses, each containing three terms, and verifies its satisfiability."}, {"name": "testTrue", "primary_tested": ["Sat.solve(Term)", "Sat.and(Term...)"], "associated_methods": [], "external_dependencies": {"modules": ["Sat", "Sat.Term", "ImmutableMap"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the 'true' condition by creating an 'and' term with zero arguments and verifies its satisfiability."}, {"name": "testFalse", "primary_tested": ["Sat.solve(Term)", "Sat.or(Term...)"], "associated_methods": [], "external_dependencies": {"modules": ["Sat", "Sat.Term", "ImmutableMap"], "class_members": [], "project_specific_resources": []}, "category": "unit", "fixtures_used": [], "description": "Tests the 'false' condition by creating an 'or' term with zero arguments and verifies its unsatisfiability."}]}