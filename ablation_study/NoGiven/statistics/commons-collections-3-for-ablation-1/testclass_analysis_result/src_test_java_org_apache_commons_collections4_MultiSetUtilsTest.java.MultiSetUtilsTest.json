{"file_path": "src/test/java/org/apache/commons/collections4/MultiSetUtilsTest.java", "testclass_name": "MultiSetUtilsTest", "dependencies": ["package org.apache.commons.collections4;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import java.util.Arrays;", "import org.apache.commons.collections4.multiset.HashMultiSet;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "MultiSetUtilsTest", "description": "Unit tests for MultiSetUtils class, focusing on various utility methods for MultiSet operations.", "class_members": {"variables": [{"name": "fullArray", "type": "String[]"}, {"name": "multiSet", "type": "MultiSet<String>"}]}, "fixtures": ["setUp"], "test_cases": [{"name": "testEmptyMultiSet", "primary_tested": ["MultiSetUtils.emptyMultiSet()"], "external_dependencies": {"modules": ["MultiSetUtils", "MultiSet", "UnsupportedOperationException"]}, "category": "unit", "description": "Tests the creation and behavior of an empty MultiSet, ensuring it is read-only."}, {"name": "testPredicatedMultiSet", "primary_tested": ["MultiSetUtils.predicatedMultiSet(MultiSet<String>,Predicate<String>)"], "associated_methods": ["MultiSet.size()", "MultiSet.getCount(String)"], "external_dependencies": {"modules": ["MultiSetUtils", "MultiSet", "Predicate", "NullPointerException", "IllegalArgumentException"], "class_members": [{"name": "multiSet", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the predicated MultiSet creation and behavior, ensuring it adheres to the provided predicate."}, {"name": "testSynchronizedMultiSet", "primary_tested": ["MultiSetUtils.synchronizedMultiSet(MultiSet<String>)"], "associated_methods": ["MultiSet.add(String)"], "external_dependencies": {"modules": ["MultiSetUtils", "MultiSet"], "class_members": [{"name": "multiSet", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the synchronized MultiSet creation and behavior, ensuring it can be modified safely in a multi-threaded environment."}, {"name": "testUnmodifiableMultiSet", "primary_tested": ["MultiSetUtils.unmodifiableMultiSet(MultiSet<String>)"], "external_dependencies": {"modules": ["MultiSetUtils", "MultiSet", "UnsupportedOperationException", "NullPointerException"], "class_members": [{"name": "multiSet", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the unmodifiable MultiSet creation and behavior, ensuring it is read-only."}]}