{"file_path": "src/test/java/org/apache/commons/collections4/bloomfilter/LayerManagerTest.java", "testclass_name": "LayerManagerTest", "dependencies": ["package org.apache.commons.collections4.bloomfilter;", "import static org.junit.jupiter.api.Assertions.assertArrayEquals;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNotEquals;", "import static org.junit.jupiter.api.Assertions.assertNotSame;", "import static org.junit.jupiter.api.Assertions.assertSame;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.util.ArrayList;", "import java.util.Arrays;", "import java.util.Deque;", "import java.util.LinkedList;", "import java.util.List;", "import java.util.NoSuchElementException;", "import java.util.function.Consumer;", "import java.util.function.Predicate;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.ValueSource;"], "name": "LayerManagerTest", "description": "Unit tests for the LayerManager class, focusing on various functionalities such as advancing layers, building, clearing, copying, and managing BloomFilters.", "class_members": {"variables": [{"name": "shape", "type": "Shape"}], "methods": [{"name": "testingBuilder", "signature": "LayerManager.Builder<BloomFilter> testingBuilder()"}]}, "fixtures": [], "test_cases": [{"name": "testAdvanceOnCount", "primary_tested": ["LayerManager.ExtendCheck.advanceOnCount(int)"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.ExtendCheck.advanceOnCount(int)"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "TestingHashers", "Predicate"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the advanceOnCount functionality of the LayerManager, ensuring it advances correctly based on the count."}, {"name": "testAdvanceOnCountInvalidArguments", "primary_tested": ["LayerManager.ExtendCheck.advanceOnCount(int)"], "external_dependencies": {"modules": ["LayerManager", "IllegalArgumentException"]}, "category": "unit", "description": "Tests the validation of arguments for the advanceOnCount method, ensuring it throws IllegalArgumentException for invalid values."}, {"name": "testAdvanceOnPopulated", "primary_tested": ["LayerManager.ExtendCheck.advanceOnPopulated()"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.ExtendCheck.advanceOnPopulated()"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "TestingHashers", "Predicate"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the advanceOnPopulated functionality of the LayerManager, ensuring it advances correctly based on population."}, {"name": "testAdvanceOnSaturation", "primary_tested": ["LayerManager.ExtendCheck.advanceOnSaturation(double)"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.ExtendCheck.advanceOnSaturation(double)"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "IncrementingHasher", "Shape", "Predicate"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the advanceOnSaturation functionality of the LayerManager, ensuring it advances correctly based on saturation."}, {"name": "testBuilder", "primary_tested": ["LayerManager.builder()"], "associated_methods": ["LayerManager.Builder.get()", "LayerManager.Builder.setSupplier(Supplier)", "LayerManager.Builder.setCleanup(Consumer)", "LayerManager.Builder.setExtendCheck(Predicate)"], "external_dependencies": {"modules": ["LayerManager", "NullPointerException"]}, "category": "unit", "description": "Tests the builder functionality of the LayerManager, ensuring it throws NullPointerException for invalid configurations."}, {"name": "testClear", "primary_tested": ["LayerManager.clear()"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.next()", "LayerManager.getDepth()", "BloomFilter.cardinality()"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "TestingHashers", "SimpleBloomFilter"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the clear functionality of the LayerManager, ensuring it resets the depth and clears the target BloomFilter."}, {"name": "testCopy", "primary_tested": ["LayerManager.copy()"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.next()", "LayerManager.getDepth()", "LayerManager.processBloomFilterPair(LayerManager, BiPredicate)"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "TestingHashers", "SimpleBloomFilter", "Arrays"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the copy functionality of the LayerManager, ensuring it creates a deep copy with the same properties."}, {"name": "testForEachBloomFilter", "primary_tested": ["LayerManager.processBloomFilters(Consumer)"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(BloomFilter)", "LayerManager.processBloomFilters(Consumer)"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "SimpleBloomFilter", "TestingHashers", "ArrayList", "Arrays"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the forEachBloomFilter functionality of the LayerManager, ensuring it processes each BloomFilter correctly."}, {"name": "testGet", "primary_tested": ["LayerManager.get(int)"], "associated_methods": ["LayerManager.getDepth()", "LayerManager.get(int)"], "external_dependencies": {"modules": ["LayerManager", "SimpleBloomFilter", "NoSuchElementException"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the get functionality of the LayerManager, ensuring it retrieves the correct BloomFilter and handles invalid indices."}, {"name": "testNeverAdvance", "primary_tested": ["LayerManager.ExtendCheck.neverAdvance()"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.ExtendCheck.neverAdvance()"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "TestingHashers", "Predicate"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the neverAdvance functionality of the LayerManager, ensuring it never advances regardless of the state."}, {"name": "testNextAndGetDepth", "primary_tested": ["LayerManager.next()", "LayerManager.getDepth()"], "associated_methods": ["LayerManager.getTarget()", "BloomFilter.merge(Hasher)", "LayerManager.next()", "LayerManager.getDepth()"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "TestingHashers", "SimpleBloomFilter"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the next and getDepth functionalities of the LayerManager, ensuring it correctly advances and retrieves the depth."}, {"name": "testNoCleanup", "primary_tested": ["LayerManager.Cleanup.noCleanup()"], "associated_methods": ["LayerManager.Cleanup.noCleanup()"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "LinkedList", "Consumer"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the noCleanup functionality of the LayerManager, ensuring it does not perform any cleanup."}, {"name": "testOnMaxSize", "primary_tested": ["LayerManager.Cleanup.onMaxSize(int)"], "associated_methods": ["LayerManager.Cleanup.onMaxSize(int)"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "LinkedList", "Consumer"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the onMaxSize functionality of the LayerManager, ensuring it cleans up based on the maximum size."}, {"name": "testOnMaxSizeIllegalValues", "primary_tested": ["LayerManager.Cleanup.onMaxSize(int)"], "external_dependencies": {"modules": ["LayerManager", "IllegalArgumentException"]}, "category": "unit", "description": "Tests the validation of arguments for the onMaxSize method, ensuring it throws IllegalArgumentException for invalid values."}, {"name": "testRemoveEmptyTarget", "primary_tested": ["LayerManager.Cleanup.removeEmptyTarget()"], "associated_methods": ["LayerManager.Cleanup.removeEmptyTarget()"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "SimpleBloomFilter", "IndexExtractor", "LinkedList", "Consumer"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the removeEmptyTarget functionality of the LayerManager, ensuring it removes empty BloomFilters correctly."}, {"name": "testTarget", "primary_tested": ["LayerManager.getTarget()"], "associated_methods": ["LayerManager.getTarget()", "LayerManager.Builder.setSupplier(Supplier)", "LayerManager.Builder.setExtendCheck(Predicate)", "LayerManager.Builder.setCleanup(Consumer)"], "external_dependencies": {"modules": ["LayerManager", "BloomFilter", "SimpleBloomFilter", "Predicate", "Consumer"], "class_members": [{"name": "shape", "type": "variable"}]}, "category": "unit", "description": "Tests the target functionality of the LayerManager, ensuring it correctly initializes and uses the target BloomFilter."}]}