{"file_path": "src/test/java/org/apache/commons/collections4/FactoryUtilsTest.java", "testclass_name": "FactoryUtilsTest", "dependencies": ["package org.apache.commons.collections4;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertNotSame;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import static org.junit.jupiter.api.Assertions.assertSame;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.io.IOException;", "import java.io.Serializable;", "import java.util.Date;", "import java.util.TimeZone;", "import org.apache.commons.collections4.functors.ConstantFactory;", "import org.apache.commons.collections4.functors.ExceptionFactory;", "import org.junit.jupiter.api.Test;"], "name": "FactoryUtilsTest", "description": "Unit tests for FactoryUtils class, which provides utility methods for creating factories.", "class_members": {"nested_classes": [{"name": "Mock1", "description": "Internal mock class with constructors and equals/hashCode methods."}, {"name": "Mock2", "description": "Internal mock class implementing Serializable with constructors and equals/hashCode methods."}, {"name": "Mock3", "description": "Internal mock class with a static counter and a default constructor."}]}, "fixtures": [], "test_cases": [{"name": "testConstantFactoryConstant", "primary_tested": ["FactoryUtils.constantFactory(Integer)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Integer"]}, "category": "unit", "description": "Tests the constant factory functionality with a non-null constant."}, {"name": "testConstantFactoryNull", "primary_tested": ["FactoryUtils.constantFactory(Object)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils"]}, "category": "unit", "description": "Tests the constant factory functionality with a null constant."}, {"name": "testExceptionFactory", "primary_tested": ["FactoryUtils.exceptionFactory()"], "external_dependencies": {"modules": ["FactoryUtils", "FunctorException"]}, "category": "unit", "description": "Tests the exception factory functionality."}, {"name": "testInstantiateFactoryComplex", "primary_tested": ["FactoryUtils.instantiateFactory(Class,Class[],Object[])"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Date", "TimeZone"]}, "category": "unit", "description": "Tests the instantiate factory functionality with complex parameters."}, {"name": "testInstantiateFactoryMismatch", "primary_tested": ["FactoryUtils.instantiateFactory(Class,Class[],Object[])"], "external_dependencies": {"modules": ["FactoryUtils", "Date"]}, "category": "unit", "description": "Tests the instantiate factory functionality with mismatched parameters."}, {"name": "testInstantiateFactoryNoConstructor", "primary_tested": ["FactoryUtils.instantiateFactory(Class,Class[],Object[])"], "external_dependencies": {"modules": ["FactoryUtils", "Date"]}, "category": "unit", "description": "Tests the instantiate factory functionality with no matching constructor."}, {"name": "testInstantiateFactoryNull", "primary_tested": ["FactoryUtils.instantiateFactory(Class)"], "external_dependencies": {"modules": ["FactoryUtils"]}, "category": "unit", "description": "Tests the instantiate factory functionality with a null class."}, {"name": "testInstantiateFactorySimple", "primary_tested": ["FactoryUtils.instantiateFactory(Class)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Mock3"]}, "category": "unit", "description": "Tests the instantiate factory functionality with a simple class."}, {"name": "testNullFactory", "primary_tested": ["FactoryUtils.nullFactory()"], "external_dependencies": {"modules": ["Factory", "FactoryUtils"]}, "category": "unit", "description": "Tests the null factory functionality."}, {"name": "testPrototypeFactoryNull", "primary_tested": ["FactoryUtils.prototypeFactory(Object)"], "external_dependencies": {"modules": ["ConstantFactory", "FactoryUtils"]}, "category": "unit", "description": "Tests the prototype factory functionality with a null prototype."}, {"name": "testPrototypeFactoryPublicBad", "primary_tested": ["FactoryUtils.prototypeFactory(Object)"], "external_dependencies": {"modules": ["FactoryUtils"]}, "category": "unit", "description": "Tests the prototype factory functionality with a bad prototype."}, {"name": "testPrototypeFactoryPublicCloneMethod", "primary_tested": ["FactoryUtils.prototypeFactory(Date)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Date"]}, "category": "unit", "description": "Tests the prototype factory functionality with a prototype having a public clone method."}, {"name": "testPrototypeFactoryPublicCopyConstructor", "primary_tested": ["FactoryUtils.prototypeFactory(Mock1)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Mock1"]}, "category": "unit", "description": "Tests the prototype factory functionality with a prototype having a public copy constructor."}, {"name": "testPrototypeFactoryPublicSerialization", "primary_tested": ["FactoryUtils.prototypeFactory(Integer)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Integer"]}, "category": "unit", "description": "Tests the prototype factory functionality with a prototype that is serializable."}, {"name": "testPrototypeFactoryPublicSerializationError", "primary_tested": ["FactoryUtils.prototypeFactory(Mock2)"], "external_dependencies": {"modules": ["Factory", "FactoryUtils", "Mock2", "FunctorException", "IOException"]}, "category": "unit", "description": "Tests the prototype factory functionality with a prototype that causes a serialization error."}, {"name": "testSingletonPatternInSerialization", "primary_tested": [], "external_dependencies": {"modules": ["ExceptionFactory", "TestUtils"]}, "category": "unit", "description": "Tests that all Factory singletons hold the singleton pattern in the serialization/deserialization process."}]}