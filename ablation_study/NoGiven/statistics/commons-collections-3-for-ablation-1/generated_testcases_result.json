{"generated_testcases": [{"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Boolean]getBoolean(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getBooleanTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Byte]getByte(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getByteTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Double]getDouble(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getDoubleTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Float]getFloat(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getFloatTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Integer]getInteger(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getIntegerTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Long]getLong(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getLongTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Map<?, ?>]getMap(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Number]getNumber(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getNumberTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[V]getObject(Map<? super K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getObjectTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Short]getShort(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getShortTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[String]getString(Map<? super K, ?>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_getStringTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Map<V, K>]invertMap(Map<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_invertMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[IterableMap<K, V>]iterableMap(Map<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_iterableMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[IterableSortedMap<K, V>]iterableSortedMap(SortedMap<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_iterableSortedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[MultiValueMap<K, V>]multiValueMap(Map<K, C>,Class<C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_multiValueMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[void]populateMap(Map<K, V>,Iterable<? extends E>,Transformer<E, K>,Transformer<E, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_populateMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[void]safeAddToMap(Map<? super K, Object>,K,Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_safeAddToMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Map<String, Object>]toMap(ResourceBundle)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_toMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[Properties]toProperties(Map<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_toPropertiesTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[IterableMap<K, V>]transformedMap(Map<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_transformedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils[SortedMap<K, V>]transformedSortedMap(SortedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MapUtils_transformedSortedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[Collection<V>]getCollection(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MultiMapUtils_getCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[Bag<V>]getValuesAsBag(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MultiMapUtils_getValuesAsBagTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[List<V>]getValuesAsList(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MultiMapUtils_getValuesAsListTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[Set<V>]getValuesAsSet(MultiValuedMap<K, V>,K)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MultiMapUtils_getValuesAsSetTest.java"}, {"src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils[MultiValuedMap<K, V>]transformedMultiValuedMap(MultiValuedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/MultiMapUtils_transformedMultiValuedMapTest.java"}, {"src/main/java/org/apache/commons/collections4/FluentIterable.java.FluentIterable[FluentIterable<T>]of(Iterable<T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/FluentIterable_ofTest.java"}, {"src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils[Transformer<I, O>]ifTransformer(Predicate<? super I>,Transformer<? super I, ? extends O>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/TransformerUtils_ifTransformerTest.java"}, {"src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils[Transformer<I, O>]switchMapTransformer(Map<I, Transformer<I, O>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/TransformerUtils_switchMapTransformerTest.java"}, {"src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils[Transformer<I, O>]switchTransformer(Predicate<? super I>,Transformer<? super I, ? extends O>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/TransformerUtils_switchTransformerTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]difference(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_differenceTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]disjunction(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_disjunctionTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[int]hashCodeForSet(Collection<T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_hashCodeForSetTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[HashSet<E>]hashSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_hashSetTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]intersection(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_intersectionTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[boolean]isEqualSet(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_isEqualSetTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[SetView<E>]union(Set<? extends E>,Set<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_unionTest.java"}, {"src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils[Set<E>]unmodifiableSet()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SetUtils_unmodifiableSetTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]addAll(Collection<C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_addAllTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[List<O>]collate(Iterable<? extends O>,Iterable<? extends O>,boolean)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_collateTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[R]collect(Iterable<? extends I>,Transformer<? super I, ? extends O>,R)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_collectTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]containsAll(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_containsAllTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]containsAny(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_containsAnyTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<O>]disjunction(Iterable<? extends O>,Iterable<? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_disjunctionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[E]extractSingleton(Collection<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_extractSingletonTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]filter(Iterable<T>,Predicate<? super T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_filterTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[T]forAllButLastDo(Iterable<T>,C)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_forAllButLastDoTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[C]forAllDo(Iterable<T>,C)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_forAllDoTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[T]get(Iterable<T>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_getTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Map<O, Integer>]getCardinalityMap(Iterable<? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_getCardinalityMapTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[int]hashCode(Collection<? extends E>,Equator<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_hashCodeTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<O>]intersection(Iterable<? extends O>,Iterable<? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_intersectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]isEqualCollection(Collection<? extends E>,Collection<? extends E>,Equator<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_isEqualCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]isFull(Collection<? extends Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_isFullTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]isProperSubCollection(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_isProperSubCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]isSubCollection(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_isSubCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[int]maxSize(Collection<? extends Object>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_maxSizeTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<List<E>>]permutations(Collection<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_permutationsTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<C>]predicatedCollection(Collection<C>,Predicate<? super C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_predicatedCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<E>]removeAll(Iterable<E>,Iterable<? extends E>,Equator<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<E>]removeCount(Collection<E>,int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_removeCountTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<E>]removeRange(Collection<E>,int,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_removeRangeTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<C>]retainAll(Collection<C>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<O>]select(Iterable<? extends O>,Predicate<? super O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_selectTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<O>]selectRejected(Iterable<? extends O>,Predicate<? super O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_selectRejectedTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[int]size(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[boolean]sizeIsEmpty(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_sizeIsEmptyTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<O>]subtract(Iterable<? extends O>,Iterable<? extends O>,Predicate<O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_subtractTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<C>]synchronizedCollection(Collection<C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_synchronizedCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[void]transform(Collection<C>,Transformer<? super C, ? extends C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_transformTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<E>]transformingCollection(Collection<E>,Transformer<? super E, ? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_transformingCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<O>]union(Iterable<? extends O>,Iterable<? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_unionTest.java"}, {"src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils[Collection<C>]unmodifiableCollection(Collection<? extends C>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/CollectionUtils_unmodifiableCollectionTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[int]hashCodeForList(Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_hashCodeForListTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[int]indexOf(List<E>,Predicate<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_indexOfTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]intersection(List<? extends E>,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_intersectionTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[boolean]isEqualList(Collection<?>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_isEqualListTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[String]longestCommonSubsequence(CharSequence,CharSequence)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_longestCommonSubsequenceTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<List<T>>]partition(List<T>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_partitionTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]removeAll(Collection<E>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_removeAllTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]retainAll(Collection<E>,Collection<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_retainAllTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]subtract(List<E>,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_subtractTest.java"}, {"src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils[List<E>]union(List<? extends E>,List<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ListUtils_unionTest.java"}, {"src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack[E]peek()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ArrayStack_peekTest.java"}, {"src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack[E]pop()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ArrayStack_popTest.java"}, {"src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack[int]search(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ArrayStack_searchTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<E>]chainedComparator()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ComparatorUtils_chainedComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[E]max(E,E,Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ComparatorUtils_maxTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[E]min(E,E,Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ComparatorUtils_minTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<E>]nullHighComparator(Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ComparatorUtils_nullHighComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<E>]nullLowComparator(Comparator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ComparatorUtils_nullLowComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils[Comparator<I>]transformedComparator(Comparator<O>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ComparatorUtils_transformedComparatorTest.java"}, {"src/main/java/org/apache/commons/collections4/EnumerationUtils.java.EnumerationUtils[T]get(Enumeration<T>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/EnumerationUtils_getTest.java"}, {"src/main/java/org/apache/commons/collections4/EnumerationUtils.java.EnumerationUtils[List<String>]toList(StringTokenizer)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/EnumerationUtils_toListTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]asIterator(Enumeration<? extends E>,Collection<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_asIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]chainedIterator(Iterator<? extends E>,Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_chainedIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]collatedIterator(Comparator<? super E>,Collection<Iterator<? extends E>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_collatedIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<E>]filteredIterator(Iterator<? extends E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_filteredIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[ListIterator<E>]filteredListIterator(ListIterator<? extends E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_filteredListIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[E]find(Iterator<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_findTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[void]forEach(Iterator<E>,Closure<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_forEachTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[E]forEachButLast(Iterator<E>,Closure<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_forEachButLastTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[E]get(Iterator<E>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_getTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<?>]getIterator(Object)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_getIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[int]indexOf(Iterator<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_indexOfTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[boolean]matchesAll(Iterator<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_matchesAllTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[int]size(Iterator<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_sizeTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[List<E>]toList(Iterator<? extends E>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_toListTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[String]toString(Iterator<E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_toStringTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[Iterator<O>]transformedIterator(Iterator<? extends I>,Transformer<? super I, ? extends O>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_transformedIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils[ZippingIterator<E>]zippingIterator(Iterator<? extends E>,Iterator<? extends E>,Iterator<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IteratorUtils_zippingIteratorTest.java"}, {"src/main/java/org/apache/commons/collections4/PredicateUtils.java.PredicateUtils[Predicate<T>]eitherPredicate(Predicate<? super T>,Predicate<? super T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/PredicateUtils_eitherPredicateTest.java"}, {"src/main/java/org/apache/commons/collections4/PredicateUtils.java.PredicateUtils[Predicate<T>]neitherPredicate(Predicate<? super T>,Predicate<? super T>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/PredicateUtils_neitherPredicateTest.java"}, {"src/main/java/org/apache/commons/collections4/ClosureUtils.java.ClosureUtils[Closure<E>]ifClosure(Predicate<? super E>,Closure<? super E>,Closure<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ClosureUtils_ifClosureTest.java"}, {"src/main/java/org/apache/commons/collections4/ClosureUtils.java.ClosureUtils[Closure<E>]switchMapClosure(Map<? extends E, Closure<E>>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/ClosureUtils_switchMapClosureTest.java"}, {"src/main/java/org/apache/commons/collections4/SplitMapUtils.java.SplitMapUtils[IterableMap<K, V>]readableMap(Get<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SplitMapUtils_readableMapTest.java"}, {"src/main/java/org/apache/commons/collections4/SplitMapUtils.java.SplitMapUtils[Map<K, V>]writableMap(Put<K, V>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/SplitMapUtils_writableMapTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[Iterable<E>]boundedIterable(Iterable<E>,long)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_boundedIterableTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[Iterable<E>]chainedIterable()": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_chainedIterableTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[Iterable<E>]collatedIterable(Comparator<? super E>,Iterable<? extends E>,Iterable<? extends E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_collatedIterableTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[boolean]contains(Iterable<? extends E>,E,Equator<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_containsTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[Iterable<E>]filteredIterable(Iterable<E>,Predicate<? super E>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_filteredIterableTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[int]frequency(Iterable<E>,T)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_frequencyTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[T]get(Iterable<T>,int)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_getTest.java"}, {"src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils[boolean]isEmpty(Iterable<?>)": "/home/zhangzhe/fuzzing-repo/targets/java/commons-collections-3-for-ablation-1/src/test/java/org/apache/commons/collections4/IterableUtils_isEmptyTest.java"}]}