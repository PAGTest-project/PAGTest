[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class IterableUtils_chainedIterableTest {\n\n    @Test\n    public void testChainedIterable_SingleIterable() {\n        Iterable<Integer> iterable1 = Arrays.asList(1, 2, 3);\n        Iterable<Integer> result = IterableUtils.chainedIterable(iterable1);\n        List<Integer> resultList = IterableUtils.toList(result);\n        assertEquals(Arrays.asList(1, 2, 3), resultList);\n    }\n\n    @Test\n    public void testChainedIterable_MultipleIterables() {\n        Iterable<Integer> iterable1 = Arrays.asList(1, 2);\n        Iterable<Integer> iterable2 = Arrays.asList(3, 4);\n        Iterable<Integer> result = IterableUtils.chainedIterable(iterable1, iterable2);\n        List<Integer> resultList = IterableUtils.toList(result);\n        assertEquals(Arrays.asList(1, 2, 3, 4), resultList);\n    }\n\n    @Test\n    public void testChainedIterable_EmptyIterables() {\n        Iterable<Integer> iterable1 = Collections.emptyList();\n        Iterable<Integer> iterable2 = Collections.emptyList();\n        Iterable<Integer> result = IterableUtils.chainedIterable(iterable1, iterable2);\n        List<Integer> resultList = IterableUtils.toList(result);\n        assertEquals(Collections.emptyList(), resultList);\n    }\n\n    @Test\n    public void testChainedIterable_NullIterable() {\n        Iterable<Integer> iterable1 = null;\n        assertThrows(NullPointerException.class, () -> {\n            IterableUtils.chainedIterable(iterable1);\n        });\n    }\n}\n"}]