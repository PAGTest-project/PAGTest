[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nimport java.util.Collection;\n\nclass CollectionUtils_isFullTest {\n\n    @Test\n    void testIsFull_BoundedCollection() {\n        BoundedCollection<Object> boundedCollection = mock(BoundedCollection.class);\n        when(boundedCollection.isFull()).thenReturn(true);\n\n        assertTrue(CollectionUtils.isFull(boundedCollection));\n    }\n\n    @Test\n    void testIsFull_NonBoundedCollection() {\n        Collection<Object> nonBoundedCollection = mock(Collection.class);\n        when(nonBoundedCollection.size()).thenReturn(1);\n\n        assertFalse(CollectionUtils.isFull(nonBoundedCollection));\n    }\n\n    @Test\n    void testIsFull_IllegalArgumentException() {\n        Collection<Object> collection = mock(Collection.class);\n        when(collection.size()).thenReturn(1);\n\n        assertFalse(CollectionUtils.isFull(collection));\n    }\n\n    @Test\n    void testIsFull_NullCollection() {\n        assertThrows(NullPointerException.class, () -> {\n            CollectionUtils.isFull(null);\n        });\n    }\n}\n"}]