[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Iterator;\nimport java.util.NoSuchElementException;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass IteratorUtils_forEachTest {\n\n    @Test\n    void testForEachWithNonNullClosureAndNonNullIterator() {\n        // Given\n        Iterator<String> iterator = mock(Iterator.class);\n        Closure<String> closure = mock(Closure.class);\n\n        when(iterator.hasNext()).thenReturn(true, false);\n        when(iterator.next()).thenReturn(\"element\");\n\n        // When\n        IteratorUtils.forEach(iterator, closure);\n\n        // Then\n        verify(closure, times(1)).accept(\"element\");\n    }\n\n    @Test\n    void testForEachWithNonNullClosureAndNullIterator() {\n        // Given\n        Closure<String> closure = mock(Closure.class);\n\n        // When\n        IteratorUtils.forEach(null, closure);\n\n        // Then\n        verifyNoInteractions(closure);\n    }\n\n    @Test\n    void testForEachWithNullClosure() {\n        // Given\n        Iterator<String> iterator = mock(Iterator.class);\n\n        // When / Then\n        assertThrows(NullPointerException.class, () -> IteratorUtils.forEach(iterator, null));\n    }\n}\n"}]