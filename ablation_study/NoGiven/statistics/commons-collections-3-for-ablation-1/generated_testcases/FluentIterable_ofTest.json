[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass FluentIterable_ofTest {\n\n    @Test\n    void testOfWithNonFluentIterable() {\n        List<String> list = Arrays.asList(\"a\", \"b\", \"c\");\n        FluentIterable<String> result = FluentIterable.of((Iterable<String>) list);\n        assertFalse(result.isEmpty());\n        assertEquals(3, result.size());\n        assertTrue(result.contains(\"a\"));\n    }\n\n    @Test\n    void testOfWithFluentIterable() {\n        FluentIterable<String> original = FluentIterable.of((Iterable<String>) Arrays.asList(\"a\", \"b\", \"c\"));\n        FluentIterable<String> result = FluentIterable.of(original);\n        assertSame(original, result);\n    }\n\n    @Test\n    void testOfWithNullIterable() {\n        assertThrows(NullPointerException.class, () -> {\n            FluentIterable.of((Iterable<String>) null);\n        });\n    }\n}\n"}]