[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.function.Predicate;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class IterableUtils_filteredIterableTest {\n\n    @Test\n    public void testFilteredIterable_NonNullIterableAndPredicate() {\n        Iterable<Integer> iterable = Arrays.asList(1, 2, 3, 4, 5);\n        Predicate<Integer> predicate = n -> n % 2 == 0;\n\n        Iterable<Integer> result = IterableUtils.filteredIterable(iterable, new Predicate<Integer>() {\n            @Override\n            public boolean evaluate(Integer n) {\n                return predicate.test(n);\n            }\n        });\n        List<Integer> resultList = IterableUtils.toList(result);\n\n        assertEquals(Arrays.asList(2, 4), resultList);\n    }\n\n    @Test\n    public void testFilteredIterable_NullIterable() {\n        Iterable<Integer> iterable = null;\n        Predicate<Integer> predicate = n -> n % 2 == 0;\n\n        assertThrows(NullPointerException.class, () -> {\n            IterableUtils.filteredIterable(iterable, new Predicate<Integer>() {\n                @Override\n                public boolean evaluate(Integer n) {\n                    return predicate.test(n);\n                }\n            });\n        });\n    }\n\n    @Test\n    public void testFilteredIterable_NullPredicate() {\n        Iterable<Integer> iterable = Arrays.asList(1, 2, 3, 4, 5);\n        Predicate<Integer> predicate = null;\n\n        assertThrows(NullPointerException.class, () -> {\n            IterableUtils.filteredIterable(iterable, new Predicate<Integer>() {\n                @Override\n                public boolean evaluate(Integer n) {\n                    return predicate.test(n);\n                }\n            });\n        });\n    }\n}\n"}]