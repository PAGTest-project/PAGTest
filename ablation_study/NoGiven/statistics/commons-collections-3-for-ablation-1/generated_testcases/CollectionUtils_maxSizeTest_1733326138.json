[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass CollectionUtils_maxSizeTest {\n\n    @Test\n    void testMaxSize_BoundedCollection() {\n        BoundedCollection<Object> boundedCollection = mock(BoundedCollection.class);\n        when(boundedCollection.maxSize()).thenReturn(10);\n\n        int result = CollectionUtils.maxSize(boundedCollection);\n        assertEquals(10, result);\n    }\n\n    @Test\n    void testMaxSize_UnmodifiableBoundedCollection() {\n        Collection<Object> collection = mock(Collection.class);\n        BoundedCollection<Object> boundedCollection = mock(BoundedCollection.class);\n        when(boundedCollection.maxSize()).thenReturn(20);\n\n        when(UnmodifiableBoundedCollection.unmodifiableBoundedCollection(collection)).thenReturn(boundedCollection);\n\n        int result = CollectionUtils.maxSize(collection);\n        assertEquals(20, result);\n    }\n\n    @Test\n    void testMaxSize_IllegalArgumentException() {\n        Collection<Object> collection = mock(Collection.class);\n        when(UnmodifiableBoundedCollection.unmodifiableBoundedCollection(collection)).thenThrow(new IllegalArgumentException());\n\n        int result = CollectionUtils.maxSize(collection);\n        assertEquals(-1, result);\n    }\n\n    @Test\n    void testMaxSize_NullCollection() {\n        assertThrows(NullPointerException.class, () -> {\n            CollectionUtils.maxSize(null);\n        });\n    }\n}\n"}]