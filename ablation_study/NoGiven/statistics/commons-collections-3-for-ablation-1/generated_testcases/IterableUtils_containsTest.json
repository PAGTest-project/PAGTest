[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.apache.commons.collections4.functors.EqualPredicate;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.Collections;\n\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class IterableUtils_containsTest {\n\n    @Test\n    public void testContains_ObjectFound() {\n        Iterable<String> iterable = Arrays.asList(\"a\", \"b\", \"c\");\n        Equator<String> equator = new Equator<String>() {\n            @Override\n            public boolean equate(String o1, String o2) {\n                return o1.equals(o2);\n            }\n\n            @Override\n            public int hash(String o) {\n                return o.hashCode();\n            }\n        };\n        assertTrue(IterableUtils.contains(iterable, \"b\", equator));\n    }\n\n    @Test\n    public void testContains_ObjectNotFound() {\n        Iterable<String> iterable = Arrays.asList(\"a\", \"b\", \"c\");\n        Equator<String> equator = new Equator<String>() {\n            @Override\n            public boolean equate(String o1, String o2) {\n                return o1.equals(o2);\n            }\n\n            @Override\n            public int hash(String o) {\n                return o.hashCode();\n            }\n        };\n        assertFalse(IterableUtils.contains(iterable, \"d\", equator));\n    }\n\n    @Test\n    public void testContains_NullEquator() {\n        Iterable<String> iterable = Arrays.asList(\"a\", \"b\", \"c\");\n        assertThrows(NullPointerException.class, () -> IterableUtils.contains(iterable, \"b\", null));\n    }\n\n    @Test\n    public void testContains_EmptyIterable() {\n        Iterable<String> iterable = Collections.emptyList();\n        Equator<String> equator = new Equator<String>() {\n            @Override\n            public boolean equate(String o1, String o2) {\n                return o1.equals(o2);\n            }\n\n            @Override\n            public int hash(String o) {\n                return o.hashCode();\n            }\n        };\n        assertFalse(IterableUtils.contains(iterable, \"b\", equator));\n    }\n}\n"}]