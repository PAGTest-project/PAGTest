[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\n\nclass CollectionUtils_isEqualCollectionTest {\n\n    @Test\n    void testIsEqualCollection_EqualCollections() {\n        Collection<String> a = Arrays.asList(\"a\", \"b\", \"c\");\n        Collection<String> b = Arrays.asList(\"a\", \"b\", \"c\");\n        Equator<String> equator = (s1, s2) -> s1.equals(s2);\n\n        assertTrue(CollectionUtils.isEqualCollection(a, b, equator));\n    }\n\n    @Test\n    void testIsEqualCollection_DifferentSizes() {\n        Collection<String> a = Arrays.asList(\"a\", \"b\");\n        Collection<String> b = Arrays.asList(\"a\", \"b\", \"c\");\n        Equator<String> equator = (s1, s2) -> s1.equals(s2);\n\n        assertFalse(CollectionUtils.isEqualCollection(a, b, equator));\n    }\n\n    @Test\n    void testIsEqualCollection_NullCollections() {\n        Collection<String> a = null;\n        Collection<String> b = Arrays.asList(\"a\", \"b\", \"c\");\n        Equator<String> equator = (s1, s2) -> s1.equals(s2);\n\n        assertThrows(NullPointerException.class, () -> CollectionUtils.isEqualCollection(a, b, equator));\n    }\n\n    @Test\n    void testIsEqualCollection_NullEquator() {\n        Collection<String> a = Arrays.asList(\"a\", \"b\", \"c\");\n        Collection<String> b = Arrays.asList(\"a\", \"b\", \"c\");\n        Equator<String> equator = null;\n\n        assertThrows(NullPointerException.class, () -> CollectionUtils.isEqualCollection(a, b, equator));\n    }\n}\n"}]