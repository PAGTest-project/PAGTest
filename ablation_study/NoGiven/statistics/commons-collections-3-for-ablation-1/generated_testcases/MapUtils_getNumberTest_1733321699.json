[{"strategy": "generate", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.text.ParseException;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\npublic class MapUtils_getNumberTest {\n\n    @Test\n    public void testGetNumber_NumberValue() {\n        Map<String, Object> map = new HashMap<>();\n        map.put(\"key1\", 123);\n        Number result = MapUtils.getNumber(map, \"key1\");\n        assertEquals(123, result);\n    }\n\n    @Test\n    public void testGetNumber_StringValue() throws ParseException {\n        Map<String, Object> map = new HashMap<>();\n        map.put(\"key2\", \"456\");\n        Number result = MapUtils.getNumber(map, \"key2\");\n        assertEquals(456, result);\n    }\n\n    @Test\n    public void testGetNumber_NullValue() {\n        Map<String, Object> map = new HashMap<>();\n        map.put(\"key3\", null);\n        Number result = MapUtils.getNumber(map, \"key3\");\n        assertNull(result);\n    }\n\n    @Test\n    public void testGetNumber_NonNumberStringValue() {\n        Map<String, Object> map = new HashMap<>();\n        map.put(\"key4\", \"notANumber\");\n        Number result = MapUtils.getNumber(map, \"key4\");\n        assertNull(result);\n    }\n\n    @Test\n    public void testGetNumber_NullMap() {\n        Number result = MapUtils.getNumber(null, \"key5\");\n        assertNull(result);\n    }\n}\n"}]