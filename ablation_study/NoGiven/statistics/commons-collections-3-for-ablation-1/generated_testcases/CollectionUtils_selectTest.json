[{"strategy": "retry", "code": "\npackage org.apache.commons.collections4;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.function.Predicate;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class CollectionUtils_selectTest {\n\n    @Test\n    public void testSelectWithNonEmptyCollection() {\n        Collection<Integer> inputCollection = Arrays.asList(1, 2, 3, 4, 5);\n        Predicate<Integer> predicate = i -> i % 2 == 0;\n        Collection<Integer> expected = Arrays.asList(2, 4);\n\n        Collection<Integer> result = CollectionUtils.select(inputCollection, predicate::test);\n\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSelectWithEmptyCollection() {\n        Collection<Integer> inputCollection = new ArrayList<>();\n        Predicate<Integer> predicate = i -> i % 2 == 0;\n        Collection<Integer> expected = new ArrayList<>();\n\n        Collection<Integer> result = CollectionUtils.select(inputCollection, predicate::test);\n\n        assertEquals(expected, result);\n    }\n\n    @Test\n    public void testSelectWithNullCollection() {\n        Collection<Integer> inputCollection = null;\n        Predicate<Integer> predicate = i -> i % 2 == 0;\n        Collection<Integer> expected = new ArrayList<>();\n\n        Collection<Integer> result = CollectionUtils.select(inputCollection, predicate::test);\n\n        assertEquals(expected, result);\n    }\n}\n"}]