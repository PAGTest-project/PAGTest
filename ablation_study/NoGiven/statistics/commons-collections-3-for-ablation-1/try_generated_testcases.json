{"src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Boolean]getBoolean(Map<? super K, ?>,K)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Byte]getByte(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Double]getDouble(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Float]getFloat(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Integer]getInteger(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Long]getLong(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Map<?, ?>]getMap(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Number]getNumber(Map<? super K, ?>,K)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[V]getObject(Map<? super K, V>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Short]getShort(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[String]getString(Map<? super K, ?>,K)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Map<V, K>]invertMap(Map<K, V>)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[IterableMap<K, V>]iterableMap(Map<K, V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[IterableSortedMap<K, V>]iterableSortedMap(SortedMap<K, V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[MultiValueMap<K, V>]multiValueMap(Map<K, C>,Class<C>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[void]populateMap(Map<K, V>,Iterable<? extends E>,Transformer<E, K>,Transformer<E, V>)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[void]safeAddToMap(Map<? super K, Object>,K,Object)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Map<String, Object>]toMap(ResourceBundle)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[Properties]toProperties(Map<K, V>)": [], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[IterableMap<K, V>]transformedMap(Map<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MapUtils.java.MapUtils.[SortedMap<K, V>]transformedSortedMap(SortedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils.[Collection<V>]getCollection(MultiValuedMap<K, V>,K)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils.[Bag<V>]getValuesAsBag(MultiValuedMap<K, V>,K)": [], "src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils.[List<V>]getValuesAsList(MultiValuedMap<K, V>,K)": ["run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils.[Set<V>]getValuesAsSet(MultiValuedMap<K, V>,K)": [], "src/main/java/org/apache/commons/collections4/MultiMapUtils.java.MultiMapUtils.[MultiValuedMap<K, V>]transformedMultiValuedMap(MultiValuedMap<K, V>,Transformer<? super K, ? extends K>,Transformer<? super V, ? extends V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/FluentIterable.java.FluentIterable.[FluentIterable<T>]of(Iterable<T>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils.[Transformer<I, O>]ifTransformer(Predicate<? super I>,Transformer<? super I, ? extends O>,Transformer<? super I, ? extends O>)": [], "src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils.[Transformer<I, O>]switchMapTransformer(Map<I, Transformer<I, O>>)": [], "src/main/java/org/apache/commons/collections4/TransformerUtils.java.TransformerUtils.[Transformer<I, O>]switchTransformer(Predicate<? super I>,Transformer<? super I, ? extends O>,Transformer<? super I, ? extends O>)": [], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[SetView<E>]difference(Set<? extends E>,Set<? extends E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[SetView<E>]disjunction(Set<? extends E>,Set<? extends E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[int]hashCodeForSet(Collection<T>)": [], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[HashSet<E>]hashSet()": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[SetView<E>]intersection(Set<? extends E>,Set<? extends E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[boolean]isEqualSet(Collection<?>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[SetView<E>]union(Set<? extends E>,Set<? extends E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SetUtils.java.SetUtils.[Set<E>]unmodifiableSet()": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]addAll(Collection<C>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[List<O>]collate(Iterable<? extends O>,Iterable<? extends O>,boolean)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[R]collect(Iterable<? extends I>,Transformer<? super I, ? extends O>,R)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]containsAll(Collection<?>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]containsAny(Collection<?>,Collection<?>)": ["run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<O>]disjunction(Iterable<? extends O>,Iterable<? extends O>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[E]extractSingleton(Collection<E>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]filter(Iterable<T>,Predicate<? super T>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[T]forAllButLastDo(Iterable<T>,C)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[C]forAllDo(Iterable<T>,C)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[T]get(Iterable<T>,int)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Map<O, Integer>]getCardinalityMap(Iterable<? extends O>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[int]hashCode(Collection<? extends E>,Equator<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<O>]intersection(Iterable<? extends O>,Iterable<? extends O>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]isEqualCollection(Collection<? extends E>,Collection<? extends E>,Equator<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]isFull(Collection<? extends Object>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]isProperSubCollection(Collection<?>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]isSubCollection(Collection<?>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[int]maxSize(Collection<? extends Object>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<List<E>>]permutations(Collection<E>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<C>]predicatedCollection(Collection<C>,Predicate<? super C>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<E>]removeAll(Iterable<E>,Iterable<? extends E>,Equator<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<E>]removeCount(Collection<E>,int,int)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<E>]removeRange(Collection<E>,int,int)": ["run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<C>]retainAll(Collection<C>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<O>]select(Iterable<? extends O>,Predicate<? super O>)": ["run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<O>]selectRejected(Iterable<? extends O>,Predicate<? super O>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[int]size(Object)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[boolean]sizeIsEmpty(Object)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<O>]subtract(Iterable<? extends O>,Iterable<? extends O>,Predicate<O>)": ["run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<C>]synchronizedCollection(Collection<C>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[void]transform(Collection<C>,Transformer<? super C, ? extends C>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<E>]transformingCollection(Collection<E>,Transformer<? super E, ? extends E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<O>]union(Iterable<? extends O>,Iterable<? extends O>)": [], "src/main/java/org/apache/commons/collections4/CollectionUtils.java.CollectionUtils.[Collection<C>]unmodifiableCollection(Collection<? extends C>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[int]hashCodeForList(Collection<?>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[int]indexOf(List<E>,Predicate<E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[List<E>]intersection(List<? extends E>,List<? extends E>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[boolean]isEqualList(Collection<?>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[String]longestCommonSubsequence(CharSequence,CharSequence)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[List<List<T>>]partition(List<T>,int)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[List<E>]removeAll(Collection<E>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[List<E>]retainAll(Collection<E>,Collection<?>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[List<E>]subtract(List<E>,List<? extends E>)": [], "src/main/java/org/apache/commons/collections4/ListUtils.java.ListUtils.[List<E>]union(List<? extends E>,List<? extends E>)": [], "src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack.[E]peek()": [], "src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack.[E]pop()": [], "src/main/java/org/apache/commons/collections4/ArrayStack.java.ArrayStack.[int]search(Object)": [], "src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils.[Comparator<E>]chainedComparator()": [], "src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils.[E]max(E,E,Comparator<E>)": [], "src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils.[E]min(E,E,Comparator<E>)": [], "src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils.[Comparator<E>]nullHighComparator(Comparator<E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils.[Comparator<E>]nullLowComparator(Comparator<E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/ComparatorUtils.java.ComparatorUtils.[Comparator<I>]transformedComparator(Comparator<O>,Transformer<? super I, ? extends O>)": [], "src/main/java/org/apache/commons/collections4/EnumerationUtils.java.EnumerationUtils.[T]get(Enumeration<T>,int)": [], "src/main/java/org/apache/commons/collections4/EnumerationUtils.java.EnumerationUtils.[List<String>]toList(StringTokenizer)": [], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[Iterator<E>]asIterator(Enumeration<? extends E>,Collection<? super E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[Iterator<E>]chainedIterator(Iterator<? extends E>,Iterator<? extends E>)": [], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[Iterator<E>]collatedIterator(Comparator<? super E>,Collection<Iterator<? extends E>>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[Iterator<E>]filteredIterator(Iterator<? extends E>,Predicate<? super E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[ListIterator<E>]filteredListIterator(ListIterator<? extends E>,Predicate<? super E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[E]find(Iterator<E>,Predicate<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[void]forEach(Iterator<E>,Closure<? super E>)": [], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[E]forEachButLast(Iterator<E>,Closure<? super E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[E]get(Iterator<E>,int)": [], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[Iterator<?>]getIterator(Object)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[int]indexOf(Iterator<E>,Predicate<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[boolean]matchesAll(Iterator<E>,Predicate<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[int]size(Iterator<?>)": [], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[List<E>]toList(Iterator<? extends E>,int)": [], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[String]toString(Iterator<E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[Iterator<O>]transformedIterator(Iterator<? extends I>,Transformer<? super I, ? extends O>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IteratorUtils.java.IteratorUtils.[ZippingIterator<E>]zippingIterator(Iterator<? extends E>,Iterator<? extends E>,Iterator<? extends E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/PredicateUtils.java.PredicateUtils.[Predicate<T>]eitherPredicate(Predicate<? super T>,Predicate<? super T>)": [], "src/main/java/org/apache/commons/collections4/PredicateUtils.java.PredicateUtils.[Predicate<T>]neitherPredicate(Predicate<? super T>,Predicate<? super T>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/ClosureUtils.java.ClosureUtils.[Closure<E>]ifClosure(Predicate<? super E>,Closure<? super E>,Closure<? super E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/ClosureUtils.java.ClosureUtils.[Closure<E>]switchMapClosure(Map<? extends E, Closure<E>>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SplitMapUtils.java.SplitMapUtils.[IterableMap<K, V>]readableMap(Get<K, V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/SplitMapUtils.java.SplitMapUtils.[Map<K, V>]writableMap(Put<K, V>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[Iterable<E>]boundedIterable(Iterable<E>,long)": [], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[Iterable<E>]chainedIterable()": [], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[Iterable<E>]collatedIterable(Comparator<? super E>,Iterable<? extends E>,Iterable<? extends E>)": [], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[boolean]contains(Iterable<? extends E>,E,Equator<? super E>)": ["run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[Iterable<E>]filteredIterable(Iterable<E>,Predicate<? super E>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[int]frequency(Iterable<E>,T)": [], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[T]get(Iterable<T>,int)": [], "src/main/java/org/apache/commons/collections4/IterableUtils.java.IterableUtils.[boolean]isEmpty(Iterable<?>)": ["run_mvn_test error", "run_mvn_test error", "run_mvn_test error"]}