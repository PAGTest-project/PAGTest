[{"strategy": "generate", "code": "\npackage org.apache.commons.dbutils;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\nimport static org.mockito.Mockito.when;\n\npublic class ResultSetIterator_hasNextTest {\n\n    private ResultSet resultSet;\n    private ResultSetIterator iterator;\n\n    @Before\n    public void setUp() {\n        resultSet = Mockito.mock(ResultSet.class);\n        iterator = new ResultSetIterator(resultSet);\n    }\n\n    @Test\n    public void testHasNext_ReturnsTrue_WhenNotLast() throws SQLException {\n        when(resultSet.isLast()).thenReturn(false);\n        assertTrue(iterator.hasNext());\n    }\n\n    @Test\n    public void testHasNext_ReturnsFalse_WhenLast() throws SQLException {\n        when(resultSet.isLast()).thenReturn(true);\n        assertFalse(iterator.hasNext());\n    }\n\n    @Test(expected = RuntimeException.class)\n    public void testHasNext_ThrowsRuntimeException_OnSQLException() throws SQLException {\n        when(resultSet.isLast()).thenThrow(new SQLException());\n        iterator.hasNext();\n    }\n}\n"}]