[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotSame;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Option_cloneTest {\n\n    private Option option;\n\n    @BeforeEach\n    public void setUp() {\n        option = new Option(\"opt\", \"description\");\n        option.setArgs(2);\n        option.setOptionalArg(true);\n        option.setType(Integer.class);\n        option.setValues(new ArrayList<>(List.of(\"1\", \"2\")));\n    }\n\n    @Test\n    public void testClone() {\n        // When\n        Option clonedOption = (Option) option.clone();\n\n        // Then\n        assertNotSame(option, clonedOption);\n        assertEquals(option, clonedOption);\n        assertEquals(option.getValues(), clonedOption.getValues());\n    }\n\n    @Test\n    public void testCloneWithClearValues() {\n        // When\n        option.clearValues();\n        Option clonedOption = (Option) option.clone();\n\n        // Then\n        assertNotSame(option, clonedOption);\n        assertEquals(option, clonedOption);\n        assertTrue(clonedOption.getValues().isEmpty());\n    }\n\n    @Test\n    public void testCloneWithProcessValue() {\n        // When\n        option.processValue(\"3\");\n        Option clonedOption = (Option) option.clone();\n\n        // Then\n        assertNotSame(option, clonedOption);\n        assertEquals(option, clonedOption);\n        assertEquals(3, clonedOption.getValues().size());\n    }\n}\n"}]