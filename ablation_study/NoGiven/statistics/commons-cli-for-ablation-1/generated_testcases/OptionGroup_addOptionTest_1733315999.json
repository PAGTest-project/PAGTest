[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.fail;\n\nimport java.util.Collection;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class OptionGroup_addOptionTest {\n\n    private OptionGroup optionGroup;\n\n    @BeforeEach\n    public void setUp() {\n        optionGroup = new OptionGroup();\n    }\n\n    @Test\n    public void testAddOption() {\n        Option option = new Option(\"o\", \"option\", false, \"Option description\");\n        optionGroup.addOption(option);\n\n        Collection<String> names = optionGroup.getNames();\n        Collection<Option> options = optionGroup.getOptions();\n\n        assertNotNull(names);\n        assertNotNull(options);\n        assertEquals(1, names.size());\n        assertEquals(1, options.size());\n        assertTrue(names.contains(\"o\"));\n        assertTrue(options.contains(option));\n    }\n\n    @Test\n    public void testAddOptionWithRequiredState() {\n        optionGroup.setRequired(true);\n        Option option = new Option(\"o\", \"option\", false, \"Option description\");\n        optionGroup.addOption(option);\n\n        assertTrue(optionGroup.isRequired());\n        assertEquals(1, optionGroup.getNames().size());\n        assertEquals(1, optionGroup.getOptions().size());\n    }\n\n    @Test\n    public void testAddOptionWithSelectedState() {\n        Option option1 = new Option(\"o1\", \"option1\", false, \"Option 1 description\");\n        Option option2 = new Option(\"o2\", \"option2\", false, \"Option 2 description\");\n        optionGroup.addOption(option1);\n        optionGroup.setSelected(option1);\n\n        assertEquals(\"o1\", optionGroup.getSelected());\n\n        optionGroup.addOption(option2);\n\n        assertEquals(2, optionGroup.getNames().size());\n        assertEquals(2, optionGroup.getOptions().size());\n        assertEquals(\"o1\", optionGroup.getSelected());\n    }\n\n    @Test\n    public void testAddOptionToStringRepresentation() {\n        Option option1 = new Option(\"o1\", \"option1\", false, \"Option 1 description\");\n        Option option2 = new Option(\"o2\", \"option2\", false, \"Option 2 description\");\n        optionGroup.addOption(option1);\n        optionGroup.addOption(option2);\n\n        String expectedString = \"[-o1 Option 1 description, -o2 Option 2 description]\";\n        assertEquals(expectedString, optionGroup.toString());\n    }\n}\n"}]