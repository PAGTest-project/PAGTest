[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Option_toStringTest {\n\n    private Option option;\n\n    @BeforeEach\n    public void setUp() {\n        option = Option.builder(\"o\").longOpt(\"option\").desc(\"option description\").build();\n    }\n\n    @Test\n    public void testToStringWithShortOption() {\n        option.clearValues();\n        assertEquals(\"[ Option o :: option description :: class java.lang.String ]\", option.toString());\n    }\n\n    @Test\n    public void testToStringWithLongOption() {\n        option.clearValues();\n        assertEquals(\"[ Option o 'option' :: option description :: class java.lang.String ]\", option.toString());\n    }\n\n    @Test\n    public void testToStringWithDeprecatedOption() {\n        option.clearValues();\n        option.deprecated(DeprecatedAttributes.builder().setForRemoval(true).setSince(\"2.0\").setDescription(\"Use X.\").get());\n        assertEquals(\"[ Option o 'option' ' Deprecated for removal since 2.0: Use X.' :: option description :: class java.lang.String ]\", option.toString());\n    }\n\n    @Test\n    public void testToStringWithArgument() {\n        option.clearValues();\n        option.hasArg();\n        option.processValue(\"argValue\");\n        assertEquals(\"[ Option o 'option' [ARG] :: option description :: class java.lang.String ]\", option.toString());\n    }\n\n    @Test\n    public void testToStringWithMultipleArguments() {\n        option.clearValues();\n        option.hasArgs();\n        option.processValue(\"argValue1\");\n        option.processValue(\"argValue2\");\n        assertEquals(\"[ Option o 'option' [ARG...] :: option description :: class java.lang.String ]\", option.toString());\n    }\n}\n"}]