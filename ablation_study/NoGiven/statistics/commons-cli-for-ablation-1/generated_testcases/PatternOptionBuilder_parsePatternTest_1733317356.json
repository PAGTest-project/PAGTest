[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\n\nimport org.junit.jupiter.api.Test;\n\npublic class PatternOptionBuilder_parsePatternTest {\n\n    @Test\n    public void testParsePattern_SingleOption() {\n        Options options = PatternOptionBuilder.parsePattern(\"a\");\n        assertEquals(1, options.getOptions().size());\n        Option option = options.getOption(\"a\");\n        assertEquals(\"a\", option.getOpt());\n        assertFalse(option.hasArg());\n    }\n\n    @Test\n    public void testParsePattern_OptionWithValueCode() {\n        Options options = PatternOptionBuilder.parsePattern(\"a@\");\n        assertEquals(1, options.getOptions().size());\n        Option option = options.getOption(\"a\");\n        assertEquals(\"a\", option.getOpt());\n        assertTrue(option.hasArg());\n        assertEquals(PatternOptionBuilder.OBJECT_VALUE, option.getType());\n    }\n\n    @Test\n    public void testParsePattern_OptionWithRequiredFlag() {\n        Options options = PatternOptionBuilder.parsePattern(\"a!\");\n        assertEquals(1, options.getOptions().size());\n        Option option = options.getOption(\"a\");\n        assertEquals(\"a\", option.getOpt());\n        assertFalse(option.hasArg());\n        assertTrue(option.isRequired());\n    }\n\n    @Test\n    public void testParsePattern_MultipleOptions() {\n        Options options = PatternOptionBuilder.parsePattern(\"ab@c!\");\n        assertEquals(3, options.getOptions().size());\n\n        Option optionA = options.getOption(\"a\");\n        assertEquals(\"a\", optionA.getOpt());\n        assertFalse(optionA.hasArg());\n\n        Option optionB = options.getOption(\"b\");\n        assertEquals(\"b\", optionB.getOpt());\n        assertTrue(optionB.hasArg());\n        assertEquals(PatternOptionBuilder.OBJECT_VALUE, optionB.getType());\n\n        Option optionC = options.getOption(\"c\");\n        assertEquals(\"c\", optionC.getOpt());\n        assertFalse(optionC.hasArg());\n        assertTrue(optionC.isRequired());\n    }\n}\n"}]