[{"strategy": "retry", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.Properties;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class CommandLine_getOptionPropertiesTest {\n\n    private CommandLine commandLine;\n\n    @BeforeEach\n    public void setUp() {\n        commandLine = new CommandLine();\n    }\n\n    @Test\n    public void testGetOptionProperties_OptionFound() {\n        Option option = Option.builder(\"i\").hasArg().build();\n        option.addValue(\"value1\");\n        option.addValue(\"value2\");\n        commandLine.addOption(option);\n\n        Properties props = commandLine.getOptionProperties(option);\n        assertNotNull(props);\n        assertEquals(\"value1\", props.getProperty(\"i\"));\n        assertEquals(\"value2\", props.getProperty(\"i.1\"));\n    }\n\n    @Test\n    public void testGetOptionProperties_OptionNotFound() {\n        Option option = Option.builder(\"i\").hasArg().build();\n        Option nonExistentOption = Option.builder(\"x\").hasArg().build();\n        option.addValue(\"value1\");\n        commandLine.addOption(option);\n\n        Properties props = commandLine.getOptionProperties(nonExistentOption);\n        assertNotNull(props);\n        assertTrue(props.isEmpty());\n    }\n\n    @Test\n    public void testGetOptionProperties_NullOption() {\n        Properties props = commandLine.getOptionProperties(null);\n        assertNotNull(props);\n        assertTrue(props.isEmpty());\n    }\n}\n"}]