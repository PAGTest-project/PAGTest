[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class Options_addOptionGroupTest {\n    private Options options;\n\n    @BeforeEach\n    public void setUp() {\n        options = new Options();\n    }\n\n    @Test\n    public void testAddOptionGroupRequired() {\n        OptionGroup group = new OptionGroup();\n        group.setRequired(true);\n        Option option1 = new Option(\"a\", \"optionA\", false, \"Option A\");\n        Option option2 = new Option(\"b\", \"optionB\", false, \"Option B\");\n        group.addOption(option1);\n        group.addOption(option2);\n\n        options.addOptionGroup(group);\n\n        assertTrue(options.getRequiredOptions().contains(group));\n        assertEquals(group, options.getOptionGroup(option1));\n        assertEquals(group, options.getOptionGroup(option2));\n        assertFalse(option1.isRequired());\n        assertFalse(option2.isRequired());\n    }\n\n    @Test\n    public void testAddOptionGroupNotRequired() {\n        OptionGroup group = new OptionGroup();\n        group.setRequired(false);\n        Option option1 = new Option(\"a\", \"optionA\", false, \"Option A\");\n        Option option2 = new Option(\"b\", \"optionB\", false, \"Option B\");\n        group.addOption(option1);\n        group.addOption(option2);\n\n        options.addOptionGroup(group);\n\n        assertFalse(options.getRequiredOptions().contains(group));\n        assertEquals(group, options.getOptionGroup(option1));\n        assertEquals(group, options.getOptionGroup(option2));\n        assertFalse(option1.isRequired());\n        assertFalse(option2.isRequired());\n    }\n\n    @Test\n    public void testAddOptionGroupWithRequiredOption() {\n        OptionGroup group = new OptionGroup();\n        group.setRequired(false);\n        Option option1 = new Option(\"a\", \"optionA\", false, \"Option A\");\n        Option option2 = new Option(\"b\", \"optionB\", false, \"Option B\");\n        option2.setRequired(true);\n        group.addOption(option1);\n        group.addOption(option2);\n\n        options.addOptionGroup(group);\n\n        assertFalse(options.getRequiredOptions().contains(group));\n        assertEquals(group, options.getOptionGroup(option1));\n        assertEquals(group, options.getOptionGroup(option2));\n        assertFalse(option1.isRequired());\n        assertFalse(option2.isRequired());\n    }\n}\n"}]