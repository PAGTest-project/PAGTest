[{"strategy": "generate", "code": "\npackage org.apache.commons.cli;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class OptionGroup_toStringTest {\n\n    private OptionGroup optionGroup;\n\n    @BeforeEach\n    public void setUp() {\n        optionGroup = new OptionGroup();\n    }\n\n    @Test\n    public void testToStringWithShortOptions() {\n        optionGroup.addOption(new Option(\"f\", \"foo\", false, \"Foo\"));\n        optionGroup.addOption(new Option(\"b\", \"bar\", false, \"Bar\"));\n\n        assertEquals(\"[-f Foo, -b Bar]\", optionGroup.toString());\n    }\n\n    @Test\n    public void testToStringWithLongOptions() {\n        optionGroup.addOption(new Option(null, \"foo\", false, \"Foo\"));\n        optionGroup.addOption(new Option(null, \"bar\", false, \"Bar\"));\n\n        assertEquals(\"[--foo Foo, --bar Bar]\", optionGroup.toString());\n    }\n\n    @Test\n    public void testToStringWithMixedOptions() {\n        optionGroup.addOption(new Option(\"f\", \"foo\", false, \"Foo\"));\n        optionGroup.addOption(new Option(null, \"bar\", false, \"Bar\"));\n\n        assertEquals(\"[-f Foo, --bar Bar]\", optionGroup.toString());\n    }\n\n    @Test\n    public void testToStringWithNoOptions() {\n        assertEquals(\"[]\", optionGroup.toString());\n    }\n\n    @Test\n    public void testToStringWithSelectedOption() {\n        Option option1 = new Option(\"f\", \"foo\", false, \"Foo\");\n        Option option2 = new Option(null, \"bar\", false, \"Bar\");\n        optionGroup.addOption(option1);\n        optionGroup.addOption(option2);\n        optionGroup.setSelected(option1);\n\n        assertEquals(\"[-f Foo, --bar Bar]\", optionGroup.toString());\n    }\n}\n"}]