{"file_path": "src/test/java/org/apache/commons/cli/CommandLineTest.java", "testclass_name": "CommandLineTest", "dependencies": ["package org.apache.commons.cli;", "import static org.junit.jupiter.api.Assertions.assertArrayEquals;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertNull;", "import static org.junit.jupiter.api.Assertions.assertThrows;", "import java.io.ByteArrayOutputStream;", "import java.io.PrintStream;", "import java.util.ArrayList;", "import java.util.List;", "import java.util.Properties;", "import java.util.function.Supplier;", "import java.util.stream.Stream;", "import org.junit.jupiter.api.Test;", "import org.junit.jupiter.params.ParameterizedTest;", "import org.junit.jupiter.params.provider.Arguments;", "import org.junit.jupiter.params.provider.MethodSource;"], "name": "CommandLineTest", "description": "Unit tests for CommandLine operations including option handling and parsing.", "class_members": {"variables": [], "methods": [{"name": "asChar", "signature": "char asChar(Option opt)"}, {"name": "assertWritten", "signature": "void assertWritten(boolean optDep, ByteArrayOutputStream baos)"}, {"name": "checkHandler", "signature": "void checkHandler(boolean optDep, List<Option> handler, Option opt)"}], "nested_classes": [{"name": "Count", "description": "Enum for counting values"}]}, "fixtures": [], "test_cases": [{"name": "getOptionValuesTest", "primary_tested": ["CommandLine.getOptionValues(char)", "CommandLine.getOptionValues(String)", "CommandLine.getOptionValues(Option)", "CommandLine.getOptionValues(OptionGroup)"], "associated_methods": ["CommandLineTest.checkHandler(boolean, List<Option>, Option)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "checkHandler", "type": "method"}]}, "category": "unit", "description": "Tests the retrieval of option values with and without default values, ensuring deprecated options are reported correctly."}, {"name": "getOptionValueTest", "primary_tested": ["CommandLine.getOptionValue(char)", "CommandLine.getOptionValue(String)", "CommandLine.getOptionValue(Option)", "CommandLine.getOptionValue(OptionGroup)"], "associated_methods": ["CommandLineTest.checkHandler(boolean, List<Option>, Option)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "checkHandler", "type": "method"}]}, "category": "unit", "description": "Tests the retrieval of option values with and without default values, ensuring deprecated options are reported correctly."}, {"name": "getParsedOptionValueTest", "primary_tested": ["CommandLine.getParsedOptionValue(char)", "CommandLine.getParsedOptionValue(String)", "CommandLine.getParsedOptionValue(Option)", "CommandLine.getParsedOptionValue(OptionGroup)"], "associated_methods": ["CommandLineTest.checkHandler(boolean, List<Option>, Option)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "checkHandler", "type": "method"}]}, "category": "unit", "description": "Tests the retrieval of parsed option values with and without default values, ensuring deprecated options are reported correctly."}, {"name": "hasOptionNoDeprecationHandlerTest", "primary_tested": ["CommandLine.hasOption(char)", "CommandLine.hasOption(String)", "CommandLine.hasOption(Option)", "CommandLine.hasOption(OptionGroup)"], "associated_methods": ["CommandLineTest.assertWritten(boolean, ByteArrayOutputStream)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "assertWritten", "type": "method"}]}, "category": "unit", "description": "Tests the presence of options without a deprecation handler, ensuring correct behavior."}, {"name": "hasOptionNullDeprecationHandlerTest", "primary_tested": ["CommandLine.hasOption(char)", "CommandLine.hasOption(String)", "CommandLine.hasOption(Option)", "CommandLine.hasOption(OptionGroup)"], "associated_methods": ["CommandLineTest.assertWritten(boolean, ByteArrayOutputStream)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "assertWritten", "type": "method"}]}, "category": "unit", "description": "Tests the presence of options with a null deprecation handler, ensuring correct behavior."}, {"name": "hasOptionTest", "primary_tested": ["CommandLine.hasOption(char)", "CommandLine.hasOption(String)", "CommandLine.hasOption(Option)", "CommandLine.hasOption(OptionGroup)"], "associated_methods": ["CommandLineTest.checkHandler(boolean, List<Option>, Option)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "checkHandler", "type": "method"}]}, "category": "unit", "description": "Tests the presence of options, ensuring deprecated options are reported correctly."}, {"name": "noDeprecationHandlerTest", "primary_tested": ["CommandLine.getOptionValue(char)", "CommandLine.getOptionValue(String)", "CommandLine.getOptionValue(Option)", "CommandLine.getOptionValue(OptionGroup)"], "associated_methods": ["CommandLineTest.assertWritten(boolean, ByteArrayOutputStream)"], "external_dependencies": {"modules": ["CommandLine", "DefaultParser", "Options", "Option", "OptionGroup", "ParseException"], "class_members": [{"name": "assertWritten", "type": "method"}]}, "category": "unit", "description": "Tests the retrieval of option values without a deprecation handler, ensuring correct behavior."}, {"name": "testBadGetParsedOptionValue", "primary_tested": ["CommandLine.getParsedOptionValue(String)"], "external_dependencies": {"modules": ["CommandLine", "Options", "Option", "CommandLineParser", "DefaultParser", "ParseException"]}, "category": "unit", "description": "Tests the handling of bad input for parsed option values, ensuring exceptions are thrown correctly."}, {"name": "testBuilder", "primary_tested": ["CommandLine.Builder.addArg(String)", "CommandLine.Builder.addOption(Option)", "CommandLine.Builder.build()"], "external_dependencies": {"modules": ["CommandLine", "Option"]}, "category": "unit", "description": "Tests the CommandLine builder functionality, ensuring arguments and options are added correctly."}, {"name": "testBuilderNullArgs", "primary_tested": ["CommandLine.Builder.addArg(String)", "CommandLine.Builder.addOption(Option)", "CommandLine.Builder.build()"], "external_dependencies": {"modules": ["CommandLine", "Option"]}, "category": "unit", "description": "Tests the CommandLine builder functionality with null arguments, ensuring they are handled correctly."}, {"name": "testBuilderNullOption", "primary_tested": ["CommandLine.Builder.addArg(String)", "CommandLine.Builder.addOption(Option)", "CommandLine.Builder.build()"], "external_dependencies": {"modules": ["CommandLine", "Option"]}, "category": "unit", "description": "Tests the CommandLine builder functionality with null options, ensuring they are handled correctly."}, {"name": "testGetOptionProperties", "primary_tested": ["CommandLine.getOptionProperties(String)"], "external_dependencies": {"modules": ["CommandLine", "Options", "Option", "Parser", "GnuParser", "ParseException"]}, "category": "unit", "description": "Tests the retrieval of option properties, ensuring properties are parsed and retrieved correctly."}, {"name": "testGetOptionPropertiesWithOption", "primary_tested": ["CommandLine.getOptionProperties(Option)"], "external_dependencies": {"modules": ["CommandLine", "Options", "Option", "Parser", "GnuParser", "ParseException"]}, "category": "unit", "description": "Tests the retrieval of option properties using an Option object, ensuring properties are parsed and retrieved correctly."}, {"name": "testGetOptionsBuilder", "primary_tested": ["CommandLine.getOptions()"], "external_dependencies": {"modules": ["CommandLine", "Option"]}, "category": "unit", "description": "Tests the retrieval of options from a CommandLine object created with a builder, ensuring options are managed correctly."}, {"name": "testGetOptionsCtor", "primary_tested": ["CommandLine.getOptions()"], "external_dependencies": {"modules": ["CommandLine", "Option"]}, "category": "unit", "description": "Tests the retrieval of options from a CommandLine object created with a constructor, ensuring options are managed correctly."}, {"name": "testNullOption", "primary_tested": ["CommandLine.getOptionValue(Option)", "CommandLine.getParsedOptionValue(Option)", "CommandLine.getOptionValue(OptionGroup)", "CommandLine.getParsedOptionValue(OptionGroup)"], "external_dependencies": {"modules": ["CommandLine", "Options", "Option", "CommandLineParser", "DefaultParser", "ParseException"]}, "category": "unit", "description": "Tests the handling of null options, ensuring null values are returned correctly."}]}