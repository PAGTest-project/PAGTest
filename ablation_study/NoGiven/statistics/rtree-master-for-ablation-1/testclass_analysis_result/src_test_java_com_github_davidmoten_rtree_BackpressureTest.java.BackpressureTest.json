{"file_path": "src/test/java/com/github/davidmoten/rtree/BackpressureTest.java", "testclass_name": "BackpressureTest", "dependencies": ["package com.github.davidmoten.rtree;", "import static com.github.davidmoten.rtree.RTreeTest.e;", "import static org.junit.Assert.assertEquals;", "import static org.junit.Assert.assertTrue;", "import java.util.ArrayList;", "import java.util.Arrays;", "import java.util.Collections;", "import java.util.HashSet;", "import java.util.List;", "import java.util.Set;", "import org.junit.Test;", "import org.mockito.Mockito;", "import com.github.davidmoten.junit.Asserts;", "import com.github.davidmoten.rtree.geometry.Geometry;", "import com.github.davidmoten.rtree.geometry.Rectangle;", "import com.github.davidmoten.rtree.internal.util.ImmutableStack;", "import rx.Subscriber;", "import rx.Subscription;", "import rx.functions.Func1;"], "name": "BackpressureTest", "description": "Unit tests for the Backpressure class, focusing on various scenarios involving backpressure handling and search operations.", "class_members": {"variables": [], "methods": [], "nested_classes": []}, "fixtures": [], "test_cases": [{"name": "testConstructorIsPrivate", "primary_tested": ["Asserts.assertIsUtilityClass(Class)"], "external_dependencies": {"modules": ["Asserts"]}, "category": "unit", "description": "Tests that the Backpressure class is a utility class with a private constructor."}, {"name": "testBackpressureSearch", "primary_tested": ["Backpressure.search(Func1,Subscriber,ImmutableStack,int)"], "associated_methods": ["Subscriber.onNext(Object)"], "external_dependencies": {"modules": ["Backpressure", "Subscriber", "ImmutableStack", "Func1", "Mockito"]}, "category": "unit", "description": "Tests the backpressure search functionality with a mock subscriber and condition."}, {"name": "testBackpressureSearchNodeWithConditionThatAlwaysReturnsFalse", "primary_tested": ["RTree.search(Geometry)"], "associated_methods": ["RTree.add(Entry)", "Subscriber.onNext(Object)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Geometry", "Subscriber"]}, "category": "unit", "description": "Tests the backpressure search functionality with a condition that always returns false."}, {"name": "testRequestZero", "primary_tested": ["Backpressure.search(Func1,Subscriber,ImmutableStack,int)"], "associated_methods": ["Subscriber.onNext(Object)", "Subscriber.add(Subscription)"], "external_dependencies": {"modules": ["Backpressure", "Subscriber", "ImmutableStack", "Func1", "Node", "NodePosition", "Geometry"]}, "category": "unit", "description": "Tests the backpressure search functionality with a request count of zero."}, {"name": "testRequestZeroWhenUnsubscribed", "primary_tested": ["Backpressure.search(Func1,Subscriber,ImmutableStack,int)"], "associated_methods": ["Subscriber.onNext(Object)", "Subscriber.add(Subscription)", "Subscriber.unsubscribe()"], "external_dependencies": {"modules": ["Backpressure", "Subscriber", "ImmutableStack", "Func1", "Node", "NodePosition", "Geometry"]}, "category": "unit", "description": "Tests the backpressure search functionality when the subscriber is unsubscribed."}, {"name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsRoot", "primary_tested": ["RTree.entries()"], "associated_methods": ["RTree.add(List)", "Subscriber.onNext(Object)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Subscriber"]}, "category": "unit", "description": "Tests the backpressure iteration functionality when the node has the maximum number of children and is the root."}, {"name": "testBackpressureRequestZero", "primary_tested": ["RTree.entries()"], "associated_methods": ["RTree.add(List)", "Subscriber.onNext(Object)", "Subscriber.request(long)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Subscriber"]}, "category": "unit", "description": "Tests the backpressure functionality with a request count of zero."}, {"name": "testBackpressureIterateWhenNodeHasMaxChildrenAndIsNotRoot", "primary_tested": ["RTree.entries()"], "associated_methods": ["RTree.add(List)", "Subscriber.onNext(Object)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Subscriber"]}, "category": "unit", "description": "Tests the backpressure iteration functionality when the node has the maximum number of children and is not the root."}, {"name": "testBackpressureIterateWhenConditionFailsAgainstNonLeafNode", "primary_tested": ["RTree.entries()"], "associated_methods": ["RTree.add(List)", "Subscriber.onNext(Object)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Subscriber"]}, "category": "unit", "description": "Tests the backpressure iteration functionality when the condition fails against a non-leaf node."}, {"name": "testBackpressureIterateWhenConditionFailsAgainstLeafNode", "primary_tested": ["RTree.search(Geometry)"], "associated_methods": ["RTree.add(Entry)", "Subscriber.onNext(Object)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Geometry", "Subscriber"]}, "category": "unit", "description": "Tests the backpressure iteration functionality when the condition fails against a leaf node."}, {"name": "testBackpressureFastPathNotInitiatedTwice", "primary_tested": ["RTree.search(Geometry)"], "associated_methods": ["RTree.add(Entry)", "Subscriber.onNext(Object)", "Subscriber.request(long)"], "external_dependencies": {"modules": ["RTree", "Entry", "Rectangle", "Geometry", "Subscriber"]}, "category": "unit", "description": "Tests that the fast path is not initiated twice during backpressure handling."}]}