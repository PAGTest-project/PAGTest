[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.fbs;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.fbs.generated.Bounds_;\nimport com.github.davidmoten.rtree.fbs.generated.BoundsType_;\nimport com.github.davidmoten.rtree.fbs.generated.BoxDouble_;\nimport com.github.davidmoten.rtree.fbs.generated.BoxFloat_;\nimport com.github.davidmoten.rtree.fbs.generated.Node_;\nimport com.github.davidmoten.rtree.geometry.Geometries;\nimport com.github.davidmoten.rtree.geometry.Geometry;\n\npublic class LeafFlatBuffers_geometryTest {\n\n    @Test\n    public void testGeometryWithBoundsDouble() {\n        // Given\n        Node_ node = mock(Node_.class);\n        Bounds_ bounds = mock(Bounds_.class);\n        BoxDouble_ boxDouble = mock(BoxDouble_.class);\n\n        when(node.mbb()).thenReturn(bounds);\n        when(bounds.type()).thenReturn(BoundsType_.BoundsDouble);\n        when(bounds.boxDouble()).thenReturn(boxDouble);\n        when(boxDouble.minX()).thenReturn(0.0);\n        when(boxDouble.minY()).thenReturn(0.0);\n        when(boxDouble.maxX()).thenReturn(10.0);\n        when(boxDouble.maxY()).thenReturn(10.0);\n\n        LeafFlatBuffers<Object, Geometry> leaf = new LeafFlatBuffers<>(node, null, null);\n\n        // When\n        Geometry result = leaf.geometry();\n\n        // Then\n        assertEquals(Geometries.rectangle(0.0, 0.0, 10.0, 10.0), result);\n    }\n\n    @Test\n    public void testGeometryWithBoundsFloat() {\n        // Given\n        Node_ node = mock(Node_.class);\n        Bounds_ bounds = mock(Bounds_.class);\n        BoxFloat_ boxFloat = mock(BoxFloat_.class);\n\n        when(node.mbb()).thenReturn(bounds);\n        when(bounds.type()).thenReturn(BoundsType_.BoundsFloat);\n        when(bounds.boxFloat()).thenReturn(boxFloat);\n        when(boxFloat.minX()).thenReturn(0.0f);\n        when(boxFloat.minY()).thenReturn(0.0f);\n        when(boxFloat.maxX()).thenReturn(10.0f);\n        when(boxFloat.maxY()).thenReturn(10.0f);\n\n        LeafFlatBuffers<Object, Geometry> leaf = new LeafFlatBuffers<>(node, null, null);\n\n        // When\n        Geometry result = leaf.geometry();\n\n        // Then\n        assertEquals(Geometries.rectangle(0.0, 0.0, 10.0, 10.0), result);\n    }\n}\n"}]