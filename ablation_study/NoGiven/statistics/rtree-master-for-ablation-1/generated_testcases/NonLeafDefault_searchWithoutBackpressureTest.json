[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport com.github.davidmoten.rtree.Entry;\nimport com.github.davidmoten.rtree.Node;\nimport com.github.davidmoten.rtree.geometry.Geometry;\nimport com.github.davidmoten.rtree.Context;\nimport org.junit.Test;\nimport rx.Subscriber;\nimport rx.functions.Func1;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.mockito.Mockito.*;\n\npublic class NonLeafDefault_searchWithoutBackpressureTest {\n\n    @Test\n    public void testSearchWithoutBackpressure() {\n        // Given\n        List<Node<String, Geometry>> children = Arrays.asList(mock(Node.class), mock(Node.class));\n        Context<String, Geometry> context = mock(Context.class);\n        NonLeafDefault<String, Geometry> nonLeaf = new NonLeafDefault<>(children, context);\n\n        Func1<Geometry, Boolean> criterion = mock(Func1.class);\n        Subscriber<Entry<String, Geometry>> subscriber = mock(Subscriber.class);\n\n        // When\n        nonLeaf.searchWithoutBackpressure(criterion, subscriber);\n\n        // Then\n        verify(criterion, times(children.size())).call(any(Geometry.class));\n        verify(subscriber, atLeastOnce()).onNext(any(Entry.class));\n    }\n}\n"}]