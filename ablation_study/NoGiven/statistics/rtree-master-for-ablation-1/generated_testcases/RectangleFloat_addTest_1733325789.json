[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.geometry.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class RectangleFloat_addTest {\n\n    @Test\n    public void testAddWithRectangleDouble() {\n        RectangleFloat rectFloat = RectangleFloat.create(1, 1, 3, 3);\n        Rectangle rectDouble = RectangleDouble.create(2, 2, 4, 4);\n        Rectangle result = rectFloat.add(rectDouble);\n        assertTrue(result instanceof RectangleDouble);\n        assertEquals(1.0, result.x1(), 0.001);\n        assertEquals(1.0, result.y1(), 0.001);\n        assertEquals(4.0, result.x2(), 0.001);\n        assertEquals(4.0, result.y2(), 0.001);\n    }\n\n    @Test\n    public void testAddWithRectangleFloat() {\n        RectangleFloat rectFloat1 = RectangleFloat.create(1, 1, 3, 3);\n        RectangleFloat rectFloat2 = RectangleFloat.create(2, 2, 4, 4);\n        Rectangle result = rectFloat1.add(rectFloat2);\n        assertTrue(result instanceof RectangleFloat);\n        assertEquals(1.0f, ((RectangleFloat) result).x1, 0.001f);\n        assertEquals(1.0f, ((RectangleFloat) result).y1, 0.001f);\n        assertEquals(4.0f, ((RectangleFloat) result).x2, 0.001f);\n        assertEquals(4.0f, ((RectangleFloat) result).y2, 0.001f);\n    }\n\n    @Test\n    public void testAddWithPointFloat() {\n        RectangleFloat rectFloat = RectangleFloat.create(1, 1, 3, 3);\n        PointFloat pointFloat = PointFloat.create(2, 2);\n        Rectangle result = rectFloat.add(pointFloat);\n        assertTrue(result instanceof RectangleFloat);\n        assertEquals(1.0f, ((RectangleFloat) result).x1, 0.001f);\n        assertEquals(1.0f, ((RectangleFloat) result).y1, 0.001f);\n        assertEquals(3.0f, ((RectangleFloat) result).x2, 0.001f);\n        assertEquals(3.0f, ((RectangleFloat) result).y2, 0.001f);\n    }\n}\n"}]