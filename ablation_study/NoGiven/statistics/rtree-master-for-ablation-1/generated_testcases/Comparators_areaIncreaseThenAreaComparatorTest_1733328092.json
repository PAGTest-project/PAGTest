[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.*;\n\nimport org.junit.Test;\nimport com.github.davidmoten.rtree.geometry.HasGeometry;\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class Comparators_areaIncreaseThenAreaComparatorTest {\n\n    @Test\n    public void testAreaIncreaseThenAreaComparator() {\n        Rectangle r = mock(Rectangle.class);\n        HasGeometry g1 = mock(HasGeometry.class);\n        HasGeometry g2 = mock(HasGeometry.class);\n\n        // Mocking areaIncrease and area methods\n        when(Comparators.areaIncrease(r, g1)).thenReturn(10.0);\n        when(Comparators.areaIncrease(r, g2)).thenReturn(5.0);\n        when(Comparators.area(r, g1)).thenReturn(20.0);\n        when(Comparators.area(r, g2)).thenReturn(15.0);\n\n        Comparator<HasGeometry> comparator = Comparators.areaIncreaseThenAreaComparator(r);\n\n        // Test when areaIncrease is different\n        assertEquals(-1, comparator.compare(g1, g2));\n\n        // Test when areaIncrease is the same but area is different\n        when(Comparators.areaIncrease(r, g1)).thenReturn(5.0);\n        assertEquals(1, comparator.compare(g1, g2));\n\n        // Test when both areaIncrease and area are the same\n        when(Comparators.area(r, g1)).thenReturn(15.0);\n        assertEquals(0, comparator.compare(g1, g2));\n    }\n}\n"}]