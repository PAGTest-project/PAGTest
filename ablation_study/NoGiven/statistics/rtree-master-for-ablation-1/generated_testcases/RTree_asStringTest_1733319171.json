[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport java.util.Optional;\n\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class RTree_asStringTest {\n\n    @Test\n    public void testAsStringWithRootPresent() {\n        // Given\n        Node<Object, Rectangle> mockNode = mock(Node.class);\n        when(mockNode.geometry()).thenReturn(Rectangle.create(0, 0, 1, 1));\n        RTree<Object, Rectangle> tree = new RTree<>(mockNode, 1, null);\n\n        // When\n        String result = tree.asString();\n\n        // Then\n        assertEquals(\"mbr=Rectangle [x1=0.0, y1=0.0, x2=1.0, y2=1.0]\\n\", result);\n    }\n\n    @Test\n    public void testAsStringWithRootNotPresent() {\n        // Given\n        RTree<Object, Rectangle> tree = new RTree<>(Optional.empty(), 0, null);\n\n        // When\n        String result = tree.asString();\n\n        // Then\n        assertEquals(\"\", result);\n    }\n}\n"}]