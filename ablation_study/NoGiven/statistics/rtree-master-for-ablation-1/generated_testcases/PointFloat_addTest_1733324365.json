[{"strategy": "generate", "code": "\npackage com.github.davidmoten.rtree.geometry.internal;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Test;\n\npublic class PointFloat_addTest {\n\n    @Test\n    public void testAddWithRectangleDouble() {\n        PointFloat point = PointFloat.create(1.0f, 2.0f);\n        RectangleDouble rectangleDouble = RectangleDouble.create(0.5, 1.5, 1.5, 2.5);\n        Rectangle result = point.add(rectangleDouble);\n        assertTrue(result instanceof RectangleDouble);\n        assertEquals(0.5, result.x1(), 0.001);\n        assertEquals(1.5, result.y1(), 0.001);\n        assertEquals(1.5, result.x2(), 0.001);\n        assertEquals(2.5, result.y2(), 0.001);\n    }\n\n    @Test\n    public void testAddWithRectangleFloat() {\n        PointFloat point = PointFloat.create(1.0f, 2.0f);\n        RectangleFloat rectangleFloat = RectangleFloat.create(0.5f, 1.5f, 1.5f, 2.5f);\n        Rectangle result = point.add(rectangleFloat);\n        assertTrue(result instanceof RectangleFloat);\n        assertEquals(0.5, result.x1(), 0.001);\n        assertEquals(1.5, result.y1(), 0.001);\n        assertEquals(1.5, result.x2(), 0.001);\n        assertEquals(2.5, result.y2(), 0.001);\n    }\n\n    @Test\n    public void testAddWithPointFloat() {\n        PointFloat point = PointFloat.create(1.0f, 2.0f);\n        PointFloat pointFloat = PointFloat.create(0.5f, 1.5f);\n        Rectangle result = point.add(pointFloat);\n        assertTrue(result instanceof RectangleFloat);\n        assertEquals(0.5, result.x1(), 0.001);\n        assertEquals(1.5, result.y1(), 0.001);\n        assertEquals(1.0, result.x2(), 0.001);\n        assertEquals(2.0, result.y2(), 0.001);\n    }\n\n    @Test\n    public void testAddWithPointDouble() {\n        PointFloat point = PointFloat.create(1.0f, 2.0f);\n        PointDouble pointDouble = PointDouble.create(0.5, 1.5);\n        Rectangle result = point.add(pointDouble);\n        assertTrue(result instanceof RectangleDouble);\n        assertEquals(0.5, result.x1(), 0.001);\n        assertEquals(1.5, result.y1(), 0.001);\n        assertEquals(1.0, result.x2(), 0.001);\n        assertEquals(2.0, result.y2(), 0.001);\n    }\n}\n"}]