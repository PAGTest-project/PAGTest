[{"strategy": "retry", "code": "\npackage com.github.davidmoten.rtree.geometry.internal;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport org.junit.Test;\n\nimport com.github.davidmoten.rtree.geometry.Rectangle;\n\npublic class RectangleDouble_intersectsTest {\n\n    @Test\n    public void testIntersectsWithRectangleDouble() {\n        RectangleDouble rd1 = RectangleDouble.create(0, 0, 10, 10);\n        RectangleDouble rd2 = RectangleDouble.create(5, 5, 15, 15);\n        assertTrue(rd1.intersects(rd2));\n    }\n\n    @Test\n    public void testIntersectsWithNonRectangleDouble() {\n        RectangleDouble rd = RectangleDouble.create(0, 0, 10, 10);\n        Rectangle mockRectangle = mock(Rectangle.class);\n        when(mockRectangle.x1()).thenReturn(5.0);\n        when(mockRectangle.y1()).thenReturn(5.0);\n        when(mockRectangle.x2()).thenReturn(15.0);\n        when(mockRectangle.y2()).thenReturn(15.0);\n        assertTrue(rd.intersects(mockRectangle));\n    }\n\n    @Test\n    public void testDoesNotIntersectWithRectangleDouble() {\n        RectangleDouble rd1 = RectangleDouble.create(0, 0, 10, 10);\n        RectangleDouble rd2 = RectangleDouble.create(11, 11, 20, 20);\n        assertFalse(rd1.intersects(rd2));\n    }\n\n    @Test\n    public void testDoesNotIntersectWithNonRectangleDouble() {\n        RectangleDouble rd = RectangleDouble.create(0, 0, 10, 10);\n        Rectangle mockRectangle = mock(Rectangle.class);\n        when(mockRectangle.x1()).thenReturn(11.0);\n        when(mockRectangle.y1()).thenReturn(11.0);\n        when(mockRectangle.x2()).thenReturn(20.0);\n        when(mockRectangle.y2()).thenReturn(20.0);\n        assertFalse(rd.intersects(mockRectangle));\n    }\n}\n"}]