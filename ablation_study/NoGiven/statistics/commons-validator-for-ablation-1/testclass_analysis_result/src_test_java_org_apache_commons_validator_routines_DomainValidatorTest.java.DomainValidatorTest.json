{"file_path": "src/test/java/org/apache/commons/validator/routines/DomainValidatorTest.java", "testclass_name": "DomainValidatorTest", "dependencies": ["package org.apache.commons.validator.routines;", "import static org.junit.jupiter.api.Assertions.assertEquals;", "import static org.junit.jupiter.api.Assertions.assertFalse;", "import static org.junit.jupiter.api.Assertions.assertNotNull;", "import static org.junit.jupiter.api.Assertions.assertTrue;", "import java.io.BufferedReader;", "import java.io.Closeable;", "import java.io.File;", "import java.io.FileReader;", "import java.io.IOException;", "import java.io.InputStream;", "import java.lang.reflect.Field;", "import java.lang.reflect.Modifier;", "import java.net.HttpURLConnection;", "import java.net.IDN;", "import java.net.URL;", "import java.nio.file.Files;", "import java.nio.file.StandardCopyOption;", "import java.text.SimpleDateFormat;", "import java.util.Date;", "import java.util.HashMap;", "import java.util.HashSet;", "import java.util.Locale;", "import java.util.Map;", "import java.util.Map.Entry;", "import java.util.Set;", "import java.util.TreeMap;", "import java.util.regex.Matcher;", "import java.util.regex.Pattern;", "import org.apache.commons.lang3.SystemProperties;", "import org.apache.commons.validator.routines.DomainValidator.ArrayType;", "import org.junit.jupiter.api.BeforeEach;", "import org.junit.jupiter.api.Test;"], "name": "DomainValidatorTest", "description": "Unit tests for the DomainValidator class, focusing on domain validation and TLD checks.", "class_members": {"variables": [{"name": "validator", "type": "DomainValidator"}], "methods": [{"name": "closeQuietly", "signature": "void closeQuietly(Closeable)"}, {"name": "download", "signature": "long download(File, String, long)"}, {"name": "getHtmlInfo", "signature": "Map<String, String[]> getHtmlInfo(File)"}, {"name": "isInIanaList", "signature": "boolean isInIanaList(String, Set<String>) throws Exception"}, {"name": "isInIanaList", "signature": "boolean isInIanaList(String, String[], Set<String>)"}, {"name": "isLowerCase", "signature": "boolean isLowerCase(String)"}, {"name": "isNotInRootZone", "signature": "boolean isNotInRootZone(String)"}, {"name": "isSortedLowerCase", "signature": "boolean isSortedLowerCase(String) throws Exception"}, {"name": "isSortedLowerCase", "signature": "boolean isSortedLowerCase(String, String[])"}, {"name": "printMap", "signature": "void printMap(String, Map<String, String>, String)"}], "nested_classes": []}, "fixtures": ["setUp"], "test_cases": [{"name": "tesLocalTldsSortedAndLowerCase", "primary_tested": ["DomainValidator.isSortedLowerCase(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "isSortedLowerCase", "type": "method"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if the LOCAL_TLDS array is sorted and in lower case."}, {"name": "testAllowLocal", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of local domains with different DomainValidator instances."}, {"name": "testCountryCodeTldsSortedAndLowerCase", "primary_tested": ["DomainValidator.isSortedLowerCase(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "isSortedLowerCase", "type": "method"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if the COUNTRY_CODE_TLDS array is sorted and in lower case."}, {"name": "testDomainNoDots", "primary_tested": ["DomainValidator.isValidDomainSyntax(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of domain labels without dots."}, {"name": "testEnumIsPublic", "primary_tested": ["DomainValidator.ArrayType.class.getModifiers()"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the ArrayType enum is public."}, {"name": "testGenericTldsSortedAndLowerCase", "primary_tested": ["DomainValidator.isSortedLowerCase(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "isSortedLowerCase", "type": "method"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if the GENERIC_TLDS array is sorted and in lower case."}, {"name": "testGetArray", "primary_tested": ["DomainValidator.getTLDEntries(ArrayType)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the retrieval of TLD entries for different ArrayTypes."}, {"name": "testIDN", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of IDN domains."}, {"name": "testIDNJava6OrLater", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator", "SystemProperties"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of IDN domains on Java 6 or later."}, {"name": "testInfrastructureTldsSortedAndLowerCase", "primary_tested": ["DomainValidator.isSortedLowerCase(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "isSortedLowerCase", "type": "method"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests if the INFRASTRUCTURE_TLDS array is sorted and in lower case."}, {"name": "testInvalidDomains", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of invalid domain names."}, {"name": "testIsIDNtoASCIIBroken", "primary_tested": ["IDN.toASCII(String)"], "associated_methods": [], "external_dependencies": {"modules": ["IDN", "SystemProperties"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests if the IDN.toASCII method is broken."}, {"name": "testRFC2396domainlabel", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of domain labels according to RFC2396."}, {"name": "testRFC2396toplabel", "primary_tested": ["DomainValidator.isValidDomainSyntax(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of top-level domain labels according to RFC2396."}, {"name": "testTopLevelDomains", "primary_tested": ["DomainValidator.isValidInfrastructureTld(String)", "DomainValidator.isValidGenericTld(String)", "DomainValidator.isValidCountryCodeTld(String)", "DomainValidator.isValidTld(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of top-level domains (TLDs) for infrastructure, generic, and country code domains."}, {"name": "testUnicodeToASCII", "primary_tested": ["DomainValidator.unicodeToASCII(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": []}, "category": "unit", "fixtures_used": [], "description": "Tests the conversion of Unicode to ASCII using DomainValidator.unicodeToASCII."}, {"name": "testValidator297", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of a specific IDN domain."}, {"name": "testValidator306", "primary_tested": ["DomainValidator.isValidDomainSyntax(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of domain labels and domain names with specific lengths."}, {"name": "testValidDomains", "primary_tested": ["DomainValidator.isValid(String)"], "associated_methods": [], "external_dependencies": {"modules": ["DomainValidator"], "class_members": [{"name": "validator", "type": "variable"}]}, "category": "unit", "fixtures_used": ["setUp"], "description": "Tests the validation of valid domain names."}]}