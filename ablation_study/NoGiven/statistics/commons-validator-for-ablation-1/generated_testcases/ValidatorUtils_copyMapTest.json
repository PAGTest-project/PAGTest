[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.util;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.validator.Arg;\nimport org.apache.commons.validator.Msg;\nimport org.apache.commons.validator.Var;\nimport org.junit.jupiter.api.Test;\n\npublic class ValidatorUtils_copyMapTest {\n\n    @Test\n    public void testCopyMapWithMsg() {\n        Map<String, Object> original = new HashMap<>();\n        Msg msg = new Msg();\n        msg.setName(\"testMsg\");\n        original.put(\"msgKey\", msg);\n\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"msgKey\"));\n        assertTrue(copy.get(\"msgKey\") instanceof Msg);\n        assertEquals(msg.getName(), ((Msg) copy.get(\"msgKey\")).getName());\n    }\n\n    @Test\n    public void testCopyMapWithArg() {\n        Map<String, Object> original = new HashMap<>();\n        Arg arg = new Arg();\n        arg.setName(\"testArg\");\n        original.put(\"argKey\", arg);\n\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"argKey\"));\n        assertTrue(copy.get(\"argKey\") instanceof Arg);\n        assertEquals(arg.getName(), ((Arg) copy.get(\"argKey\")).getName());\n    }\n\n    @Test\n    public void testCopyMapWithVar() {\n        Map<String, Object> original = new HashMap<>();\n        Var var = new Var();\n        var.setName(\"testVar\");\n        original.put(\"varKey\", var);\n\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertTrue(copy.containsKey(\"varKey\"));\n        assertTrue(copy.get(\"varKey\") instanceof Var);\n        assertEquals(var.getName(), ((Var) copy.get(\"varKey\")).getName());\n    }\n\n    @Test\n    public void testCopyMapWithOtherTypes() {\n        Map<String, Object> original = new HashMap<>();\n        original.put(\"stringKey\", \"stringValue\");\n        original.put(\"intKey\", 123);\n\n        Map<String, Object> copy = ValidatorUtils.copyMap(original);\n        assertEquals(\"stringValue\", copy.get(\"stringKey\"));\n        assertEquals(123, copy.get(\"intKey\"));\n    }\n}\n"}]