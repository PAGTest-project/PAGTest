[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.util;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Flags_equalsTest {\n\n    private Flags flags1;\n    private Flags flags2;\n\n    @BeforeEach\n    public void setUp() {\n        flags1 = new Flags(0xFFFFFFFFFFFFFFFFL);\n        flags2 = new Flags(0xFFFFFFFFFFFFFFFFL);\n    }\n\n    @Test\n    public void testEqualsSameObject() {\n        assertTrue(flags1.equals(flags1));\n    }\n\n    @Test\n    public void testEqualsDifferentObjectType() {\n        assertFalse(flags1.equals(\"Not a Flags object\"));\n    }\n\n    @Test\n    public void testEqualsDifferentFlags() {\n        flags2.turnOff(0x8000000000000000L);\n        assertFalse(flags1.equals(flags2));\n    }\n\n    @Test\n    public void testEqualsSameFlags() {\n        assertTrue(flags1.equals(flags2));\n    }\n\n    @Test\n    public void testEqualsAfterTurnOn() {\n        flags2.turnOff(0x8000000000000000L);\n        flags2.turnOn(0x8000000000000000L);\n        assertTrue(flags1.equals(flags2));\n    }\n\n    @Test\n    public void testEqualsAfterTurnOff() {\n        flags2.turnOff(0x8000000000000000L);\n        assertFalse(flags1.equals(flags2));\n    }\n\n    @Test\n    public void testEqualsHashCodeConsistency() {\n        if (flags1.equals(flags2)) {\n            assertEquals(flags1.hashCode(), flags2.hashCode());\n        }\n    }\n\n    @Test\n    public void testEqualsStateVerification() {\n        final long highOrderBit = 0x8000000000000000L;\n        assertTrue(flags1.isOn(highOrderBit));\n        assertTrue(flags2.isOn(highOrderBit));\n        assertTrue(flags1.equals(flags2));\n    }\n}\n"}]