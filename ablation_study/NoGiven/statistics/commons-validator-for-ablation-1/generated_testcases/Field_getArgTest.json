[{"strategy": "retry", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Field_getArgTest {\n    private Field field;\n\n    @BeforeEach\n    public void setUp() {\n        field = new Field();\n    }\n\n    @Test\n    public void testGetArgWithValidKeyAndPosition() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        Arg arg2 = createArg(\"key2\", \"name2\", 1);\n        field.addArg(arg1);\n        field.addArg(arg2);\n\n        assertEquals(arg1, field.getArg(\"name1\", 0));\n        assertEquals(arg2, field.getArg(\"name2\", 1));\n    }\n\n    @Test\n    public void testGetArgWithInvalidPosition() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        field.addArg(arg1);\n\n        assertNull(field.getArg(\"name1\", 1));\n    }\n\n    @Test\n    public void testGetArgWithNullArgAtPosition() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        field.addArg(arg1);\n\n        assertNull(field.getArg(\"name1\", 1));\n    }\n\n    @Test\n    public void testGetArgWithDefaultArg() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        Arg defaultArg = createArg(Field.DEFAULT_ARG, \"defaultName\", 0);\n        field.addArg(arg1);\n        field.addArg(defaultArg);\n\n        assertEquals(arg1, field.getArg(\"name1\", 0));\n        assertNull(field.getArg(Field.DEFAULT_ARG, 0));\n    }\n\n    @Test\n    public void testGetArgWithRecursiveCall() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        Arg defaultArg = createArg(Field.DEFAULT_ARG, \"defaultName\", 0);\n        field.addArg(arg1);\n        field.addArg(defaultArg);\n\n        assertEquals(arg1, field.getArg(\"name1\", 0));\n        assertEquals(defaultArg, field.getArg(0));\n    }\n\n    private Arg createArg(String key, String name, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        arg.setPosition(position);\n        return arg;\n    }\n}\n"}]