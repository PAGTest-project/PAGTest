[{"strategy": "generate", "code": "\npackage org.apache.commons.validator;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class Field_addArgTest {\n    private Field field;\n\n    @BeforeEach\n    public void setUp() {\n        field = new Field();\n    }\n\n    private Arg createArg(String key) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        return arg;\n    }\n\n    private Arg createArg(String key, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setPosition(position);\n        return arg;\n    }\n\n    private Arg createArg(String key, String name) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        return arg;\n    }\n\n    private Arg createArg(String key, String name, int position) {\n        Arg arg = new Arg();\n        arg.setKey(key);\n        arg.setName(name);\n        arg.setPosition(position);\n        return arg;\n    }\n\n    @Test\n    public void testAddArgWithNullArg() {\n        field.addArg(null);\n        assertEquals(0, field.getArgs(Field.DEFAULT_ARG).length);\n    }\n\n    @Test\n    public void testAddArgWithNullKey() {\n        Arg arg = createArg(null);\n        field.addArg(arg);\n        assertEquals(0, field.getArgs(Field.DEFAULT_ARG).length);\n    }\n\n    @Test\n    public void testAddArgWithEmptyKey() {\n        Arg arg = createArg(\"\");\n        field.addArg(arg);\n        assertEquals(0, field.getArgs(Field.DEFAULT_ARG).length);\n    }\n\n    @Test\n    public void testAddArgWithValidArg() {\n        Arg arg = createArg(\"valid-key\", \"valid-name\");\n        field.addArg(arg);\n        assertEquals(1, field.getArgs(\"valid-name\").length);\n        assertEquals(\"valid-key\", field.getArg(\"valid-name\", 0).getKey());\n    }\n\n    @Test\n    public void testAddArgWithPosition() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        Arg arg2 = createArg(\"key2\", \"name2\", 1);\n        field.addArg(arg1);\n        field.addArg(arg2);\n        assertEquals(2, field.getArgs(\"name2\").length);\n        assertEquals(\"key1\", field.getArg(\"name1\", 0).getKey());\n        assertEquals(\"key2\", field.getArg(\"name2\", 1).getKey());\n    }\n\n    @Test\n    public void testAddArgWithDefaultPosition() {\n        Arg arg1 = createArg(\"key1\", \"name1\");\n        Arg arg2 = createArg(\"key2\", \"name2\");\n        field.addArg(arg1);\n        field.addArg(arg2);\n        assertEquals(2, field.getArgs(\"name2\").length);\n        assertEquals(\"key1\", field.getArg(\"name1\", 0).getKey());\n        assertEquals(\"key2\", field.getArg(\"name2\", 1).getKey());\n    }\n\n    @Test\n    public void testAddArgWithMixedPositions() {\n        Arg arg1 = createArg(\"key1\", \"name1\", 0);\n        Arg arg2 = createArg(\"key2\", \"name2\");\n        Arg arg3 = createArg(\"key3\", \"name3\", 2);\n        field.addArg(arg1);\n        field.addArg(arg2);\n        field.addArg(arg3);\n        assertEquals(3, field.getArgs(\"name3\").length);\n        assertEquals(\"key1\", field.getArg(\"name1\", 0).getKey());\n        assertEquals(\"key2\", field.getArg(\"name2\", 1).getKey());\n        assertEquals(\"key3\", field.getArg(\"name3\", 2).getKey());\n    }\n}\n"}]