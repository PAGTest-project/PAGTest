[{"strategy": "generate", "code": "\npackage org.apache.commons.validator.routines;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class DomainValidator_updateTLDOverrideTest {\n    private DomainValidator domainValidator;\n\n    @Before\n    public void setUp() {\n        domainValidator = DomainValidator.getInstance(false);\n    }\n\n    @Test\n    public void testUpdateTLDOverrideValid() {\n        String[] tlds = {\"test1\", \"test2\"};\n        DomainValidator.updateTLDOverride(ArrayType.GENERIC_PLUS, tlds);\n\n        assertTrue(domainValidator.isValidGenericTld(\"test1\"));\n        assertTrue(domainValidator.isValidGenericTld(\"test2\"));\n    }\n\n    @Test\n    public void testUpdateTLDOverrideInvalid() {\n        String[] tlds = {\"invalid1\", \"invalid2\"};\n        DomainValidator.updateTLDOverride(ArrayType.GENERIC_MINUS, tlds);\n\n        assertFalse(domainValidator.isValidGenericTld(\"invalid1\"));\n        assertFalse(domainValidator.isValidGenericTld(\"invalid2\"));\n    }\n\n    @Test(expected = IllegalStateException.class)\n    public void testUpdateTLDOverrideAfterGetInstance() {\n        DomainValidator.getInstance(false);\n        DomainValidator.updateTLDOverride(ArrayType.GENERIC_PLUS, new String[]{\"test\"});\n    }\n\n    @Test(expected = IllegalArgumentException.class)\n    public void testUpdateTLDOverrideInvalidTable() {\n        DomainValidator.updateTLDOverride(ArrayType.GENERIC_RO, new String[]{\"test\"});\n    }\n\n    @Test\n    public void testUpdateTLDOverrideCountryCode() {\n        String[] tlds = {\"cc1\", \"cc2\"};\n        DomainValidator.updateTLDOverride(ArrayType.COUNTRY_CODE_PLUS, tlds);\n\n        assertTrue(domainValidator.isValidCountryCodeTld(\"cc1\"));\n        assertTrue(domainValidator.isValidCountryCodeTld(\"cc2\"));\n    }\n\n    @Test\n    public void testUpdateTLDOverrideLocal() {\n        String[] tlds = {\"local1\", \"local2\"};\n        DomainValidator.updateTLDOverride(ArrayType.LOCAL_PLUS, tlds);\n\n        assertTrue(domainValidator.isValidLocalTld(\"local1\"));\n        assertTrue(domainValidator.isValidLocalTld(\"local2\"));\n    }\n\n    @Test\n    public void testUpdateTLDOverrideMixedCase() {\n        String[] tlds = {\"MixedCase\"};\n        DomainValidator.updateTLDOverride(ArrayType.GENERIC_PLUS, tlds);\n\n        assertTrue(domainValidator.isValidGenericTld(\"mixedcase\"));\n    }\n}\n"}]