[{"strategy": "retry", "code": "\npackage org.apache.commons.validator.routines.checkdigit;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\npublic class ISBNCheckDigit_calculateTest {\n    private ISBNCheckDigit routine;\n\n    @BeforeEach\n    protected void setUp() {\n        routine = ISBNCheckDigit.ISBN_CHECK_DIGIT;\n    }\n\n    @Test\n    public void testCalculateISBN10() throws CheckDigitException {\n        String code = \"020163385\";\n        String expectedCheckDigit = ISBN10CheckDigit.ISBN10_CHECK_DIGIT.calculate(code);\n        assertEquals(expectedCheckDigit, routine.calculate(code), \"ISBN-10 check digit calculation\");\n    }\n\n    @Test\n    public void testCalculateISBN13() throws CheckDigitException {\n        String code = \"978007212951\";\n        String expectedCheckDigit = ISBN13CheckDigit.ISBN13_CHECK_DIGIT.calculate(code);\n        assertEquals(expectedCheckDigit, routine.calculate(code), \"ISBN-13 check digit calculation\");\n    }\n\n    @Test\n    public void testCalculateMissingCode() {\n        assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(null);\n        }, \"ISBN Code is missing\");\n    }\n\n    @Test\n    public void testCalculateInvalidLength() {\n        assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(\"12345678\");\n        }, \"Invalid ISBN Length = 8\");\n\n        assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(\"1234567890\");\n        }, \"Invalid ISBN Length = 10\");\n\n        assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(\"12345678901\");\n        }, \"Invalid ISBN Length = 11\");\n\n        assertThrows(CheckDigitException.class, () -> {\n            routine.calculate(\"1234567890123\");\n        }, \"Invalid ISBN Length = 13\");\n    }\n}\n"}]