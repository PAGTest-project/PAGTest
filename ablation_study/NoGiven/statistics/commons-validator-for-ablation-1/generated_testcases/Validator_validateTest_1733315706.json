[{"strategy": "retry", "code": "\npackage org.apache.commons.validator;\n\nimport org.junit.jupiter.api.Test;\nimport java.util.Locale;\nimport java.util.Map;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.Mockito.*;\n\npublic class Validator_validateTest {\n\n    @Test\n    public void testValidateWithLocale() throws ValidatorException {\n        // Given\n        ValidatorResources resources = mock(ValidatorResources.class);\n        Form form = mock(Form.class);\n        Validator validator = new Validator(resources, \"testForm\");\n        validator.setParameter(Validator.LOCALE_PARAM, Locale.US);\n\n        when(resources.getForm(Locale.US, \"testForm\")).thenReturn(form);\n        when(form.validate(any(Map.class), any(Map.class), anyInt(), anyString())).thenReturn(new ValidatorResults());\n\n        // When\n        ValidatorResults results = validator.validate();\n\n        // Then\n        assertNotNull(results);\n        verify(resources).getForm(Locale.US, \"testForm\");\n        verify(form).validate(any(Map.class), any(Map.class), anyInt(), anyString());\n    }\n\n    @Test\n    public void testValidateWithoutLocale() throws ValidatorException {\n        // Given\n        ValidatorResources resources = mock(ValidatorResources.class);\n        Form form = mock(Form.class);\n        Validator validator = new Validator(resources, \"testForm\");\n\n        when(resources.getForm(Locale.getDefault(), \"testForm\")).thenReturn(form);\n        when(form.validate(any(Map.class), any(Map.class), anyInt(), anyString())).thenReturn(new ValidatorResults());\n\n        // When\n        ValidatorResults results = validator.validate();\n\n        // Then\n        assertNotNull(results);\n        verify(resources).getForm(Locale.getDefault(), \"testForm\");\n        verify(form).validate(any(Map.class), any(Map.class), anyInt(), anyString());\n    }\n\n    @Test\n    public void testValidateFormNotFound() throws ValidatorException {\n        // Given\n        ValidatorResources resources = mock(ValidatorResources.class);\n        Validator validator = new Validator(resources, \"testForm\");\n\n        when(resources.getForm(Locale.getDefault(), \"testForm\")).thenReturn(null);\n\n        // When\n        ValidatorResults results = validator.validate();\n\n        // Then\n        assertNotNull(results);\n        assertTrue(results.isEmpty());\n        verify(resources).getForm(Locale.getDefault(), \"testForm\");\n    }\n}\n"}]