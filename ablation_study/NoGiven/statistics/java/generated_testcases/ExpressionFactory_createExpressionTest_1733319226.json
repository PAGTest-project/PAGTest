[{"strategy": "generate", "code": "\npackage io.cucumber.cucumberexpressions;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport java.util.regex.Pattern;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.junit.jupiter.api.Assertions.assertInstanceOf;\n\npublic class ExpressionFactory_createExpressionTest {\n\n    private ExpressionFactory expressionFactory;\n    private ParameterTypeRegistry parameterTypeRegistry;\n\n    @BeforeEach\n    public void setUp() {\n        parameterTypeRegistry = new ParameterTypeRegistry(Locale.getDefault());\n        expressionFactory = new ExpressionFactory(parameterTypeRegistry);\n    }\n\n    @Test\n    public void testCreateExpression_EmptyString() {\n        Expression expression = expressionFactory.createExpression(\"\");\n        assertInstanceOf(CucumberExpression.class, expression);\n    }\n\n    @Test\n    public void testCreateExpression_RegularExpressionWithAnchors() {\n        Expression expression = expressionFactory.createExpression(\"^start$\");\n        assertInstanceOf(RegularExpression.class, expression);\n        assertTrue(expression.getRegexp().pattern().startsWith(\"^\"));\n        assertTrue(expression.getRegexp().pattern().endsWith(\"$\"));\n    }\n\n    @Test\n    public void testCreateExpression_RegularExpressionWithSlashes() {\n        Expression expression = expressionFactory.createExpression(\"/regex/\");\n        assertInstanceOf(RegularExpression.class, expression);\n        assertTrue(expression.getRegexp().pattern().equals(\"regex\"));\n    }\n\n    @Test\n    public void testCreateExpression_CucumberExpression() {\n        Expression expression = expressionFactory.createExpression(\"simple expression\");\n        assertInstanceOf(CucumberExpression.class, expression);\n    }\n}\n"}]